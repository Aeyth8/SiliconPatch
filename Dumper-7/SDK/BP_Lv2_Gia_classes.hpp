#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lv2_Gia

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BE_Lv2_GiaAnim_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_Lv2_NPCBase_classes.hpp"
#include "GameState_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Lv2_Gia.BP_Lv2_Gia_C
// 0x00A0 (0x0920 - 0x0880)
class ABP_Lv2_Gia_C final : public ABP_Lv2_NPCBase_C
{
public:
	uint8                                         Pad_875[0x3];                                      // 0x0875(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Lv2_Gia_C;                       // 0x0878(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 PlungerHead;                                       // 0x0880(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Plunger;                                           // 0x0888(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActor;                                        // 0x0890(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBE_Lv2_GiaAnim                               AnimType;                                          // 0x0898(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_899[0x7];                                      // 0x0899(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    playerPawn;                                        // 0x08A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FocusTime;                                         // 0x08A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCheckFocus;                                      // 0x08AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8AD[0x3];                                      // 0x08AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FocusDelte;                                        // 0x08B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GiaAttackDelta;                                    // 0x08B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CrouchTime;                                        // 0x08B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         P1_IdleIndex;                                      // 0x08BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayNextAnim;                                      // 0x08C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C1[0x3];                                      // 0x08C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         P1_MoveIndex;                                      // 0x08C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C8[0x8];                                      // 0x08C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ComputerLocation;                                  // 0x08D0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          WillStop;                                          // 0x0900(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_901[0x3];                                      // 0x0901(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Delit;                                             // 0x0904(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_LV2_plunger_C*                      Specialplunger;                                    // 0x0908(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_LV2_plunger_C*                      Specialplunger2;                                   // 0x0910(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CaptionsTools_C*                    captions;                                          // 0x0918(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Lv2_Gia(int32 EntryPoint);
	void DoNPCDeath();
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void JoinP2(EGameState GameState);
	void P1_playNextAnim();
	void BndEvt__PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature(class APawn* Pawn);
	void MoveNextPoint(class ABP_PatrolRoute_C* Path, EBE_Lv2_GiaAnim EndAnim);
	void CheckFocus(float Time);
	void Aim();
	void ToCrouch(float* Delay);
	void AttackAppoint(class AActor* Point, EBE_Lv2_GiaAnim AnimType_0, int32 AttackCount_0);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void Attack(bool UseControllerRotation, float* Delay);
	void InitNPC();
	void GiaArrived();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Lv2_Gia_C">();
	}
	static class ABP_Lv2_Gia_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Lv2_Gia_C>();
	}
};
static_assert(alignof(ABP_Lv2_Gia_C) == 0x000010, "Wrong alignment on ABP_Lv2_Gia_C");
static_assert(sizeof(ABP_Lv2_Gia_C) == 0x000920, "Wrong size on ABP_Lv2_Gia_C");
static_assert(offsetof(ABP_Lv2_Gia_C, UberGraphFrame_BP_Lv2_Gia_C) == 0x000878, "Member 'ABP_Lv2_Gia_C::UberGraphFrame_BP_Lv2_Gia_C' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Gia_C, PlungerHead) == 0x000880, "Member 'ABP_Lv2_Gia_C::PlungerHead' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Gia_C, Plunger) == 0x000888, "Member 'ABP_Lv2_Gia_C::Plunger' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Gia_C, ChildActor) == 0x000890, "Member 'ABP_Lv2_Gia_C::ChildActor' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Gia_C, AnimType) == 0x000898, "Member 'ABP_Lv2_Gia_C::AnimType' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Gia_C, playerPawn) == 0x0008A0, "Member 'ABP_Lv2_Gia_C::playerPawn' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Gia_C, FocusTime) == 0x0008A8, "Member 'ABP_Lv2_Gia_C::FocusTime' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Gia_C, IsCheckFocus) == 0x0008AC, "Member 'ABP_Lv2_Gia_C::IsCheckFocus' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Gia_C, FocusDelte) == 0x0008B0, "Member 'ABP_Lv2_Gia_C::FocusDelte' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Gia_C, GiaAttackDelta) == 0x0008B4, "Member 'ABP_Lv2_Gia_C::GiaAttackDelta' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Gia_C, CrouchTime) == 0x0008B8, "Member 'ABP_Lv2_Gia_C::CrouchTime' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Gia_C, P1_IdleIndex) == 0x0008BC, "Member 'ABP_Lv2_Gia_C::P1_IdleIndex' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Gia_C, PlayNextAnim) == 0x0008C0, "Member 'ABP_Lv2_Gia_C::PlayNextAnim' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Gia_C, P1_MoveIndex) == 0x0008C4, "Member 'ABP_Lv2_Gia_C::P1_MoveIndex' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Gia_C, ComputerLocation) == 0x0008D0, "Member 'ABP_Lv2_Gia_C::ComputerLocation' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Gia_C, WillStop) == 0x000900, "Member 'ABP_Lv2_Gia_C::WillStop' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Gia_C, Delit) == 0x000904, "Member 'ABP_Lv2_Gia_C::Delit' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Gia_C, Specialplunger) == 0x000908, "Member 'ABP_Lv2_Gia_C::Specialplunger' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Gia_C, Specialplunger2) == 0x000910, "Member 'ABP_Lv2_Gia_C::Specialplunger2' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Gia_C, captions) == 0x000918, "Member 'ABP_Lv2_Gia_C::captions' has a wrong offset!");

}


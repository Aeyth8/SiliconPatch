#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mer2GameInstance

#include "Basic.hpp"

#include "Lv2ScoreType_structs.hpp"
#include "Lv4_ScoreType_structs.hpp"
#include "Lv4ScoreType_structs.hpp"
#include "scoreType_structs.hpp"
#include "Lv2_Scoretype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EnumScoreType_structs.hpp"
#include "EnumDifficuty_structs.hpp"
#include "OnlineSubsystemUtils_structs.hpp"
#include "GameState_structs.hpp"
#include "Struct_PlayerData_structs.hpp"
#include "AdvancedSessions_structs.hpp"


namespace SDK::Params
{

// Function Mer2GameInstance.Mer2GameInstance_C.ExecuteUbergraph_Mer2GameInstance
// 0x04F8 (0x04F8 - 0x0000)
struct Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TArray<struct FSessionPropertyKeyPair>        CallFunc_GetExtraSettings_ExtraSettings;           // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	ESessionSettingSearchResult                   CallFunc_GetSessionPropertyString_SearchResult;    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSessionPropertyString_SettingValue;    // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	TArray<struct FBlueprintSessionResult>        K2Node_CustomEvent_Results1;                       // 0x0068(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TDelegate<void(const TArray<struct FBlueprintSessionResult>& Results)> K2Node_CreateDelegate_OutputDelegate3; // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	TArray<struct FBlueprintSessionResult>        K2Node_CustomEvent_Results;                        // 0x0088(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TDelegate<void(const TArray<struct FBlueprintSessionResult>& Results)> K2Node_CreateDelegate_OutputDelegate4; // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	TArray<struct FBlueprintSessionResult>        Temp_struct_Variable;                              // 0x00A8(0x0010)(ZeroConstructor, ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate5;             // 0x00B8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate6;             // 0x00C8(0x0010)(ZeroConstructor, NoDestructor)
	struct FSessionPropertyKeyPair                CallFunc_MakeLiteralSessionPropertyString_ReturnValue; // 0x00D8(0x0020)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate7;             // 0x00F8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate8;             // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_MapName1;                       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Filter1;                        // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Filter;                         // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSessionPropertyKeyPair                CallFunc_MakeLiteralSessionPropertyString_ReturnValue1; // 0x0148(0x0020)()
	struct FSessionPropertyKeyPair                CallFunc_MakeLiteralSessionPropertyString_ReturnValue2; // 0x0168(0x0020)()
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSessionsSearchSetting                 CallFunc_MakeLiteralSessionSearchProperty_ReturnValue; // 0x0190(0x0028)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue1;                         // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDestroySessionCallbackProxy*           CallFunc_DestroySession_ReturnValue;               // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintSessionResult                K2Node_CustomEvent_Session;                        // 0x01E8(0x00B8)()
	class UJoinSessionCallbackProxy*              CallFunc_JoinSession_ReturnValue;                  // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_MapName;                        // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue1;         // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate9;             // 0x02E0(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSessionPropertyKeyPair                CallFunc_MakeLiteralSessionPropertyString_ReturnValue3; // 0x0308(0x0020)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FSessionPropertyKeyPair>        K2Node_MakeArray_Array;                            // 0x0338(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FSessionPropertyKeyPair>        K2Node_MakeArray_Array1;                           // 0x0348(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FSessionsSearchSetting                 CallFunc_MakeLiteralSessionSearchProperty_ReturnValue1; // 0x0358(0x0028)()
	class UCreateSessionCallbackProxyAdvanced*    CallFunc_CreateAdvancedSession_ReturnValue;        // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSessionsSearchSetting>         K2Node_MakeArray_Array2;                           // 0x0388(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSessionsSearchSetting>         K2Node_MakeArray_Array3;                           // 0x03A0(0x0010)(ZeroConstructor, ReferenceParm)
	class FString                                 K2Node_CustomEvent_LevelName;                      // 0x03B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x03C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBlueprintSessionResult>        CallFunc_FilterSessionResults_FilteredResults;     // 0x03F0(0x0010)(ZeroConstructor, ReferenceParm)
	struct FBlueprintSessionResult                CallFunc_Array_Get_Item;                           // 0x0400(0x00B8)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BD[0x3];                                      // 0x04BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue2;              // 0x04C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C5[0x3];                                      // 0x04C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSessionsSearchSetting>         Temp_struct_Variable1;                             // 0x04C8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class UFindSessionsCallbackProxyAdvanced*     CallFunc_FindSessionsAdvanced_ReturnValue;         // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue2;         // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDestroySessionCallbackProxy*           CallFunc_DestroySession_ReturnValue1;              // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance) == 0x000008, "Wrong alignment on Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance");
static_assert(sizeof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance) == 0x0004F8, "Wrong size on Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, EntryPoint) == 0x000000, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::EntryPoint' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_GetExtraSettings_ExtraSettings) == 0x000018, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_GetExtraSettings_ExtraSettings' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_CreateDelegate_OutputDelegate1) == 0x000028, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_GetSessionPropertyString_SearchResult) == 0x000038, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_GetSessionPropertyString_SearchResult' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_GetSessionPropertyString_SettingValue) == 0x000040, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_GetSessionPropertyString_SettingValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_SwitchEnum_CmpSuccess) == 0x000050, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_CreateDelegate_OutputDelegate2) == 0x000058, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_CustomEvent_Results1) == 0x000068, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_CustomEvent_Results1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_CreateDelegate_OutputDelegate3) == 0x000078, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_CustomEvent_Results) == 0x000088, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_CustomEvent_Results' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_CreateDelegate_OutputDelegate4) == 0x000098, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, Temp_struct_Variable) == 0x0000A8, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_CreateDelegate_OutputDelegate5) == 0x0000B8, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_CreateDelegate_OutputDelegate6) == 0x0000C8, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_MakeLiteralSessionPropertyString_ReturnValue) == 0x0000D8, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_MakeLiteralSessionPropertyString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_CreateDelegate_OutputDelegate7) == 0x0000F8, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_CreateDelegate_OutputDelegate8) == 0x000108, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, Temp_int_Array_Index_Variable) == 0x000118, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_CustomEvent_MapName1) == 0x000120, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_CustomEvent_MapName1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_CustomEvent_Filter1) == 0x000128, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_CustomEvent_Filter1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_CustomEvent_Filter) == 0x000138, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_CustomEvent_Filter' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_MakeLiteralSessionPropertyString_ReturnValue1) == 0x000148, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_MakeLiteralSessionPropertyString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_MakeLiteralSessionPropertyString_ReturnValue2) == 0x000168, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_MakeLiteralSessionPropertyString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_Len_ReturnValue) == 0x000188, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_MakeLiteralSessionSearchProperty_ReturnValue) == 0x000190, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_MakeLiteralSessionSearchProperty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_Greater_IntInt_ReturnValue) == 0x0001B8, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_Len_ReturnValue1) == 0x0001BC, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_Len_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_Greater_IntInt_ReturnValue1) == 0x0001C0, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_GetPlayerController_ReturnValue) == 0x0001C8, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_DestroySession_ReturnValue) == 0x0001D0, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_DestroySession_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, Temp_int_Loop_Counter_Variable) == 0x0001D8, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_Add_IntInt_ReturnValue) == 0x0001DC, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_IsValid_ReturnValue) == 0x0001E0, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_CustomEvent_Session) == 0x0001E8, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_CustomEvent_Session' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_JoinSession_ReturnValue) == 0x0002A0, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_JoinSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_IsValid_ReturnValue1) == 0x0002A8, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_CustomEvent_MapName) == 0x0002B0, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_CustomEvent_MapName' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_Conv_StringToName_ReturnValue) == 0x0002C0, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_Concat_StrStr_ReturnValue) == 0x0002C8, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_GetPlayerController_ReturnValue1) == 0x0002D8, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_GetPlayerController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_CreateDelegate_OutputDelegate9) == 0x0002E0, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0002F0, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_Conv_IntToString_ReturnValue) == 0x0002F8, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_MakeLiteralSessionPropertyString_ReturnValue3) == 0x000308, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_MakeLiteralSessionPropertyString_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_Concat_StrStr_ReturnValue1) == 0x000328, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_MakeArray_Array) == 0x000338, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_MakeArray_Array1) == 0x000348, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_MakeLiteralSessionSearchProperty_ReturnValue1) == 0x000358, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_MakeLiteralSessionSearchProperty_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_CreateAdvancedSession_ReturnValue) == 0x000380, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_CreateAdvancedSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_MakeArray_Array2) == 0x000388, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_IsValid_ReturnValue2) == 0x000398, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_MakeArray_Array3) == 0x0003A0, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_MakeArray_Array3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_CustomEvent_LevelName) == 0x0003B0, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_CustomEvent_LevelName' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_Concat_StrStr_ReturnValue2) == 0x0003C0, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_IsValid_ReturnValue3) == 0x0003D0, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_GetGameState_ReturnValue) == 0x0003D8, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_DynamicCast_AsMer_2Game_State) == 0x0003E0, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, K2Node_DynamicCast_bSuccess) == 0x0003E8, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_FilterSessionResults_FilteredResults) == 0x0003F0, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_FilterSessionResults_FilteredResults' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_Array_Get_Item) == 0x000400, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_Array_Length_ReturnValue) == 0x0004B8, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_Less_IntInt_ReturnValue) == 0x0004BC, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_Array_Length_ReturnValue1) == 0x0004C0, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_Greater_IntInt_ReturnValue2) == 0x0004C4, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_Greater_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, Temp_struct_Variable1) == 0x0004C8, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_FindSessionsAdvanced_ReturnValue) == 0x0004D8, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_FindSessionsAdvanced_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_GetPlayerController_ReturnValue2) == 0x0004E0, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_GetPlayerController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_DestroySession_ReturnValue1) == 0x0004E8, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_DestroySession_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_IsValid_ReturnValue4) == 0x0004F0, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance, CallFunc_IsValid_ReturnValue5) == 0x0004F1, "Member 'Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance::CallFunc_IsValid_ReturnValue5' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.ServerTravel
// 0x0010 (0x0010 - 0x0000)
struct Mer2GameInstance_C_ServerTravel final
{
public:
	class FString                                 LevelName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_ServerTravel) == 0x000008, "Wrong alignment on Mer2GameInstance_C_ServerTravel");
static_assert(sizeof(Mer2GameInstance_C_ServerTravel) == 0x000010, "Wrong size on Mer2GameInstance_C_ServerTravel");
static_assert(offsetof(Mer2GameInstance_C_ServerTravel, LevelName) == 0x000000, "Member 'Mer2GameInstance_C_ServerTravel::LevelName' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.OnDeadTravel
// 0x0010 (0x0010 - 0x0000)
struct Mer2GameInstance_C_OnDeadTravel final
{
public:
	class FString                                 MapName_0;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_OnDeadTravel) == 0x000008, "Wrong alignment on Mer2GameInstance_C_OnDeadTravel");
static_assert(sizeof(Mer2GameInstance_C_OnDeadTravel) == 0x000010, "Wrong size on Mer2GameInstance_C_OnDeadTravel");
static_assert(offsetof(Mer2GameInstance_C_OnDeadTravel, MapName_0) == 0x000000, "Member 'Mer2GameInstance_C_OnDeadTravel::MapName_0' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.JoinSession
// 0x00B8 (0x00B8 - 0x0000)
struct Mer2GameInstance_C_JoinSession final
{
public:
	struct FBlueprintSessionResult                Session_0;                                         // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Mer2GameInstance_C_JoinSession) == 0x000008, "Wrong alignment on Mer2GameInstance_C_JoinSession");
static_assert(sizeof(Mer2GameInstance_C_JoinSession) == 0x0000B8, "Wrong size on Mer2GameInstance_C_JoinSession");
static_assert(offsetof(Mer2GameInstance_C_JoinSession, Session_0) == 0x000000, "Member 'Mer2GameInstance_C_JoinSession::Session_0' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.FindSession
// 0x0010 (0x0010 - 0x0000)
struct Mer2GameInstance_C_FindSession final
{
public:
	class FString                                 Filter;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_FindSession) == 0x000008, "Wrong alignment on Mer2GameInstance_C_FindSession");
static_assert(sizeof(Mer2GameInstance_C_FindSession) == 0x000010, "Wrong size on Mer2GameInstance_C_FindSession");
static_assert(offsetof(Mer2GameInstance_C_FindSession, Filter) == 0x000000, "Member 'Mer2GameInstance_C_FindSession::Filter' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.CreateSession
// 0x0018 (0x0018 - 0x0000)
struct Mer2GameInstance_C_CreateSession final
{
public:
	class FName                                   MapName_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Filter;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_CreateSession) == 0x000008, "Wrong alignment on Mer2GameInstance_C_CreateSession");
static_assert(sizeof(Mer2GameInstance_C_CreateSession) == 0x000018, "Wrong size on Mer2GameInstance_C_CreateSession");
static_assert(offsetof(Mer2GameInstance_C_CreateSession, MapName_0) == 0x000000, "Member 'Mer2GameInstance_C_CreateSession::MapName_0' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_CreateSession, Filter) == 0x000008, "Member 'Mer2GameInstance_C_CreateSession::Filter' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.OnSuccess_B37144804BB00E9A5BC6F9B784641DA1
// 0x0010 (0x0010 - 0x0000)
struct Mer2GameInstance_C_OnSuccess_B37144804BB00E9A5BC6F9B784641DA1 final
{
public:
	TArray<struct FBlueprintSessionResult>        Results;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(Mer2GameInstance_C_OnSuccess_B37144804BB00E9A5BC6F9B784641DA1) == 0x000008, "Wrong alignment on Mer2GameInstance_C_OnSuccess_B37144804BB00E9A5BC6F9B784641DA1");
static_assert(sizeof(Mer2GameInstance_C_OnSuccess_B37144804BB00E9A5BC6F9B784641DA1) == 0x000010, "Wrong size on Mer2GameInstance_C_OnSuccess_B37144804BB00E9A5BC6F9B784641DA1");
static_assert(offsetof(Mer2GameInstance_C_OnSuccess_B37144804BB00E9A5BC6F9B784641DA1, Results) == 0x000000, "Member 'Mer2GameInstance_C_OnSuccess_B37144804BB00E9A5BC6F9B784641DA1::Results' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.OnFailure_B37144804BB00E9A5BC6F9B784641DA1
// 0x0010 (0x0010 - 0x0000)
struct Mer2GameInstance_C_OnFailure_B37144804BB00E9A5BC6F9B784641DA1 final
{
public:
	TArray<struct FBlueprintSessionResult>        Results;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(Mer2GameInstance_C_OnFailure_B37144804BB00E9A5BC6F9B784641DA1) == 0x000008, "Wrong alignment on Mer2GameInstance_C_OnFailure_B37144804BB00E9A5BC6F9B784641DA1");
static_assert(sizeof(Mer2GameInstance_C_OnFailure_B37144804BB00E9A5BC6F9B784641DA1) == 0x000010, "Wrong size on Mer2GameInstance_C_OnFailure_B37144804BB00E9A5BC6F9B784641DA1");
static_assert(offsetof(Mer2GameInstance_C_OnFailure_B37144804BB00E9A5BC6F9B784641DA1, Results) == 0x000000, "Member 'Mer2GameInstance_C_OnFailure_B37144804BB00E9A5BC6F9B784641DA1::Results' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.SavePlayerData
// 0x0010 (0x0010 - 0x0000)
struct Mer2GameInstance_C_SavePlayerData final
{
public:
	class ABP_CharacterBase_C*                    Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_PlayerData                     TempData;                                          // 0x0008(0x0002)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FStruct_PlayerData                     K2Node_MakeStruct_Struct_PlayerData;               // 0x000B(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FStruct_PlayerData                     K2Node_MakeStruct_Struct_PlayerData1;              // 0x000E(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_SavePlayerData) == 0x000008, "Wrong alignment on Mer2GameInstance_C_SavePlayerData");
static_assert(sizeof(Mer2GameInstance_C_SavePlayerData) == 0x000010, "Wrong size on Mer2GameInstance_C_SavePlayerData");
static_assert(offsetof(Mer2GameInstance_C_SavePlayerData, Player) == 0x000000, "Member 'Mer2GameInstance_C_SavePlayerData::Player' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SavePlayerData, TempData) == 0x000008, "Member 'Mer2GameInstance_C_SavePlayerData::TempData' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SavePlayerData, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'Mer2GameInstance_C_SavePlayerData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SavePlayerData, K2Node_MakeStruct_Struct_PlayerData) == 0x00000B, "Member 'Mer2GameInstance_C_SavePlayerData::K2Node_MakeStruct_Struct_PlayerData' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SavePlayerData, CallFunc_IsValid_ReturnValue1) == 0x00000D, "Member 'Mer2GameInstance_C_SavePlayerData::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SavePlayerData, K2Node_MakeStruct_Struct_PlayerData1) == 0x00000E, "Member 'Mer2GameInstance_C_SavePlayerData::K2Node_MakeStruct_Struct_PlayerData1' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.LoadPlayerData
// 0x0010 (0x0010 - 0x0000)
struct Mer2GameInstance_C_LoadPlayerData final
{
public:
	class ABP_CharacterBase_C*                    Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLoad;                                            // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mer2GameInstance_C_LoadPlayerData) == 0x000008, "Wrong alignment on Mer2GameInstance_C_LoadPlayerData");
static_assert(sizeof(Mer2GameInstance_C_LoadPlayerData) == 0x000010, "Wrong size on Mer2GameInstance_C_LoadPlayerData");
static_assert(offsetof(Mer2GameInstance_C_LoadPlayerData, Player) == 0x000000, "Member 'Mer2GameInstance_C_LoadPlayerData::Player' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_LoadPlayerData, Success) == 0x000008, "Member 'Mer2GameInstance_C_LoadPlayerData::Success' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_LoadPlayerData, IsLoad) == 0x000009, "Member 'Mer2GameInstance_C_LoadPlayerData::IsLoad' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_LoadPlayerData, K2Node_SwitchEnum_CmpSuccess) == 0x00000A, "Member 'Mer2GameInstance_C_LoadPlayerData::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_LoadPlayerData, K2Node_SwitchEnum1_CmpSuccess) == 0x00000B, "Member 'Mer2GameInstance_C_LoadPlayerData::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.lsPhoneDevice
// 0x0020 (0x0020 - 0x0000)
struct Mer2GameInstance_C_lsPhoneDevice final
{
public:
	bool                                          outlsPhone;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue1;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mer2GameInstance_C_lsPhoneDevice) == 0x000008, "Wrong alignment on Mer2GameInstance_C_lsPhoneDevice");
static_assert(sizeof(Mer2GameInstance_C_lsPhoneDevice) == 0x000020, "Wrong size on Mer2GameInstance_C_lsPhoneDevice");
static_assert(offsetof(Mer2GameInstance_C_lsPhoneDevice, outlsPhone) == 0x000000, "Member 'Mer2GameInstance_C_lsPhoneDevice::outlsPhone' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_lsPhoneDevice, CallFunc_GetPlatformName_ReturnValue) == 0x000008, "Member 'Mer2GameInstance_C_lsPhoneDevice::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_lsPhoneDevice, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000018, "Member 'Mer2GameInstance_C_lsPhoneDevice::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_lsPhoneDevice, CallFunc_EqualEqual_StrStr_ReturnValue1) == 0x000019, "Member 'Mer2GameInstance_C_lsPhoneDevice::CallFunc_EqualEqual_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_lsPhoneDevice, CallFunc_BooleanOR_ReturnValue) == 0x00001A, "Member 'Mer2GameInstance_C_lsPhoneDevice::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.lsAnroid
// 0x0020 (0x0020 - 0x0000)
struct Mer2GameInstance_C_lsAnroid final
{
public:
	bool                                          blsAndroid;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mer2GameInstance_C_lsAnroid) == 0x000008, "Wrong alignment on Mer2GameInstance_C_lsAnroid");
static_assert(sizeof(Mer2GameInstance_C_lsAnroid) == 0x000020, "Wrong size on Mer2GameInstance_C_lsAnroid");
static_assert(offsetof(Mer2GameInstance_C_lsAnroid, blsAndroid) == 0x000000, "Member 'Mer2GameInstance_C_lsAnroid::blsAndroid' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_lsAnroid, CallFunc_GetPlatformName_ReturnValue) == 0x000008, "Member 'Mer2GameInstance_C_lsAnroid::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_lsAnroid, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000018, "Member 'Mer2GameInstance_C_lsAnroid::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.AddBulletScore
// 0x0488 (0x0488 - 0x0000)
struct Mer2GameInstance_C_AddBulletScore final
{
public:
	EnumScoreType                                 scoreType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FscoreType                             currentScore;                                      // 0x0010(0x004C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FscoreType                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0068(0x004C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FscoreType                             CallFunc_GetDataTableRowFromName_OutRow1;          // 0x00B8(0x004C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue1;     // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FscoreType                             CallFunc_GetDataTableRowFromName_OutRow2;          // 0x0108(0x004C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue2;     // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FscoreType                             CallFunc_GetDataTableRowFromName_OutRow3;          // 0x0158(0x004C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue3;     // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x01A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x01A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable5;                               // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable6;                               // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable7;                               // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AB[0x5];                                      // 0x01AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable8;                               // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C2[0x2];                                      // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select1_Default;                            // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select2_Default;                            // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select3_Default;                            // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select4_Default;                            // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select5_Default;                            // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select6_Default;                            // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select7_Default;                            // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select8_Default;                            // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable9;                               // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable10;                              // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FA[0x2];                                      // 0x01FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select9_Default;                            // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select10_Default;                           // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable11;                              // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select11_Default;                           // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable1;                             // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable12;                              // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable2;                             // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select12_Default;                           // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable3;                             // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable13;                              // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BE[0x2];                                      // 0x02BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select13_Default;                           // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue6;                  // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue1;            // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable4;                             // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable5;                             // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable14;                              // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable15;                              // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_322[0x2];                                      // 0x0322(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select14_Default;                           // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable16;                              // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select15_Default;                           // 0x0330(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_Select16_Default;                           // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable17;                              // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select17_Default;                           // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable18;                              // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue2;            // 0x0368(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_Select18_Default;                           // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue5;               // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue7;                  // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue6;               // 0x0398(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AD[0x3];                                      // 0x03AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue8;                  // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue9;                  // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue3;            // 0x03B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue1;                       // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue7;               // 0x03D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue8;               // 0x03E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x3];                                      // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue10;                 // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue2;                       // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue11;                 // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue12;                 // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue3;                       // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue4;            // 0x0408(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue9;               // 0x0420(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue10;              // 0x0430(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue13;                 // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue4;                       // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue14;                 // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue15;                 // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue5;                       // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue16;                 // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue17;                 // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue6;                       // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue7;                       // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue18;                 // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue19;                 // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue8;                       // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue9;                       // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable19;                              // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x0475(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_476[0x2];                                      // 0x0476(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select19_Default;                           // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue20;                 // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue10;                      // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_AddBulletScore) == 0x000008, "Wrong alignment on Mer2GameInstance_C_AddBulletScore");
static_assert(sizeof(Mer2GameInstance_C_AddBulletScore) == 0x000488, "Wrong size on Mer2GameInstance_C_AddBulletScore");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, scoreType) == 0x000000, "Member 'Mer2GameInstance_C_AddBulletScore::scoreType' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, PlayerController) == 0x000008, "Member 'Mer2GameInstance_C_AddBulletScore::PlayerController' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, currentScore) == 0x000010, "Member 'Mer2GameInstance_C_AddBulletScore::currentScore' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_bool_Variable) == 0x00005C, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_IsValid_ReturnValue) == 0x00005D, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_IsLocalPlayerController_ReturnValue) == 0x00005E, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005F, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000060, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000061, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_BooleanOR_ReturnValue) == 0x000062, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_BooleanOR_ReturnValue1) == 0x000063, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_SwitchEnum_CmpSuccess) == 0x000064, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_bool_Variable1) == 0x000065, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_GetDataTableRowFromName_OutRow) == 0x000068, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B4, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_GetDataTableRowFromName_OutRow1) == 0x0000B8, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_GetDataTableRowFromName_OutRow1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_GetDataTableRowFromName_ReturnValue1) == 0x000104, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_GetDataTableRowFromName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_GetDataTableRowFromName_OutRow2) == 0x000108, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_GetDataTableRowFromName_OutRow2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_GetDataTableRowFromName_ReturnValue2) == 0x000154, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_GetDataTableRowFromName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_GetDataTableRowFromName_OutRow3) == 0x000158, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_GetDataTableRowFromName_OutRow3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_GetDataTableRowFromName_ReturnValue3) == 0x0001A4, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_GetDataTableRowFromName_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_bool_Variable2) == 0x0001A5, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_bool_Variable3) == 0x0001A6, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_bool_Variable4) == 0x0001A7, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_bool_Variable5) == 0x0001A8, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_bool_Variable6) == 0x0001A9, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_bool_Variable6' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_bool_Variable7) == 0x0001AA, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_bool_Variable7' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_GetGameState_ReturnValue) == 0x0001B0, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_DynamicCast_AsMer_2Game_State) == 0x0001B8, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_DynamicCast_bSuccess) == 0x0001C0, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_bool_Variable8) == 0x0001C1, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_bool_Variable8' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_Select_Default) == 0x0001C4, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue) == 0x0001C8, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue1) == 0x0001CC, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue2) == 0x0001D0, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_Select1_Default) == 0x0001D4, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_Select2_Default) == 0x0001D8, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_Select3_Default) == 0x0001DC, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_Select4_Default) == 0x0001E0, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_Select5_Default) == 0x0001E4, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_Select5_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_Select6_Default) == 0x0001E8, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_Select6_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_Select7_Default) == 0x0001EC, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_Select7_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue3) == 0x0001F0, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_Select8_Default) == 0x0001F4, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_Select8_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_bool_Variable9) == 0x0001F8, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_bool_Variable9' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_bool_Variable10) == 0x0001F9, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_bool_Variable10' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_Select9_Default) == 0x0001FC, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_Select9_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_Select10_Default) == 0x000200, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_Select10_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue4) == 0x000204, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_bool_Variable11) == 0x000208, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_bool_Variable11' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_Select11_Default) == 0x00020C, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_Select11_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_string_Variable) == 0x000210, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_string_Variable1) == 0x000220, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_string_Variable1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_bool_Variable12) == 0x000230, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_bool_Variable12' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_string_Variable2) == 0x000238, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_string_Variable2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_Select12_Default) == 0x000248, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_Select12_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_string_Variable3) == 0x000258, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_string_Variable3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Array_Length_ReturnValue) == 0x000268, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Greater_IntInt_ReturnValue) == 0x00026C, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Conv_IntToString_ReturnValue) == 0x000270, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Subtract_IntInt_ReturnValue) == 0x000280, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Concat_StrStr_ReturnValue) == 0x000288, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Concat_StrStr_ReturnValue1) == 0x000298, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Concat_StrStr_ReturnValue2) == 0x0002A8, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue5) == 0x0002B8, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_bool_Variable13) == 0x0002BC, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_bool_Variable13' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Less_IntInt_ReturnValue) == 0x0002BD, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_Select13_Default) == 0x0002C0, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_Select13_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue6) == 0x0002D0, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002D4, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Conv_IntToString_ReturnValue1) == 0x0002D8, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Conv_IntToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_BooleanAND_ReturnValue) == 0x0002E8, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Concat_StrStr_ReturnValue3) == 0x0002F0, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_string_Variable4) == 0x000300, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_string_Variable4' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_string_Variable5) == 0x000310, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_string_Variable5' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_bool_Variable14) == 0x000320, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_bool_Variable14' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_bool_Variable15) == 0x000321, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_bool_Variable15' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_Select14_Default) == 0x000324, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_Select14_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_bool_Variable16) == 0x000328, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_bool_Variable16' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_Select15_Default) == 0x000330, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_Select15_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Concat_StrStr_ReturnValue4) == 0x000340, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_Select16_Default) == 0x000350, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_Select16_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Array_Add_ReturnValue) == 0x000354, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_int_Variable) == 0x000358, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_bool_Variable17) == 0x00035C, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_bool_Variable17' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_Select17_Default) == 0x000360, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_Select17_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_bool_Variable18) == 0x000364, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_bool_Variable18' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Conv_IntToString_ReturnValue2) == 0x000368, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Conv_IntToString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_Select18_Default) == 0x000378, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_Select18_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Concat_StrStr_ReturnValue5) == 0x000380, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Concat_StrStr_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue7) == 0x000390, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Concat_StrStr_ReturnValue6) == 0x000398, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Concat_StrStr_ReturnValue6' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Clamp_ReturnValue) == 0x0003A8, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Less_IntInt_ReturnValue1) == 0x0003AC, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue8) == 0x0003B0, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue8' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue9) == 0x0003B4, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue9' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Conv_IntToString_ReturnValue3) == 0x0003B8, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Conv_IntToString_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Clamp_ReturnValue1) == 0x0003C8, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Clamp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Concat_StrStr_ReturnValue7) == 0x0003D0, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Concat_StrStr_ReturnValue7' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Concat_StrStr_ReturnValue8) == 0x0003E0, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Concat_StrStr_ReturnValue8' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Less_IntInt_ReturnValue2) == 0x0003F0, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue10) == 0x0003F4, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue10' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Clamp_ReturnValue2) == 0x0003F8, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Clamp_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue11) == 0x0003FC, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue11' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue12) == 0x000400, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue12' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Clamp_ReturnValue3) == 0x000404, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Clamp_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Conv_IntToString_ReturnValue4) == 0x000408, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Conv_IntToString_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Less_IntInt_ReturnValue3) == 0x000418, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Concat_StrStr_ReturnValue9) == 0x000420, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Concat_StrStr_ReturnValue9' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Concat_StrStr_ReturnValue10) == 0x000430, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Concat_StrStr_ReturnValue10' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue13) == 0x000440, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue13' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Clamp_ReturnValue4) == 0x000444, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Clamp_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue14) == 0x000448, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue14' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue15) == 0x00044C, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue15' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Clamp_ReturnValue5) == 0x000450, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Clamp_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue16) == 0x000454, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue16' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue17) == 0x000458, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue17' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Clamp_ReturnValue6) == 0x00045C, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Clamp_ReturnValue6' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Clamp_ReturnValue7) == 0x000460, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Clamp_ReturnValue7' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue18) == 0x000464, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue18' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue19) == 0x000468, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue19' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Clamp_ReturnValue8) == 0x00046C, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Clamp_ReturnValue8' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Clamp_ReturnValue9) == 0x000470, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Clamp_ReturnValue9' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, Temp_bool_Variable19) == 0x000474, "Member 'Mer2GameInstance_C_AddBulletScore::Temp_bool_Variable19' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_SwitchEnum1_CmpSuccess) == 0x000475, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, K2Node_Select19_Default) == 0x000478, "Member 'Mer2GameInstance_C_AddBulletScore::K2Node_Select19_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Add_IntInt_ReturnValue20) == 0x00047C, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Add_IntInt_ReturnValue20' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletScore, CallFunc_Clamp_ReturnValue10) == 0x000480, "Member 'Mer2GameInstance_C_AddBulletScore::CallFunc_Clamp_ReturnValue10' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.AddBulletShotNum
// 0x0038 (0x0038 - 0x0000)
struct Mer2GameInstance_C_AddBulletShotNum final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_AddBulletShotNum) == 0x000008, "Wrong alignment on Mer2GameInstance_C_AddBulletShotNum");
static_assert(sizeof(Mer2GameInstance_C_AddBulletShotNum) == 0x000038, "Wrong size on Mer2GameInstance_C_AddBulletShotNum");
static_assert(offsetof(Mer2GameInstance_C_AddBulletShotNum, Num) == 0x000000, "Member 'Mer2GameInstance_C_AddBulletShotNum::Num' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletShotNum, PlayerController) == 0x000008, "Member 'Mer2GameInstance_C_AddBulletShotNum::PlayerController' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletShotNum, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'Mer2GameInstance_C_AddBulletShotNum::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletShotNum, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Mer2GameInstance_C_AddBulletShotNum::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletShotNum, K2Node_DynamicCast_AsMer_2Game_State) == 0x000020, "Member 'Mer2GameInstance_C_AddBulletShotNum::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletShotNum, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Mer2GameInstance_C_AddBulletShotNum::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletShotNum, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000029, "Member 'Mer2GameInstance_C_AddBulletShotNum::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletShotNum, Temp_bool_Variable) == 0x00002A, "Member 'Mer2GameInstance_C_AddBulletShotNum::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletShotNum, K2Node_Select_Default) == 0x00002C, "Member 'Mer2GameInstance_C_AddBulletShotNum::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddBulletShotNum, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'Mer2GameInstance_C_AddBulletShotNum::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.GetHitRatio
// 0x0040 (0x0040 - 0x0000)
struct Mer2GameInstance_C_GetHitRatio final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ratio;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select1_Default;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_GetHitRatio) == 0x000008, "Wrong alignment on Mer2GameInstance_C_GetHitRatio");
static_assert(sizeof(Mer2GameInstance_C_GetHitRatio) == 0x000040, "Wrong size on Mer2GameInstance_C_GetHitRatio");
static_assert(offsetof(Mer2GameInstance_C_GetHitRatio, PlayerController) == 0x000000, "Member 'Mer2GameInstance_C_GetHitRatio::PlayerController' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHitRatio, Ratio) == 0x000008, "Member 'Mer2GameInstance_C_GetHitRatio::Ratio' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHitRatio, Temp_bool_Variable) == 0x00000C, "Member 'Mer2GameInstance_C_GetHitRatio::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHitRatio, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'Mer2GameInstance_C_GetHitRatio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHitRatio, CallFunc_IsLocalPlayerController_ReturnValue) == 0x00000E, "Member 'Mer2GameInstance_C_GetHitRatio::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHitRatio, Temp_bool_Variable1) == 0x00000F, "Member 'Mer2GameInstance_C_GetHitRatio::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHitRatio, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'Mer2GameInstance_C_GetHitRatio::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHitRatio, K2Node_DynamicCast_AsMer_2Game_State) == 0x000018, "Member 'Mer2GameInstance_C_GetHitRatio::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHitRatio, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Mer2GameInstance_C_GetHitRatio::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHitRatio, K2Node_Select_Default) == 0x000024, "Member 'Mer2GameInstance_C_GetHitRatio::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHitRatio, K2Node_Select1_Default) == 0x000028, "Member 'Mer2GameInstance_C_GetHitRatio::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHitRatio, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00002C, "Member 'Mer2GameInstance_C_GetHitRatio::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHitRatio, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000030, "Member 'Mer2GameInstance_C_GetHitRatio::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHitRatio, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'Mer2GameInstance_C_GetHitRatio::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHitRatio, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000038, "Member 'Mer2GameInstance_C_GetHitRatio::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.GetBulletScore
// 0x0030 (0x0030 - 0x0000)
struct Mer2GameInstance_C_GetBulletScore final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Score;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_GetBulletScore) == 0x000008, "Wrong alignment on Mer2GameInstance_C_GetBulletScore");
static_assert(sizeof(Mer2GameInstance_C_GetBulletScore) == 0x000030, "Wrong size on Mer2GameInstance_C_GetBulletScore");
static_assert(offsetof(Mer2GameInstance_C_GetBulletScore, PlayerController) == 0x000000, "Member 'Mer2GameInstance_C_GetBulletScore::PlayerController' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletScore, Score) == 0x000008, "Member 'Mer2GameInstance_C_GetBulletScore::Score' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletScore, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'Mer2GameInstance_C_GetBulletScore::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletScore, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Mer2GameInstance_C_GetBulletScore::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletScore, K2Node_DynamicCast_AsMer_2Game_State) == 0x000020, "Member 'Mer2GameInstance_C_GetBulletScore::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletScore, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Mer2GameInstance_C_GetBulletScore::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletScore, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000029, "Member 'Mer2GameInstance_C_GetBulletScore::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletScore, Temp_bool_Variable) == 0x00002A, "Member 'Mer2GameInstance_C_GetBulletScore::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletScore, K2Node_Select_Default) == 0x00002C, "Member 'Mer2GameInstance_C_GetBulletScore::K2Node_Select_Default' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.AddPlayerHit
// 0x0038 (0x0038 - 0x0000)
struct Mer2GameInstance_C_AddPlayerHit final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mer2GameInstance_C_AddPlayerHit) == 0x000008, "Wrong alignment on Mer2GameInstance_C_AddPlayerHit");
static_assert(sizeof(Mer2GameInstance_C_AddPlayerHit) == 0x000038, "Wrong size on Mer2GameInstance_C_AddPlayerHit");
static_assert(offsetof(Mer2GameInstance_C_AddPlayerHit, Num) == 0x000000, "Member 'Mer2GameInstance_C_AddPlayerHit::Num' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddPlayerHit, PlayerController) == 0x000008, "Member 'Mer2GameInstance_C_AddPlayerHit::PlayerController' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddPlayerHit, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'Mer2GameInstance_C_AddPlayerHit::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddPlayerHit, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Mer2GameInstance_C_AddPlayerHit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddPlayerHit, K2Node_DynamicCast_AsMer_2Game_State) == 0x000020, "Member 'Mer2GameInstance_C_AddPlayerHit::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddPlayerHit, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Mer2GameInstance_C_AddPlayerHit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddPlayerHit, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'Mer2GameInstance_C_AddPlayerHit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddPlayerHit, CallFunc_Add_IntInt_ReturnValue1) == 0x000030, "Member 'Mer2GameInstance_C_AddPlayerHit::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddPlayerHit, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000034, "Member 'Mer2GameInstance_C_AddPlayerHit::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.GetTotalScore
// 0x0110 (0x0110 - 0x0000)
struct Mer2GameInstance_C_GetTotalScore final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPass;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Score;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CheckPoint;                                        // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDodgoScore__score;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDodgoScore__score1;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable1;                                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FscoreType                             CallFunc_GetLv1CurrentScoreType_ScoreType;         // 0x0030(0x004C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable3;                               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTimeScore__score;                      // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select1_Default;                            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select2_Default;                            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select3_Default;                            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTimeScore__score1;                     // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable4;                               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select4_Default;                            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue1;                      // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_GetTotalScore) == 0x000008, "Wrong alignment on Mer2GameInstance_C_GetTotalScore");
static_assert(sizeof(Mer2GameInstance_C_GetTotalScore) == 0x000110, "Wrong size on Mer2GameInstance_C_GetTotalScore");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, PlayerController) == 0x000000, "Member 'Mer2GameInstance_C_GetTotalScore::PlayerController' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, IsPass) == 0x000008, "Member 'Mer2GameInstance_C_GetTotalScore::IsPass' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, Score) == 0x00000C, "Member 'Mer2GameInstance_C_GetTotalScore::Score' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CheckPoint) == 0x000010, "Member 'Mer2GameInstance_C_GetTotalScore::CheckPoint' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, Temp_bool_Variable) == 0x000014, "Member 'Mer2GameInstance_C_GetTotalScore::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_IsValid_ReturnValue) == 0x000015, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000016, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_GetDodgoScore__score) == 0x000018, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_GetDodgoScore__score' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_GetDodgoScore__score1) == 0x00001C, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_GetDodgoScore__score1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, Temp_int_Variable) == 0x000020, "Member 'Mer2GameInstance_C_GetTotalScore::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, Temp_bool_Variable1) == 0x000024, "Member 'Mer2GameInstance_C_GetTotalScore::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, Temp_int_Variable1) == 0x000028, "Member 'Mer2GameInstance_C_GetTotalScore::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, Temp_bool_Variable2) == 0x00002C, "Member 'Mer2GameInstance_C_GetTotalScore::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_GetLv1CurrentScoreType_ScoreType) == 0x000030, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_GetLv1CurrentScoreType_ScoreType' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, Temp_bool_Variable3) == 0x00007C, "Member 'Mer2GameInstance_C_GetTotalScore::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_GetTimeScore__score) == 0x000080, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_GetTimeScore__score' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_GetGameInstance_ReturnValue) == 0x000088, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, K2Node_DynamicCast_AsMer_2Game_Instance) == 0x000098, "Member 'Mer2GameInstance_C_GetTotalScore::K2Node_DynamicCast_AsMer_2Game_Instance' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'Mer2GameInstance_C_GetTotalScore::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_GetGameState_ReturnValue) == 0x0000A8, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, K2Node_DynamicCast_AsMer_2Game_State) == 0x0000B0, "Member 'Mer2GameInstance_C_GetTotalScore::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, K2Node_DynamicCast_bSuccess1) == 0x0000B8, "Member 'Mer2GameInstance_C_GetTotalScore::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, K2Node_Select_Default) == 0x0000BC, "Member 'Mer2GameInstance_C_GetTotalScore::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, K2Node_Select1_Default) == 0x0000C0, "Member 'Mer2GameInstance_C_GetTotalScore::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_Add_IntInt_ReturnValue1) == 0x0000C4, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, K2Node_Select2_Default) == 0x0000C8, "Member 'Mer2GameInstance_C_GetTotalScore::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, K2Node_Select3_Default) == 0x0000CC, "Member 'Mer2GameInstance_C_GetTotalScore::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000D0, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_GetTimeScore__score1) == 0x0000D4, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_GetTimeScore__score1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, Temp_bool_Variable4) == 0x0000D8, "Member 'Mer2GameInstance_C_GetTotalScore::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, K2Node_Select4_Default) == 0x0000DC, "Member 'Mer2GameInstance_C_GetTotalScore::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x0000E0, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E4, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000E8, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000EC, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_FTrunc_ReturnValue) == 0x0000F0, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000F4, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x0000F8, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x0000FC, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_FTrunc_ReturnValue1) == 0x000100, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_FTrunc_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_Add_IntInt_ReturnValue2) == 0x000104, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_Add_IntInt_ReturnValue3) == 0x000108, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTotalScore, CallFunc_Add_IntInt_ReturnValue4) == 0x00010C, "Member 'Mer2GameInstance_C_GetTotalScore::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.GetHeadShot
// 0x0030 (0x0030 - 0x0000)
struct Mer2GameInstance_C_GetHeadShot final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_GetHeadShot) == 0x000008, "Wrong alignment on Mer2GameInstance_C_GetHeadShot");
static_assert(sizeof(Mer2GameInstance_C_GetHeadShot) == 0x000030, "Wrong size on Mer2GameInstance_C_GetHeadShot");
static_assert(offsetof(Mer2GameInstance_C_GetHeadShot, PlayerController) == 0x000000, "Member 'Mer2GameInstance_C_GetHeadShot::PlayerController' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHeadShot, Count) == 0x000008, "Member 'Mer2GameInstance_C_GetHeadShot::Count' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHeadShot, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'Mer2GameInstance_C_GetHeadShot::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHeadShot, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Mer2GameInstance_C_GetHeadShot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHeadShot, K2Node_DynamicCast_AsMer_2Game_State) == 0x000020, "Member 'Mer2GameInstance_C_GetHeadShot::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHeadShot, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Mer2GameInstance_C_GetHeadShot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHeadShot, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000029, "Member 'Mer2GameInstance_C_GetHeadShot::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHeadShot, Temp_bool_Variable) == 0x00002A, "Member 'Mer2GameInstance_C_GetHeadShot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetHeadShot, K2Node_Select_Default) == 0x00002C, "Member 'Mer2GameInstance_C_GetHeadShot::K2Node_Select_Default' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.ClearScore
// 0x0040 (0x0040 - 0x0000)
struct Mer2GameInstance_C_ClearScore final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InitVariable;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue1;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State1;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mer2GameInstance_C_ClearScore) == 0x000008, "Wrong alignment on Mer2GameInstance_C_ClearScore");
static_assert(sizeof(Mer2GameInstance_C_ClearScore) == 0x000040, "Wrong size on Mer2GameInstance_C_ClearScore");
static_assert(offsetof(Mer2GameInstance_C_ClearScore, PlayerController) == 0x000000, "Member 'Mer2GameInstance_C_ClearScore::PlayerController' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ClearScore, InitVariable) == 0x000008, "Member 'Mer2GameInstance_C_ClearScore::InitVariable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ClearScore, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'Mer2GameInstance_C_ClearScore::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ClearScore, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'Mer2GameInstance_C_ClearScore::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ClearScore, K2Node_DynamicCast_AsMer_2Game_State) == 0x000018, "Member 'Mer2GameInstance_C_ClearScore::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ClearScore, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Mer2GameInstance_C_ClearScore::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ClearScore, CallFunc_GetGameState_ReturnValue1) == 0x000028, "Member 'Mer2GameInstance_C_ClearScore::CallFunc_GetGameState_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ClearScore, K2Node_DynamicCast_AsMer_2Game_State1) == 0x000030, "Member 'Mer2GameInstance_C_ClearScore::K2Node_DynamicCast_AsMer_2Game_State1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_ClearScore, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'Mer2GameInstance_C_ClearScore::K2Node_DynamicCast_bSuccess1' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.BackToMM
// 0x0038 (0x0038 - 0x0000)
struct Mer2GameInstance_C_BackToMM final
{
public:
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_lsPhoneDevice_outlsPhone;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterPhone_C*                   K2Node_DynamicCast_AsBP_Character_Phone;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mer2GameInstance_C_BackToMM) == 0x000008, "Wrong alignment on Mer2GameInstance_C_BackToMM");
static_assert(sizeof(Mer2GameInstance_C_BackToMM) == 0x000038, "Wrong size on Mer2GameInstance_C_BackToMM");
static_assert(offsetof(Mer2GameInstance_C_BackToMM, CallFunc_GetPlayerPawn_ReturnValue) == 0x000000, "Member 'Mer2GameInstance_C_BackToMM::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_BackToMM, CallFunc_lsPhoneDevice_outlsPhone) == 0x000008, "Member 'Mer2GameInstance_C_BackToMM::CallFunc_lsPhoneDevice_outlsPhone' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_BackToMM, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'Mer2GameInstance_C_BackToMM::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_BackToMM, K2Node_DynamicCast_AsPlayer_Controller) == 0x000018, "Member 'Mer2GameInstance_C_BackToMM::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_BackToMM, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Mer2GameInstance_C_BackToMM::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_BackToMM, K2Node_DynamicCast_AsBP_Character_Phone) == 0x000028, "Member 'Mer2GameInstance_C_BackToMM::K2Node_DynamicCast_AsBP_Character_Phone' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_BackToMM, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'Mer2GameInstance_C_BackToMM::K2Node_DynamicCast_bSuccess1' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.lsGameINP1
// 0x0002 (0x0002 - 0x0000)
struct Mer2GameInstance_C_lsGameINP1 final
{
public:
	bool                                          _flag;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mer2GameInstance_C_lsGameINP1) == 0x000001, "Wrong alignment on Mer2GameInstance_C_lsGameINP1");
static_assert(sizeof(Mer2GameInstance_C_lsGameINP1) == 0x000002, "Wrong size on Mer2GameInstance_C_lsGameINP1");
static_assert(offsetof(Mer2GameInstance_C_lsGameINP1, _flag) == 0x000000, "Member 'Mer2GameInstance_C_lsGameINP1::_flag' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_lsGameINP1, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Mer2GameInstance_C_lsGameINP1::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.SetGameState
// 0x0001 (0x0001 - 0x0000)
struct Mer2GameInstance_C_SetGameState final
{
public:
	EGameState                                    _state;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_SetGameState) == 0x000001, "Wrong alignment on Mer2GameInstance_C_SetGameState");
static_assert(sizeof(Mer2GameInstance_C_SetGameState) == 0x000001, "Wrong size on Mer2GameInstance_C_SetGameState");
static_assert(offsetof(Mer2GameInstance_C_SetGameState, _state) == 0x000000, "Member 'Mer2GameInstance_C_SetGameState::_state' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.GenerateUniqueID
// 0x0058 (0x0058 - 0x0000)
struct Mer2GameInstance_C_GenerateUniqueID final
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         TempID;                                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue1;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GenerateUniqueID_Result;                  // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_GenerateUniqueID) == 0x000008, "Wrong alignment on Mer2GameInstance_C_GenerateUniqueID");
static_assert(sizeof(Mer2GameInstance_C_GenerateUniqueID) == 0x000058, "Wrong size on Mer2GameInstance_C_GenerateUniqueID");
static_assert(offsetof(Mer2GameInstance_C_GenerateUniqueID, Result) == 0x000000, "Member 'Mer2GameInstance_C_GenerateUniqueID::Result' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GenerateUniqueID, TempID) == 0x000010, "Member 'Mer2GameInstance_C_GenerateUniqueID::TempID' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GenerateUniqueID, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'Mer2GameInstance_C_GenerateUniqueID::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GenerateUniqueID, CallFunc_Conv_IntToString_ReturnValue1) == 0x000028, "Member 'Mer2GameInstance_C_GenerateUniqueID::CallFunc_Conv_IntToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GenerateUniqueID, CallFunc_Array_Contains_ReturnValue) == 0x000038, "Member 'Mer2GameInstance_C_GenerateUniqueID::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GenerateUniqueID, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'Mer2GameInstance_C_GenerateUniqueID::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GenerateUniqueID, CallFunc_GenerateUniqueID_Result) == 0x000040, "Member 'Mer2GameInstance_C_GenerateUniqueID::CallFunc_GenerateUniqueID_Result' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GenerateUniqueID, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000050, "Member 'Mer2GameInstance_C_GenerateUniqueID::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.SaveTutorail
// 0x0010 (0x0010 - 0x0000)
struct Mer2GameInstance_C_SaveTutorail final
{
public:
	class UBPMer2Save_C*                          CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mer2GameInstance_C_SaveTutorail) == 0x000008, "Wrong alignment on Mer2GameInstance_C_SaveTutorail");
static_assert(sizeof(Mer2GameInstance_C_SaveTutorail) == 0x000010, "Wrong size on Mer2GameInstance_C_SaveTutorail");
static_assert(offsetof(Mer2GameInstance_C_SaveTutorail, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000000, "Member 'Mer2GameInstance_C_SaveTutorail::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SaveTutorail, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Mer2GameInstance_C_SaveTutorail::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SaveTutorail, CallFunc_SaveGameToSlot_ReturnValue) == 0x000009, "Member 'Mer2GameInstance_C_SaveTutorail::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.lsNoTutorial
// 0x0028 (0x0028 - 0x0000)
struct Mer2GameInstance_C_lsNoTutorial final
{
public:
	bool                                          lsSkipTutorail;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPMer2Save_C*                          K2Node_DynamicCast_AsBPMer_2Save;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mer2GameInstance_C_lsNoTutorial) == 0x000008, "Wrong alignment on Mer2GameInstance_C_lsNoTutorial");
static_assert(sizeof(Mer2GameInstance_C_lsNoTutorial) == 0x000028, "Wrong size on Mer2GameInstance_C_lsNoTutorial");
static_assert(offsetof(Mer2GameInstance_C_lsNoTutorial, lsSkipTutorail) == 0x000000, "Member 'Mer2GameInstance_C_lsNoTutorial::lsSkipTutorail' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_lsNoTutorial, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000008, "Member 'Mer2GameInstance_C_lsNoTutorial::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_lsNoTutorial, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Mer2GameInstance_C_lsNoTutorial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_lsNoTutorial, K2Node_DynamicCast_AsBPMer_2Save) == 0x000018, "Member 'Mer2GameInstance_C_lsNoTutorial::K2Node_DynamicCast_AsBPMer_2Save' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_lsNoTutorial, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Mer2GameInstance_C_lsNoTutorial::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.GetBulletShot
// 0x0030 (0x0030 - 0x0000)
struct Mer2GameInstance_C_GetBulletShot final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_GetBulletShot) == 0x000008, "Wrong alignment on Mer2GameInstance_C_GetBulletShot");
static_assert(sizeof(Mer2GameInstance_C_GetBulletShot) == 0x000030, "Wrong size on Mer2GameInstance_C_GetBulletShot");
static_assert(offsetof(Mer2GameInstance_C_GetBulletShot, PlayerController) == 0x000000, "Member 'Mer2GameInstance_C_GetBulletShot::PlayerController' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletShot, Count) == 0x000008, "Member 'Mer2GameInstance_C_GetBulletShot::Count' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletShot, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'Mer2GameInstance_C_GetBulletShot::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletShot, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Mer2GameInstance_C_GetBulletShot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletShot, K2Node_DynamicCast_AsMer_2Game_State) == 0x000020, "Member 'Mer2GameInstance_C_GetBulletShot::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletShot, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Mer2GameInstance_C_GetBulletShot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletShot, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000029, "Member 'Mer2GameInstance_C_GetBulletShot::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletShot, Temp_bool_Variable) == 0x00002A, "Member 'Mer2GameInstance_C_GetBulletShot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletShot, K2Node_Select_Default) == 0x00002C, "Member 'Mer2GameInstance_C_GetBulletShot::K2Node_Select_Default' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.GetBulletHit
// 0x0030 (0x0030 - 0x0000)
struct Mer2GameInstance_C_GetBulletHit final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_GetBulletHit) == 0x000008, "Wrong alignment on Mer2GameInstance_C_GetBulletHit");
static_assert(sizeof(Mer2GameInstance_C_GetBulletHit) == 0x000030, "Wrong size on Mer2GameInstance_C_GetBulletHit");
static_assert(offsetof(Mer2GameInstance_C_GetBulletHit, PlayerController) == 0x000000, "Member 'Mer2GameInstance_C_GetBulletHit::PlayerController' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletHit, Count) == 0x000008, "Member 'Mer2GameInstance_C_GetBulletHit::Count' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletHit, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'Mer2GameInstance_C_GetBulletHit::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletHit, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Mer2GameInstance_C_GetBulletHit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletHit, K2Node_DynamicCast_AsMer_2Game_State) == 0x000020, "Member 'Mer2GameInstance_C_GetBulletHit::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletHit, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Mer2GameInstance_C_GetBulletHit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletHit, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000029, "Member 'Mer2GameInstance_C_GetBulletHit::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletHit, Temp_bool_Variable) == 0x00002A, "Member 'Mer2GameInstance_C_GetBulletHit::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetBulletHit, K2Node_Select_Default) == 0x00002C, "Member 'Mer2GameInstance_C_GetBulletHit::K2Node_Select_Default' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.SetStartTIME
// 0x0020 (0x0020 - 0x0000)
struct Mer2GameInstance_C_SetStartTIME final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_SetStartTIME) == 0x000008, "Wrong alignment on Mer2GameInstance_C_SetStartTIME");
static_assert(sizeof(Mer2GameInstance_C_SetStartTIME) == 0x000020, "Wrong size on Mer2GameInstance_C_SetStartTIME");
static_assert(offsetof(Mer2GameInstance_C_SetStartTIME, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'Mer2GameInstance_C_SetStartTIME::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetStartTIME, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'Mer2GameInstance_C_SetStartTIME::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetStartTIME, K2Node_DynamicCast_AsMer_2Game_State) == 0x000010, "Member 'Mer2GameInstance_C_SetStartTIME::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetStartTIME, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Mer2GameInstance_C_SetStartTIME::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetStartTIME, CallFunc_FTrunc_ReturnValue) == 0x00001C, "Member 'Mer2GameInstance_C_SetStartTIME::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.GetKillNum
// 0x0030 (0x0030 - 0x0000)
struct Mer2GameInstance_C_GetKillNum final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_GetKillNum) == 0x000008, "Wrong alignment on Mer2GameInstance_C_GetKillNum");
static_assert(sizeof(Mer2GameInstance_C_GetKillNum) == 0x000030, "Wrong size on Mer2GameInstance_C_GetKillNum");
static_assert(offsetof(Mer2GameInstance_C_GetKillNum, PlayerController) == 0x000000, "Member 'Mer2GameInstance_C_GetKillNum::PlayerController' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetKillNum, Count) == 0x000008, "Member 'Mer2GameInstance_C_GetKillNum::Count' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetKillNum, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'Mer2GameInstance_C_GetKillNum::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetKillNum, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Mer2GameInstance_C_GetKillNum::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetKillNum, K2Node_DynamicCast_AsMer_2Game_State) == 0x000020, "Member 'Mer2GameInstance_C_GetKillNum::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetKillNum, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Mer2GameInstance_C_GetKillNum::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetKillNum, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000029, "Member 'Mer2GameInstance_C_GetKillNum::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetKillNum, Temp_bool_Variable) == 0x00002A, "Member 'Mer2GameInstance_C_GetKillNum::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetKillNum, K2Node_Select_Default) == 0x00002C, "Member 'Mer2GameInstance_C_GetKillNum::K2Node_Select_Default' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.GetGameTime
// 0x0028 (0x0028 - 0x0000)
struct Mer2GameInstance_C_GetGameTime final
{
public:
	int32                                         _time;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_GetGameTime) == 0x000008, "Wrong alignment on Mer2GameInstance_C_GetGameTime");
static_assert(sizeof(Mer2GameInstance_C_GetGameTime) == 0x000028, "Wrong size on Mer2GameInstance_C_GetGameTime");
static_assert(offsetof(Mer2GameInstance_C_GetGameTime, _time) == 0x000000, "Member 'Mer2GameInstance_C_GetGameTime::_time' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetGameTime, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'Mer2GameInstance_C_GetGameTime::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetGameTime, K2Node_DynamicCast_AsMer_2Game_State) == 0x000010, "Member 'Mer2GameInstance_C_GetGameTime::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetGameTime, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Mer2GameInstance_C_GetGameTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetGameTime, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'Mer2GameInstance_C_GetGameTime::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetGameTime, CallFunc_Abs_Int_ReturnValue) == 0x000020, "Member 'Mer2GameInstance_C_GetGameTime::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.FreshVariables
// 0x0008 (0x0008 - 0x0000)
struct Mer2GameInstance_C_FreshVariables final
{
public:
	class APlayerController*                      Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_FreshVariables) == 0x000008, "Wrong alignment on Mer2GameInstance_C_FreshVariables");
static_assert(sizeof(Mer2GameInstance_C_FreshVariables) == 0x000008, "Wrong size on Mer2GameInstance_C_FreshVariables");
static_assert(offsetof(Mer2GameInstance_C_FreshVariables, Object) == 0x000000, "Member 'Mer2GameInstance_C_FreshVariables::Object' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.SetDeadTime
// 0x0020 (0x0020 - 0x0000)
struct Mer2GameInstance_C_SetDeadTime final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_SetDeadTime) == 0x000008, "Wrong alignment on Mer2GameInstance_C_SetDeadTime");
static_assert(sizeof(Mer2GameInstance_C_SetDeadTime) == 0x000020, "Wrong size on Mer2GameInstance_C_SetDeadTime");
static_assert(offsetof(Mer2GameInstance_C_SetDeadTime, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'Mer2GameInstance_C_SetDeadTime::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetDeadTime, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'Mer2GameInstance_C_SetDeadTime::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetDeadTime, K2Node_DynamicCast_AsMer_2Game_State) == 0x000010, "Member 'Mer2GameInstance_C_SetDeadTime::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetDeadTime, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Mer2GameInstance_C_SetDeadTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetDeadTime, CallFunc_FTrunc_ReturnValue) == 0x00001C, "Member 'Mer2GameInstance_C_SetDeadTime::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.SetCurrentDifficulty
// 0x0160 (0x0160 - 0x0000)
struct Mer2GameInstance_C_SetCurrentDifficulty final
{
public:
	EnumDifficuty                                 _difficulty;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FscoreType                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0004(0x004C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FscoreType                             CallFunc_GetDataTableRowFromName_OutRow1;          // 0x0054(0x004C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue1;     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FscoreType                             CallFunc_GetDataTableRowFromName_OutRow2;          // 0x00BC(0x004C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue2;     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FscoreType                             CallFunc_GetDataTableRowFromName_OutRow3;          // 0x010C(0x004C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue3;     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mer2GameInstance_C_SetCurrentDifficulty) == 0x000008, "Wrong alignment on Mer2GameInstance_C_SetCurrentDifficulty");
static_assert(sizeof(Mer2GameInstance_C_SetCurrentDifficulty) == 0x000160, "Wrong size on Mer2GameInstance_C_SetCurrentDifficulty");
static_assert(offsetof(Mer2GameInstance_C_SetCurrentDifficulty, _difficulty) == 0x000000, "Member 'Mer2GameInstance_C_SetCurrentDifficulty::_difficulty' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetCurrentDifficulty, CallFunc_GetDataTableRowFromName_OutRow) == 0x000004, "Member 'Mer2GameInstance_C_SetCurrentDifficulty::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetCurrentDifficulty, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000050, "Member 'Mer2GameInstance_C_SetCurrentDifficulty::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetCurrentDifficulty, CallFunc_GetDataTableRowFromName_OutRow1) == 0x000054, "Member 'Mer2GameInstance_C_SetCurrentDifficulty::CallFunc_GetDataTableRowFromName_OutRow1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetCurrentDifficulty, CallFunc_GetDataTableRowFromName_ReturnValue1) == 0x0000A0, "Member 'Mer2GameInstance_C_SetCurrentDifficulty::CallFunc_GetDataTableRowFromName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetCurrentDifficulty, K2Node_SwitchEnum_CmpSuccess) == 0x0000A1, "Member 'Mer2GameInstance_C_SetCurrentDifficulty::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetCurrentDifficulty, CallFunc_GetGameState_ReturnValue) == 0x0000A8, "Member 'Mer2GameInstance_C_SetCurrentDifficulty::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetCurrentDifficulty, K2Node_DynamicCast_AsMer_2Game_State) == 0x0000B0, "Member 'Mer2GameInstance_C_SetCurrentDifficulty::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetCurrentDifficulty, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'Mer2GameInstance_C_SetCurrentDifficulty::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetCurrentDifficulty, CallFunc_GetDataTableRowFromName_OutRow2) == 0x0000BC, "Member 'Mer2GameInstance_C_SetCurrentDifficulty::CallFunc_GetDataTableRowFromName_OutRow2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetCurrentDifficulty, CallFunc_GetDataTableRowFromName_ReturnValue2) == 0x000108, "Member 'Mer2GameInstance_C_SetCurrentDifficulty::CallFunc_GetDataTableRowFromName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetCurrentDifficulty, CallFunc_GetDataTableRowFromName_OutRow3) == 0x00010C, "Member 'Mer2GameInstance_C_SetCurrentDifficulty::CallFunc_GetDataTableRowFromName_OutRow3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetCurrentDifficulty, CallFunc_GetDataTableRowFromName_ReturnValue3) == 0x000158, "Member 'Mer2GameInstance_C_SetCurrentDifficulty::CallFunc_GetDataTableRowFromName_ReturnValue3' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.GetTimeScore
// 0x0098 (0x0098 - 0x0000)
struct Mer2GameInstance_C_GetTimeScore final
{
public:
	int32                                         _score;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FscoreType                             CallFunc_GetLv1CurrentScoreType_ScoreType;         // 0x0010(0x004C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue1;                      // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_GetTimeScore) == 0x000008, "Wrong alignment on Mer2GameInstance_C_GetTimeScore");
static_assert(sizeof(Mer2GameInstance_C_GetTimeScore) == 0x000098, "Wrong size on Mer2GameInstance_C_GetTimeScore");
static_assert(offsetof(Mer2GameInstance_C_GetTimeScore, _score) == 0x000000, "Member 'Mer2GameInstance_C_GetTimeScore::_score' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTimeScore, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'Mer2GameInstance_C_GetTimeScore::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTimeScore, CallFunc_GetLv1CurrentScoreType_ScoreType) == 0x000010, "Member 'Mer2GameInstance_C_GetTimeScore::CallFunc_GetLv1CurrentScoreType_ScoreType' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTimeScore, K2Node_DynamicCast_AsMer_2Game_State) == 0x000060, "Member 'Mer2GameInstance_C_GetTimeScore::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTimeScore, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'Mer2GameInstance_C_GetTimeScore::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTimeScore, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000069, "Member 'Mer2GameInstance_C_GetTimeScore::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTimeScore, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00006C, "Member 'Mer2GameInstance_C_GetTimeScore::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTimeScore, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x000070, "Member 'Mer2GameInstance_C_GetTimeScore::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTimeScore, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000074, "Member 'Mer2GameInstance_C_GetTimeScore::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTimeScore, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000078, "Member 'Mer2GameInstance_C_GetTimeScore::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTimeScore, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00007C, "Member 'Mer2GameInstance_C_GetTimeScore::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTimeScore, CallFunc_FTrunc_ReturnValue) == 0x000080, "Member 'Mer2GameInstance_C_GetTimeScore::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTimeScore, CallFunc_Multiply_IntInt_ReturnValue) == 0x000084, "Member 'Mer2GameInstance_C_GetTimeScore::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTimeScore, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000088, "Member 'Mer2GameInstance_C_GetTimeScore::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTimeScore, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x00008C, "Member 'Mer2GameInstance_C_GetTimeScore::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetTimeScore, CallFunc_FTrunc_ReturnValue1) == 0x000090, "Member 'Mer2GameInstance_C_GetTimeScore::CallFunc_FTrunc_ReturnValue1' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.GetDodgoScore
// 0x00B8 (0x00B8 - 0x0000)
struct Mer2GameInstance_C_GetDodgoScore final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _score;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FscoreType                             CallFunc_GetLv1CurrentScoreType_ScoreType;         // 0x0010(0x004C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select1_Default;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue1;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue1;                      // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_GetDodgoScore) == 0x000008, "Wrong alignment on Mer2GameInstance_C_GetDodgoScore");
static_assert(sizeof(Mer2GameInstance_C_GetDodgoScore) == 0x0000B8, "Wrong size on Mer2GameInstance_C_GetDodgoScore");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, PlayerController) == 0x000000, "Member 'Mer2GameInstance_C_GetDodgoScore::PlayerController' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, _score) == 0x000008, "Member 'Mer2GameInstance_C_GetDodgoScore::_score' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, Temp_bool_Variable) == 0x00000C, "Member 'Mer2GameInstance_C_GetDodgoScore::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, CallFunc_IsLocalPlayerController_ReturnValue) == 0x00000D, "Member 'Mer2GameInstance_C_GetDodgoScore::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, CallFunc_GetLv1CurrentScoreType_ScoreType) == 0x000010, "Member 'Mer2GameInstance_C_GetDodgoScore::CallFunc_GetLv1CurrentScoreType_ScoreType' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, CallFunc_GetGameState_ReturnValue) == 0x000060, "Member 'Mer2GameInstance_C_GetDodgoScore::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, Temp_bool_Variable1) == 0x000068, "Member 'Mer2GameInstance_C_GetDodgoScore::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, K2Node_DynamicCast_AsMer_2Game_State) == 0x000070, "Member 'Mer2GameInstance_C_GetDodgoScore::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'Mer2GameInstance_C_GetDodgoScore::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, K2Node_Select_Default) == 0x00007C, "Member 'Mer2GameInstance_C_GetDodgoScore::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, CallFunc_Multiply_IntInt_ReturnValue) == 0x000080, "Member 'Mer2GameInstance_C_GetDodgoScore::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, CallFunc_Subtract_IntInt_ReturnValue) == 0x000084, "Member 'Mer2GameInstance_C_GetDodgoScore::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, CallFunc_Max_ReturnValue) == 0x000088, "Member 'Mer2GameInstance_C_GetDodgoScore::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, K2Node_Select1_Default) == 0x00008C, "Member 'Mer2GameInstance_C_GetDodgoScore::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000090, "Member 'Mer2GameInstance_C_GetDodgoScore::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x000091, "Member 'Mer2GameInstance_C_GetDodgoScore::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000094, "Member 'Mer2GameInstance_C_GetDodgoScore::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000098, "Member 'Mer2GameInstance_C_GetDodgoScore::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00009C, "Member 'Mer2GameInstance_C_GetDodgoScore::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000A0, "Member 'Mer2GameInstance_C_GetDodgoScore::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, CallFunc_FTrunc_ReturnValue) == 0x0000A4, "Member 'Mer2GameInstance_C_GetDodgoScore::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, CallFunc_Multiply_IntInt_ReturnValue1) == 0x0000A8, "Member 'Mer2GameInstance_C_GetDodgoScore::CallFunc_Multiply_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x0000AC, "Member 'Mer2GameInstance_C_GetDodgoScore::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0000B0, "Member 'Mer2GameInstance_C_GetDodgoScore::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetDodgoScore, CallFunc_FTrunc_ReturnValue1) == 0x0000B4, "Member 'Mer2GameInstance_C_GetDodgoScore::CallFunc_FTrunc_ReturnValue1' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.SetCurrentSoundLevel
// 0x0008 (0x0008 - 0x0000)
struct Mer2GameInstance_C_SetCurrentSoundLevel final
{
public:
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_SetCurrentSoundLevel) == 0x000004, "Wrong alignment on Mer2GameInstance_C_SetCurrentSoundLevel");
static_assert(sizeof(Mer2GameInstance_C_SetCurrentSoundLevel) == 0x000008, "Wrong size on Mer2GameInstance_C_SetCurrentSoundLevel");
static_assert(offsetof(Mer2GameInstance_C_SetCurrentSoundLevel, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000000, "Member 'Mer2GameInstance_C_SetCurrentSoundLevel::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_SetCurrentSoundLevel, CallFunc_MapRangeClamped_ReturnValue) == 0x000004, "Member 'Mer2GameInstance_C_SetCurrentSoundLevel::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.GetCurrentDodgoScore
// 0x00B0 (0x00B0 - 0x0000)
struct Mer2GameInstance_C_GetCurrentDodgoScore final
{
public:
	bool                                          Is1P;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _score;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FscoreType                             CallFunc_GetLv1CurrentScoreType_ScoreType;         // 0x0018(0x004C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select1_Default;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue1;             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue1;                      // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_GetCurrentDodgoScore) == 0x000008, "Wrong alignment on Mer2GameInstance_C_GetCurrentDodgoScore");
static_assert(sizeof(Mer2GameInstance_C_GetCurrentDodgoScore) == 0x0000B0, "Wrong size on Mer2GameInstance_C_GetCurrentDodgoScore");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, Is1P) == 0x000000, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::Is1P' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, _score) == 0x000004, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::_score' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, Temp_bool_Variable) == 0x000008, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, Temp_bool_Variable1) == 0x000009, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, CallFunc_GetLv1CurrentScoreType_ScoreType) == 0x000018, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::CallFunc_GetLv1CurrentScoreType_ScoreType' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, K2Node_DynamicCast_AsMer_2Game_State) == 0x000068, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, K2Node_Select_Default) == 0x000074, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000078, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x000079, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00007C, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000080, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000084, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, K2Node_Select1_Default) == 0x000088, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00008C, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, CallFunc_Multiply_IntInt_ReturnValue) == 0x000090, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, CallFunc_FTrunc_ReturnValue) == 0x000094, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, CallFunc_Subtract_IntInt_ReturnValue) == 0x000098, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, CallFunc_Max_ReturnValue) == 0x00009C, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, CallFunc_Multiply_IntInt_ReturnValue1) == 0x0000A0, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::CallFunc_Multiply_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x0000A4, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0000A8, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentDodgoScore, CallFunc_FTrunc_ReturnValue1) == 0x0000AC, "Member 'Mer2GameInstance_C_GetCurrentDodgoScore::CallFunc_FTrunc_ReturnValue1' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.GetCurrentTimeScore
// 0x0090 (0x0090 - 0x0000)
struct Mer2GameInstance_C_GetCurrentTimeScore final
{
public:
	int32                                         _score;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FscoreType                             CallFunc_GetLv1CurrentScoreType_ScoreType;         // 0x0004(0x004C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue1;                      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_GetCurrentTimeScore) == 0x000008, "Wrong alignment on Mer2GameInstance_C_GetCurrentTimeScore");
static_assert(sizeof(Mer2GameInstance_C_GetCurrentTimeScore) == 0x000090, "Wrong size on Mer2GameInstance_C_GetCurrentTimeScore");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentTimeScore, _score) == 0x000000, "Member 'Mer2GameInstance_C_GetCurrentTimeScore::_score' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentTimeScore, CallFunc_GetLv1CurrentScoreType_ScoreType) == 0x000004, "Member 'Mer2GameInstance_C_GetCurrentTimeScore::CallFunc_GetLv1CurrentScoreType_ScoreType' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentTimeScore, CallFunc_GetGameState_ReturnValue) == 0x000050, "Member 'Mer2GameInstance_C_GetCurrentTimeScore::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentTimeScore, K2Node_DynamicCast_AsMer_2Game_State) == 0x000058, "Member 'Mer2GameInstance_C_GetCurrentTimeScore::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentTimeScore, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'Mer2GameInstance_C_GetCurrentTimeScore::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentTimeScore, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000064, "Member 'Mer2GameInstance_C_GetCurrentTimeScore::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentTimeScore, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000068, "Member 'Mer2GameInstance_C_GetCurrentTimeScore::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentTimeScore, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x00006C, "Member 'Mer2GameInstance_C_GetCurrentTimeScore::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentTimeScore, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x000070, "Member 'Mer2GameInstance_C_GetCurrentTimeScore::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentTimeScore, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000074, "Member 'Mer2GameInstance_C_GetCurrentTimeScore::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentTimeScore, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000078, "Member 'Mer2GameInstance_C_GetCurrentTimeScore::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentTimeScore, CallFunc_FTrunc_ReturnValue) == 0x00007C, "Member 'Mer2GameInstance_C_GetCurrentTimeScore::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentTimeScore, CallFunc_Multiply_IntInt_ReturnValue) == 0x000080, "Member 'Mer2GameInstance_C_GetCurrentTimeScore::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentTimeScore, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000084, "Member 'Mer2GameInstance_C_GetCurrentTimeScore::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentTimeScore, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000088, "Member 'Mer2GameInstance_C_GetCurrentTimeScore::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetCurrentTimeScore, CallFunc_FTrunc_ReturnValue1) == 0x00008C, "Member 'Mer2GameInstance_C_GetCurrentTimeScore::CallFunc_FTrunc_ReturnValue1' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.AddFrame
// 0x0150 (0x0150 - 0x0000)
struct Mer2GameInstance_C_AddFrame final
{
public:
	bool                                          Is2P;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Is1P;                                              // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable1;                             // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable2;                             // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable3;                             // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue1;            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select1_Default;                            // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select2_Default;                            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue1;                // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue1;            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue1;                         // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_AddFrame) == 0x000008, "Wrong alignment on Mer2GameInstance_C_AddFrame");
static_assert(sizeof(Mer2GameInstance_C_AddFrame) == 0x000150, "Wrong size on Mer2GameInstance_C_AddFrame");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, Is2P) == 0x000000, "Member 'Mer2GameInstance_C_AddFrame::Is2P' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, Is1P) == 0x000001, "Member 'Mer2GameInstance_C_AddFrame::Is1P' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, Temp_bool_Variable) == 0x000002, "Member 'Mer2GameInstance_C_AddFrame::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, Temp_struct_Variable) == 0x000004, "Member 'Mer2GameInstance_C_AddFrame::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, Temp_struct_Variable1) == 0x000014, "Member 'Mer2GameInstance_C_AddFrame::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, Temp_bool_Variable1) == 0x000030, "Member 'Mer2GameInstance_C_AddFrame::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, K2Node_DynamicCast_AsMer_2Game_State) == 0x000038, "Member 'Mer2GameInstance_C_AddFrame::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Mer2GameInstance_C_AddFrame::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, Temp_bool_Variable2) == 0x000041, "Member 'Mer2GameInstance_C_AddFrame::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'Mer2GameInstance_C_AddFrame::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'Mer2GameInstance_C_AddFrame::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, Temp_struct_Variable2) == 0x000050, "Member 'Mer2GameInstance_C_AddFrame::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, Temp_struct_Variable3) == 0x000060, "Member 'Mer2GameInstance_C_AddFrame::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, Temp_int_Variable) == 0x000070, "Member 'Mer2GameInstance_C_AddFrame::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000074, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_Conv_IntToString_ReturnValue) == 0x000078, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, K2Node_Select_Default) == 0x000098, "Member 'Mer2GameInstance_C_AddFrame::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_IsServer_ReturnValue) == 0x0000A8, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x0000A9, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_Conv_IntToString_ReturnValue1) == 0x0000B0, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_Conv_IntToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_Concat_StrStr_ReturnValue1) == 0x0000C0, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, K2Node_Select1_Default) == 0x0000D0, "Member 'Mer2GameInstance_C_AddFrame::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_Less_IntInt_ReturnValue) == 0x0000F4, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_GetSubstring_ReturnValue) == 0x0000F8, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_Conv_StringToInt_ReturnValue) == 0x000108, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_Len_ReturnValue) == 0x00010C, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x000110, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_FindSubstring_ReturnValue) == 0x000114, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_Subtract_IntInt_ReturnValue) == 0x000118, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, K2Node_Select2_Default) == 0x00011C, "Member 'Mer2GameInstance_C_AddFrame::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_Add_IntInt_ReturnValue1) == 0x000120, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_GetSubstring_ReturnValue1) == 0x000128, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_GetSubstring_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_Conv_StringToInt_ReturnValue1) == 0x000138, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_Conv_StringToInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_Add_IntInt_ReturnValue2) == 0x00013C, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_Array_Length_ReturnValue1) == 0x000140, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_Len_ReturnValue1) == 0x000144, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_Len_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_Greater_IntInt_ReturnValue) == 0x000148, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_Greater_IntInt_ReturnValue1) == 0x000149, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddFrame, CallFunc_Add_IntInt_ReturnValue3) == 0x00014C, "Member 'Mer2GameInstance_C_AddFrame::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.UpdatePrintMsg
// 0x01A8 (0x01A8 - 0x0000)
struct Mer2GameInstance_C_UpdatePrintMsg final
{
public:
	EnumScoreType                                 scoreType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FscoreType                             ScoreConfig;                                       // 0x0004(0x004C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocal;                                           // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable1;                             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EnumScoreType                                 Temp_byte_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EnumScoreType                                 Temp_byte_Variable1;                               // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select1_Default;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable2;                             // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable3;                             // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable4;                             // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable5;                             // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable6;                             // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable7;                             // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable8;                             // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable9;                             // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable10;                            // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable11;                            // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable12;                            // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable13;                            // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select2_Default;                            // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_UpdatePrintMsg) == 0x000008, "Wrong alignment on Mer2GameInstance_C_UpdatePrintMsg");
static_assert(sizeof(Mer2GameInstance_C_UpdatePrintMsg) == 0x0001A8, "Wrong size on Mer2GameInstance_C_UpdatePrintMsg");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, scoreType) == 0x000000, "Member 'Mer2GameInstance_C_UpdatePrintMsg::scoreType' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, ScoreConfig) == 0x000004, "Member 'Mer2GameInstance_C_UpdatePrintMsg::ScoreConfig' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, IsLocal) == 0x000050, "Member 'Mer2GameInstance_C_UpdatePrintMsg::IsLocal' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, Temp_bool_Variable) == 0x000051, "Member 'Mer2GameInstance_C_UpdatePrintMsg::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, Temp_string_Variable) == 0x000058, "Member 'Mer2GameInstance_C_UpdatePrintMsg::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, Temp_string_Variable1) == 0x000068, "Member 'Mer2GameInstance_C_UpdatePrintMsg::Temp_string_Variable1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, Temp_byte_Variable) == 0x000078, "Member 'Mer2GameInstance_C_UpdatePrintMsg::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, K2Node_Select_Default) == 0x000080, "Member 'Mer2GameInstance_C_UpdatePrintMsg::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, Temp_int_Variable) == 0x000090, "Member 'Mer2GameInstance_C_UpdatePrintMsg::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, Temp_byte_Variable1) == 0x000094, "Member 'Mer2GameInstance_C_UpdatePrintMsg::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, K2Node_Select1_Default) == 0x000098, "Member 'Mer2GameInstance_C_UpdatePrintMsg::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, Temp_string_Variable2) == 0x0000A0, "Member 'Mer2GameInstance_C_UpdatePrintMsg::Temp_string_Variable2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, CallFunc_Conv_IntToString_ReturnValue) == 0x0000B0, "Member 'Mer2GameInstance_C_UpdatePrintMsg::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, Temp_string_Variable3) == 0x0000C0, "Member 'Mer2GameInstance_C_UpdatePrintMsg::Temp_string_Variable3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, Temp_string_Variable4) == 0x0000D0, "Member 'Mer2GameInstance_C_UpdatePrintMsg::Temp_string_Variable4' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, Temp_string_Variable5) == 0x0000E0, "Member 'Mer2GameInstance_C_UpdatePrintMsg::Temp_string_Variable5' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, Temp_string_Variable6) == 0x0000F0, "Member 'Mer2GameInstance_C_UpdatePrintMsg::Temp_string_Variable6' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, Temp_string_Variable7) == 0x000100, "Member 'Mer2GameInstance_C_UpdatePrintMsg::Temp_string_Variable7' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, Temp_string_Variable8) == 0x000110, "Member 'Mer2GameInstance_C_UpdatePrintMsg::Temp_string_Variable8' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, Temp_string_Variable9) == 0x000120, "Member 'Mer2GameInstance_C_UpdatePrintMsg::Temp_string_Variable9' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, Temp_string_Variable10) == 0x000130, "Member 'Mer2GameInstance_C_UpdatePrintMsg::Temp_string_Variable10' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, Temp_string_Variable11) == 0x000140, "Member 'Mer2GameInstance_C_UpdatePrintMsg::Temp_string_Variable11' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, Temp_string_Variable12) == 0x000150, "Member 'Mer2GameInstance_C_UpdatePrintMsg::Temp_string_Variable12' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, Temp_string_Variable13) == 0x000160, "Member 'Mer2GameInstance_C_UpdatePrintMsg::Temp_string_Variable13' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, K2Node_Select2_Default) == 0x000170, "Member 'Mer2GameInstance_C_UpdatePrintMsg::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, CallFunc_Concat_StrStr_ReturnValue) == 0x000180, "Member 'Mer2GameInstance_C_UpdatePrintMsg::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, CallFunc_Concat_StrStr_ReturnValue1) == 0x000190, "Member 'Mer2GameInstance_C_UpdatePrintMsg::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_UpdatePrintMsg, CallFunc_Array_Add_ReturnValue) == 0x0001A0, "Member 'Mer2GameInstance_C_UpdatePrintMsg::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.AddLv2Score
// 0x0128 (0x0128 - 0x0000)
struct Mer2GameInstance_C_AddLv2Score final
{
public:
	ELv2_ScoreType                                scoreType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Difficult;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddScore;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable1;                                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue1;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLv2ScoreType                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0054(0x0028)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue1;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State1;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue3;             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue1;                      // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue2;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue3;             // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue2;                // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State2;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue1;             // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue1;                       // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue4;             // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue4;             // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue1;           // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue2;                      // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue2;                       // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameInstance_C_AddLv2Score) == 0x000008, "Wrong alignment on Mer2GameInstance_C_AddLv2Score");
static_assert(sizeof(Mer2GameInstance_C_AddLv2Score) == 0x000128, "Wrong size on Mer2GameInstance_C_AddLv2Score");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, scoreType) == 0x000000, "Member 'Mer2GameInstance_C_AddLv2Score::scoreType' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, PlayerController) == 0x000008, "Member 'Mer2GameInstance_C_AddLv2Score::PlayerController' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, Difficult) == 0x000010, "Member 'Mer2GameInstance_C_AddLv2Score::Difficult' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, AddScore) == 0x000018, "Member 'Mer2GameInstance_C_AddLv2Score::AddScore' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, Temp_int_Variable) == 0x00001C, "Member 'Mer2GameInstance_C_AddLv2Score::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000021, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, K2Node_SwitchEnum_CmpSuccess) == 0x000022, "Member 'Mer2GameInstance_C_AddLv2Score::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, Temp_int_Variable1) == 0x000024, "Member 'Mer2GameInstance_C_AddLv2Score::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_GreaterEqual_IntInt_ReturnValue1) == 0x000028, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_GreaterEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_GetGameState_ReturnValue) == 0x000030, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, K2Node_DynamicCast_AsMer_2Game_State) == 0x000038, "Member 'Mer2GameInstance_C_AddLv2Score::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Mer2GameInstance_C_AddLv2Score::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Add_IntInt_ReturnValue1) == 0x000048, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Add_IntInt_ReturnValue2) == 0x00004C, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000050, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_GetDataTableRowFromName_OutRow) == 0x000054, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x00007C, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_GetGameState_ReturnValue1) == 0x000080, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_GetGameState_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, K2Node_SwitchEnum1_CmpSuccess) == 0x000088, "Member 'Mer2GameInstance_C_AddLv2Score::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, K2Node_DynamicCast_AsMer_2Game_State1) == 0x000090, "Member 'Mer2GameInstance_C_AddLv2Score::K2Node_DynamicCast_AsMer_2Game_State1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, K2Node_DynamicCast_bSuccess1) == 0x000098, "Member 'Mer2GameInstance_C_AddLv2Score::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Subtract_IntInt_ReturnValue) == 0x00009C, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000A0, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Add_IntInt_ReturnValue3) == 0x0000A4, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000A8, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x0000AC, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Subtract_IntInt_ReturnValue1) == 0x0000B0, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x0000B4, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Conv_IntToFloat_ReturnValue3) == 0x0000B8, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Conv_IntToFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000BC, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x0000C0, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000C4, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C8, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_FTrunc_ReturnValue) == 0x0000CC, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_FTrunc_ReturnValue1) == 0x0000D0, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_FTrunc_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Clamp_ReturnValue) == 0x0000D4, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Subtract_IntInt_ReturnValue2) == 0x0000D8, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, Temp_int_Variable2) == 0x0000DC, "Member 'Mer2GameInstance_C_AddLv2Score::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_GreaterEqual_IntInt_ReturnValue2) == 0x0000E0, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_GreaterEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Subtract_IntInt_ReturnValue3) == 0x0000E4, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Subtract_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_GetGameState_ReturnValue2) == 0x0000E8, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_GetGameState_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, K2Node_DynamicCast_AsMer_2Game_State2) == 0x0000F0, "Member 'Mer2GameInstance_C_AddLv2Score::K2Node_DynamicCast_AsMer_2Game_State2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, K2Node_DynamicCast_bSuccess2) == 0x0000F8, "Member 'Mer2GameInstance_C_AddLv2Score::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, Temp_bool_Variable) == 0x0000F9, "Member 'Mer2GameInstance_C_AddLv2Score::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Multiply_IntInt_ReturnValue1) == 0x0000FC, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Multiply_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, K2Node_Select_Default) == 0x000100, "Member 'Mer2GameInstance_C_AddLv2Score::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Add_IntInt_ReturnValue4) == 0x000104, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Add_IntInt_ReturnValue5) == 0x000108, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Clamp_ReturnValue1) == 0x00010C, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Clamp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Subtract_IntInt_ReturnValue4) == 0x000110, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Subtract_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Conv_IntToFloat_ReturnValue4) == 0x000114, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Conv_IntToFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x000118, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Multiply_IntFloat_ReturnValue1) == 0x00011C, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Multiply_IntFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_FTrunc_ReturnValue2) == 0x000120, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_FTrunc_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv2Score, CallFunc_Clamp_ReturnValue2) == 0x000124, "Member 'Mer2GameInstance_C_AddLv2Score::CallFunc_Clamp_ReturnValue2' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.GetLv1CurrentScoreType
// 0x0068 (0x0068 - 0x0000)
struct Mer2GameInstance_C_GetLv1CurrentScoreType final
{
public:
	struct FscoreType                             scoreType;                                         // 0x0000(0x004C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mer2GameInstance_C_GetLv1CurrentScoreType) == 0x000008, "Wrong alignment on Mer2GameInstance_C_GetLv1CurrentScoreType");
static_assert(sizeof(Mer2GameInstance_C_GetLv1CurrentScoreType) == 0x000068, "Wrong size on Mer2GameInstance_C_GetLv1CurrentScoreType");
static_assert(offsetof(Mer2GameInstance_C_GetLv1CurrentScoreType, scoreType) == 0x000000, "Member 'Mer2GameInstance_C_GetLv1CurrentScoreType::scoreType' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetLv1CurrentScoreType, CallFunc_GetGameState_ReturnValue) == 0x000050, "Member 'Mer2GameInstance_C_GetLv1CurrentScoreType::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetLv1CurrentScoreType, K2Node_DynamicCast_AsMer_2Game_State) == 0x000058, "Member 'Mer2GameInstance_C_GetLv1CurrentScoreType::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_GetLv1CurrentScoreType, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'Mer2GameInstance_C_GetLv1CurrentScoreType::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Mer2GameInstance.Mer2GameInstance_C.AddLv4Score
// 0x00B0 (0x00B0 - 0x0000)
struct Mer2GameInstance_C_AddLv4Score final
{
public:
	ELv4_ScoreType                                Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 scoreType;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         AddScore;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Difficult;                                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLv4ScoreType                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x007C(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mer2GameInstance_C_AddLv4Score) == 0x000008, "Wrong alignment on Mer2GameInstance_C_AddLv4Score");
static_assert(sizeof(Mer2GameInstance_C_AddLv4Score) == 0x0000B0, "Wrong size on Mer2GameInstance_C_AddLv4Score");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, Type) == 0x000000, "Member 'Mer2GameInstance_C_AddLv4Score::Type' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, scoreType) == 0x000008, "Member 'Mer2GameInstance_C_AddLv4Score::scoreType' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, AddScore) == 0x000018, "Member 'Mer2GameInstance_C_AddLv4Score::AddScore' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, Difficult) == 0x000020, "Member 'Mer2GameInstance_C_AddLv4Score::Difficult' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'Mer2GameInstance_C_AddLv4Score::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, K2Node_SwitchEnum1_CmpSuccess) == 0x000029, "Member 'Mer2GameInstance_C_AddLv4Score::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, CallFunc_GetGameState_ReturnValue) == 0x000030, "Member 'Mer2GameInstance_C_AddLv4Score::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, K2Node_DynamicCast_AsMer_2Game_State) == 0x000038, "Member 'Mer2GameInstance_C_AddLv4Score::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Mer2GameInstance_C_AddLv4Score::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, CallFunc_Conv_IntToString_ReturnValue) == 0x000048, "Member 'Mer2GameInstance_C_AddLv4Score::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'Mer2GameInstance_C_AddLv4Score::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, CallFunc_Add_IntInt_ReturnValue1) == 0x00005C, "Member 'Mer2GameInstance_C_AddLv4Score::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, CallFunc_Add_IntInt_ReturnValue2) == 0x000060, "Member 'Mer2GameInstance_C_AddLv4Score::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, CallFunc_Add_IntInt_ReturnValue3) == 0x000064, "Member 'Mer2GameInstance_C_AddLv4Score::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'Mer2GameInstance_C_AddLv4Score::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, Temp_bool_Variable) == 0x000078, "Member 'Mer2GameInstance_C_AddLv4Score::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, CallFunc_GetDataTableRowFromName_OutRow) == 0x00007C, "Member 'Mer2GameInstance_C_AddLv4Score::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x00009C, "Member 'Mer2GameInstance_C_AddLv4Score::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, K2Node_Select_Default) == 0x0000A0, "Member 'Mer2GameInstance_C_AddLv4Score::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, CallFunc_Add_IntInt_ReturnValue4) == 0x0000A4, "Member 'Mer2GameInstance_C_AddLv4Score::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, CallFunc_Clamp_ReturnValue) == 0x0000A8, "Member 'Mer2GameInstance_C_AddLv4Score::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameInstance_C_AddLv4Score, K2Node_SwitchEnum2_CmpSuccess) == 0x0000AC, "Member 'Mer2GameInstance_C_AddLv4Score::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");

}


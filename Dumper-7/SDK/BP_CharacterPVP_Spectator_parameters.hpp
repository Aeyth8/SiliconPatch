#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterPVP_Spectator

#include "Basic.hpp"

#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_CharacterPVP_Spectator.BP_CharacterPVP_Spectator_C.ExecuteUbergraph_BP_CharacterPVP_Spectator
// 0x0048 (0x0048 - 0x0000)
struct BP_CharacterPVP_Spectator_C_ExecuteUbergraph_BP_CharacterPVP_Spectator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterPVP_Base_C*                CallFunc_FindEmptyChar_Char;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0030(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Spectator_C_ExecuteUbergraph_BP_CharacterPVP_Spectator) == 0x000008, "Wrong alignment on BP_CharacterPVP_Spectator_C_ExecuteUbergraph_BP_CharacterPVP_Spectator");
static_assert(sizeof(BP_CharacterPVP_Spectator_C_ExecuteUbergraph_BP_CharacterPVP_Spectator) == 0x000048, "Wrong size on BP_CharacterPVP_Spectator_C_ExecuteUbergraph_BP_CharacterPVP_Spectator");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_ExecuteUbergraph_BP_CharacterPVP_Spectator, EntryPoint) == 0x000000, "Member 'BP_CharacterPVP_Spectator_C_ExecuteUbergraph_BP_CharacterPVP_Spectator::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_ExecuteUbergraph_BP_CharacterPVP_Spectator, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BP_CharacterPVP_Spectator_C_ExecuteUbergraph_BP_CharacterPVP_Spectator::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_ExecuteUbergraph_BP_CharacterPVP_Spectator, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_CharacterPVP_Spectator_C_ExecuteUbergraph_BP_CharacterPVP_Spectator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_ExecuteUbergraph_BP_CharacterPVP_Spectator, K2Node_DynamicCast_AsPlayer_Controller) == 0x000018, "Member 'BP_CharacterPVP_Spectator_C_ExecuteUbergraph_BP_CharacterPVP_Spectator::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_ExecuteUbergraph_BP_CharacterPVP_Spectator, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_CharacterPVP_Spectator_C_ExecuteUbergraph_BP_CharacterPVP_Spectator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_ExecuteUbergraph_BP_CharacterPVP_Spectator, CallFunc_FindEmptyChar_Char) == 0x000028, "Member 'BP_CharacterPVP_Spectator_C_ExecuteUbergraph_BP_CharacterPVP_Spectator::CallFunc_FindEmptyChar_Char' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_ExecuteUbergraph_BP_CharacterPVP_Spectator, K2Node_InputKeyEvent_Key) == 0x000030, "Member 'BP_CharacterPVP_Spectator_C_ExecuteUbergraph_BP_CharacterPVP_Spectator::K2Node_InputKeyEvent_Key' has a wrong offset!");

// Function BP_CharacterPVP_Spectator.BP_CharacterPVP_Spectator_C.InpActEvt_Decimal_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Spectator_C_InpActEvt_Decimal_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Spectator_C_InpActEvt_Decimal_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_CharacterPVP_Spectator_C_InpActEvt_Decimal_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_CharacterPVP_Spectator_C_InpActEvt_Decimal_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_CharacterPVP_Spectator_C_InpActEvt_Decimal_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_InpActEvt_Decimal_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_CharacterPVP_Spectator_C_InpActEvt_Decimal_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_CharacterPVP_Spectator.BP_CharacterPVP_Spectator_C.FindEmptyChar
// 0x0068 (0x0068 - 0x0000)
struct BP_CharacterPVP_Spectator_C_FindEmptyChar final
{
public:
	class ABP_CharacterPVP_Base_C*                Char;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterPVP_Base_C*                Temp;                                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CharacterPVP_Base_C*>        CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterPVP_Base_C*                CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMer2_PVP_PlayerController*             K2Node_DynamicCast_AsMer_2_PVP_Player_Controller;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Spectator_C_FindEmptyChar) == 0x000008, "Wrong alignment on BP_CharacterPVP_Spectator_C_FindEmptyChar");
static_assert(sizeof(BP_CharacterPVP_Spectator_C_FindEmptyChar) == 0x000068, "Wrong size on BP_CharacterPVP_Spectator_C_FindEmptyChar");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_FindEmptyChar, Char) == 0x000000, "Member 'BP_CharacterPVP_Spectator_C_FindEmptyChar::Char' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_FindEmptyChar, Temp) == 0x000008, "Member 'BP_CharacterPVP_Spectator_C_FindEmptyChar::Temp' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_FindEmptyChar, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'BP_CharacterPVP_Spectator_C_FindEmptyChar::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_FindEmptyChar, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_CharacterPVP_Spectator_C_FindEmptyChar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_FindEmptyChar, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_CharacterPVP_Spectator_C_FindEmptyChar::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_FindEmptyChar, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_CharacterPVP_Spectator_C_FindEmptyChar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_FindEmptyChar, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_CharacterPVP_Spectator_C_FindEmptyChar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_FindEmptyChar, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'BP_CharacterPVP_Spectator_C_FindEmptyChar::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_FindEmptyChar, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_CharacterPVP_Spectator_C_FindEmptyChar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_FindEmptyChar, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_CharacterPVP_Spectator_C_FindEmptyChar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_FindEmptyChar, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_CharacterPVP_Spectator_C_FindEmptyChar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_FindEmptyChar, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'BP_CharacterPVP_Spectator_C_FindEmptyChar::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_FindEmptyChar, CallFunc_GetController_ReturnValue) == 0x000050, "Member 'BP_CharacterPVP_Spectator_C_FindEmptyChar::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_FindEmptyChar, K2Node_DynamicCast_AsMer_2_PVP_Player_Controller) == 0x000058, "Member 'BP_CharacterPVP_Spectator_C_FindEmptyChar::K2Node_DynamicCast_AsMer_2_PVP_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Spectator_C_FindEmptyChar, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_CharacterPVP_Spectator_C_FindEmptyChar::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AISpawnerNEW

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AISpawnerNEW.BP_AISpawnerNEW_C.ExecuteUbergraph_BP_AISpawnerNEW
// 0x0148 (0x0148 - 0x0000)
struct BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue5;               // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue6;               // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue7;               // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWaitDelay_Result;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_Base_C*                         CallFunc_SpwanAI_NPC;                              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPreviousDead_Result;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent__index;                         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue8;               // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue9;               // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue10;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue11;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue1;          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AISpawnerNEW_C*                     CallFunc_GetSpawnerFromIndex_Spawner;              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW) == 0x000008, "Wrong alignment on BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW");
static_assert(sizeof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW) == 0x000148, "Wrong size on BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, EntryPoint) == 0x000000, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Concat_StrStr_ReturnValue) == 0x000008, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Concat_StrStr_ReturnValue1) == 0x000028, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Concat_StrStr_ReturnValue2) == 0x000038, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_GetDisplayName_ReturnValue1) == 0x000048, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_GetDisplayName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Concat_StrStr_ReturnValue3) == 0x000058, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, K2Node_Event_DeltaSeconds) == 0x000068, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Not_PreBool_ReturnValue) == 0x00006C, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Concat_StrStr_ReturnValue4) == 0x000070, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Concat_StrStr_ReturnValue5) == 0x000080, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Concat_StrStr_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Concat_StrStr_ReturnValue6) == 0x000090, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Concat_StrStr_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Concat_StrStr_ReturnValue7) == 0x0000A0, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Concat_StrStr_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_IsWaitDelay_Result) == 0x0000B0, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_IsWaitDelay_Result' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Not_PreBool_ReturnValue1) == 0x0000B1, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_SpwanAI_NPC) == 0x0000B8, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_SpwanAI_NPC' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_IsPreviousDead_Result) == 0x0000C0, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_IsPreviousDead_Result' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, K2Node_CustomEvent__index) == 0x0000C4, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::K2Node_CustomEvent__index' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000CC, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Concat_StrStr_ReturnValue8) == 0x0000D0, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Concat_StrStr_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Concat_StrStr_ReturnValue9) == 0x0000E0, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Concat_StrStr_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Concat_StrStr_ReturnValue10) == 0x0000F0, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Concat_StrStr_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Concat_StrStr_ReturnValue11) == 0x000100, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Concat_StrStr_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_RandomFloatInRange_ReturnValue) == 0x000110, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_RandomFloatInRange_ReturnValue1) == 0x000114, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_RandomFloatInRange_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, K2Node_SwitchEnum_CmpSuccess) == 0x000118, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_IsValid_ReturnValue) == 0x000119, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Array_Length_ReturnValue) == 0x00011C, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000120, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_IsValidClass_ReturnValue) == 0x000121, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Add_IntInt_ReturnValue) == 0x000124, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Less_IntInt_ReturnValue) == 0x000128, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Add_IntInt_ReturnValue1) == 0x00012C, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_Less_IntInt_ReturnValue1) == 0x000130, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_GetSpawnerFromIndex_Spawner) == 0x000138, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_GetSpawnerFromIndex_Spawner' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_IsValid_ReturnValue1) == 0x000140, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x000141, "Member 'BP_AISpawnerNEW_C_ExecuteUbergraph_BP_AISpawnerNEW::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");

// Function BP_AISpawnerNEW.BP_AISpawnerNEW_C.InitSpawner
// 0x0004 (0x0004 - 0x0000)
struct BP_AISpawnerNEW_C_InitSpawner final
{
public:
	int32                                         _index;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawnerNEW_C_InitSpawner) == 0x000004, "Wrong alignment on BP_AISpawnerNEW_C_InitSpawner");
static_assert(sizeof(BP_AISpawnerNEW_C_InitSpawner) == 0x000004, "Wrong size on BP_AISpawnerNEW_C_InitSpawner");
static_assert(offsetof(BP_AISpawnerNEW_C_InitSpawner, _index) == 0x000000, "Member 'BP_AISpawnerNEW_C_InitSpawner::_index' has a wrong offset!");

// Function BP_AISpawnerNEW.BP_AISpawnerNEW_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AISpawnerNEW_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawnerNEW_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AISpawnerNEW_C_ReceiveTick");
static_assert(sizeof(BP_AISpawnerNEW_C_ReceiveTick) == 0x000004, "Wrong size on BP_AISpawnerNEW_C_ReceiveTick");
static_assert(offsetof(BP_AISpawnerNEW_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AISpawnerNEW_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AISpawnerNEW.BP_AISpawnerNEW_C.GetSpawnCountLeft
// 0x0008 (0x0008 - 0x0000)
struct BP_AISpawnerNEW_C_GetSpawnCountLeft final
{
public:
	int32                                         CountLeft;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawnerNEW_C_GetSpawnCountLeft) == 0x000004, "Wrong alignment on BP_AISpawnerNEW_C_GetSpawnCountLeft");
static_assert(sizeof(BP_AISpawnerNEW_C_GetSpawnCountLeft) == 0x000008, "Wrong size on BP_AISpawnerNEW_C_GetSpawnCountLeft");
static_assert(offsetof(BP_AISpawnerNEW_C_GetSpawnCountLeft, CountLeft) == 0x000000, "Member 'BP_AISpawnerNEW_C_GetSpawnCountLeft::CountLeft' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_GetSpawnCountLeft, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BP_AISpawnerNEW_C_GetSpawnCountLeft::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AISpawnerNEW.BP_AISpawnerNEW_C.IsWaitDelay
// 0x0014 (0x0014 - 0x0000)
struct BP_AISpawnerNEW_C_IsWaitDelay final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AISpawnerNEW_C_IsWaitDelay) == 0x000004, "Wrong alignment on BP_AISpawnerNEW_C_IsWaitDelay");
static_assert(sizeof(BP_AISpawnerNEW_C_IsWaitDelay) == 0x000014, "Wrong size on BP_AISpawnerNEW_C_IsWaitDelay");
static_assert(offsetof(BP_AISpawnerNEW_C_IsWaitDelay, DeltaTime) == 0x000000, "Member 'BP_AISpawnerNEW_C_IsWaitDelay::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_IsWaitDelay, Result) == 0x000004, "Member 'BP_AISpawnerNEW_C_IsWaitDelay::Result' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_IsWaitDelay, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'BP_AISpawnerNEW_C_IsWaitDelay::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_IsWaitDelay, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_AISpawnerNEW_C_IsWaitDelay::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_IsWaitDelay, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_AISpawnerNEW_C_IsWaitDelay::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AISpawnerNEW.BP_AISpawnerNEW_C.IsPreviousDead
// 0x0003 (0x0003 - 0x0000)
struct BP_AISpawnerNEW_C_IsPreviousDead final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          tempResult;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AISpawnerNEW_C_IsPreviousDead) == 0x000001, "Wrong alignment on BP_AISpawnerNEW_C_IsPreviousDead");
static_assert(sizeof(BP_AISpawnerNEW_C_IsPreviousDead) == 0x000003, "Wrong size on BP_AISpawnerNEW_C_IsPreviousDead");
static_assert(offsetof(BP_AISpawnerNEW_C_IsPreviousDead, Result) == 0x000000, "Member 'BP_AISpawnerNEW_C_IsPreviousDead::Result' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_IsPreviousDead, tempResult) == 0x000001, "Member 'BP_AISpawnerNEW_C_IsPreviousDead::tempResult' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_IsPreviousDead, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_AISpawnerNEW_C_IsPreviousDead::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AISpawnerNEW.BP_AISpawnerNEW_C.SpwanAI
// 0x00D0 (0x00D0 - 0x0000)
struct BP_AISpawnerNEW_C_SpwanAI final
{
public:
	bool                                          Retry;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_Base_C*                         NPC;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtSplinePoint_ReturnValue;     // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue;     // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NPC_Base_C*                         CallFunc_SpwanAI_NPC;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_Base_C*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSpawnCountLeft_CountLeft;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawnerNEW_C_SpwanAI) == 0x000010, "Wrong alignment on BP_AISpawnerNEW_C_SpwanAI");
static_assert(sizeof(BP_AISpawnerNEW_C_SpwanAI) == 0x0000D0, "Wrong size on BP_AISpawnerNEW_C_SpwanAI");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, Retry) == 0x000000, "Member 'BP_AISpawnerNEW_C_SpwanAI::Retry' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, NPC) == 0x000008, "Member 'BP_AISpawnerNEW_C_SpwanAI::NPC' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, TargetLocation) == 0x000010, "Member 'BP_AISpawnerNEW_C_SpwanAI::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_AISpawnerNEW_C_SpwanAI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BP_AISpawnerNEW_C_SpwanAI::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_AISpawnerNEW_C_SpwanAI::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'BP_AISpawnerNEW_C_SpwanAI::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, CallFunc_GetRotationAtSplinePoint_ReturnValue) == 0x000034, "Member 'BP_AISpawnerNEW_C_SpwanAI::CallFunc_GetRotationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000040, "Member 'BP_AISpawnerNEW_C_SpwanAI::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, CallFunc_RandomPointInBoundingBox_ReturnValue) == 0x00004C, "Member 'BP_AISpawnerNEW_C_SpwanAI::CallFunc_RandomPointInBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, CallFunc_SpwanAI_NPC) == 0x000058, "Member 'BP_AISpawnerNEW_C_SpwanAI::CallFunc_SpwanAI_NPC' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_AISpawnerNEW_C_SpwanAI::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000090, "Member 'BP_AISpawnerNEW_C_SpwanAI::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'BP_AISpawnerNEW_C_SpwanAI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A0, "Member 'BP_AISpawnerNEW_C_SpwanAI::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, CallFunc_IsValid_ReturnValue1) == 0x0000A8, "Member 'BP_AISpawnerNEW_C_SpwanAI::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, CallFunc_Array_Add_ReturnValue) == 0x0000AC, "Member 'BP_AISpawnerNEW_C_SpwanAI::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, Temp_int_Variable) == 0x0000B0, "Member 'BP_AISpawnerNEW_C_SpwanAI::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, CallFunc_Array_Add_ReturnValue1) == 0x0000B4, "Member 'BP_AISpawnerNEW_C_SpwanAI::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, CallFunc_GetSpawnCountLeft_CountLeft) == 0x0000B8, "Member 'BP_AISpawnerNEW_C_SpwanAI::CallFunc_GetSpawnCountLeft_CountLeft' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, Temp_bool_Variable) == 0x0000BC, "Member 'BP_AISpawnerNEW_C_SpwanAI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000BD, "Member 'BP_AISpawnerNEW_C_SpwanAI::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, K2Node_Select_Default) == 0x0000C0, "Member 'BP_AISpawnerNEW_C_SpwanAI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_SpwanAI, CallFunc_Add_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_AISpawnerNEW_C_SpwanAI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AISpawnerNEW.BP_AISpawnerNEW_C.IsActive
// 0x0001 (0x0001 - 0x0000)
struct BP_AISpawnerNEW_C_IsActive final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AISpawnerNEW_C_IsActive) == 0x000001, "Wrong alignment on BP_AISpawnerNEW_C_IsActive");
static_assert(sizeof(BP_AISpawnerNEW_C_IsActive) == 0x000001, "Wrong size on BP_AISpawnerNEW_C_IsActive");
static_assert(offsetof(BP_AISpawnerNEW_C_IsActive, Active) == 0x000000, "Member 'BP_AISpawnerNEW_C_IsActive::Active' has a wrong offset!");

// Function BP_AISpawnerNEW.BP_AISpawnerNEW_C.IsComplete
// 0x0001 (0x0001 - 0x0000)
struct BP_AISpawnerNEW_C_IsComplete final
{
public:
	bool                                          Complete;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AISpawnerNEW_C_IsComplete) == 0x000001, "Wrong alignment on BP_AISpawnerNEW_C_IsComplete");
static_assert(sizeof(BP_AISpawnerNEW_C_IsComplete) == 0x000001, "Wrong size on BP_AISpawnerNEW_C_IsComplete");
static_assert(offsetof(BP_AISpawnerNEW_C_IsComplete, Complete) == 0x000000, "Member 'BP_AISpawnerNEW_C_IsComplete::Complete' has a wrong offset!");

// Function BP_AISpawnerNEW.BP_AISpawnerNEW_C.IsAllDead
// 0x0028 (0x0028 - 0x0000)
struct BP_AISpawnerNEW_C_IsAllDead final
{
public:
	bool                                          AllDead;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AllDead_;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NPC_Base_C*                         CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPreviousDead_Result;                    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AISpawnerNEW_C_IsAllDead) == 0x000008, "Wrong alignment on BP_AISpawnerNEW_C_IsAllDead");
static_assert(sizeof(BP_AISpawnerNEW_C_IsAllDead) == 0x000028, "Wrong size on BP_AISpawnerNEW_C_IsAllDead");
static_assert(offsetof(BP_AISpawnerNEW_C_IsAllDead, AllDead) == 0x000000, "Member 'BP_AISpawnerNEW_C_IsAllDead::AllDead' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_IsAllDead, AllDead_) == 0x000001, "Member 'BP_AISpawnerNEW_C_IsAllDead::AllDead_' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_IsAllDead, Temp_bool_True_if_break_was_hit_Variable) == 0x000002, "Member 'BP_AISpawnerNEW_C_IsAllDead::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_IsAllDead, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AISpawnerNEW_C_IsAllDead::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_IsAllDead, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_AISpawnerNEW_C_IsAllDead::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_IsAllDead, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_AISpawnerNEW_C_IsAllDead::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_IsAllDead, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AISpawnerNEW_C_IsAllDead::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_IsAllDead, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_AISpawnerNEW_C_IsAllDead::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_IsAllDead, CallFunc_Not_PreBool_ReturnValue1) == 0x000019, "Member 'BP_AISpawnerNEW_C_IsAllDead::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_IsAllDead, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_AISpawnerNEW_C_IsAllDead::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_IsAllDead, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_AISpawnerNEW_C_IsAllDead::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_IsAllDead, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_AISpawnerNEW_C_IsAllDead::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_IsAllDead, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'BP_AISpawnerNEW_C_IsAllDead::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_IsAllDead, CallFunc_IsPreviousDead_Result) == 0x000026, "Member 'BP_AISpawnerNEW_C_IsAllDead::CallFunc_IsPreviousDead_Result' has a wrong offset!");

// Function BP_AISpawnerNEW.BP_AISpawnerNEW_C.ResetMe
// 0x0050 (0x0050 - 0x0000)
struct BP_AISpawnerNEW_C_ResetMe final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NPC_Base_C*                         CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item1;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AISpawnerNEW_C_ResetMe) == 0x000008, "Wrong alignment on BP_AISpawnerNEW_C_ResetMe");
static_assert(sizeof(BP_AISpawnerNEW_C_ResetMe) == 0x000050, "Wrong size on BP_AISpawnerNEW_C_ResetMe");
static_assert(offsetof(BP_AISpawnerNEW_C_ResetMe, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_AISpawnerNEW_C_ResetMe::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ResetMe, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AISpawnerNEW_C_ResetMe::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ResetMe, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AISpawnerNEW_C_ResetMe::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ResetMe, Temp_int_Array_Index_Variable1) == 0x00000C, "Member 'BP_AISpawnerNEW_C_ResetMe::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ResetMe, Temp_int_Loop_Counter_Variable1) == 0x000010, "Member 'BP_AISpawnerNEW_C_ResetMe::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ResetMe, CallFunc_Add_IntInt_ReturnValue1) == 0x000014, "Member 'BP_AISpawnerNEW_C_ResetMe::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ResetMe, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_AISpawnerNEW_C_ResetMe::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ResetMe, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_AISpawnerNEW_C_ResetMe::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ResetMe, CallFunc_GetAttachedActors_OutActors) == 0x000028, "Member 'BP_AISpawnerNEW_C_ResetMe::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ResetMe, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_AISpawnerNEW_C_ResetMe::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ResetMe, CallFunc_Array_Get_Item1) == 0x000040, "Member 'BP_AISpawnerNEW_C_ResetMe::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ResetMe, CallFunc_Array_Length_ReturnValue1) == 0x000048, "Member 'BP_AISpawnerNEW_C_ResetMe::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ResetMe, CallFunc_Less_IntInt_ReturnValue1) == 0x00004C, "Member 'BP_AISpawnerNEW_C_ResetMe::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ResetMe, CallFunc_IsValid_ReturnValue) == 0x00004D, "Member 'BP_AISpawnerNEW_C_ResetMe::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_ResetMe, CallFunc_IsValid_ReturnValue1) == 0x00004E, "Member 'BP_AISpawnerNEW_C_ResetMe::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BP_AISpawnerNEW.BP_AISpawnerNEW_C.GetLastSpawnAILeftCount
// 0x0030 (0x0030 - 0x0000)
struct BP_AISpawnerNEW_C_GetLastSpawnAILeftCount final
{
public:
	int32                                         LeftCount;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CountLeft;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NPC_Base_C*                         CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AISpawnerNEW_C_GetLastSpawnAILeftCount) == 0x000008, "Wrong alignment on BP_AISpawnerNEW_C_GetLastSpawnAILeftCount");
static_assert(sizeof(BP_AISpawnerNEW_C_GetLastSpawnAILeftCount) == 0x000030, "Wrong size on BP_AISpawnerNEW_C_GetLastSpawnAILeftCount");
static_assert(offsetof(BP_AISpawnerNEW_C_GetLastSpawnAILeftCount, LeftCount) == 0x000000, "Member 'BP_AISpawnerNEW_C_GetLastSpawnAILeftCount::LeftCount' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_GetLastSpawnAILeftCount, CountLeft) == 0x000004, "Member 'BP_AISpawnerNEW_C_GetLastSpawnAILeftCount::CountLeft' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_GetLastSpawnAILeftCount, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AISpawnerNEW_C_GetLastSpawnAILeftCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_GetLastSpawnAILeftCount, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AISpawnerNEW_C_GetLastSpawnAILeftCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_GetLastSpawnAILeftCount, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_AISpawnerNEW_C_GetLastSpawnAILeftCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_GetLastSpawnAILeftCount, Temp_int_Variable) == 0x000014, "Member 'BP_AISpawnerNEW_C_GetLastSpawnAILeftCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_GetLastSpawnAILeftCount, CallFunc_Add_IntInt_ReturnValue1) == 0x000018, "Member 'BP_AISpawnerNEW_C_GetLastSpawnAILeftCount::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_GetLastSpawnAILeftCount, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_AISpawnerNEW_C_GetLastSpawnAILeftCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_GetLastSpawnAILeftCount, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AISpawnerNEW_C_GetLastSpawnAILeftCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_GetLastSpawnAILeftCount, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_AISpawnerNEW_C_GetLastSpawnAILeftCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_GetLastSpawnAILeftCount, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_AISpawnerNEW_C_GetLastSpawnAILeftCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnerNEW_C_GetLastSpawnAILeftCount, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'BP_AISpawnerNEW_C_GetLastSpawnAILeftCount::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}


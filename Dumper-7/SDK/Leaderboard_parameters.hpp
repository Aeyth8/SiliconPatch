#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Leaderboard

#include "Basic.hpp"

#include "AdvancedSessions_structs.hpp"
#include "SlateCore_structs.hpp"
#include "SiliconRising_structs.hpp"


namespace SDK::Params
{

// Function Leaderboard.LeaderBoard_C.ExecuteUbergraph_LeaderBoard
// 0x0028 (0x0028 - 0x0000)
struct LeaderBoard_C_ExecuteUbergraph_LeaderBoard final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue3;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue4;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue5;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue6;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue7;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue8;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LeaderBoard_C_ExecuteUbergraph_LeaderBoard) == 0x000004, "Wrong alignment on LeaderBoard_C_ExecuteUbergraph_LeaderBoard");
static_assert(sizeof(LeaderBoard_C_ExecuteUbergraph_LeaderBoard) == 0x000028, "Wrong size on LeaderBoard_C_ExecuteUbergraph_LeaderBoard");
static_assert(offsetof(LeaderBoard_C_ExecuteUbergraph_LeaderBoard, EntryPoint) == 0x000000, "Member 'LeaderBoard_C_ExecuteUbergraph_LeaderBoard::EntryPoint' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_ExecuteUbergraph_LeaderBoard, CallFunc_Array_Add_ReturnValue) == 0x000004, "Member 'LeaderBoard_C_ExecuteUbergraph_LeaderBoard::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_ExecuteUbergraph_LeaderBoard, CallFunc_Array_Add_ReturnValue1) == 0x000008, "Member 'LeaderBoard_C_ExecuteUbergraph_LeaderBoard::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_ExecuteUbergraph_LeaderBoard, CallFunc_Array_Add_ReturnValue2) == 0x00000C, "Member 'LeaderBoard_C_ExecuteUbergraph_LeaderBoard::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_ExecuteUbergraph_LeaderBoard, CallFunc_Array_Add_ReturnValue3) == 0x000010, "Member 'LeaderBoard_C_ExecuteUbergraph_LeaderBoard::CallFunc_Array_Add_ReturnValue3' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_ExecuteUbergraph_LeaderBoard, CallFunc_Array_Add_ReturnValue4) == 0x000014, "Member 'LeaderBoard_C_ExecuteUbergraph_LeaderBoard::CallFunc_Array_Add_ReturnValue4' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_ExecuteUbergraph_LeaderBoard, CallFunc_Array_Add_ReturnValue5) == 0x000018, "Member 'LeaderBoard_C_ExecuteUbergraph_LeaderBoard::CallFunc_Array_Add_ReturnValue5' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_ExecuteUbergraph_LeaderBoard, CallFunc_Array_Add_ReturnValue6) == 0x00001C, "Member 'LeaderBoard_C_ExecuteUbergraph_LeaderBoard::CallFunc_Array_Add_ReturnValue6' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_ExecuteUbergraph_LeaderBoard, CallFunc_Array_Add_ReturnValue7) == 0x000020, "Member 'LeaderBoard_C_ExecuteUbergraph_LeaderBoard::CallFunc_Array_Add_ReturnValue7' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_ExecuteUbergraph_LeaderBoard, CallFunc_Array_Add_ReturnValue8) == 0x000024, "Member 'LeaderBoard_C_ExecuteUbergraph_LeaderBoard::CallFunc_Array_Add_ReturnValue8' has a wrong offset!");

// Function Leaderboard.LeaderBoard_C.setPlayerInfoArray
// 0x0208 (0x0208 - 0x0000)
struct LeaderBoard_C_setPlayerInfoArray final
{
public:
	TArray<struct FLeaderBoardData>               Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int32                                         MaxLine;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLeaderBoardData                       CallFunc_Array_Get_Item;                           // 0x0038(0x0058)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPUniqueNetId                         CallFunc_CreateSteamIDFromString_ReturnValue;      // 0x0098(0x0020)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B8(0x0018)()
	EBlueprintAsyncResultSwitch                   CallFunc_GetSteamFriendAvatar_Result;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetSteamFriendAvatar_ReturnValue;         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue1;           // 0x00E0(0x0018)()
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue;         // 0x00F8(0x0088)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue2;           // 0x0198(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B2[0x6];                                      // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInfo_C*                          CallFunc_Array_Get_Item1;                          // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPUniqueNetId                         CallFunc_GetUniqueNetID_UniqueNetId;               // 0x01D8(0x0020)()
	bool                                          CallFunc_EqualEqual_UNetIDUnetID_ReturnValue;      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInfo_C*                          CallFunc_Array_Get_Item2;                          // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LeaderBoard_C_setPlayerInfoArray) == 0x000008, "Wrong alignment on LeaderBoard_C_setPlayerInfoArray");
static_assert(sizeof(LeaderBoard_C_setPlayerInfoArray) == 0x000208, "Wrong size on LeaderBoard_C_setPlayerInfoArray");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, Array) == 0x000000, "Member 'LeaderBoard_C_setPlayerInfoArray::Array' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, MaxLine) == 0x000010, "Member 'LeaderBoard_C_setPlayerInfoArray::MaxLine' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, Temp_int_Array_Index_Variable) == 0x000014, "Member 'LeaderBoard_C_setPlayerInfoArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'LeaderBoard_C_setPlayerInfoArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, Temp_int_Loop_Counter_Variable1) == 0x000020, "Member 'LeaderBoard_C_setPlayerInfoArray::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_Add_IntInt_ReturnValue1) == 0x00002C, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, Temp_int_Array_Index_Variable1) == 0x000030, "Member 'LeaderBoard_C_setPlayerInfoArray::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_Array_Get_Item) == 0x000038, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_CreateSteamIDFromString_ReturnValue) == 0x000098, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_CreateSteamIDFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B8, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_GetSteamFriendAvatar_Result) == 0x0000D0, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_GetSteamFriendAvatar_Result' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_GetSteamFriendAvatar_ReturnValue) == 0x0000D8, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_GetSteamFriendAvatar_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_Conv_StringToText_ReturnValue1) == 0x0000E0, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_Conv_StringToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_MakeBrushFromTexture_ReturnValue) == 0x0000F8, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_MakeBrushFromTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, K2Node_SwitchEnum_CmpSuccess) == 0x000180, "Member 'LeaderBoard_C_setPlayerInfoArray::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_Conv_StringToInt_ReturnValue) == 0x000184, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_Conv_IntToString_ReturnValue) == 0x000188, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_Conv_StringToText_ReturnValue2) == 0x000198, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_Conv_StringToText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_IsValid_ReturnValue1) == 0x0001B0, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_Greater_IntInt_ReturnValue) == 0x0001B1, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_Array_Get_Item1) == 0x0001B8, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_Array_Length_ReturnValue1) == 0x0001C0, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_GetPlayerController_ReturnValue) == 0x0001C8, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_Less_IntInt_ReturnValue1) == 0x0001D0, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_GetUniqueNetID_UniqueNetId) == 0x0001D8, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_GetUniqueNetID_UniqueNetId' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_EqualEqual_UNetIDUnetID_ReturnValue) == 0x0001F8, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_EqualEqual_UNetIDUnetID_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setPlayerInfoArray, CallFunc_Array_Get_Item2) == 0x000200, "Member 'LeaderBoard_C_setPlayerInfoArray::CallFunc_Array_Get_Item2' has a wrong offset!");

// Function Leaderboard.LeaderBoard_C.setMeTopData
// 0x00F8 (0x00F8 - 0x0000)
struct LeaderBoard_C_setMeTopData final
{
public:
	struct FPlayerTopInfo                         _data;                                             // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue1;           // 0x0068(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue2;           // 0x0080(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue3;           // 0x0098(0x0018)()
	float                                         CallFunc_Conv_StringToFloat_ReturnValue;           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue1;                      // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00C8(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue1;              // 0x00E0(0x0018)()
};
static_assert(alignof(LeaderBoard_C_setMeTopData) == 0x000008, "Wrong alignment on LeaderBoard_C_setMeTopData");
static_assert(sizeof(LeaderBoard_C_setMeTopData) == 0x0000F8, "Wrong size on LeaderBoard_C_setMeTopData");
static_assert(offsetof(LeaderBoard_C_setMeTopData, _data) == 0x000000, "Member 'LeaderBoard_C_setMeTopData::_data' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setMeTopData, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'LeaderBoard_C_setMeTopData::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setMeTopData, CallFunc_Conv_StringToText_ReturnValue1) == 0x000068, "Member 'LeaderBoard_C_setMeTopData::CallFunc_Conv_StringToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setMeTopData, CallFunc_Conv_StringToText_ReturnValue2) == 0x000080, "Member 'LeaderBoard_C_setMeTopData::CallFunc_Conv_StringToText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setMeTopData, CallFunc_Conv_StringToText_ReturnValue3) == 0x000098, "Member 'LeaderBoard_C_setMeTopData::CallFunc_Conv_StringToText_ReturnValue3' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setMeTopData, CallFunc_Conv_StringToFloat_ReturnValue) == 0x0000B0, "Member 'LeaderBoard_C_setMeTopData::CallFunc_Conv_StringToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setMeTopData, CallFunc_FTrunc_ReturnValue) == 0x0000B4, "Member 'LeaderBoard_C_setMeTopData::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setMeTopData, CallFunc_Percent_IntInt_ReturnValue) == 0x0000B8, "Member 'LeaderBoard_C_setMeTopData::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setMeTopData, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000BC, "Member 'LeaderBoard_C_setMeTopData::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setMeTopData, CallFunc_Divide_IntInt_ReturnValue) == 0x0000C0, "Member 'LeaderBoard_C_setMeTopData::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setMeTopData, CallFunc_FTrunc_ReturnValue1) == 0x0000C4, "Member 'LeaderBoard_C_setMeTopData::CallFunc_FTrunc_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setMeTopData, CallFunc_Conv_IntToText_ReturnValue) == 0x0000C8, "Member 'LeaderBoard_C_setMeTopData::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setMeTopData, CallFunc_Conv_IntToText_ReturnValue1) == 0x0000E0, "Member 'LeaderBoard_C_setMeTopData::CallFunc_Conv_IntToText_ReturnValue1' has a wrong offset!");

// Function Leaderboard.LeaderBoard_C.setMeImage
// 0x00C8 (0x00C8 - 0x0000)
struct LeaderBoard_C_setMeImage final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPUniqueNetId                         CallFunc_GetUniqueNetID_UniqueNetId;               // 0x0008(0x0020)()
	EBlueprintAsyncResultSwitch                   CallFunc_GetSteamFriendAvatar_Result;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetSteamFriendAvatar_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue;         // 0x0040(0x0088)()
};
static_assert(alignof(LeaderBoard_C_setMeImage) == 0x000008, "Wrong alignment on LeaderBoard_C_setMeImage");
static_assert(sizeof(LeaderBoard_C_setMeImage) == 0x0000C8, "Wrong size on LeaderBoard_C_setMeImage");
static_assert(offsetof(LeaderBoard_C_setMeImage, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'LeaderBoard_C_setMeImage::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setMeImage, CallFunc_GetUniqueNetID_UniqueNetId) == 0x000008, "Member 'LeaderBoard_C_setMeImage::CallFunc_GetUniqueNetID_UniqueNetId' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setMeImage, CallFunc_GetSteamFriendAvatar_Result) == 0x000028, "Member 'LeaderBoard_C_setMeImage::CallFunc_GetSteamFriendAvatar_Result' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setMeImage, CallFunc_GetSteamFriendAvatar_ReturnValue) == 0x000030, "Member 'LeaderBoard_C_setMeImage::CallFunc_GetSteamFriendAvatar_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setMeImage, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'LeaderBoard_C_setMeImage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(LeaderBoard_C_setMeImage, CallFunc_MakeBrushFromTexture_ReturnValue) == 0x000040, "Member 'LeaderBoard_C_setMeImage::CallFunc_MakeBrushFromTexture_ReturnValue' has a wrong offset!");

}


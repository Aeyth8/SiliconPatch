#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AISpawner

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AISpawner.BP_AISpawner_C.ExecuteUbergraph_BP_AISpawner
// 0x0220 (0x0220 - 0x0000)
struct BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue1;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BF[0x1];                                       // 0x00BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue5;               // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue6;               // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue7;               // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSpawnCountLeft_CountLeft;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NPC_Base_C*                         CallFunc_SpwanAI_NPC;                              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWaitDelay_Result;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPreviousDead_Result;                    // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B[0x5];                                      // 0x012B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AISpawner_C*                        CallFunc_GetSpawnerFromIndex_Spawner;              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue8;               // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue1;               // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue9;               // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue2;            // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18E[0x2];                                      // 0x018E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckGroupMembers_Result;                 // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AISpawner_C*                        CallFunc_Array_Get_Item1;                          // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AISpawner_C*                        CallFunc_Array_Get_Item2;                          // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue3;            // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAllDead_AllDead;                        // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA[0x2];                                      // 0x01CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue5;                // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAllDead_AllDead1;                       // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue1;          // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue10;              // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue11;              // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue12;              // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue13;              // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner) == 0x000008, "Wrong alignment on BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner");
static_assert(sizeof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner) == 0x000220, "Wrong size on BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, EntryPoint) == 0x000000, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_HasAuthority_ReturnValue) == 0x00000C, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000028, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Concat_StrStr_ReturnValue1) == 0x000030, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, K2Node_Event_DeltaSeconds) == 0x000040, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, Temp_bool_IsClosed_Variable) == 0x000044, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_GetDisplayName_ReturnValue) == 0x000048, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Concat_StrStr_ReturnValue2) == 0x000058, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Concat_StrStr_ReturnValue3) == 0x000068, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_HasAuthority_ReturnValue1) == 0x000078, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_HasAuthority_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_GetDisplayName_ReturnValue1) == 0x000080, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_GetDisplayName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, Temp_int_Array_Index_Variable) == 0x000090, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_GetDisplayName_ReturnValue2) == 0x000098, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_GetDisplayName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, Temp_int_Loop_Counter_Variable1) == 0x0000A8, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Not_PreBool_ReturnValue) == 0x0000AC, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Add_IntInt_ReturnValue1) == 0x0000B0, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, K2Node_SwitchEnum_CmpSuccess) == 0x0000B4, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000B8, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_IsValid_ReturnValue) == 0x0000BC, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000BD, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_IsValidClass_ReturnValue) == 0x0000BE, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Concat_StrStr_ReturnValue4) == 0x0000C0, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Concat_StrStr_ReturnValue5) == 0x0000D0, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Concat_StrStr_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Concat_StrStr_ReturnValue6) == 0x0000E0, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Concat_StrStr_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Concat_StrStr_ReturnValue7) == 0x0000F0, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Concat_StrStr_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_GetSpawnCountLeft_CountLeft) == 0x000100, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_GetSpawnCountLeft_CountLeft' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x000104, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Array_Get_Item) == 0x000108, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Array_Length_ReturnValue) == 0x00010C, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Array_Length_ReturnValue1) == 0x000114, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Greater_IntInt_ReturnValue) == 0x000118, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, Temp_int_Array_Index_Variable1) == 0x00011C, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_SpwanAI_NPC) == 0x000120, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_SpwanAI_NPC' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_IsWaitDelay_Result) == 0x000128, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_IsWaitDelay_Result' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Not_PreBool_ReturnValue1) == 0x000129, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_IsPreviousDead_Result) == 0x00012A, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_IsPreviousDead_Result' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_GetSpawnerFromIndex_Spawner) == 0x000130, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_GetSpawnerFromIndex_Spawner' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_IsValid_ReturnValue1) == 0x000138, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Add_FloatFloat_ReturnValue) == 0x00013C, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_GetObjectName_ReturnValue) == 0x000140, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Concat_StrStr_ReturnValue8) == 0x000150, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Concat_StrStr_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_GetObjectName_ReturnValue1) == 0x000160, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_GetObjectName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Concat_StrStr_ReturnValue9) == 0x000170, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Concat_StrStr_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Array_Length_ReturnValue2) == 0x000180, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_LessEqual_IntInt_ReturnValue2) == 0x000184, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_LessEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Len_ReturnValue) == 0x000188, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Greater_IntInt_ReturnValue1) == 0x00018C, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_BooleanAND_ReturnValue) == 0x00018D, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Array_Length_ReturnValue3) == 0x000190, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Less_IntInt_ReturnValue1) == 0x000194, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, Temp_int_Loop_Counter_Variable2) == 0x000198, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Add_IntInt_ReturnValue2) == 0x00019C, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, Temp_int_Array_Index_Variable2) == 0x0001A0, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_CheckGroupMembers_Result) == 0x0001A4, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_CheckGroupMembers_Result' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Array_Get_Item1) == 0x0001A8, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Array_Add_ReturnValue) == 0x0001B0, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0001B4, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Array_Length_ReturnValue4) == 0x0001B8, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Array_Get_Item2) == 0x0001C0, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_LessEqual_IntInt_ReturnValue3) == 0x0001C8, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_LessEqual_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_IsAllDead_AllDead) == 0x0001C9, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_IsAllDead_AllDead' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Array_Length_ReturnValue5) == 0x0001CC, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Array_Length_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Less_IntInt_ReturnValue2) == 0x0001D0, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_IsAllDead_AllDead1) == 0x0001D1, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_IsAllDead_AllDead1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001D2, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, Temp_bool_Has_Been_Initd_Variable1) == 0x0001D3, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_RandomFloatInRange_ReturnValue1) == 0x0001D4, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_RandomFloatInRange_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, Temp_bool_IsClosed_Variable1) == 0x0001D8, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Not_PreBool_ReturnValue2) == 0x0001D9, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Concat_StrStr_ReturnValue10) == 0x0001E0, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Concat_StrStr_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Concat_StrStr_ReturnValue11) == 0x0001F0, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Concat_StrStr_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Concat_StrStr_ReturnValue12) == 0x000200, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Concat_StrStr_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner, CallFunc_Concat_StrStr_ReturnValue13) == 0x000210, "Member 'BP_AISpawner_C_ExecuteUbergraph_BP_AISpawner::CallFunc_Concat_StrStr_ReturnValue13' has a wrong offset!");

// Function BP_AISpawner.BP_AISpawner_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AISpawner_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawner_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AISpawner_C_ReceiveTick");
static_assert(sizeof(BP_AISpawner_C_ReceiveTick) == 0x000004, "Wrong size on BP_AISpawner_C_ReceiveTick");
static_assert(offsetof(BP_AISpawner_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AISpawner_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AISpawner.BP_AISpawner_C.GetSpawnCountLeft
// 0x0008 (0x0008 - 0x0000)
struct BP_AISpawner_C_GetSpawnCountLeft final
{
public:
	int32                                         CountLeft;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawner_C_GetSpawnCountLeft) == 0x000004, "Wrong alignment on BP_AISpawner_C_GetSpawnCountLeft");
static_assert(sizeof(BP_AISpawner_C_GetSpawnCountLeft) == 0x000008, "Wrong size on BP_AISpawner_C_GetSpawnCountLeft");
static_assert(offsetof(BP_AISpawner_C_GetSpawnCountLeft, CountLeft) == 0x000000, "Member 'BP_AISpawner_C_GetSpawnCountLeft::CountLeft' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_GetSpawnCountLeft, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BP_AISpawner_C_GetSpawnCountLeft::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AISpawner.BP_AISpawner_C.IsWaitDelay
// 0x0014 (0x0014 - 0x0000)
struct BP_AISpawner_C_IsWaitDelay final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AISpawner_C_IsWaitDelay) == 0x000004, "Wrong alignment on BP_AISpawner_C_IsWaitDelay");
static_assert(sizeof(BP_AISpawner_C_IsWaitDelay) == 0x000014, "Wrong size on BP_AISpawner_C_IsWaitDelay");
static_assert(offsetof(BP_AISpawner_C_IsWaitDelay, DeltaTime) == 0x000000, "Member 'BP_AISpawner_C_IsWaitDelay::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsWaitDelay, Result) == 0x000004, "Member 'BP_AISpawner_C_IsWaitDelay::Result' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsWaitDelay, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AISpawner_C_IsWaitDelay::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsWaitDelay, CallFunc_RandomFloatInRange_ReturnValue) == 0x00000C, "Member 'BP_AISpawner_C_IsWaitDelay::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsWaitDelay, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_AISpawner_C_IsWaitDelay::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AISpawner.BP_AISpawner_C.IsOtherSpawnerEmpty
// 0x0030 (0x0030 - 0x0000)
struct BP_AISpawner_C_IsOtherSpawnerEmpty final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsAllOK;                                           // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AISpawner_C*                        CallFunc_GetSpawnerFromIndex_Spawner;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPreviousDead_Result;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSpawnCountLeft_CountLeft;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawner_C_IsOtherSpawnerEmpty) == 0x000008, "Wrong alignment on BP_AISpawner_C_IsOtherSpawnerEmpty");
static_assert(sizeof(BP_AISpawner_C_IsOtherSpawnerEmpty) == 0x000030, "Wrong size on BP_AISpawner_C_IsOtherSpawnerEmpty");
static_assert(offsetof(BP_AISpawner_C_IsOtherSpawnerEmpty, Result) == 0x000000, "Member 'BP_AISpawner_C_IsOtherSpawnerEmpty::Result' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsOtherSpawnerEmpty, IsAllOK) == 0x000001, "Member 'BP_AISpawner_C_IsOtherSpawnerEmpty::IsAllOK' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsOtherSpawnerEmpty, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AISpawner_C_IsOtherSpawnerEmpty::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsOtherSpawnerEmpty, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_AISpawner_C_IsOtherSpawnerEmpty::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsOtherSpawnerEmpty, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_AISpawner_C_IsOtherSpawnerEmpty::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsOtherSpawnerEmpty, CallFunc_GetSpawnerFromIndex_Spawner) == 0x000010, "Member 'BP_AISpawner_C_IsOtherSpawnerEmpty::CallFunc_GetSpawnerFromIndex_Spawner' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsOtherSpawnerEmpty, CallFunc_IsPreviousDead_Result) == 0x000018, "Member 'BP_AISpawner_C_IsOtherSpawnerEmpty::CallFunc_IsPreviousDead_Result' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsOtherSpawnerEmpty, CallFunc_GetSpawnCountLeft_CountLeft) == 0x00001C, "Member 'BP_AISpawner_C_IsOtherSpawnerEmpty::CallFunc_GetSpawnCountLeft_CountLeft' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsOtherSpawnerEmpty, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_AISpawner_C_IsOtherSpawnerEmpty::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsOtherSpawnerEmpty, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_AISpawner_C_IsOtherSpawnerEmpty::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsOtherSpawnerEmpty, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_AISpawner_C_IsOtherSpawnerEmpty::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsOtherSpawnerEmpty, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_AISpawner_C_IsOtherSpawnerEmpty::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsOtherSpawnerEmpty, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_AISpawner_C_IsOtherSpawnerEmpty::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AISpawner.BP_AISpawner_C.IsPreviousDead
// 0x0003 (0x0003 - 0x0000)
struct BP_AISpawner_C_IsPreviousDead final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          tempResult;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AISpawner_C_IsPreviousDead) == 0x000001, "Wrong alignment on BP_AISpawner_C_IsPreviousDead");
static_assert(sizeof(BP_AISpawner_C_IsPreviousDead) == 0x000003, "Wrong size on BP_AISpawner_C_IsPreviousDead");
static_assert(offsetof(BP_AISpawner_C_IsPreviousDead, Result) == 0x000000, "Member 'BP_AISpawner_C_IsPreviousDead::Result' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsPreviousDead, tempResult) == 0x000001, "Member 'BP_AISpawner_C_IsPreviousDead::tempResult' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsPreviousDead, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_AISpawner_C_IsPreviousDead::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AISpawner.BP_AISpawner_C.SpwanAI
// 0x0160 (0x0160 - 0x0000)
struct BP_AISpawner_C_SpwanAI final
{
public:
	int32                                         RetryCount;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_Base_C*                         NPC;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpawnActorCollisionHandlingMethod            CollisionDont;                                     // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpawnActorCollisionHandlingMethod            Always;                                            // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TargetLocation;                                    // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NPC_Base_C*                         CallFunc_SpwanAI_NPC;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X2;                           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0xC];                                       // 0x00C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue3;                  // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_Base_C*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue;     // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSpawnCountLeft_CountLeft;              // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_142[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawner_C_SpwanAI) == 0x000010, "Wrong alignment on BP_AISpawner_C_SpwanAI");
static_assert(sizeof(BP_AISpawner_C_SpwanAI) == 0x000160, "Wrong size on BP_AISpawner_C_SpwanAI");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, RetryCount) == 0x000000, "Member 'BP_AISpawner_C_SpwanAI::RetryCount' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, NPC) == 0x000008, "Member 'BP_AISpawner_C_SpwanAI::NPC' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CollisionDont) == 0x000010, "Member 'BP_AISpawner_C_SpwanAI::CollisionDont' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, Always) == 0x000011, "Member 'BP_AISpawner_C_SpwanAI::Always' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, TargetLocation) == 0x000014, "Member 'BP_AISpawner_C_SpwanAI::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_MakeVector_ReturnValue) == 0x000024, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, Temp_int_Variable) == 0x000034, "Member 'BP_AISpawner_C_SpwanAI::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_BreakVector_X) == 0x00003C, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_BreakVector_Y) == 0x000040, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_BreakVector_Z) == 0x000044, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000048, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_Add_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_MakeVector_ReturnValue1) == 0x000050, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_SpwanAI_NPC) == 0x000060, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_SpwanAI_NPC' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_HasAuthority_ReturnValue) == 0x000069, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00006C, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_BreakVector_X1) == 0x000078, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_BreakVector_Y1) == 0x00007C, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_BreakVector_Z1) == 0x000080, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000084, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000090, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_BreakRotator_Roll) == 0x000094, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_BreakRotator_Pitch) == 0x000098, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_BreakRotator_Yaw) == 0x00009C, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_MakeVector_ReturnValue2) == 0x0000A0, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_MakeRotator_ReturnValue) == 0x0000AC, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_BreakVector_X2) == 0x0000B8, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_BreakVector_Y2) == 0x0000BC, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_BreakVector_Z2) == 0x0000C0, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_Add_FloatFloat_ReturnValue2) == 0x000100, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000108, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_MakeVector_ReturnValue3) == 0x000110, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_MakeVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_FinishSpawningActor_ReturnValue) == 0x000120, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_RandomPointInBoundingBox_ReturnValue) == 0x000128, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_RandomPointInBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_IsValid_ReturnValue1) == 0x000134, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_Array_Add_ReturnValue) == 0x000138, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_GetSpawnCountLeft_CountLeft) == 0x00013C, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_GetSpawnCountLeft_CountLeft' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, Temp_bool_Variable) == 0x000140, "Member 'BP_AISpawner_C_SpwanAI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000141, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, K2Node_Select_Default) == 0x000144, "Member 'BP_AISpawner_C_SpwanAI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_SpwanAI, CallFunc_Add_IntInt_ReturnValue1) == 0x000150, "Member 'BP_AISpawner_C_SpwanAI::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");

// Function BP_AISpawner.BP_AISpawner_C.IsActive
// 0x0001 (0x0001 - 0x0000)
struct BP_AISpawner_C_IsActive final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AISpawner_C_IsActive) == 0x000001, "Wrong alignment on BP_AISpawner_C_IsActive");
static_assert(sizeof(BP_AISpawner_C_IsActive) == 0x000001, "Wrong size on BP_AISpawner_C_IsActive");
static_assert(offsetof(BP_AISpawner_C_IsActive, Active) == 0x000000, "Member 'BP_AISpawner_C_IsActive::Active' has a wrong offset!");

// Function BP_AISpawner.BP_AISpawner_C.IsComplete
// 0x0001 (0x0001 - 0x0000)
struct BP_AISpawner_C_IsComplete final
{
public:
	bool                                          Complete;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AISpawner_C_IsComplete) == 0x000001, "Wrong alignment on BP_AISpawner_C_IsComplete");
static_assert(sizeof(BP_AISpawner_C_IsComplete) == 0x000001, "Wrong size on BP_AISpawner_C_IsComplete");
static_assert(offsetof(BP_AISpawner_C_IsComplete, Complete) == 0x000000, "Member 'BP_AISpawner_C_IsComplete::Complete' has a wrong offset!");

// Function BP_AISpawner.BP_AISpawner_C.IsAllDead
// 0x0038 (0x0038 - 0x0000)
struct BP_AISpawner_C_IsAllDead final
{
public:
	bool                                          AllDead_0;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IndexRemove;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllDead_;                                          // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_Base_C*                         CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPreviousDead_Result;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AISpawner_C_IsAllDead) == 0x000008, "Wrong alignment on BP_AISpawner_C_IsAllDead");
static_assert(sizeof(BP_AISpawner_C_IsAllDead) == 0x000038, "Wrong size on BP_AISpawner_C_IsAllDead");
static_assert(offsetof(BP_AISpawner_C_IsAllDead, AllDead_0) == 0x000000, "Member 'BP_AISpawner_C_IsAllDead::AllDead_0' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsAllDead, IndexRemove) == 0x000004, "Member 'BP_AISpawner_C_IsAllDead::IndexRemove' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsAllDead, AllDead_) == 0x000008, "Member 'BP_AISpawner_C_IsAllDead::AllDead_' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsAllDead, Temp_bool_True_if_break_was_hit_Variable) == 0x000009, "Member 'BP_AISpawner_C_IsAllDead::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsAllDead, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_AISpawner_C_IsAllDead::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsAllDead, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_AISpawner_C_IsAllDead::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsAllDead, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000011, "Member 'BP_AISpawner_C_IsAllDead::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsAllDead, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_AISpawner_C_IsAllDead::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsAllDead, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_AISpawner_C_IsAllDead::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsAllDead, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AISpawner_C_IsAllDead::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsAllDead, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_AISpawner_C_IsAllDead::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsAllDead, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_AISpawner_C_IsAllDead::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsAllDead, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'BP_AISpawner_C_IsAllDead::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsAllDead, CallFunc_BooleanAND_ReturnValue) == 0x00002E, "Member 'BP_AISpawner_C_IsAllDead::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsAllDead, CallFunc_Not_PreBool_ReturnValue1) == 0x00002F, "Member 'BP_AISpawner_C_IsAllDead::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_IsAllDead, CallFunc_IsPreviousDead_Result) == 0x000030, "Member 'BP_AISpawner_C_IsAllDead::CallFunc_IsPreviousDead_Result' has a wrong offset!");

// Function BP_AISpawner.BP_AISpawner_C.ResetMe
// 0x0020 (0x0020 - 0x0000)
struct BP_AISpawner_C_ResetMe final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_Base_C*                         CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AISpawner_C_ResetMe) == 0x000008, "Wrong alignment on BP_AISpawner_C_ResetMe");
static_assert(sizeof(BP_AISpawner_C_ResetMe) == 0x000020, "Wrong size on BP_AISpawner_C_ResetMe");
static_assert(offsetof(BP_AISpawner_C_ResetMe, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_AISpawner_C_ResetMe::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ResetMe, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AISpawner_C_ResetMe::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ResetMe, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AISpawner_C_ResetMe::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ResetMe, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AISpawner_C_ResetMe::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ResetMe, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_AISpawner_C_ResetMe::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ResetMe, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_AISpawner_C_ResetMe::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_ResetMe, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_AISpawner_C_ResetMe::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AISpawner.BP_AISpawner_C.CheckGroupMembers
// 0x0030 (0x0030 - 0x0000)
struct BP_AISpawner_C_CheckGroupMembers final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          isOK;                                              // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasOther;                                          // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AISpawner_C*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AISpawner_C_CheckGroupMembers) == 0x000008, "Wrong alignment on BP_AISpawner_C_CheckGroupMembers");
static_assert(sizeof(BP_AISpawner_C_CheckGroupMembers) == 0x000030, "Wrong size on BP_AISpawner_C_CheckGroupMembers");
static_assert(offsetof(BP_AISpawner_C_CheckGroupMembers, Result) == 0x000000, "Member 'BP_AISpawner_C_CheckGroupMembers::Result' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_CheckGroupMembers, isOK) == 0x000001, "Member 'BP_AISpawner_C_CheckGroupMembers::isOK' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_CheckGroupMembers, HasOther) == 0x000002, "Member 'BP_AISpawner_C_CheckGroupMembers::HasOther' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_CheckGroupMembers, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AISpawner_C_CheckGroupMembers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_CheckGroupMembers, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AISpawner_C_CheckGroupMembers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_CheckGroupMembers, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AISpawner_C_CheckGroupMembers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_CheckGroupMembers, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_AISpawner_C_CheckGroupMembers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_CheckGroupMembers, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_AISpawner_C_CheckGroupMembers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_CheckGroupMembers, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_AISpawner_C_CheckGroupMembers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_CheckGroupMembers, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_AISpawner_C_CheckGroupMembers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_CheckGroupMembers, CallFunc_Array_Length_ReturnValue1) == 0x000028, "Member 'BP_AISpawner_C_CheckGroupMembers::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_CheckGroupMembers, CallFunc_Greater_IntInt_ReturnValue) == 0x00002C, "Member 'BP_AISpawner_C_CheckGroupMembers::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AISpawner.BP_AISpawner_C.KillAll
// 0x0020 (0x0020 - 0x0000)
struct BP_AISpawner_C_KillAll final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_Base_C*                         CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AISpawner_C_KillAll) == 0x000008, "Wrong alignment on BP_AISpawner_C_KillAll");
static_assert(sizeof(BP_AISpawner_C_KillAll) == 0x000020, "Wrong size on BP_AISpawner_C_KillAll");
static_assert(offsetof(BP_AISpawner_C_KillAll, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_AISpawner_C_KillAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_KillAll, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AISpawner_C_KillAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_KillAll, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AISpawner_C_KillAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_KillAll, CallFunc_HasAuthority_ReturnValue) == 0x00000C, "Member 'BP_AISpawner_C_KillAll::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_KillAll, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AISpawner_C_KillAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_KillAll, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_AISpawner_C_KillAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_KillAll, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_AISpawner_C_KillAll::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawner_C_KillAll, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_AISpawner_C_KillAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}


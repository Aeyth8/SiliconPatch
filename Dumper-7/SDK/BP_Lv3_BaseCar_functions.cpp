#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lv3_BaseCar

#include "Basic.hpp"

#include "BP_Lv3_BaseCar_classes.hpp"
#include "BP_Lv3_BaseCar_parameters.hpp"


namespace SDK
{

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.ExecuteUbergraph_BP_Lv3_BaseCar
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_BaseCar_C::ExecuteUbergraph_BP_Lv3_BaseCar(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "ExecuteUbergraph_BP_Lv3_BaseCar");

	Params::BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.CarDead
// (BlueprintCallable, BlueprintEvent)

void ABP_Lv3_BaseCar_C::CarDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "CarDead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.HitSound
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Loc                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_BaseCar_C::HitSound(class AActor* HitActor, const struct FVector& Loc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "HitSound");

	Params::BP_Lv3_BaseCar_C_HitSound Parms{};

	Parms.HitActor = HitActor;
	Parms.Loc = std::move(Loc);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.BndEvt__head_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_BaseCar_C::BndEvt__head_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "BndEvt__head_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Lv3_BaseCar_C::BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.StartUpCar
// (BlueprintCallable, BlueprintEvent)

void ABP_Lv3_BaseCar_C::StartUpCar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "StartUpCar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.TeleportCheck
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_BaseCar_C::TeleportCheck(float Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "TeleportCheck");

	Params::BP_Lv3_BaseCar_C_TeleportCheck Parms{};

	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Lv3_BaseCar_C::BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::BP_Lv3_BaseCar_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.ReceiveAnyDamage
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UDamageType*                DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_BaseCar_C::ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "ReceiveAnyDamage");

	Params::BP_Lv3_BaseCar_C_ReceiveAnyDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.AiControlled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   SteeringInput_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_BaseCar_C::AiControlled(float SteeringInput_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "AiControlled");

	Params::BP_Lv3_BaseCar_C_AiControlled Parms{};

	Parms.SteeringInput_0 = SteeringInput_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.XYTargetLocation
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_Lv3_BaseCar_C::XYTargetLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "XYTargetLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_BaseCar_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "ReceiveTick");

	Params::BP_Lv3_BaseCar_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Lv3_BaseCar_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_15
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_BaseCar_C::InpAxisEvt_MoveRight_K2Node_InputAxisEvent_15(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "InpAxisEvt_MoveRight_K2Node_InputAxisEvent_15");

	Params::BP_Lv3_BaseCar_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_15 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_6
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_BaseCar_C::InpAxisEvt_MoveForward_K2Node_InputAxisEvent_6(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "InpAxisEvt_MoveForward_K2Node_InputAxisEvent_6");

	Params::BP_Lv3_BaseCar_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_6 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Lv3_BaseCar_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.Setup Incar HUD
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsInCar                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Lv3_BaseCar_C::Setup_Incar_HUD(bool IsInCar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "Setup Incar HUD");

	Params::BP_Lv3_BaseCar_C_Setup_Incar_HUD Parms{};

	Parms.IsInCar = IsInCar;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.Update HUD Strings
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lv3_BaseCar_C::Update_HUD_Strings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "Update HUD Strings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.SpawnNPC
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Lv3_BaseCar_C::SpawnNPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "SpawnNPC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.LeaveRoad
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_BaseCar_C::LeaveRoad(float X, float Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "LeaveRoad");

	Params::BP_Lv3_BaseCar_C_LeaveRoad Parms{};

	Parms.X = X;
	Parms.Y = Y;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.InitCar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 Pos                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Driver_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Attack01                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Attack02                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_lv3_ActiveBox_C*              ActiveBox_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxRPM                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InitSpeed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_BaseCar_C::InitCar(const struct FVector2D& Pos, class UClass* Driver_0, class UClass* Attack01, class UClass* Attack02, class ABP_lv3_ActiveBox_C* ActiveBox_0, int32 MaxRPM, float InitSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "InitCar");

	Params::BP_Lv3_BaseCar_C_InitCar Parms{};

	Parms.Pos = std::move(Pos);
	Parms.Driver_0 = Driver_0;
	Parms.Attack01 = Attack01;
	Parms.Attack02 = Attack02;
	Parms.ActiveBox_0 = ActiveBox_0;
	Parms.MaxRPM = MaxRPM;
	Parms.InitSpeed = InitSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.BlowUpCar
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lv3_BaseCar_C::BlowUpCar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "BlowUpCar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.XYLocation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_BaseCar_C::XYLocation(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "XYLocation");

	Params::BP_Lv3_BaseCar_C_XYLocation Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.SetCarLifeSpan
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   LifeSpan                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_BaseCar_C::SetCarLifeSpan(float LifeSpan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "SetCarLifeSpan");

	Params::BP_Lv3_BaseCar_C_SetCarLifeSpan Parms{};

	Parms.LifeSpan = LifeSpan;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.SetTargetActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Traget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ChangeTargetOffset                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector2D&                 TargetOffset                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_BaseCar_C::SetTargetActor(class AActor* Traget, bool ChangeTargetOffset, const struct FVector2D& TargetOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "SetTargetActor");

	Params::BP_Lv3_BaseCar_C_SetTargetActor Parms{};

	Parms.Traget = Traget;
	Parms.ChangeTargetOffset = ChangeTargetOffset;
	Parms.TargetOffset = std::move(TargetOffset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.StopCar
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lv3_BaseCar_C::StopCar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "StopCar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.MCEngineSound
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lv3_BaseCar_C::MCEngineSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "MCEngineSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.GetRandomSound
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class USoundBase*>&              NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class USoundBase**                      NewParam1                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_BaseCar_C::GetRandomSound(TArray<class USoundBase*>& NewParam, class USoundBase** NewParam1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "GetRandomSound");

	Params::BP_Lv3_BaseCar_C_GetRandomSound Parms{};

	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);

	NewParam = std::move(Parms.NewParam);

	if (NewParam1 != nullptr)
		*NewParam1 = Parms.NewParam1;
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.SpawnHitSound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_BaseCar_C::SpawnHitSound(class AActor* HitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "SpawnHitSound");

	Params::BP_Lv3_BaseCar_C_SpawnHitSound Parms{};

	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.CarDistortion
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lv3_BaseCar_C::CarDistortion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "CarDistortion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.TaillightController
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_BaseCar_C::TaillightController(float Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_BaseCar_C", "TaillightController");

	Params::BP_Lv3_BaseCar_C_TaillightController Parms{};

	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);
}

}


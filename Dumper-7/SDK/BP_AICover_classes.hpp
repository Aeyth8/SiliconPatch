#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AICover

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AICover.BP_AICover_C
// 0x0030 (0x0358 - 0x0328)
class ABP_AICover_C final : public AActor
{
public:
	class UTextRenderComponent*                   TextRender;                                        // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TokenActor;                                        // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           AI_Tag;                                            // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	struct FColor                                 TextColor;                                         // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TextSize;                                          // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AICover_C">();
	}
	static class ABP_AICover_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AICover_C>();
	}
};
static_assert(alignof(ABP_AICover_C) == 0x000008, "Wrong alignment on ABP_AICover_C");
static_assert(sizeof(ABP_AICover_C) == 0x000358, "Wrong size on ABP_AICover_C");
static_assert(offsetof(ABP_AICover_C, TextRender) == 0x000328, "Member 'ABP_AICover_C::TextRender' has a wrong offset!");
static_assert(offsetof(ABP_AICover_C, DefaultSceneRoot) == 0x000330, "Member 'ABP_AICover_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_AICover_C, TokenActor) == 0x000338, "Member 'ABP_AICover_C::TokenActor' has a wrong offset!");
static_assert(offsetof(ABP_AICover_C, AI_Tag) == 0x000340, "Member 'ABP_AICover_C::AI_Tag' has a wrong offset!");
static_assert(offsetof(ABP_AICover_C, TextColor) == 0x000350, "Member 'ABP_AICover_C::TextColor' has a wrong offset!");
static_assert(offsetof(ABP_AICover_C, TextSize) == 0x000354, "Member 'ABP_AICover_C::TextSize' has a wrong offset!");

}


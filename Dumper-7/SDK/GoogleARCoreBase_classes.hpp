#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GoogleARCoreBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "AugmentedReality_classes.hpp"
#include "GoogleARCoreBase_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class GoogleARCoreBase.GoogleARCoreCameraIntrinsics
// 0x0000 (0x0028 - 0x0028)
class UGoogleARCoreCameraIntrinsics final : public UObject
{
public:
	void GetFocalLength(float* OutFX, float* OutFY);
	void GetImageDimensions(int32* OutWidth, int32* OutHeight);
	void GetPrincipalPoint(float* OutCX, float* OutCY);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GoogleARCoreCameraIntrinsics">();
	}
	static class UGoogleARCoreCameraIntrinsics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoogleARCoreCameraIntrinsics>();
	}
};
static_assert(alignof(UGoogleARCoreCameraIntrinsics) == 0x000008, "Wrong alignment on UGoogleARCoreCameraIntrinsics");
static_assert(sizeof(UGoogleARCoreCameraIntrinsics) == 0x000028, "Wrong size on UGoogleARCoreCameraIntrinsics");

// Class GoogleARCoreBase.GoogleARCoreUObjectManager
// 0x0018 (0x0040 - 0x0028)
class UGoogleARCoreUObjectManager final : public UObject
{
public:
	TArray<class UARPin*>                         AllAnchors;                                        // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UGoogleARCorePointCloud*                LatestPointCloud;                                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GoogleARCoreUObjectManager">();
	}
	static class UGoogleARCoreUObjectManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoogleARCoreUObjectManager>();
	}
};
static_assert(alignof(UGoogleARCoreUObjectManager) == 0x000008, "Wrong alignment on UGoogleARCoreUObjectManager");
static_assert(sizeof(UGoogleARCoreUObjectManager) == 0x000040, "Wrong size on UGoogleARCoreUObjectManager");
static_assert(offsetof(UGoogleARCoreUObjectManager, AllAnchors) == 0x000028, "Member 'UGoogleARCoreUObjectManager::AllAnchors' has a wrong offset!");
static_assert(offsetof(UGoogleARCoreUObjectManager, LatestPointCloud) == 0x000038, "Member 'UGoogleARCoreUObjectManager::LatestPointCloud' has a wrong offset!");

// Class GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UGoogleARCoreFrameFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static EGoogleARCoreFunctionStatus AcquireCameraImage(class UGoogleARCoreCameraImage** OutLatestCameraImage);
	static EGoogleARCoreFunctionStatus AcquirePointCloud(class UGoogleARCorePointCloud** OutLatestPointCloud);
	static bool ARCoreLineTrace(class UObject* WorldContextObject, const struct FVector2D& ScreenPosition, const TSet<EGoogleARCoreLineTraceChannel>& TraceChannels, TArray<struct FARTraceResult>* OutHitResults);
	static bool ARCoreLineTraceRay(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const TSet<EGoogleARCoreLineTraceChannel>& TraceChannels, TArray<struct FARTraceResult>* OutHitResults);
	static EGoogleARCoreFunctionStatus GetCameraImageIntrinsics(class UGoogleARCoreCameraIntrinsics** OutCameraIntrinsics);
	static EGoogleARCoreFunctionStatus GetCameraTextureIntrinsics(class UGoogleARCoreCameraIntrinsics** OutCameraIntrinsics);
	static void GetLightEstimation(struct FGoogleARCoreLightEstimate* OutLightEstimate);
	static EGoogleARCoreFunctionStatus GetPointCloud(class UGoogleARCorePointCloud** OutLatestPointCloud);
	static void GetPose(struct FTransform* OutPose);
	static EGoogleARCoreTrackingState GetTrackingState();
	static void GetUpdatedARPins(TArray<class UARPin*>* OutAnchorList);
	static void GetUpdatedPlanes(TArray<class UARPlaneGeometry*>* OutPlaneList);
	static void GetUpdatedTrackablePoints(TArray<class UARTrackedPoint*>* OutTrackablePointList);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GoogleARCoreFrameFunctionLibrary">();
	}
	static class UGoogleARCoreFrameFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoogleARCoreFrameFunctionLibrary>();
	}
};
static_assert(alignof(UGoogleARCoreFrameFunctionLibrary) == 0x000008, "Wrong alignment on UGoogleARCoreFrameFunctionLibrary");
static_assert(sizeof(UGoogleARCoreFrameFunctionLibrary) == 0x000028, "Wrong size on UGoogleARCoreFrameFunctionLibrary");

// Class GoogleARCoreBase.GoogleARCoreAugmentedImage
// 0x0030 (0x0100 - 0x00D0)
class UGoogleARCoreAugmentedImage final : public UARTrackedGeometry
{
public:
	struct FVector                                Center;                                            // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                Extent;                                            // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         ImageIndex;                                        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ImageName;                                         // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FVector GetCenter() const;
	struct FVector GetExtent() const;
	int32 GetImageIndex() const;
	class FString GetImageName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GoogleARCoreAugmentedImage">();
	}
	static class UGoogleARCoreAugmentedImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoogleARCoreAugmentedImage>();
	}
};
static_assert(alignof(UGoogleARCoreAugmentedImage) == 0x000010, "Wrong alignment on UGoogleARCoreAugmentedImage");
static_assert(sizeof(UGoogleARCoreAugmentedImage) == 0x000100, "Wrong size on UGoogleARCoreAugmentedImage");
static_assert(offsetof(UGoogleARCoreAugmentedImage, Center) == 0x0000C8, "Member 'UGoogleARCoreAugmentedImage::Center' has a wrong offset!");
static_assert(offsetof(UGoogleARCoreAugmentedImage, Extent) == 0x0000D4, "Member 'UGoogleARCoreAugmentedImage::Extent' has a wrong offset!");
static_assert(offsetof(UGoogleARCoreAugmentedImage, ImageIndex) == 0x0000E0, "Member 'UGoogleARCoreAugmentedImage::ImageIndex' has a wrong offset!");
static_assert(offsetof(UGoogleARCoreAugmentedImage, ImageName) == 0x0000E8, "Member 'UGoogleARCoreAugmentedImage::ImageName' has a wrong offset!");

// Class GoogleARCoreBase.GoogleARCoreAugmentedImageDatabase
// 0x0020 (0x0050 - 0x0030)
class UGoogleARCoreAugmentedImageDatabase final : public UDataAsset
{
public:
	TArray<struct FGoogleARCoreAugmentedImageDatabaseEntry> Entries;                                 // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<uint8>                                 SerializedDatabase;                                // 0x0040(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GoogleARCoreAugmentedImageDatabase">();
	}
	static class UGoogleARCoreAugmentedImageDatabase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoogleARCoreAugmentedImageDatabase>();
	}
};
static_assert(alignof(UGoogleARCoreAugmentedImageDatabase) == 0x000008, "Wrong alignment on UGoogleARCoreAugmentedImageDatabase");
static_assert(sizeof(UGoogleARCoreAugmentedImageDatabase) == 0x000050, "Wrong size on UGoogleARCoreAugmentedImageDatabase");
static_assert(offsetof(UGoogleARCoreAugmentedImageDatabase, Entries) == 0x000030, "Member 'UGoogleARCoreAugmentedImageDatabase::Entries' has a wrong offset!");
static_assert(offsetof(UGoogleARCoreAugmentedImageDatabase, SerializedDatabase) == 0x000040, "Member 'UGoogleARCoreAugmentedImageDatabase::SerializedDatabase' has a wrong offset!");

// Class GoogleARCoreBase.GoogleARCoreCameraImage
// 0x0000 (0x0028 - 0x0028)
class UGoogleARCoreCameraImage final : public UObject
{
public:
	void Release();

	int32 GetHeight() const;
	int32 GetPlaneCount() const;
	int32 GetWidth() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GoogleARCoreCameraImage">();
	}
	static class UGoogleARCoreCameraImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoogleARCoreCameraImage>();
	}
};
static_assert(alignof(UGoogleARCoreCameraImage) == 0x000008, "Wrong alignment on UGoogleARCoreCameraImage");
static_assert(sizeof(UGoogleARCoreCameraImage) == 0x000028, "Wrong size on UGoogleARCoreCameraImage");

// Class GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UGoogleARCoreSessionFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void CheckARCoreAvailability(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, EGoogleARCoreAvailability* OutAvailability);
	static void GetAllPlanes(TArray<class UARPlaneGeometry*>* OutPlaneList);
	static void GetAllTrackablePoints(TArray<class UARTrackedPoint*>* OutTrackablePointList);
	static bool GetARCoreCameraConfig(struct FGoogleARCoreCameraConfig* OutCurrentCameraConfig);
	static class UGoogleARCoreEventManager* GetARCoreEventManager();
	static void GetPassthroughCameraImageUV(const TArray<float>& InUV, TArray<float>* OutUV);
	static void InstallARCoreService(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, EGoogleARCoreInstallRequestResult* OutInstallResult);
	static bool IsPassthroughCameraRenderingEnabled();
	static bool SetARCoreCameraConfig(const struct FGoogleARCoreCameraConfig& TargetCameraConfig);
	static void SetPassthroughCameraRenderingEnabled(bool bEnable);
	static void StartARCoreSession(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class UGoogleARCoreSessionConfig* Configuration);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GoogleARCoreSessionFunctionLibrary">();
	}
	static class UGoogleARCoreSessionFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoogleARCoreSessionFunctionLibrary>();
	}
};
static_assert(alignof(UGoogleARCoreSessionFunctionLibrary) == 0x000008, "Wrong alignment on UGoogleARCoreSessionFunctionLibrary");
static_assert(sizeof(UGoogleARCoreSessionFunctionLibrary) == 0x000028, "Wrong size on UGoogleARCoreSessionFunctionLibrary");

// Class GoogleARCoreBase.ARCoreAndroidPermissionHandler
// 0x0000 (0x0028 - 0x0028)
class UARCoreAndroidPermissionHandler final : public UObject
{
public:
	void OnPermissionsGranted(const TArray<class FString>& Permissions, const TArray<bool>& Granted);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARCoreAndroidPermissionHandler">();
	}
	static class UARCoreAndroidPermissionHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARCoreAndroidPermissionHandler>();
	}
};
static_assert(alignof(UARCoreAndroidPermissionHandler) == 0x000008, "Wrong alignment on UARCoreAndroidPermissionHandler");
static_assert(sizeof(UARCoreAndroidPermissionHandler) == 0x000028, "Wrong size on UARCoreAndroidPermissionHandler");

// Class GoogleARCoreBase.GoogleARCorePlaneRendererComponent
// 0x0038 (0x0270 - 0x0238)
class UGoogleARCorePlaneRendererComponent final : public USceneComponent
{
public:
	bool                                          bRenderPlane;                                      // 0x0238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRenderBoundaryPolygon;                            // 0x0239(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_23A[0x2];                                      // 0x023A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 PlaneColor;                                        // 0x023C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 BoundaryPolygonColor;                              // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BoundaryPolygonThickness;                          // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_248[0x28];                                     // 0x0248(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GoogleARCorePlaneRendererComponent">();
	}
	static class UGoogleARCorePlaneRendererComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoogleARCorePlaneRendererComponent>();
	}
};
static_assert(alignof(UGoogleARCorePlaneRendererComponent) == 0x000008, "Wrong alignment on UGoogleARCorePlaneRendererComponent");
static_assert(sizeof(UGoogleARCorePlaneRendererComponent) == 0x000270, "Wrong size on UGoogleARCorePlaneRendererComponent");
static_assert(offsetof(UGoogleARCorePlaneRendererComponent, bRenderPlane) == 0x000238, "Member 'UGoogleARCorePlaneRendererComponent::bRenderPlane' has a wrong offset!");
static_assert(offsetof(UGoogleARCorePlaneRendererComponent, bRenderBoundaryPolygon) == 0x000239, "Member 'UGoogleARCorePlaneRendererComponent::bRenderBoundaryPolygon' has a wrong offset!");
static_assert(offsetof(UGoogleARCorePlaneRendererComponent, PlaneColor) == 0x00023C, "Member 'UGoogleARCorePlaneRendererComponent::PlaneColor' has a wrong offset!");
static_assert(offsetof(UGoogleARCorePlaneRendererComponent, BoundaryPolygonColor) == 0x000240, "Member 'UGoogleARCorePlaneRendererComponent::BoundaryPolygonColor' has a wrong offset!");
static_assert(offsetof(UGoogleARCorePlaneRendererComponent, BoundaryPolygonThickness) == 0x000244, "Member 'UGoogleARCorePlaneRendererComponent::BoundaryPolygonThickness' has a wrong offset!");

// Class GoogleARCoreBase.GoogleARCorePointCloudRendererComponent
// 0x0028 (0x0260 - 0x0238)
class UGoogleARCorePointCloudRendererComponent final : public USceneComponent
{
public:
	struct FColor                                 PointColor;                                        // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PointSize;                                         // 0x023C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_240[0x20];                                     // 0x0240(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GoogleARCorePointCloudRendererComponent">();
	}
	static class UGoogleARCorePointCloudRendererComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoogleARCorePointCloudRendererComponent>();
	}
};
static_assert(alignof(UGoogleARCorePointCloudRendererComponent) == 0x000008, "Wrong alignment on UGoogleARCorePointCloudRendererComponent");
static_assert(sizeof(UGoogleARCorePointCloudRendererComponent) == 0x000260, "Wrong size on UGoogleARCorePointCloudRendererComponent");
static_assert(offsetof(UGoogleARCorePointCloudRendererComponent, PointColor) == 0x000238, "Member 'UGoogleARCorePointCloudRendererComponent::PointColor' has a wrong offset!");
static_assert(offsetof(UGoogleARCorePointCloudRendererComponent, PointSize) == 0x00023C, "Member 'UGoogleARCorePointCloudRendererComponent::PointSize' has a wrong offset!");

// Class GoogleARCoreBase.GoogleARCoreSessionConfig
// 0x0008 (0x0090 - 0x0088)
class UGoogleARCoreSessionConfig final : public UARSessionConfig
{
public:
	class UGoogleARCoreAugmentedImageDatabase*    AugmentedImageDatabase;                            // 0x0088(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GoogleARCoreSessionConfig">();
	}
	static class UGoogleARCoreSessionConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoogleARCoreSessionConfig>();
	}
};
static_assert(alignof(UGoogleARCoreSessionConfig) == 0x000008, "Wrong alignment on UGoogleARCoreSessionConfig");
static_assert(sizeof(UGoogleARCoreSessionConfig) == 0x000090, "Wrong size on UGoogleARCoreSessionConfig");
static_assert(offsetof(UGoogleARCoreSessionConfig, AugmentedImageDatabase) == 0x000088, "Member 'UGoogleARCoreSessionConfig::AugmentedImageDatabase' has a wrong offset!");

// Class GoogleARCoreBase.GoogleARCoreEventManager
// 0x0010 (0x0038 - 0x0028)
class UGoogleARCoreEventManager final : public UObject
{
public:
	UMulticastDelegateProperty_                   OnConfigCamera;                                    // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GoogleARCoreEventManager">();
	}
	static class UGoogleARCoreEventManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoogleARCoreEventManager>();
	}
};
static_assert(alignof(UGoogleARCoreEventManager) == 0x000008, "Wrong alignment on UGoogleARCoreEventManager");
static_assert(sizeof(UGoogleARCoreEventManager) == 0x000038, "Wrong size on UGoogleARCoreEventManager");
static_assert(offsetof(UGoogleARCoreEventManager, OnConfigCamera) == 0x000028, "Member 'UGoogleARCoreEventManager::OnConfigCamera' has a wrong offset!");

// Class GoogleARCoreBase.GoogleARCorePointCloud
// 0x0018 (0x0040 - 0x0028)
class UGoogleARCorePointCloud final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void GetPoint(int32 Index_0, struct FVector* OutWorldPosition, float* OutConfidence);
	void GetPointInTrackingSpace(int32 Index_0, struct FVector* OutTrackingSpaceLocation, float* OutConfidence);
	int32 GetPointNum();
	bool IsUpdated();
	void ReleasePointCloud();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GoogleARCorePointCloud">();
	}
	static class UGoogleARCorePointCloud* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoogleARCorePointCloud>();
	}
};
static_assert(alignof(UGoogleARCorePointCloud) == 0x000008, "Wrong alignment on UGoogleARCorePointCloud");
static_assert(sizeof(UGoogleARCorePointCloud) == 0x000040, "Wrong size on UGoogleARCorePointCloud");

// Class GoogleARCoreBase.GoogleARCoreEditorSettings
// 0x0008 (0x0030 - 0x0028)
class UGoogleARCoreEditorSettings final : public UObject
{
public:
	bool                                          bARCoreRequiredApp;                                // 0x0028(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GoogleARCoreEditorSettings">();
	}
	static class UGoogleARCoreEditorSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoogleARCoreEditorSettings>();
	}
};
static_assert(alignof(UGoogleARCoreEditorSettings) == 0x000008, "Wrong alignment on UGoogleARCoreEditorSettings");
static_assert(sizeof(UGoogleARCoreEditorSettings) == 0x000030, "Wrong size on UGoogleARCoreEditorSettings");
static_assert(offsetof(UGoogleARCoreEditorSettings, bARCoreRequiredApp) == 0x000028, "Member 'UGoogleARCoreEditorSettings::bARCoreRequiredApp' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lv2_Spawner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Enum_SpawnerGenerationType_structs.hpp"
#include "Enum_BehaviorType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Lv2_Spawner.BP_Lv2_Spawner_C
// 0x0068 (0x0390 - 0x0328)
class ABP_Lv2_Spawner_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SpawnerClass;                                      // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalSpawner;                                      // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AlreadySpawn;                                      // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FirstDelay;                                        // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxDelay;                                          // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinDelay;                                          // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PatrolRoute_C*                      Spline;                                            // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SpawnerGenerationType                    GenerationType;                                    // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0361(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362[0x2];                                      // 0x0362(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DeathSpawner;                                      // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_BehaviorType                             BehaviorType;                                      // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Lv2_TargetPoint_C*>          MovePoint;                                         // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_Lv2_NPCBase_C*>              NPCList;                                           // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_Lv2_Spawner(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void InitLv2Spawner(const struct FStruct_Lv2_Spawner& PawnConfig);
	void SpawnNPC();
	void IsAllDead(bool* AllDead);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Lv2_Spawner_C">();
	}
	static class ABP_Lv2_Spawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Lv2_Spawner_C>();
	}
};
static_assert(alignof(ABP_Lv2_Spawner_C) == 0x000008, "Wrong alignment on ABP_Lv2_Spawner_C");
static_assert(sizeof(ABP_Lv2_Spawner_C) == 0x000390, "Wrong size on ABP_Lv2_Spawner_C");
static_assert(offsetof(ABP_Lv2_Spawner_C, UberGraphFrame) == 0x000328, "Member 'ABP_Lv2_Spawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Spawner_C, DefaultSceneRoot) == 0x000330, "Member 'ABP_Lv2_Spawner_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Spawner_C, SpawnerClass) == 0x000338, "Member 'ABP_Lv2_Spawner_C::SpawnerClass' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Spawner_C, TotalSpawner) == 0x000340, "Member 'ABP_Lv2_Spawner_C::TotalSpawner' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Spawner_C, AlreadySpawn) == 0x000344, "Member 'ABP_Lv2_Spawner_C::AlreadySpawn' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Spawner_C, FirstDelay) == 0x000348, "Member 'ABP_Lv2_Spawner_C::FirstDelay' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Spawner_C, MaxDelay) == 0x00034C, "Member 'ABP_Lv2_Spawner_C::MaxDelay' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Spawner_C, MinDelay) == 0x000350, "Member 'ABP_Lv2_Spawner_C::MinDelay' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Spawner_C, Spline) == 0x000358, "Member 'ABP_Lv2_Spawner_C::Spline' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Spawner_C, GenerationType) == 0x000360, "Member 'ABP_Lv2_Spawner_C::GenerationType' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Spawner_C, IsActive) == 0x000361, "Member 'ABP_Lv2_Spawner_C::IsActive' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Spawner_C, DeathSpawner) == 0x000364, "Member 'ABP_Lv2_Spawner_C::DeathSpawner' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Spawner_C, BehaviorType) == 0x000368, "Member 'ABP_Lv2_Spawner_C::BehaviorType' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Spawner_C, MovePoint) == 0x000370, "Member 'ABP_Lv2_Spawner_C::MovePoint' has a wrong offset!");
static_assert(offsetof(ABP_Lv2_Spawner_C, NPCList) == 0x000380, "Member 'ABP_Lv2_Spawner_C::NPCList' has a wrong offset!");

}


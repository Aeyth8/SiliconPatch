#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Wpn_SMG_PVE

#include "Basic.hpp"

#include "SiliconRising_structs.hpp"


namespace SDK::Params
{

// Function Wpn_SMG_PVE.Wpn_SMG_PVE_C.ExecuteUbergraph_Wpn_SMG_PVE
// 0x0008 (0x0008 - 0x0000)
struct Wpn_SMG_PVE_C_ExecuteUbergraph_Wpn_SMG_PVE final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Wpn_SMG_PVE_C_ExecuteUbergraph_Wpn_SMG_PVE) == 0x000004, "Wrong alignment on Wpn_SMG_PVE_C_ExecuteUbergraph_Wpn_SMG_PVE");
static_assert(sizeof(Wpn_SMG_PVE_C_ExecuteUbergraph_Wpn_SMG_PVE) == 0x000008, "Wrong size on Wpn_SMG_PVE_C_ExecuteUbergraph_Wpn_SMG_PVE");
static_assert(offsetof(Wpn_SMG_PVE_C_ExecuteUbergraph_Wpn_SMG_PVE, EntryPoint) == 0x000000, "Member 'Wpn_SMG_PVE_C_ExecuteUbergraph_Wpn_SMG_PVE::EntryPoint' has a wrong offset!");
static_assert(offsetof(Wpn_SMG_PVE_C_ExecuteUbergraph_Wpn_SMG_PVE, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'Wpn_SMG_PVE_C_ExecuteUbergraph_Wpn_SMG_PVE::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function Wpn_SMG_PVE.Wpn_SMG_PVE_C.ChangeAnimState
// 0x0020 (0x0020 - 0x0000)
struct Wpn_SMG_PVE_C_ChangeAnimState final
{
public:
	EWState                                       CurState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewValue;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_Wpn_Lv3_SMG_C*                  K2Node_DynamicCast_AsAnim_BP_Wpn_Lv_3_SMG;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Wpn_SMG_PVE_C_ChangeAnimState) == 0x000008, "Wrong alignment on Wpn_SMG_PVE_C_ChangeAnimState");
static_assert(sizeof(Wpn_SMG_PVE_C_ChangeAnimState) == 0x000020, "Wrong size on Wpn_SMG_PVE_C_ChangeAnimState");
static_assert(offsetof(Wpn_SMG_PVE_C_ChangeAnimState, CurState) == 0x000000, "Member 'Wpn_SMG_PVE_C_ChangeAnimState::CurState' has a wrong offset!");
static_assert(offsetof(Wpn_SMG_PVE_C_ChangeAnimState, NewValue) == 0x000001, "Member 'Wpn_SMG_PVE_C_ChangeAnimState::NewValue' has a wrong offset!");
static_assert(offsetof(Wpn_SMG_PVE_C_ChangeAnimState, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'Wpn_SMG_PVE_C_ChangeAnimState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Wpn_SMG_PVE_C_ChangeAnimState, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'Wpn_SMG_PVE_C_ChangeAnimState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_SMG_PVE_C_ChangeAnimState, K2Node_DynamicCast_AsAnim_BP_Wpn_Lv_3_SMG) == 0x000010, "Member 'Wpn_SMG_PVE_C_ChangeAnimState::K2Node_DynamicCast_AsAnim_BP_Wpn_Lv_3_SMG' has a wrong offset!");
static_assert(offsetof(Wpn_SMG_PVE_C_ChangeAnimState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Wpn_SMG_PVE_C_ChangeAnimState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Wpn_SMG_PVE_C_ChangeAnimState, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'Wpn_SMG_PVE_C_ChangeAnimState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_SMG_PVE_C_ChangeAnimState, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'Wpn_SMG_PVE_C_ChangeAnimState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Wpn_SMG_PVE.Wpn_SMG_PVE_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Wpn_SMG_PVE_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Wpn_SMG_PVE_C_ReceiveTick) == 0x000004, "Wrong alignment on Wpn_SMG_PVE_C_ReceiveTick");
static_assert(sizeof(Wpn_SMG_PVE_C_ReceiveTick) == 0x000004, "Wrong size on Wpn_SMG_PVE_C_ReceiveTick");
static_assert(offsetof(Wpn_SMG_PVE_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Wpn_SMG_PVE_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}


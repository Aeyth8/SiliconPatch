#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Vehicle_MC

#include "Basic.hpp"

#include "Vehicle_MC_classes.hpp"
#include "Vehicle_MC_parameters.hpp"


namespace SDK
{

// Function Vehicle_MC.Vehicle_MC_C.ExecuteUbergraph_Vehicle_MC
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVehicle_MC_C::ExecuteUbergraph_Vehicle_MC(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "ExecuteUbergraph_Vehicle_MC");

	Params::Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.DettachPlayerFromCar
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Lv3_characterBase_C*          Player_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVehicle_MC_C::DettachPlayerFromCar(class ABP_Lv3_characterBase_C* Player_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "DettachPlayerFromCar");

	Params::Vehicle_MC_C_DettachPlayerFromCar Parms{};

	Parms.Player_0 = Player_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.ConstructTeleport
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Teleport                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AVehicle_MC_C::ConstructTeleport(bool Teleport)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "ConstructTeleport");

	Params::Vehicle_MC_C_ConstructTeleport Parms{};

	Parms.Teleport = Teleport;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.CZ
// (BlueprintCallable, BlueprintEvent)

void AVehicle_MC_C::CZ()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "CZ");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_MC.Vehicle_MC_C.BndEvt__glass6_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AVehicle_MC_C::BndEvt__glass6_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "BndEvt__glass6_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature");

	Params::Vehicle_MC_C_BndEvt__glass6_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.BndEvt__glass5_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AVehicle_MC_C::BndEvt__glass5_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "BndEvt__glass5_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature");

	Params::Vehicle_MC_C_BndEvt__glass5_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.BndEvt__glass4_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AVehicle_MC_C::BndEvt__glass4_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "BndEvt__glass4_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature");

	Params::Vehicle_MC_C_BndEvt__glass4_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.BndEvt__glass3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AVehicle_MC_C::BndEvt__glass3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "BndEvt__glass3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature");

	Params::Vehicle_MC_C_BndEvt__glass3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.BndEvt__glass2_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AVehicle_MC_C::BndEvt__glass2_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "BndEvt__glass2_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature");

	Params::Vehicle_MC_C_BndEvt__glass2_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.ReceiveAnyDamage
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UDamageType*                DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVehicle_MC_C::ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "ReceiveAnyDamage");

	Params::Vehicle_MC_C_ReceiveAnyDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.BndEvt__Tunnel_Vehicle_MC_Glass01_Static_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AVehicle_MC_C::BndEvt__Tunnel_Vehicle_MC_Glass01_Static_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "BndEvt__Tunnel_Vehicle_MC_Glass01_Static_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature");

	Params::Vehicle_MC_C_BndEvt__Tunnel_Vehicle_MC_Glass01_Static_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.TurnSteeringWheeByRocker
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PlayerSteer_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVehicle_MC_C::TurnSteeringWheeByRocker(float PlayerSteer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "TurnSteeringWheeByRocker");

	Params::Vehicle_MC_C_TurnSteeringWheeByRocker Parms{};

	Parms.PlayerSteer_0 = PlayerSteer_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AVehicle_MC_C::BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature");

	Params::Vehicle_MC_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.AttachPlayerToCar
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Lv3_characterBase_C*          Player_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVehicle_MC_C::AttachPlayerToCar(class ABP_Lv3_characterBase_C* Player_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "AttachPlayerToCar");

	Params::Vehicle_MC_C_AttachPlayerToCar Parms{};

	Parms.Player_0 = Player_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)

void AVehicle_MC_C::CustomEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "CustomEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_MC.Vehicle_MC_C.TeleportCheck
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVehicle_MC_C::TeleportCheck(float Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "TeleportCheck");

	Params::Vehicle_MC_C_TeleportCheck Parms{};

	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.AiControlled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   SteeringInput_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVehicle_MC_C::AiControlled(float SteeringInput_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "AiControlled");

	Params::Vehicle_MC_C_AiControlled Parms{};

	Parms.SteeringInput_0 = SteeringInput_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.Spawnjump
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AEnemy_Climber_C*                 Jumper                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVehicle_MC_C::Spawnjump(class AEnemy_Climber_C* Jumper)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "Spawnjump");

	Params::Vehicle_MC_C_Spawnjump Parms{};

	Parms.Jumper = Jumper;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.XYTargetLocation
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void AVehicle_MC_C::XYTargetLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "XYTargetLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_MC.Vehicle_MC_C.TurnSteeringWheeByHand
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Bool                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AVehicle_MC_C::TurnSteeringWheeByHand(bool Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "TurnSteeringWheeByHand");

	Params::Vehicle_MC_C_TurnSteeringWheeByHand Parms{};

	Parms.Bool = Bool;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVehicle_MC_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "ReceiveTick");

	Params::Vehicle_MC_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AVehicle_MC_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_MC.Vehicle_MC_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AVehicle_MC_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_MC.Vehicle_MC_C.JumperToCar
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AEnemy_Climber_C*                 Jumper                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBE_Lv3_ClimberJumpDir                  NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVehicle_MC_C::JumperToCar(class AEnemy_Climber_C* Jumper, float Delta, EBE_Lv3_ClimberJumpDir NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "JumperToCar");

	Params::Vehicle_MC_C_JumperToCar Parms{};

	Parms.Jumper = Jumper;
	Parms.Delta = Delta;
	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.CheckCanJump
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBE_Lv3_ClimberJumpDir                  JumpDir                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AEnemy_Climber_C*                 NPC                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EBE_Lv3_ClimberJumpDir*                 NewParam1                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVehicle_MC_C::CheckCanJump(EBE_Lv3_ClimberJumpDir JumpDir, class AEnemy_Climber_C* NPC, bool* Result, EBE_Lv3_ClimberJumpDir* NewParam1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "CheckCanJump");

	Params::Vehicle_MC_C_CheckCanJump Parms{};

	Parms.JumpDir = JumpDir;
	Parms.NPC = NPC;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (NewParam1 != nullptr)
		*NewParam1 = Parms.NewParam1;
}


// Function Vehicle_MC.Vehicle_MC_C.ClearJumper
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBE_Lv3_ClimberJumpDir                  NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVehicle_MC_C::ClearJumper(EBE_Lv3_ClimberJumpDir NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "ClearJumper");

	Params::Vehicle_MC_C_ClearJumper Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.ResetPlayerHMDLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AVehicle_MC_C::ResetPlayerHMDLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "ResetPlayerHMDLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_MC.Vehicle_MC_C.SpawnSlidingSound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PlayerSteer_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVehicle_MC_C::SpawnSlidingSound(float PlayerSteer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "SpawnSlidingSound");

	Params::Vehicle_MC_C_SpawnSlidingSound Parms{};

	Parms.PlayerSteer_0 = PlayerSteer_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.GlassHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Glass                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVehicle_MC_C::GlassHit(class UPrimitiveComponent* Glass, const struct FHitResult& Hit, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "GlassHit");

	Params::Vehicle_MC_C_GlassHit Parms{};

	Parms.Glass = Glass;
	Parms.Hit = std::move(Hit);
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_MC.Vehicle_MC_C.TeleportPointCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Loc                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVehicle_MC_C::TeleportPointCheck(const struct FVector& A, struct FVector* Loc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "TeleportPointCheck");

	Params::Vehicle_MC_C_TeleportPointCheck Parms{};

	Parms.A = std::move(A);

	UObject::ProcessEvent(Func, &Parms);

	if (Loc != nullptr)
		*Loc = std::move(Parms.Loc);
}


// Function Vehicle_MC.Vehicle_MC_C.SetHUD
// (Public, BlueprintCallable, BlueprintEvent)

void AVehicle_MC_C::SetHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_MC_C", "SetHUD");

	UObject::ProcessEvent(Func, nullptr);
}

}


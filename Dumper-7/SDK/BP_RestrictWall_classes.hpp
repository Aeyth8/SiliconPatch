#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RestrictWall

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RestrictWall.BP_RestrictWall_C
// 0x0020 (0x0348 - 0x0328)
class ABP_RestrictWall_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Plane;                                             // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          RestrictWall;                                      // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldShow;                                        // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DistanCheckOK;                                     // 0x0341(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShouldDeactive;                                  // 0x0342(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_RestrictWall(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ActiveCollision(bool Active);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RestrictWall_C">();
	}
	static class ABP_RestrictWall_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RestrictWall_C>();
	}
};
static_assert(alignof(ABP_RestrictWall_C) == 0x000008, "Wrong alignment on ABP_RestrictWall_C");
static_assert(sizeof(ABP_RestrictWall_C) == 0x000348, "Wrong size on ABP_RestrictWall_C");
static_assert(offsetof(ABP_RestrictWall_C, UberGraphFrame) == 0x000328, "Member 'ABP_RestrictWall_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_RestrictWall_C, Plane) == 0x000330, "Member 'ABP_RestrictWall_C::Plane' has a wrong offset!");
static_assert(offsetof(ABP_RestrictWall_C, RestrictWall) == 0x000338, "Member 'ABP_RestrictWall_C::RestrictWall' has a wrong offset!");
static_assert(offsetof(ABP_RestrictWall_C, ShouldShow) == 0x000340, "Member 'ABP_RestrictWall_C::ShouldShow' has a wrong offset!");
static_assert(offsetof(ABP_RestrictWall_C, DistanCheckOK) == 0x000341, "Member 'ABP_RestrictWall_C::DistanCheckOK' has a wrong offset!");
static_assert(offsetof(ABP_RestrictWall_C, IsShouldDeactive) == 0x000342, "Member 'ABP_RestrictWall_C::IsShouldDeactive' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mer2Score

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Mer2Score.Mer2Score_C
// 0x0030 (0x0058 - 0x0028)
class UMer2Score_C final : public USaveGame
{
public:
	float                                         Accuracy;                                          // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Bonus;                                             // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Kill;                                              // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Process;                                           // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         total;                                             // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HighScore;                                         // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastScore;                                         // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HeadShot;                                          // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BulletScore;                                       // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ContinueScore;                                     // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LevelLock;                                         // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Mer2Score_C">();
	}
	static class UMer2Score_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMer2Score_C>();
	}
};
static_assert(alignof(UMer2Score_C) == 0x000008, "Wrong alignment on UMer2Score_C");
static_assert(sizeof(UMer2Score_C) == 0x000058, "Wrong size on UMer2Score_C");
static_assert(offsetof(UMer2Score_C, Accuracy) == 0x000028, "Member 'UMer2Score_C::Accuracy' has a wrong offset!");
static_assert(offsetof(UMer2Score_C, Bonus) == 0x00002C, "Member 'UMer2Score_C::Bonus' has a wrong offset!");
static_assert(offsetof(UMer2Score_C, Kill) == 0x000030, "Member 'UMer2Score_C::Kill' has a wrong offset!");
static_assert(offsetof(UMer2Score_C, Process) == 0x000034, "Member 'UMer2Score_C::Process' has a wrong offset!");
static_assert(offsetof(UMer2Score_C, total) == 0x000038, "Member 'UMer2Score_C::total' has a wrong offset!");
static_assert(offsetof(UMer2Score_C, HighScore) == 0x00003C, "Member 'UMer2Score_C::HighScore' has a wrong offset!");
static_assert(offsetof(UMer2Score_C, LastScore) == 0x000040, "Member 'UMer2Score_C::LastScore' has a wrong offset!");
static_assert(offsetof(UMer2Score_C, HeadShot) == 0x000044, "Member 'UMer2Score_C::HeadShot' has a wrong offset!");
static_assert(offsetof(UMer2Score_C, BulletScore) == 0x000048, "Member 'UMer2Score_C::BulletScore' has a wrong offset!");
static_assert(offsetof(UMer2Score_C, ContinueScore) == 0x00004C, "Member 'UMer2Score_C::ContinueScore' has a wrong offset!");
static_assert(offsetof(UMer2Score_C, LevelLock) == 0x000050, "Member 'UMer2Score_C::LevelLock' has a wrong offset!");

}


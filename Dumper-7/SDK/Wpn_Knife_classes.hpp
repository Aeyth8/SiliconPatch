#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Wpn_Knife

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BPWeaponBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Wpn_Knife.Wpn_Knife_C
// 0x0030 (0x08B0 - 0x0880)
class AWpn_Knife_C final : public ABPWeaponBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Wpn_Knife_C;                        // 0x0880(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Scene_1;                                           // 0x0888(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box_0;                                             // 0x0890(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastLocation;                                      // 0x0898(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x08A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Wpn_Knife(int32 EntryPoint);
	void Evt_DropWeapon();
	void OnLineTriggerPull(bool IsFromRightHand, class AActor* hand);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Wpn_Knife_C">();
	}
	static class AWpn_Knife_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWpn_Knife_C>();
	}
};
static_assert(alignof(AWpn_Knife_C) == 0x000010, "Wrong alignment on AWpn_Knife_C");
static_assert(sizeof(AWpn_Knife_C) == 0x0008B0, "Wrong size on AWpn_Knife_C");
static_assert(offsetof(AWpn_Knife_C, UberGraphFrame_Wpn_Knife_C) == 0x000880, "Member 'AWpn_Knife_C::UberGraphFrame_Wpn_Knife_C' has a wrong offset!");
static_assert(offsetof(AWpn_Knife_C, Scene_1) == 0x000888, "Member 'AWpn_Knife_C::Scene_1' has a wrong offset!");
static_assert(offsetof(AWpn_Knife_C, Box_0) == 0x000890, "Member 'AWpn_Knife_C::Box_0' has a wrong offset!");
static_assert(offsetof(AWpn_Knife_C, LastLocation) == 0x000898, "Member 'AWpn_Knife_C::LastLocation' has a wrong offset!");
static_assert(offsetof(AWpn_Knife_C, Velocity) == 0x0008A4, "Member 'AWpn_Knife_C::Velocity' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC_Base

#include "Basic.hpp"

#include "BP_NPC_Base_classes.hpp"
#include "BP_NPC_Base_parameters.hpp"


namespace SDK
{

// Function BP_NPC_Base.BP_NPC_Base_C.ExecuteUbergraph_BP_NPC_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_Base_C::ExecuteUbergraph_BP_NPC_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "ExecuteUbergraph_BP_NPC_Base");

	Params::BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_Base.BP_NPC_Base_C.OnHitOtherDead
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   HitLocation_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_Base_C::OnHitOtherDead(const struct FVector& HitLocation_0, const struct FVector& HitNormal_0, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "OnHitOtherDead");

	Params::BP_NPC_Base_C_OnHitOtherDead Parms{};

	Parms.HitLocation_0 = std::move(HitLocation_0);
	Parms.HitNormal_0 = std::move(HitNormal_0);
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_Base.BP_NPC_Base_C.CallOnHitOtherDead
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   HitLocation_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_Base_C::CallOnHitOtherDead(const struct FVector& HitLocation_0, const struct FVector& HitNormal_0, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "CallOnHitOtherDead");

	Params::BP_NPC_Base_C_CallOnHitOtherDead Parms{};

	Parms.HitLocation_0 = std::move(HitLocation_0);
	Parms.HitNormal_0 = std::move(HitNormal_0);
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_Base.BP_NPC_Base_C.CallOnHitHeadDead
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   HitLocation_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_Base_C::CallOnHitHeadDead(const struct FVector& HitLocation_0, const struct FVector& HitNormal_0, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "CallOnHitHeadDead");

	Params::BP_NPC_Base_C_CallOnHitHeadDead Parms{};

	Parms.HitLocation_0 = std::move(HitLocation_0);
	Parms.HitNormal_0 = std::move(HitNormal_0);
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_Base.BP_NPC_Base_C.BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_NPC_Base_C::BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");

	Params::BP_NPC_Base_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_Base.BP_NPC_Base_C.OnHitHeadDead
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   HitLocation_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_Base_C::OnHitHeadDead(const struct FVector& HitLocation_0, const struct FVector& HitNormal_0, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "OnHitHeadDead");

	Params::BP_NPC_Base_C_OnHitHeadDead Parms{};

	Parms.HitLocation_0 = std::move(HitLocation_0);
	Parms.HitNormal_0 = std::move(HitNormal_0);
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_Base.BP_NPC_Base_C.OnPerformAttackRanged
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABPWeaponBase_C*                  Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_Base_C::OnPerformAttackRanged(class ABPWeaponBase_C* Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "OnPerformAttackRanged");

	Params::BP_NPC_Base_C_OnPerformAttackRanged Parms{};

	Parms.Weapon = Weapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_Base.BP_NPC_Base_C.OnServerAttackRanged
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABPWeaponBase_C*                  Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   TargetPos                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SpecialCount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_Base_C::OnServerAttackRanged(class ABPWeaponBase_C* Weapon, const struct FVector& TargetPos, int32 SpecialCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "OnServerAttackRanged");

	Params::BP_NPC_Base_C_OnServerAttackRanged Parms{};

	Parms.Weapon = Weapon;
	Parms.TargetPos = std::move(TargetPos);
	Parms.SpecialCount = SpecialCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_Base.BP_NPC_Base_C.OnHitOther
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_Base_C::OnHitOther(class APlayerController* PlayerController, const struct FVector& HitLocation_0, const struct FVector& HitNormal_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "OnHitOther");

	Params::BP_NPC_Base_C_OnHitOther Parms{};

	Parms.PlayerController = PlayerController;
	Parms.HitLocation_0 = std::move(HitLocation_0);
	Parms.HitNormal_0 = std::move(HitNormal_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_Base.BP_NPC_Base_C.OnHitBody
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_Base_C::OnHitBody(class APlayerController* PlayerController, const struct FVector& HitLocation_0, const struct FVector& HitNormal_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "OnHitBody");

	Params::BP_NPC_Base_C_OnHitBody Parms{};

	Parms.PlayerController = PlayerController;
	Parms.HitLocation_0 = std::move(HitLocation_0);
	Parms.HitNormal_0 = std::move(HitNormal_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_Base.BP_NPC_Base_C.OnHitHead
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_Base_C::OnHitHead(class APlayerController* PlayerController, const struct FVector& HitLocation_0, const struct FVector& HitNormal_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "OnHitHead");

	Params::BP_NPC_Base_C_OnHitHead Parms{};

	Parms.PlayerController = PlayerController;
	Parms.HitLocation_0 = std::move(HitLocation_0);
	Parms.HitNormal_0 = std::move(HitNormal_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_Base.BP_NPC_Base_C.CheatDamge
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damge                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_Base_C::CheatDamge(float Damge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "CheatDamge");

	Params::BP_NPC_Base_C_CheatDamge Parms{};

	Parms.Damge = Damge;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_Base.BP_NPC_Base_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_Base_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "ReceiveTick");

	Params::BP_NPC_Base_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_Base.BP_NPC_Base_C.OnDeath
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_Base_C::OnDeath(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "OnDeath");

	Params::BP_NPC_Base_C_OnDeath Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_Base.BP_NPC_Base_C.OnDamaged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_Base_C::OnDamaged(float Damage_0, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "OnDamaged");

	Params::BP_NPC_Base_C_OnDamaged Parms{};

	Parms.Damage_0 = Damage_0;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_Base.BP_NPC_Base_C.OnRangedAttack
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_Base_C::OnRangedAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "OnRangedAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_Base.BP_NPC_Base_C.OnMeleeAttack
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HitSuccess                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_Base_C::OnMeleeAttack(bool HitSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "OnMeleeAttack");

	Params::BP_NPC_Base_C_OnMeleeAttack Parms{};

	Parms.HitSuccess = HitSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_Base.BP_NPC_Base_C.ReceiveAnyDamage
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UDamageType*                DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_Base_C::ReceiveAnyDamage(float Damage_0, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "ReceiveAnyDamage");

	Params::BP_NPC_Base_C_ReceiveAnyDamage Parms{};

	Parms.Damage_0 = Damage_0;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_Base.BP_NPC_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_NPC_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_Base.BP_NPC_Base_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ABP_NPC_Base_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_Base.BP_NPC_Base_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ABP_NPC_Base_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_Base.BP_NPC_Base_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_Base_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_Base.BP_NPC_Base_C.PerformMeleeAttack
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NPC_Base_C::PerformMeleeAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "PerformMeleeAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_Base.BP_NPC_Base_C.PerformRangedAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABPWeaponBase_C*                  Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsAttack                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_Base_C::PerformRangedAttack(class ABPWeaponBase_C* Weapon, bool* IsAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "PerformRangedAttack");

	Params::BP_NPC_Base_C_PerformRangedAttack Parms{};

	Parms.Weapon = Weapon;

	UObject::ProcessEvent(Func, &Parms);

	if (IsAttack != nullptr)
		*IsAttack = Parms.IsAttack;
}


// Function BP_NPC_Base.BP_NPC_Base_C.OnRep_Health
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_Base_C::OnRep_Health()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "OnRep_Health");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_Base.BP_NPC_Base_C.SetWeaponByClass
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_Base_C::SetWeaponByClass(class UClass* Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "SetWeaponByClass");

	Params::BP_NPC_Base_C_SetWeaponByClass Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_Base.BP_NPC_Base_C.GetTargetPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSpecial                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsForceHead                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_NPC_Base_C::GetTargetPoint(bool IsSpecial, bool IsForceHead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "GetTargetPoint");

	Params::BP_NPC_Base_C_GetTargetPoint Parms{};

	Parms.IsSpecial = IsSpecial;
	Parms.IsForceHead = IsForceHead;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_NPC_Base.BP_NPC_Base_C.GetDamageFromBone
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BoneName_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BaseDamage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  Damage_0                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_Base_C::GetDamageFromBone(class FName BoneName_0, float BaseDamage, class APlayerController* PlayerController, const struct FVector& HitLocation_0, const struct FVector& HitNormal_0, float* Damage_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "GetDamageFromBone");

	Params::BP_NPC_Base_C_GetDamageFromBone Parms{};

	Parms.BoneName_0 = BoneName_0;
	Parms.BaseDamage = BaseDamage;
	Parms.PlayerController = PlayerController;
	Parms.HitLocation_0 = std::move(HitLocation_0);
	Parms.HitNormal_0 = std::move(HitNormal_0);

	UObject::ProcessEvent(Func, &Parms);

	if (Damage_0 != nullptr)
		*Damage_0 = Parms.Damage_0;
}


// Function BP_NPC_Base.BP_NPC_Base_C.Rep_PerformRangedAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABPWeaponBase_C*                  Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsAttack                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_Base_C::Rep_PerformRangedAttack(class ABPWeaponBase_C* Weapon, bool* IsAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "Rep_PerformRangedAttack");

	Params::BP_NPC_Base_C_Rep_PerformRangedAttack Parms{};

	Parms.Weapon = Weapon;

	UObject::ProcessEvent(Func, &Parms);

	if (IsAttack != nullptr)
		*IsAttack = Parms.IsAttack;
}


// Function BP_NPC_Base.BP_NPC_Base_C.SetFocusCheckIn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_Base_C::SetFocusCheckIn(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "SetFocusCheckIn");

	Params::BP_NPC_Base_C_SetFocusCheckIn Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_Base.BP_NPC_Base_C.SetHidePause
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_Base_C::SetHidePause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "SetHidePause");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_Base.BP_NPC_Base_C.FindPathToLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   StartLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>*                 Waypoint                                               (Parm, OutParm, ZeroConstructor)

void ABP_NPC_Base_C::FindPathToLocation(const struct FVector& StartLocation, const struct FVector& TargetLocation, TArray<struct FVector>* Waypoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "FindPathToLocation");

	Params::BP_NPC_Base_C_FindPathToLocation Parms{};

	Parms.StartLocation = std::move(StartLocation);
	Parms.TargetLocation = std::move(TargetLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Waypoint != nullptr)
		*Waypoint = std::move(Parms.Waypoint);
}


// Function BP_NPC_Base.BP_NPC_Base_C.GetPlayerControllerFromObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController**               PlayerController                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_Base_C::GetPlayerControllerFromObject(class AActor* In, class APlayerController** PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_Base_C", "GetPlayerControllerFromObject");

	Params::BP_NPC_Base_C_GetPlayerControllerFromObject Parms{};

	Parms.In = In;

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerController != nullptr)
		*PlayerController = Parms.PlayerController;
}

}


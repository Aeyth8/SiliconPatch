#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FirstPersonHUD

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass FirstPersonHUD.FirstPersonHUD_C
// 0x0028 (0x0440 - 0x0418)
class AFirstPersonHUD_C final : public AHUD
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0418(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          HMDEnabled_;                                       // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               AimTexture;                                        // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AimSize;                                           // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_FirstPersonHUD(int32 EntryPoint);
	void ReceiveDrawHUD(int32 SizeX, int32 SizeY);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FirstPersonHUD_C">();
	}
	static class AFirstPersonHUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFirstPersonHUD_C>();
	}
};
static_assert(alignof(AFirstPersonHUD_C) == 0x000008, "Wrong alignment on AFirstPersonHUD_C");
static_assert(sizeof(AFirstPersonHUD_C) == 0x000440, "Wrong size on AFirstPersonHUD_C");
static_assert(offsetof(AFirstPersonHUD_C, UberGraphFrame) == 0x000418, "Member 'AFirstPersonHUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AFirstPersonHUD_C, DefaultSceneRoot) == 0x000420, "Member 'AFirstPersonHUD_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AFirstPersonHUD_C, HMDEnabled_) == 0x000428, "Member 'AFirstPersonHUD_C::HMDEnabled_' has a wrong offset!");
static_assert(offsetof(AFirstPersonHUD_C, AimTexture) == 0x000430, "Member 'AFirstPersonHUD_C::AimTexture' has a wrong offset!");
static_assert(offsetof(AFirstPersonHUD_C, AimSize) == 0x000438, "Member 'AFirstPersonHUD_C::AimSize' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lv2_NPCBase

#include "Basic.hpp"

#include "BP_Lv2_NPCBase_classes.hpp"
#include "BP_Lv2_NPCBase_parameters.hpp"


namespace SDK
{

// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.ExecuteUbergraph_BP_Lv2_NPCBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv2_NPCBase_C::ExecuteUbergraph_BP_Lv2_NPCBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "ExecuteUbergraph_BP_Lv2_NPCBase");

	Params::BP_Lv2_NPCBase_C_ExecuteUbergraph_BP_Lv2_NPCBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.ReceiveAnyDamage
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UDamageType*                DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv2_NPCBase_C::ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "ReceiveAnyDamage");

	Params::BP_Lv2_NPCBase_C_ReceiveAnyDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.Fire
// (BlueprintCallable, BlueprintEvent)

void ABP_Lv2_NPCBase_C::Fire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "Fire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.HeadKill
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   loacation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Normal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv2_NPCBase_C::HeadKill(const struct FVector& loacation, const struct FVector& Normal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "HeadKill");

	Params::BP_Lv2_NPCBase_C_HeadKill Parms{};

	Parms.loacation = std::move(loacation);
	Parms.Normal = std::move(Normal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Lv2_NPCBase_C::BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::BP_Lv2_NPCBase_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv2_NPCBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "ReceiveTick");

	Params::BP_Lv2_NPCBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Lv2_NPCBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Lv2_NPCBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.InitPatrol
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PatrolRoute_C*                Path                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv2_NPCBase_C::InitPatrol(class ABP_PatrolRoute_C* Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "InitPatrol");

	Params::BP_Lv2_NPCBase_C_InitPatrol Parms{};

	Parms.Path = Path;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.NextSplinelocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Lv2_NPCBase_C::NextSplinelocation(struct FVector* Location, struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "NextSplinelocation");

	Params::BP_Lv2_NPCBase_C_NextSplinelocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.ChangeBehavior
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_BehaviorType                       NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv2_NPCBase_C::ChangeBehavior(Enum_BehaviorType NewState, const struct FVector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "ChangeBehavior");

	Params::BP_Lv2_NPCBase_C_ChangeBehavior Parms{};

	Parms.NewState = NewState;
	Parms.TargetLocation = std::move(TargetLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.FindEnemie
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv2_NPCBase_C::FindEnemie(class AActor* TargetActor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "FindEnemie");

	Params::BP_Lv2_NPCBase_C_FindEnemie Parms{};

	Parms.TargetActor_0 = TargetActor_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.Findcorpse
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv2_NPCBase_C::Findcorpse(const struct FVector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "Findcorpse");

	Params::BP_Lv2_NPCBase_C_Findcorpse Parms{};

	Parms.TargetLocation = std::move(TargetLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.SetSpeed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lv2_NPCBase_C::SetSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "SetSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.GameOver
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TipsIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv2_NPCBase_C::GameOver(int32 TipsIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "GameOver");

	Params::BP_Lv2_NPCBase_C_GameOver Parms{};

	Parms.TipsIndex = TipsIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.Dead
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ByWeapon                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Lv2_NPCBase_C::Dead(bool ByWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "Dead");

	Params::BP_Lv2_NPCBase_C_Dead Parms{};

	Parms.ByWeapon = ByWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.InitSight
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lv2_NPCBase_C::InitSight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "InitSight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.Attack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UseControllerRotation                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float*                                  Delay                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv2_NPCBase_C::Attack(bool UseControllerRotation, float* Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "Attack");

	Params::BP_Lv2_NPCBase_C_Attack Parms{};

	Parms.UseControllerRotation = UseControllerRotation;

	UObject::ProcessEvent(Func, &Parms);

	if (Delay != nullptr)
		*Delay = Parms.Delay;
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.FindMovePoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv2_NPCBase_C::FindMovePoint(struct FVector* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "FindMovePoint");

	Params::BP_Lv2_NPCBase_C_FindMovePoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.GiaArrived
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lv2_NPCBase_C::GiaArrived()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "GiaArrived");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.InitNPC
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Lv2_NPCBase_C::InitNPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "InitNPC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv2_NPCBase.BP_Lv2_NPCBase_C.GetDifficultConfig
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLv2_DifficultStruct*            NewParam                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv2_NPCBase_C::GetDifficultConfig(struct FLv2_DifficultStruct* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv2_NPCBase_C", "GetDifficultConfig");

	Params::BP_Lv2_NPCBase_C_GetDifficultConfig Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}

}


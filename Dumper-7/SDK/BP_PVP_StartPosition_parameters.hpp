#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PVP_StartPosition

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SiliconRising_structs.hpp"
#include "Struct_DroneSpawnConfig_structs.hpp"


namespace SDK::Params
{

// Function BP_PVP_StartPosition.BP_PVP_StartPosition_C.ExecuteUbergraph_BP_PVP_StartPosition
// 0x00A0 (0x00A0 - 0x0000)
struct BP_PVP_StartPosition_C_ExecuteUbergraph_BP_PVP_StartPosition final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemTypes                                    CallFunc_GetWeaponType_WeaponType;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x9];                                        // 0x0007(0x0009)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue1;      // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue2;      // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PVP_StartPosition_C_ExecuteUbergraph_BP_PVP_StartPosition) == 0x000010, "Wrong alignment on BP_PVP_StartPosition_C_ExecuteUbergraph_BP_PVP_StartPosition");
static_assert(sizeof(BP_PVP_StartPosition_C_ExecuteUbergraph_BP_PVP_StartPosition) == 0x0000A0, "Wrong size on BP_PVP_StartPosition_C_ExecuteUbergraph_BP_PVP_StartPosition");
static_assert(offsetof(BP_PVP_StartPosition_C_ExecuteUbergraph_BP_PVP_StartPosition, EntryPoint) == 0x000000, "Member 'BP_PVP_StartPosition_C_ExecuteUbergraph_BP_PVP_StartPosition::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_ExecuteUbergraph_BP_PVP_StartPosition, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_PVP_StartPosition_C_ExecuteUbergraph_BP_PVP_StartPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_ExecuteUbergraph_BP_PVP_StartPosition, CallFunc_GetWeaponType_WeaponType) == 0x000005, "Member 'BP_PVP_StartPosition_C_ExecuteUbergraph_BP_PVP_StartPosition::CallFunc_GetWeaponType_WeaponType' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_ExecuteUbergraph_BP_PVP_StartPosition, K2Node_SwitchEnum_CmpSuccess) == 0x000006, "Member 'BP_PVP_StartPosition_C_ExecuteUbergraph_BP_PVP_StartPosition::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_ExecuteUbergraph_BP_PVP_StartPosition, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'BP_PVP_StartPosition_C_ExecuteUbergraph_BP_PVP_StartPosition::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_ExecuteUbergraph_BP_PVP_StartPosition, CallFunc_K2_GetComponentToWorld_ReturnValue1) == 0x000040, "Member 'BP_PVP_StartPosition_C_ExecuteUbergraph_BP_PVP_StartPosition::CallFunc_K2_GetComponentToWorld_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_ExecuteUbergraph_BP_PVP_StartPosition, CallFunc_K2_GetComponentToWorld_ReturnValue2) == 0x000070, "Member 'BP_PVP_StartPosition_C_ExecuteUbergraph_BP_PVP_StartPosition::CallFunc_K2_GetComponentToWorld_ReturnValue2' has a wrong offset!");

// Function BP_PVP_StartPosition.BP_PVP_StartPosition_C.GetWeaponType
// 0x005C (0x005C - 0x0000)
struct BP_PVP_StartPosition_C_GetWeaponType final
{
public:
	EItemTypes                                    WeaponType;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RndFloat;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         total;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_DroneSpawnConfig               CallFunc_Array_Get_Item;                           // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_DroneSpawnConfig               CallFunc_Array_Get_Item1;                          // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PVP_StartPosition_C_GetWeaponType) == 0x000004, "Wrong alignment on BP_PVP_StartPosition_C_GetWeaponType");
static_assert(sizeof(BP_PVP_StartPosition_C_GetWeaponType) == 0x00005C, "Wrong size on BP_PVP_StartPosition_C_GetWeaponType");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, WeaponType) == 0x000000, "Member 'BP_PVP_StartPosition_C_GetWeaponType::WeaponType' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, RndFloat) == 0x000004, "Member 'BP_PVP_StartPosition_C_GetWeaponType::RndFloat' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, total) == 0x000008, "Member 'BP_PVP_StartPosition_C_GetWeaponType::total' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_PVP_StartPosition_C_GetWeaponType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'BP_PVP_StartPosition_C_GetWeaponType::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_PVP_StartPosition_C_GetWeaponType::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_PVP_StartPosition_C_GetWeaponType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_PVP_StartPosition_C_GetWeaponType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, Temp_int_Array_Index_Variable1) == 0x00001C, "Member 'BP_PVP_StartPosition_C_GetWeaponType::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, CallFunc_RandomFloatInRange_ReturnValue) == 0x000020, "Member 'BP_PVP_StartPosition_C_GetWeaponType::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, CallFunc_Array_Get_Item) == 0x000024, "Member 'BP_PVP_StartPosition_C_GetWeaponType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_PVP_StartPosition_C_GetWeaponType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_PVP_StartPosition_C_GetWeaponType::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_PVP_StartPosition_C_GetWeaponType::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, Temp_int_Loop_Counter_Variable1) == 0x000038, "Member 'BP_PVP_StartPosition_C_GetWeaponType::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, CallFunc_Array_Get_Item1) == 0x00003C, "Member 'BP_PVP_StartPosition_C_GetWeaponType::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_PVP_StartPosition_C_GetWeaponType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_PVP_StartPosition_C_GetWeaponType::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, CallFunc_BooleanAND_ReturnValue) == 0x00004C, "Member 'BP_PVP_StartPosition_C_GetWeaponType::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, CallFunc_Add_IntInt_ReturnValue1) == 0x000050, "Member 'BP_PVP_StartPosition_C_GetWeaponType::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, CallFunc_Array_Length_ReturnValue1) == 0x000054, "Member 'BP_PVP_StartPosition_C_GetWeaponType::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_GetWeaponType, CallFunc_Less_IntInt_ReturnValue1) == 0x000058, "Member 'BP_PVP_StartPosition_C_GetWeaponType::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");

// Function BP_PVP_StartPosition.BP_PVP_StartPosition_C.SortConfigArray
// 0x0040 (0x0040 - 0x0000)
struct BP_PVP_StartPosition_C_SortConfigArray final
{
public:
	int32                                         TempIndex;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempWeight;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_DroneSpawnConfig               CallFunc_Array_Get_Item;                           // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_DroneSpawnConfig               CallFunc_Array_Get_Item1;                          // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PVP_StartPosition_C_SortConfigArray) == 0x000004, "Wrong alignment on BP_PVP_StartPosition_C_SortConfigArray");
static_assert(sizeof(BP_PVP_StartPosition_C_SortConfigArray) == 0x000040, "Wrong size on BP_PVP_StartPosition_C_SortConfigArray");
static_assert(offsetof(BP_PVP_StartPosition_C_SortConfigArray, TempIndex) == 0x000000, "Member 'BP_PVP_StartPosition_C_SortConfigArray::TempIndex' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_SortConfigArray, TempWeight) == 0x000004, "Member 'BP_PVP_StartPosition_C_SortConfigArray::TempWeight' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_SortConfigArray, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_PVP_StartPosition_C_SortConfigArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_SortConfigArray, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_PVP_StartPosition_C_SortConfigArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_SortConfigArray, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_PVP_StartPosition_C_SortConfigArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_SortConfigArray, CallFunc_Array_Get_Item) == 0x000014, "Member 'BP_PVP_StartPosition_C_SortConfigArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_SortConfigArray, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_PVP_StartPosition_C_SortConfigArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_SortConfigArray, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_PVP_StartPosition_C_SortConfigArray::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_SortConfigArray, CallFunc_Array_Length_ReturnValue1) == 0x000024, "Member 'BP_PVP_StartPosition_C_SortConfigArray::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_SortConfigArray, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_PVP_StartPosition_C_SortConfigArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_SortConfigArray, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000029, "Member 'BP_PVP_StartPosition_C_SortConfigArray::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_SortConfigArray, CallFunc_Array_Get_Item1) == 0x00002C, "Member 'BP_PVP_StartPosition_C_SortConfigArray::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_SortConfigArray, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_PVP_StartPosition_C_SortConfigArray::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_SortConfigArray, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'BP_PVP_StartPosition_C_SortConfigArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_SortConfigArray, CallFunc_Less_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_PVP_StartPosition_C_SortConfigArray::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PVP_StartPosition.BP_PVP_StartPosition_C.SpawnWeapon
// 0x0060 (0x0060 - 0x0000)
struct BP_PVP_StartPosition_C_SpawnWeapon final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnTransform;                                    // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPWeaponBase_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PVP_StartPosition_C_SpawnWeapon) == 0x000010, "Wrong alignment on BP_PVP_StartPosition_C_SpawnWeapon");
static_assert(sizeof(BP_PVP_StartPosition_C_SpawnWeapon) == 0x000060, "Wrong size on BP_PVP_StartPosition_C_SpawnWeapon");
static_assert(offsetof(BP_PVP_StartPosition_C_SpawnWeapon, Class_0) == 0x000000, "Member 'BP_PVP_StartPosition_C_SpawnWeapon::Class_0' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_SpawnWeapon, SpawnTransform) == 0x000010, "Member 'BP_PVP_StartPosition_C_SpawnWeapon::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_SpawnWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'BP_PVP_StartPosition_C_SpawnWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_SpawnWeapon, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_PVP_StartPosition_C_SpawnWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_SpawnWeapon, CallFunc_FinishSpawningActor_ReturnValue) == 0x000050, "Member 'BP_PVP_StartPosition_C_SpawnWeapon::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_PVP_StartPosition.BP_PVP_StartPosition_C.OnRep_IsTokenThisPosition
// 0x0002 (0x0002 - 0x0000)
struct BP_PVP_StartPosition_C_OnRep_IsTokenThisPosition final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PVP_StartPosition_C_OnRep_IsTokenThisPosition) == 0x000001, "Wrong alignment on BP_PVP_StartPosition_C_OnRep_IsTokenThisPosition");
static_assert(sizeof(BP_PVP_StartPosition_C_OnRep_IsTokenThisPosition) == 0x000002, "Wrong size on BP_PVP_StartPosition_C_OnRep_IsTokenThisPosition");
static_assert(offsetof(BP_PVP_StartPosition_C_OnRep_IsTokenThisPosition, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_PVP_StartPosition_C_OnRep_IsTokenThisPosition::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_StartPosition_C_OnRep_IsTokenThisPosition, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_PVP_StartPosition_C_OnRep_IsTokenThisPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


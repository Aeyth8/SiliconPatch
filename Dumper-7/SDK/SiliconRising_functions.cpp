#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SiliconRising

#include "Basic.hpp"

#include "SiliconRising_classes.hpp"
#include "SiliconRising_parameters.hpp"


namespace SDK
{

// Function SiliconRising.FlatBuffersYYMsgObjectPropertyVector2.PackObjectPropertyVector2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectPropertyVector2&InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectPropertyVector2::PackObjectPropertyVector2(class UObject* InWorldContextObject, const struct FYYMsgObjectPropertyVector2& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectPropertyVector2", "PackObjectPropertyVector2");

	Params::FlatBuffersYYMsgObjectPropertyVector2_PackObjectPropertyVector2 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectPropertyVector2.UnpackObjectPropertyVector2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectPropertyVector2*     OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectPropertyVector2::UnpackObjectPropertyVector2(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectPropertyVector2* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectPropertyVector2", "UnpackObjectPropertyVector2");

	Params::FlatBuffersYYMsgObjectPropertyVector2_UnpackObjectPropertyVector2 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordString.PackObjectRecordString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectRecordString&  InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordString::PackObjectRecordString(class UObject* InWorldContextObject, const struct FYYMsgObjectRecordString& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordString", "PackObjectRecordString");

	Params::FlatBuffersYYMsgObjectRecordString_PackObjectRecordString Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordString.UnpackObjectRecordString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectRecordString*        OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordString::UnpackObjectRecordString(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectRecordString* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordString", "UnpackObjectRecordString");

	Params::FlatBuffersYYMsgObjectRecordString_UnpackObjectRecordString Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.BTT_MoveToBlackboardBase.BindReceiveMoveCompleted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AAIController*                    AI_Controller                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBTT_MoveToBlackboardBase::BindReceiveMoveCompleted(class AAIController* AI_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveToBlackboardBase", "BindReceiveMoveCompleted");

	Params::BTT_MoveToBlackboardBase_BindReceiveMoveCompleted Parms{};

	Parms.AI_Controller = AI_Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.BTT_MoveToBlackboardBase.ReceiveMoveCompleted
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBTT_MoveToBlackboardBase::ReceiveMoveCompleted(EPathFollowingResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveToBlackboardBase", "ReceiveMoveCompleted");

	Params::BTT_MoveToBlackboardBase_ReceiveMoveCompleted Parms{};

	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordByte.PackObjectRecordByte
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectRecordByte&    InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordByte::PackObjectRecordByte(class UObject* InWorldContextObject, const struct FYYMsgObjectRecordByte& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordByte", "PackObjectRecordByte");

	Params::FlatBuffersYYMsgObjectRecordByte_PackObjectRecordByte Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordByte.UnpackObjectRecordByte
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectRecordByte*          OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordByte::UnpackObjectRecordByte(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectRecordByte* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordByte", "UnpackObjectRecordByte");

	Params::FlatBuffersYYMsgObjectRecordByte_UnpackObjectRecordByte Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordObject.PackObjectRecordObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectRecordObject&  InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordObject::PackObjectRecordObject(class UObject* InWorldContextObject, const struct FYYMsgObjectRecordObject& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordObject", "PackObjectRecordObject");

	Params::FlatBuffersYYMsgObjectRecordObject_PackObjectRecordObject Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordObject.UnpackObjectRecordObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectRecordObject*        OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordObject::UnpackObjectRecordObject(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectRecordObject* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordObject", "UnpackObjectRecordObject");

	Params::FlatBuffersYYMsgObjectRecordObject_UnpackObjectRecordObject Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.CommandLineParametersBPLibrary.AppendToCommandLine
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    argument                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCommandLineParametersBPLibrary::AppendToCommandLine(const class FString& argument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommandLineParametersBPLibrary", "AppendToCommandLine");

	Params::CommandLineParametersBPLibrary_AppendToCommandLine Parms{};

	Parms.argument = std::move(argument);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.CommandLineParametersBPLibrary.CommandLineArgIntValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCommandLineParametersBPLibrary::CommandLineArgIntValue(const class FString& Key, int32* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommandLineParametersBPLibrary", "CommandLineArgIntValue");

	Params::CommandLineParametersBPLibrary_CommandLineArgIntValue Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = Parms.Value;

	return Parms.ReturnValue;
}


// Function SiliconRising.CommandLineParametersBPLibrary.CommandLineArgPresent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCommandLineParametersBPLibrary::CommandLineArgPresent(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommandLineParametersBPLibrary", "CommandLineArgPresent");

	Params::CommandLineParametersBPLibrary_CommandLineArgPresent Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CommandLineParametersBPLibrary.CommandLineArgValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          Value                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCommandLineParametersBPLibrary::CommandLineArgValue(const class FString& Key, class FString* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommandLineParametersBPLibrary", "CommandLineArgValue");

	Params::CommandLineParametersBPLibrary_CommandLineArgValue Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = std::move(Parms.Value);

	return Parms.ReturnValue;
}


// Function SiliconRising.CommandLineParametersBPLibrary.GetFullCommandLine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCommandLineParametersBPLibrary::GetFullCommandLine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommandLineParametersBPLibrary", "GetFullCommandLine");

	Params::CommandLineParametersBPLibrary_GetFullCommandLine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CommandLineParametersBPLibrary.GetOriginalCommandLine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCommandLineParametersBPLibrary::GetOriginalCommandLine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommandLineParametersBPLibrary", "GetOriginalCommandLine");

	Params::CommandLineParametersBPLibrary_GetOriginalCommandLine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CommandLineParametersBPLibrary.SetFullCommandLine
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCommandLineParametersBPLibrary::SetFullCommandLine(const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommandLineParametersBPLibrary", "SetFullCommandLine");

	Params::CommandLineParametersBPLibrary_SetFullCommandLine Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.AES_CBC_DecryptBytesArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<uint8>&                    BytesArray                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InitiationVector                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UCryptBPLibrary::AES_CBC_DecryptBytesArray(const TArray<uint8>& BytesArray, const TArray<uint8>& InitiationVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "AES_CBC_DecryptBytesArray");

	Params::CryptBPLibrary_AES_CBC_DecryptBytesArray Parms{};

	Parms.BytesArray = std::move(BytesArray);
	Parms.InitiationVector = std::move(InitiationVector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.AES_CBC_DecryptBytesArrayToString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<uint8>&                    BytesArray                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InitiationVector                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCryptBPLibrary::AES_CBC_DecryptBytesArrayToString(const TArray<uint8>& BytesArray, const TArray<uint8>& InitiationVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "AES_CBC_DecryptBytesArrayToString");

	Params::CryptBPLibrary_AES_CBC_DecryptBytesArrayToString Parms{};

	Parms.BytesArray = std::move(BytesArray);
	Parms.InitiationVector = std::move(InitiationVector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.AES_CBC_EncryptBytesArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<uint8>&                    BytesArray                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InitiationVector                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UCryptBPLibrary::AES_CBC_EncryptBytesArray(const TArray<uint8>& BytesArray, const TArray<uint8>& InitiationVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "AES_CBC_EncryptBytesArray");

	Params::CryptBPLibrary_AES_CBC_EncryptBytesArray Parms{};

	Parms.BytesArray = std::move(BytesArray);
	Parms.InitiationVector = std::move(InitiationVector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.AES_CBC_EncryptStringToBytesArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InitiationVector                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UCryptBPLibrary::AES_CBC_EncryptStringToBytesArray(const class FString& String, const TArray<uint8>& InitiationVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "AES_CBC_EncryptStringToBytesArray");

	Params::CryptBPLibrary_AES_CBC_EncryptStringToBytesArray Parms{};

	Parms.String = std::move(String);
	Parms.InitiationVector = std::move(InitiationVector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.AES_CTR_BytesArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<uint8>&                    BytesArray                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InitiationVector                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UCryptBPLibrary::AES_CTR_BytesArray(const TArray<uint8>& BytesArray, const TArray<uint8>& InitiationVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "AES_CTR_BytesArray");

	Params::CryptBPLibrary_AES_CTR_BytesArray Parms{};

	Parms.BytesArray = std::move(BytesArray);
	Parms.InitiationVector = std::move(InitiationVector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.AES_CTR_String
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InitiationVector                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCryptBPLibrary::AES_CTR_String(const class FString& String, const TArray<uint8>& InitiationVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "AES_CTR_String");

	Params::CryptBPLibrary_AES_CTR_String Parms{};

	Parms.String = std::move(String);
	Parms.InitiationVector = std::move(InitiationVector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.AES_ECB_DecryptBytesArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<uint8>&                    BytesArray                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UCryptBPLibrary::AES_ECB_DecryptBytesArray(const TArray<uint8>& BytesArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "AES_ECB_DecryptBytesArray");

	Params::CryptBPLibrary_AES_ECB_DecryptBytesArray Parms{};

	Parms.BytesArray = std::move(BytesArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.AES_ECB_DecryptBytesArrayToString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<uint8>&                    BytesArray                                             (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCryptBPLibrary::AES_ECB_DecryptBytesArrayToString(const TArray<uint8>& BytesArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "AES_ECB_DecryptBytesArrayToString");

	Params::CryptBPLibrary_AES_ECB_DecryptBytesArrayToString Parms{};

	Parms.BytesArray = std::move(BytesArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.AES_ECB_EncryptBytesArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<uint8>&                    BytesArray                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UCryptBPLibrary::AES_ECB_EncryptBytesArray(const TArray<uint8>& BytesArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "AES_ECB_EncryptBytesArray");

	Params::CryptBPLibrary_AES_ECB_EncryptBytesArray Parms{};

	Parms.BytesArray = std::move(BytesArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.AES_ECB_EncryptStringToBytesArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    String                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UCryptBPLibrary::AES_ECB_EncryptStringToBytesArray(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "AES_ECB_EncryptStringToBytesArray");

	Params::CryptBPLibrary_AES_ECB_EncryptStringToBytesArray Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.Base64DecodeFromBytesArrayToBytesArray
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<uint8>&                    BytesArray                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UCryptBPLibrary::Base64DecodeFromBytesArrayToBytesArray(const TArray<uint8>& BytesArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "Base64DecodeFromBytesArrayToBytesArray");

	Params::CryptBPLibrary_Base64DecodeFromBytesArrayToBytesArray Parms{};

	Parms.BytesArray = std::move(BytesArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.Base64DecodeFromBytesArrayToString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<uint8>&                    BytesArray                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCryptBPLibrary::Base64DecodeFromBytesArrayToString(const TArray<uint8>& BytesArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "Base64DecodeFromBytesArrayToString");

	Params::CryptBPLibrary_Base64DecodeFromBytesArrayToString Parms{};

	Parms.BytesArray = std::move(BytesArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.Base64DecodeFromStringToBytesArray
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Source                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UCryptBPLibrary::Base64DecodeFromStringToBytesArray(const class FString& Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "Base64DecodeFromStringToBytesArray");

	Params::CryptBPLibrary_Base64DecodeFromStringToBytesArray Parms{};

	Parms.Source = std::move(Source);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.Base64DecodeFromStringToString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Source                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCryptBPLibrary::Base64DecodeFromStringToString(const class FString& Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "Base64DecodeFromStringToString");

	Params::CryptBPLibrary_Base64DecodeFromStringToString Parms{};

	Parms.Source = std::move(Source);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.Base64EncodeFromBytesArray
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<uint8>&                    BytesArray                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCryptBPLibrary::Base64EncodeFromBytesArray(const TArray<uint8>& BytesArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "Base64EncodeFromBytesArray");

	Params::CryptBPLibrary_Base64EncodeFromBytesArray Parms{};

	Parms.BytesArray = std::move(BytesArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.Base64EncodeFromString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Source                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCryptBPLibrary::Base64EncodeFromString(const class FString& Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "Base64EncodeFromString");

	Params::CryptBPLibrary_Base64EncodeFromString Parms{};

	Parms.Source = std::move(Source);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.BinToDec
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    BinaryString                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCryptBPLibrary::BinToDec(const class FString& BinaryString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "BinToDec");

	Params::CryptBPLibrary_BinToDec Parms{};

	Parms.BinaryString = std::move(BinaryString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.CaesarDecryptBytesArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<uint8>&                    BytesArray                                             (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UCryptBPLibrary::CaesarDecryptBytesArray(const TArray<uint8>& BytesArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "CaesarDecryptBytesArray");

	Params::CryptBPLibrary_CaesarDecryptBytesArray Parms{};

	Parms.BytesArray = std::move(BytesArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.CaesarDecryptString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    String                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCryptBPLibrary::CaesarDecryptString(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "CaesarDecryptString");

	Params::CryptBPLibrary_CaesarDecryptString Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.CaesarEncryptBytesArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<uint8>&                    BytesArray                                             (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UCryptBPLibrary::CaesarEncryptBytesArray(const TArray<uint8>& BytesArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "CaesarEncryptBytesArray");

	Params::CryptBPLibrary_CaesarEncryptBytesArray Parms{};

	Parms.BytesArray = std::move(BytesArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.CaesarEncryptString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    String                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCryptBPLibrary::CaesarEncryptString(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "CaesarEncryptString");

	Params::CryptBPLibrary_CaesarEncryptString Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.ConvertBytesToString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<uint8>&                    Bytes                                                  (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCryptBPLibrary::ConvertBytesToString(const TArray<uint8>& Bytes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "ConvertBytesToString");

	Params::CryptBPLibrary_ConvertBytesToString Parms{};

	Parms.Bytes = std::move(Bytes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.ConvertStringToBytes
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    String                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UCryptBPLibrary::ConvertStringToBytes(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "ConvertStringToBytes");

	Params::CryptBPLibrary_ConvertStringToBytes Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.DecToBin
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Integer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCryptBPLibrary::DecToBin(int32 Integer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "DecToBin");

	Params::CryptBPLibrary_DecToBin Parms{};

	Parms.Integer = Integer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.DecToHex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Integer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCryptBPLibrary::DecToHex(int32 Integer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "DecToHex");

	Params::CryptBPLibrary_DecToHex Parms{};

	Parms.Integer = Integer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.HexToDec
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    HexadecimalString                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCryptBPLibrary::HexToDec(const class FString& HexadecimalString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "HexToDec");

	Params::CryptBPLibrary_HexToDec Parms{};

	Parms.HexadecimalString = std::move(HexadecimalString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.InitializeKeysByte
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const uint8                             CaesarKey                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    XORKey                                                 (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    AESKey                                                 (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UCryptBPLibrary::InitializeKeysByte(const uint8 CaesarKey, const TArray<uint8>& XORKey, const TArray<uint8>& AESKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "InitializeKeysByte");

	Params::CryptBPLibrary_InitializeKeysByte Parms{};

	Parms.CaesarKey = CaesarKey;
	Parms.XORKey = std::move(XORKey);
	Parms.AESKey = std::move(AESKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.CryptBPLibrary.InitializeKeysString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const uint8                             CaesarKey                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    XORKey                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    AESKey                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCryptBPLibrary::InitializeKeysString(const uint8 CaesarKey, const class FString& XORKey, const class FString& AESKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "InitializeKeysString");

	Params::CryptBPLibrary_InitializeKeysString Parms{};

	Parms.CaesarKey = CaesarKey;
	Parms.XORKey = std::move(XORKey);
	Parms.AESKey = std::move(AESKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.CryptBPLibrary.PKCS7Padding
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Source                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCryptBPLibrary::PKCS7Padding(const class FString& Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "PKCS7Padding");

	Params::CryptBPLibrary_PKCS7Padding Parms{};

	Parms.Source = std::move(Source);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.PKCS7PaddingForArray
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<uint8>&                    Source                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UCryptBPLibrary::PKCS7PaddingForArray(const TArray<uint8>& Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "PKCS7PaddingForArray");

	Params::CryptBPLibrary_PKCS7PaddingForArray Parms{};

	Parms.Source = std::move(Source);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.PKCS7Unpadding
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Source                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCryptBPLibrary::PKCS7Unpadding(const class FString& Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "PKCS7Unpadding");

	Params::CryptBPLibrary_PKCS7Unpadding Parms{};

	Parms.Source = std::move(Source);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.PKCS7UnpaddingForArray
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<uint8>&                    Source                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UCryptBPLibrary::PKCS7UnpaddingForArray(const TArray<uint8>& Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "PKCS7UnpaddingForArray");

	Params::CryptBPLibrary_PKCS7UnpaddingForArray Parms{};

	Parms.Source = std::move(Source);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.RSADecrypt
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Key                                                    (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Content                                                (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPublic                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCryptBPLibrary::RSADecrypt(const class FString& Key, const class FString& Content, bool bPublic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "RSADecrypt");

	Params::CryptBPLibrary_RSADecrypt Parms{};

	Parms.Key = std::move(Key);
	Parms.Content = std::move(Content);
	Parms.bPublic = bPublic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.RSADecryptForArray
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Key                                                    (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    Content                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bPublic                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UCryptBPLibrary::RSADecryptForArray(const class FString& Key, const TArray<uint8>& Content, bool bPublic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "RSADecryptForArray");

	Params::CryptBPLibrary_RSADecryptForArray Parms{};

	Parms.Key = std::move(Key);
	Parms.Content = std::move(Content);
	Parms.bPublic = bPublic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.RSAEncrypt
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Key                                                    (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Content                                                (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPublic                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCryptBPLibrary::RSAEncrypt(const class FString& Key, const class FString& Content, bool bPublic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "RSAEncrypt");

	Params::CryptBPLibrary_RSAEncrypt Parms{};

	Parms.Key = std::move(Key);
	Parms.Content = std::move(Content);
	Parms.bPublic = bPublic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.RSAEncryptForArray
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Key                                                    (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    Content                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bPublic                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UCryptBPLibrary::RSAEncryptForArray(const class FString& Key, const TArray<uint8>& Content, bool bPublic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "RSAEncryptForArray");

	Params::CryptBPLibrary_RSAEncryptForArray Parms{};

	Parms.Key = std::move(Key);
	Parms.Content = std::move(Content);
	Parms.bPublic = bPublic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.XORBytesArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<uint8>&                    BytesArray                                             (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UCryptBPLibrary::XORBytesArray(const TArray<uint8>& BytesArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "XORBytesArray");

	Params::CryptBPLibrary_XORBytesArray Parms{};

	Parms.BytesArray = std::move(BytesArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.CryptBPLibrary.XORString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    String                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCryptBPLibrary::XORString(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CryptBPLibrary", "XORString");

	Params::CryptBPLibrary_XORString Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.HttpUtilities.GetCurrentLanguage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AHttpUtilities::GetCurrentLanguage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HttpUtilities", "GetCurrentLanguage");

	Params::HttpUtilities_GetCurrentLanguage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.HttpUtilities.GetJsonFromUrl
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(bool Success)>&    Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AHttpUtilities::GetJsonFromUrl(const class FString& URL, const TDelegate<void(bool Success)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HttpUtilities", "GetJsonFromUrl");

	Params::HttpUtilities_GetJsonFromUrl Parms{};

	Parms.URL = std::move(URL);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.HttpUtilities.GetLeaderBoardData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            Data                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TDelegate<void(bool Success)>&    Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AHttpUtilities::GetLeaderBoardData(const class FString& URL, const TArray<class FString>& Data, const TDelegate<void(bool Success)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HttpUtilities", "GetLeaderBoardData");

	Params::HttpUtilities_GetLeaderBoardData Parms{};

	Parms.URL = std::move(URL);
	Parms.Data = std::move(Data);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.HttpUtilities.GetListLeaderBoard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FLeaderBoardData>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLeaderBoardData> AHttpUtilities::GetListLeaderBoard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HttpUtilities", "GetListLeaderBoard");

	Params::HttpUtilities_GetListLeaderBoard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.HttpUtilities.GetPageID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AHttpUtilities::GetPageID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HttpUtilities", "GetPageID");

	Params::HttpUtilities_GetPageID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.HttpUtilities.GetPlayerTopInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FPlayerTopInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FPlayerTopInfo AHttpUtilities::GetPlayerTopInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HttpUtilities", "GetPlayerTopInfo");

	Params::HttpUtilities_GetPlayerTopInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.HttpUtilities.GetSteamUserHeadUrl
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(bool Success)>&    Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AHttpUtilities::GetSteamUserHeadUrl(const class FString& URL, const TDelegate<void(bool Success)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HttpUtilities", "GetSteamUserHeadUrl");

	Params::HttpUtilities_GetSteamUserHeadUrl Parms{};

	Parms.URL = std::move(URL);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.HttpUtilities.GetStringErrorNumber
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AHttpUtilities::GetStringErrorNumber()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HttpUtilities", "GetStringErrorNumber");

	Params::HttpUtilities_GetStringErrorNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.HttpUtilities.GetStringFromJson
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    JsonKey                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AHttpUtilities::GetStringFromJson(const class FString& JsonKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HttpUtilities", "GetStringFromJson");

	Params::HttpUtilities_GetStringFromJson Parms{};

	Parms.JsonKey = std::move(JsonKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.HttpUtilities.GetStringFromJsonFields
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            JsonField                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const class FString&                    JsonKey                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   isOK                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AHttpUtilities::GetStringFromJsonFields(const TArray<class FString>& JsonField, const class FString& JsonKey, bool* isOK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HttpUtilities", "GetStringFromJsonFields");

	Params::HttpUtilities_GetStringFromJsonFields Parms{};

	Parms.JsonField = std::move(JsonField);
	Parms.JsonKey = std::move(JsonKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (isOK != nullptr)
		*isOK = Parms.isOK;

	return Parms.ReturnValue;
}


// Function SiliconRising.HttpUtilities.GetStringResponse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AHttpUtilities::GetStringResponse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HttpUtilities", "GetStringResponse");

	Params::HttpUtilities_GetStringResponse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.HttpUtilities.Login
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FString, class FString>&ExtraData                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TDelegate<void(bool Success)>&    Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AHttpUtilities::Login(const class FString& URL, const TMap<class FString, class FString>& ExtraData, const TDelegate<void(bool Success)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HttpUtilities", "Login");

	Params::HttpUtilities_Login Parms{};

	Parms.URL = std::move(URL);
	Parms.ExtraData = std::move(ExtraData);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.HttpUtilities.PostUrl
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Data                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(bool Success)>&    Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AHttpUtilities::PostUrl(const class FString& URL, const class FString& Data, const TDelegate<void(bool Success)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HttpUtilities", "PostUrl");

	Params::HttpUtilities_PostUrl Parms{};

	Parms.URL = std::move(URL);
	Parms.Data = std::move(Data);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.HttpUtilities.SendScore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            Data                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TDelegate<void(bool Success)>&    Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AHttpUtilities::SendScore(const class FString& URL, const TArray<class FString>& Data, const TDelegate<void(bool Success)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HttpUtilities", "SendScore");

	Params::HttpUtilities_SendScore Parms{};

	Parms.URL = std::move(URL);
	Parms.Data = std::move(Data);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.HttpUtilities.VerifyGame
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FString, class FString>&ExtraData                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TDelegate<void(bool Success)>&    Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AHttpUtilities::VerifyGame(const class FString& URL, const TMap<class FString, class FString>& ExtraData, const TDelegate<void(bool Success)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HttpUtilities", "VerifyGame");

	Params::HttpUtilities_VerifyGame Parms{};

	Parms.URL = std::move(URL);
	Parms.ExtraData = std::move(ExtraData);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.Mer2WheeledVehicleMovement4W.GetEngineMaxRPM
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMer2WheeledVehicleMovement4W::GetEngineMaxRPM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2WheeledVehicleMovement4W", "GetEngineMaxRPM");

	Params::Mer2WheeledVehicleMovement4W_GetEngineMaxRPM Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.Mer2WheeledVehicleMovement4W.GetFinalSteeringInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMer2WheeledVehicleMovement4W::GetFinalSteeringInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2WheeledVehicleMovement4W", "GetFinalSteeringInput");

	Params::Mer2WheeledVehicleMovement4W_GetFinalSteeringInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.Mer2WheeledVehicleMovement4W.SetEngineMaxRPM
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   fRPM                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMer2WheeledVehicleMovement4W::SetEngineMaxRPM(float fRPM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2WheeledVehicleMovement4W", "SetEngineMaxRPM");

	Params::Mer2WheeledVehicleMovement4W_SetEngineMaxRPM Parms{};

	Parms.fRPM = fRPM;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.Mercenary2GameMode.VerifyUserInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    strToken                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMercenary2GameMode::VerifyUserInfo(const class FString& strToken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mercenary2GameMode", "VerifyUserInfo");

	Params::Mercenary2GameMode_VerifyUserInfo Parms{};

	Parms.strToken = std::move(strToken);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.Mercenary2_PVP_GameMode.Evt_NewPlayerConnect
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                NewPlayerController                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RoomName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    RoomID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    PlayerID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMercenary2_PVP_GameMode::Evt_NewPlayerConnect(class APlayerController* NewPlayerController, const class FString& RoomName, const class FString& RoomID, const class FString& PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mercenary2_PVP_GameMode", "Evt_NewPlayerConnect");

	Params::Mercenary2_PVP_GameMode_Evt_NewPlayerConnect Parms{};

	Parms.NewPlayerController = NewPlayerController;
	Parms.RoomName = std::move(RoomName);
	Parms.RoomID = std::move(RoomID);
	Parms.PlayerID = std::move(PlayerID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SiliconRising.Mercenary2_PVP_GameMode.ShutdownServer
// (Final, Native, Public, BlueprintCallable)

void AMercenary2_PVP_GameMode::ShutdownServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mercenary2_PVP_GameMode", "ShutdownServer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.TcpSocketConnection.Concat_BytesBytes
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<uint8>&                    A                                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    B                                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> ATcpSocketConnection::Concat_BytesBytes(const TArray<uint8>& A, const TArray<uint8>& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TcpSocketConnection", "Concat_BytesBytes");

	Params::TcpSocketConnection_Concat_BytesBytes Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.TcpSocketConnection.Conv_ByteToBytes
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// uint8                                   InByte                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> ATcpSocketConnection::Conv_ByteToBytes(uint8 InByte)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TcpSocketConnection", "Conv_ByteToBytes");

	Params::TcpSocketConnection_Conv_ByteToBytes Parms{};

	Parms.InByte = InByte;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.TcpSocketConnection.Conv_FloatToBytes
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   InFloat                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> ATcpSocketConnection::Conv_FloatToBytes(float InFloat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TcpSocketConnection", "Conv_FloatToBytes");

	Params::TcpSocketConnection_Conv_FloatToBytes Parms{};

	Parms.InFloat = InFloat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.TcpSocketConnection.Conv_IntToBytes
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   inInt                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> ATcpSocketConnection::Conv_IntToBytes(int32 inInt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TcpSocketConnection", "Conv_IntToBytes");

	Params::TcpSocketConnection_Conv_IntToBytes Parms{};

	Parms.inInt = inInt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.TcpSocketConnection.Conv_StringToBytes
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    InStr                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> ATcpSocketConnection::Conv_StringToBytes(const class FString& InStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TcpSocketConnection", "Conv_StringToBytes");

	Params::TcpSocketConnection_Conv_StringToBytes Parms{};

	Parms.InStr = std::move(InStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.TcpSocketConnection.Message_ReadByte
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<uint8>&                          Message                                                (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 ATcpSocketConnection::Message_ReadByte(TArray<uint8>& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TcpSocketConnection", "Message_ReadByte");

	Params::TcpSocketConnection_Message_ReadByte Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Message = std::move(Parms.Message);

	return Parms.ReturnValue;
}


// Function SiliconRising.TcpSocketConnection.Message_ReadFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<uint8>&                          Message                                                (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATcpSocketConnection::Message_ReadFloat(TArray<uint8>& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TcpSocketConnection", "Message_ReadFloat");

	Params::TcpSocketConnection_Message_ReadFloat Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Message = std::move(Parms.Message);

	return Parms.ReturnValue;
}


// Function SiliconRising.TcpSocketConnection.Message_ReadInt
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<uint8>&                          Message                                                (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ATcpSocketConnection::Message_ReadInt(TArray<uint8>& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TcpSocketConnection", "Message_ReadInt");

	Params::TcpSocketConnection_Message_ReadInt Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Message = std::move(Parms.Message);

	return Parms.ReturnValue;
}


// Function SiliconRising.TcpSocketConnection.Message_ReadString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<uint8>&                          Message                                                (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   StringLength                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ATcpSocketConnection::Message_ReadString(TArray<uint8>& Message, int32 StringLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TcpSocketConnection", "Message_ReadString");

	Params::TcpSocketConnection_Message_ReadString Parms{};

	Parms.Message = std::move(Message);
	Parms.StringLength = StringLength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Message = std::move(Parms.Message);

	return Parms.ReturnValue;
}


// Function SiliconRising.TcpSocketConnection.Connect
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    ipAddress                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Port                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(const class FString& ConnectionId)>&OnDisconnected                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const TDelegate<void(const class FString& ConnectionId)>&OnConnected                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const TDelegate<void(const class FString& ConnectionId, const TArray<uint8>& Message)>&OnMessageReceived                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class FString*                          ConnectionId                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUniqueCheck                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bIsAlreadyConnected                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATcpSocketConnection::Connect(const class FString& ipAddress, int32 Port, const TDelegate<void(const class FString& ConnectionId)>& OnDisconnected, const TDelegate<void(const class FString& ConnectionId)>& OnConnected, const TDelegate<void(const class FString& ConnectionId, const TArray<uint8>& Message)>& OnMessageReceived, class FString* ConnectionId, bool bUniqueCheck, bool* bIsAlreadyConnected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpSocketConnection", "Connect");

	Params::TcpSocketConnection_Connect Parms{};

	Parms.ipAddress = std::move(ipAddress);
	Parms.Port = Port;
	Parms.OnDisconnected = OnDisconnected;
	Parms.OnConnected = OnConnected;
	Parms.OnMessageReceived = OnMessageReceived;
	Parms.bUniqueCheck = bUniqueCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ConnectionId != nullptr)
		*ConnectionId = std::move(Parms.ConnectionId);

	if (bIsAlreadyConnected != nullptr)
		*bIsAlreadyConnected = Parms.bIsAlreadyConnected;
}


// Function SiliconRising.TcpSocketConnection.Disconnect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ConnectionId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATcpSocketConnection::Disconnect(const class FString& ConnectionId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpSocketConnection", "Disconnect");

	Params::TcpSocketConnection_Disconnect Parms{};

	Parms.ConnectionId = std::move(ConnectionId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.TcpSocketConnection.DisconnectAll
// (Final, Native, Public, BlueprintCallable)

void ATcpSocketConnection::DisconnectAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpSocketConnection", "DisconnectAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.TcpSocketConnection.SendData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ConnectionId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    DataToSend                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATcpSocketConnection::SendData(const class FString& ConnectionId, const TArray<uint8>& DataToSend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpSocketConnection", "SendData");

	Params::TcpSocketConnection_SendData Parms{};

	Parms.ConnectionId = std::move(ConnectionId);
	Parms.DataToSend = std::move(DataToSend);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.TcpPvpNetBaseActor.OnConnected
// (Final, Native, Private)
// Parameters:
// const class FString&                    ConnectionId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATcpPvpNetBaseActor::OnConnected(const class FString& ConnectionId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpNetBaseActor", "OnConnected");

	Params::TcpPvpNetBaseActor_OnConnected Parms{};

	Parms.ConnectionId = std::move(ConnectionId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.TcpPvpNetBaseActor.OnDisconnect
// (Final, Native, Private)
// Parameters:
// const class FString&                    ConnectionId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATcpPvpNetBaseActor::OnDisconnect(const class FString& ConnectionId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpNetBaseActor", "OnDisconnect");

	Params::TcpPvpNetBaseActor_OnDisconnect Parms{};

	Parms.ConnectionId = std::move(ConnectionId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.TcpPvpNetBaseActor.OnGameInstanceShutdown
// (Final, Native, Private)

void ATcpPvpNetBaseActor::OnGameInstanceShutdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpNetBaseActor", "OnGameInstanceShutdown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.TcpPvpNetBaseActor.OnReceivedMessage
// (Final, Native, Private, HasOutParams)
// Parameters:
// const class FString&                    ConnectionId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    Message                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ATcpPvpNetBaseActor::OnReceivedMessage(const class FString& ConnectionId, const TArray<uint8>& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpNetBaseActor", "OnReceivedMessage");

	Params::TcpPvpNetBaseActor_OnReceivedMessage Parms{};

	Parms.ConnectionId = std::move(ConnectionId);
	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.TcpPvpClientToBackendServer.CheckConnection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATcpPvpClientToBackendServer::CheckConnection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpClientToBackendServer", "CheckConnection");

	Params::TcpPvpClientToBackendServer_CheckConnection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.TcpPvpClientToBackendServer.ClearCurrentRoomInfo
// (Final, Native, Public, BlueprintCallable)

void ATcpPvpClientToBackendServer::ClearCurrentRoomInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpClientToBackendServer", "ClearCurrentRoomInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.TcpPvpClientToBackendServer.Evt_OnConnected
// (Event, Public, BlueprintEvent)

void ATcpPvpClientToBackendServer::Evt_OnConnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpClientToBackendServer", "Evt_OnConnected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SiliconRising.TcpPvpClientToBackendServer.Evt_OnDisconnect
// (Event, Public, BlueprintEvent)

void ATcpPvpClientToBackendServer::Evt_OnDisconnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpClientToBackendServer", "Evt_OnDisconnect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SiliconRising.TcpPvpClientToBackendServer.Evt_ReceiveMessage
// (Event, Public, BlueprintEvent)
// Parameters:
// const struct FYYMsgData&                Message                                                (Parm, NativeAccessSpecifierPublic)

void ATcpPvpClientToBackendServer::Evt_ReceiveMessage(const struct FYYMsgData& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpClientToBackendServer", "Evt_ReceiveMessage");

	Params::TcpPvpClientToBackendServer_Evt_ReceiveMessage Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SiliconRising.TcpPvpClientToBackendServer.GetCurrentPlayerID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FYYMsgIdent                      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FYYMsgIdent ATcpPvpClientToBackendServer::GetCurrentPlayerID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpClientToBackendServer", "GetCurrentPlayerID");

	Params::TcpPvpClientToBackendServer_GetCurrentPlayerID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.TcpPvpClientToBackendServer.GetCurrentRoomInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FYYMsgReqAckRoomInfo             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FYYMsgReqAckRoomInfo ATcpPvpClientToBackendServer::GetCurrentRoomInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpClientToBackendServer", "GetCurrentRoomInfo");

	Params::TcpPvpClientToBackendServer_GetCurrentRoomInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.TcpPvpClientToBackendServer.MsgID_MID_ACK_PINGPONG
// (Final, Native, Private, HasOutParams)
// Parameters:
// const class FString&                    ConnectionId                                           (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MsgID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ATcpPvpClientToBackendServer::MsgID_MID_ACK_PINGPONG(const class FString& ConnectionId, int32 MsgID, const TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpClientToBackendServer", "MsgID_MID_ACK_PINGPONG");

	Params::TcpPvpClientToBackendServer_MsgID_MID_ACK_PINGPONG Parms{};

	Parms.ConnectionId = std::move(ConnectionId);
	Parms.MsgID = MsgID;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.TcpPvpClientToBackendServer.OnRecieveAllMessage
// (Final, Native, Private, HasOutParams)
// Parameters:
// const class FString&                    ConnectionId                                           (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MsgID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ATcpPvpClientToBackendServer::OnRecieveAllMessage(const class FString& ConnectionId, int32 MsgID, const TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpClientToBackendServer", "OnRecieveAllMessage");

	Params::TcpPvpClientToBackendServer_OnRecieveAllMessage Parms{};

	Parms.ConnectionId = std::move(ConnectionId);
	Parms.MsgID = MsgID;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.TcpPvpClientToBackendServer.SendMessageToServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FYYMsgData&                Message                                                (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATcpPvpClientToBackendServer::SendMessageToServer(const struct FYYMsgData& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpClientToBackendServer", "SendMessageToServer");

	Params::TcpPvpClientToBackendServer_SendMessageToServer Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.TcpPvpClientToBackendServer.SetCurrentPlayerID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FYYMsgIdent&               Value                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ATcpPvpClientToBackendServer::SetCurrentPlayerID(const struct FYYMsgIdent& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpClientToBackendServer", "SetCurrentPlayerID");

	Params::TcpPvpClientToBackendServer_SetCurrentPlayerID Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.TcpPvpClientToBackendServer.SetCurrentRoomInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FYYMsgReqAckRoomInfo&      Value                                                  (Parm, NativeAccessSpecifierPublic)

void ATcpPvpClientToBackendServer::SetCurrentRoomInfo(const struct FYYMsgReqAckRoomInfo& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpClientToBackendServer", "SetCurrentRoomInfo");

	Params::TcpPvpClientToBackendServer_SetCurrentRoomInfo Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.TcpPvpClientToBackendServer.StartConnectToServer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bUniqueCheck                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bIsAlreadyConnected                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATcpPvpClientToBackendServer::StartConnectToServer(bool bUniqueCheck, bool* bIsAlreadyConnected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpClientToBackendServer", "StartConnectToServer");

	Params::TcpPvpClientToBackendServer_StartConnectToServer Parms{};

	Parms.bUniqueCheck = bUniqueCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsAlreadyConnected != nullptr)
		*bIsAlreadyConnected = Parms.bIsAlreadyConnected;

	return Parms.ReturnValue;
}


// Function SiliconRising.TcpPvpServerToBackendServer.Evt_OnConnected
// (Event, Public, BlueprintEvent)

void ATcpPvpServerToBackendServer::Evt_OnConnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpServerToBackendServer", "Evt_OnConnected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SiliconRising.TcpPvpServerToBackendServer.Evt_OnDisconnect
// (Event, Public, BlueprintEvent)

void ATcpPvpServerToBackendServer::Evt_OnDisconnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpServerToBackendServer", "Evt_OnDisconnect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SiliconRising.TcpPvpServerToBackendServer.Evt_ReceiveMessage
// (Event, Public, BlueprintEvent)
// Parameters:
// const struct FYYMsgData&                Message                                                (Parm, NativeAccessSpecifierPublic)

void ATcpPvpServerToBackendServer::Evt_ReceiveMessage(const struct FYYMsgData& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpServerToBackendServer", "Evt_ReceiveMessage");

	Params::TcpPvpServerToBackendServer_Evt_ReceiveMessage Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SiliconRising.TcpPvpServerToBackendServer.GetServerRunPort
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ATcpPvpServerToBackendServer::GetServerRunPort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpServerToBackendServer", "GetServerRunPort");

	Params::TcpPvpServerToBackendServer_GetServerRunPort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.TcpPvpServerToBackendServer.MsgID_MID_ACK_PINGPONG
// (Final, Native, Private, HasOutParams)
// Parameters:
// const class FString&                    ConnectionId                                           (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MsgID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ATcpPvpServerToBackendServer::MsgID_MID_ACK_PINGPONG(const class FString& ConnectionId, int32 MsgID, const TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpServerToBackendServer", "MsgID_MID_ACK_PINGPONG");

	Params::TcpPvpServerToBackendServer_MsgID_MID_ACK_PINGPONG Parms{};

	Parms.ConnectionId = std::move(ConnectionId);
	Parms.MsgID = MsgID;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.TcpPvpServerToBackendServer.OnRecieveAllMessage
// (Final, Native, Private, HasOutParams)
// Parameters:
// const class FString&                    ConnectionId                                           (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MsgID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ATcpPvpServerToBackendServer::OnRecieveAllMessage(const class FString& ConnectionId, int32 MsgID, const TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpServerToBackendServer", "OnRecieveAllMessage");

	Params::TcpPvpServerToBackendServer_OnRecieveAllMessage Parms{};

	Parms.ConnectionId = std::move(ConnectionId);
	Parms.MsgID = MsgID;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.TcpPvpServerToBackendServer.SendMessageToServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FYYMsgData&                Message                                                (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATcpPvpServerToBackendServer::SendMessageToServer(const struct FYYMsgData& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpServerToBackendServer", "SendMessageToServer");

	Params::TcpPvpServerToBackendServer_SendMessageToServer Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.TcpPvpServerToBackendServer.StartConnectToServer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bUniqueCheck                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bIsAlreadyConnected                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATcpPvpServerToBackendServer::StartConnectToServer(bool bUniqueCheck, bool* bIsAlreadyConnected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TcpPvpServerToBackendServer", "StartConnectToServer");

	Params::TcpPvpServerToBackendServer_StartConnectToServer Parms{};

	Parms.bUniqueCheck = bUniqueCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsAlreadyConnected != nullptr)
		*bIsAlreadyConnected = Parms.bIsAlreadyConnected;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.Add_FYYMsgInt64FYYMsgInt64
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FYYMsgInt64&               A                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FYYMsgInt64&               B                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FYYMsgInt64                      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FYYMsgInt64 UUtilityBPLibrary::Add_FYYMsgInt64FYYMsgInt64(const struct FYYMsgInt64& A, const struct FYYMsgInt64& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "Add_FYYMsgInt64FYYMsgInt64");

	Params::UtilityBPLibrary_Add_FYYMsgInt64FYYMsgInt64 Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.ChangeCurrentLevelToListen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUtilityBPLibrary::ChangeCurrentLevelToListen(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "ChangeCurrentLevelToListen");

	Params::UtilityBPLibrary_ChangeCurrentLevelToListen Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.DecryptString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUtilityBPLibrary::DecryptString(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "DecryptString");

	Params::UtilityBPLibrary_DecryptString Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.DecryptStringKey
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUtilityBPLibrary::DecryptStringKey(const class FString& String, const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "DecryptStringKey");

	Params::UtilityBPLibrary_DecryptStringKey Parms{};

	Parms.String = std::move(String);
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.Divide_FYYMsgInt64FYYMsgInt64
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FYYMsgInt64&               A                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FYYMsgInt64&               B                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FYYMsgInt64                      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FYYMsgInt64 UUtilityBPLibrary::Divide_FYYMsgInt64FYYMsgInt64(const struct FYYMsgInt64& A, const struct FYYMsgInt64& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "Divide_FYYMsgInt64FYYMsgInt64");

	Params::UtilityBPLibrary_Divide_FYYMsgInt64FYYMsgInt64 Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.EncryptString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUtilityBPLibrary::EncryptString(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "EncryptString");

	Params::UtilityBPLibrary_EncryptString Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.EncryptStringKey
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUtilityBPLibrary::EncryptStringKey(const class FString& String, const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "EncryptStringKey");

	Params::UtilityBPLibrary_EncryptStringKey Parms{};

	Parms.String = std::move(String);
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.EqualEqual_FYYMsgInt64FYYMsgInt64
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FYYMsgInt64&               A                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FYYMsgInt64&               B                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUtilityBPLibrary::EqualEqual_FYYMsgInt64FYYMsgInt64(const struct FYYMsgInt64& A, const struct FYYMsgInt64& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "EqualEqual_FYYMsgInt64FYYMsgInt64");

	Params::UtilityBPLibrary_EqualEqual_FYYMsgInt64FYYMsgInt64 Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.GameBuildNumber
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUtilityBPLibrary::GameBuildNumber()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "GameBuildNumber");

	Params::UtilityBPLibrary_GameBuildNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.GameMajorNumber
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUtilityBPLibrary::GameMajorNumber()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "GameMajorNumber");

	Params::UtilityBPLibrary_GameMajorNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.GameMinorNumber
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUtilityBPLibrary::GameMinorNumber()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "GameMinorNumber");

	Params::UtilityBPLibrary_GameMinorNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.GamePatchNumber
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUtilityBPLibrary::GamePatchNumber()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "GamePatchNumber");

	Params::UtilityBPLibrary_GamePatchNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.GameVersionString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUtilityBPLibrary::GameVersionString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "GameVersionString");

	Params::UtilityBPLibrary_GameVersionString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.GetBuildMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUtilityBPLibrary::GetBuildMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "GetBuildMode");

	Params::UtilityBPLibrary_GetBuildMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.GetChannelID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUtilityBPLibrary::GetChannelID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "GetChannelID");

	Params::UtilityBPLibrary_GetChannelID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.GetCurrentWorldType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUtilityBPLibrary::GetCurrentWorldType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "GetCurrentWorldType");

	Params::UtilityBPLibrary_GetCurrentWorldType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.GetHMDMonitorName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUtilityBPLibrary::GetHMDMonitorName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "GetHMDMonitorName");

	Params::UtilityBPLibrary_GetHMDMonitorName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.GetHMDType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EVRHeadMountedDevicType_Mer2            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EVRHeadMountedDevicType_Mer2 UUtilityBPLibrary::GetHMDType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "GetHMDType");

	Params::UtilityBPLibrary_GetHMDType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.GetHostByName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    hostname                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUtilityBPLibrary::GetHostByName(const class FString& hostname)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "GetHostByName");

	Params::UtilityBPLibrary_GetHostByName Parms{};

	Parms.hostname = std::move(hostname);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.GetMachineID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUtilityBPLibrary::GetMachineID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "GetMachineID");

	Params::UtilityBPLibrary_GetMachineID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.GetPVPServerIP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUtilityBPLibrary::GetPVPServerIP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "GetPVPServerIP");

	Params::UtilityBPLibrary_GetPVPServerIP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.GetSteamAchievementsFromIni
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FOnlineAchievementSteam>* OutArray                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUtilityBPLibrary::GetSteamAchievementsFromIni(TArray<struct FOnlineAchievementSteam>* OutArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "GetSteamAchievementsFromIni");

	Params::UtilityBPLibrary_GetSteamAchievementsFromIni Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutArray != nullptr)
		*OutArray = std::move(Parms.OutArray);

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.GetViveportHeadUrl
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUtilityBPLibrary::GetViveportHeadUrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "GetViveportHeadUrl");

	Params::UtilityBPLibrary_GetViveportHeadUrl Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.GetViveportID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUtilityBPLibrary::GetViveportID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "GetViveportID");

	Params::UtilityBPLibrary_GetViveportID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.GetViveportNickName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUtilityBPLibrary::GetViveportNickName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "GetViveportNickName");

	Params::UtilityBPLibrary_GetViveportNickName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.GetVRControllerDeviceID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUtilityBPLibrary::GetVRControllerDeviceID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "GetVRControllerDeviceID");

	Params::UtilityBPLibrary_GetVRControllerDeviceID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.GetVRDevicePropertyString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EVRDeviceProperty_String                PropertyToRetrieve                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DeviceID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          StringValue                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBPOVRResultSwitch*                     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUtilityBPLibrary::GetVRDevicePropertyString(EVRDeviceProperty_String PropertyToRetrieve, int32 DeviceID, class FString* StringValue, EBPOVRResultSwitch* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "GetVRDevicePropertyString");

	Params::UtilityBPLibrary_GetVRDevicePropertyString Parms{};

	Parms.PropertyToRetrieve = PropertyToRetrieve;
	Parms.DeviceID = DeviceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (StringValue != nullptr)
		*StringValue = std::move(Parms.StringValue);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SiliconRising.UtilityBPLibrary.Greater_FYYMsgInt64FYYMsgInt64
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FYYMsgInt64&               A                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FYYMsgInt64&               B                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUtilityBPLibrary::Greater_FYYMsgInt64FYYMsgInt64(const struct FYYMsgInt64& A, const struct FYYMsgInt64& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "Greater_FYYMsgInt64FYYMsgInt64");

	Params::UtilityBPLibrary_Greater_FYYMsgInt64FYYMsgInt64 Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.GreaterEqual_FYYMsgInt64FYYMsgInt64
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FYYMsgInt64&               A                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FYYMsgInt64&               B                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUtilityBPLibrary::GreaterEqual_FYYMsgInt64FYYMsgInt64(const struct FYYMsgInt64& A, const struct FYYMsgInt64& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "GreaterEqual_FYYMsgInt64FYYMsgInt64");

	Params::UtilityBPLibrary_GreaterEqual_FYYMsgInt64FYYMsgInt64 Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.Int64ToString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FYYMsgInt64&               Value                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUtilityBPLibrary::Int64ToString(const struct FYYMsgInt64& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "Int64ToString");

	Params::UtilityBPLibrary_Int64ToString Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.IsDevelopmentMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUtilityBPLibrary::IsDevelopmentMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "IsDevelopmentMode");

	Params::UtilityBPLibrary_IsDevelopmentMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.IsPlayInEditor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUtilityBPLibrary::IsPlayInEditor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "IsPlayInEditor");

	Params::UtilityBPLibrary_IsPlayInEditor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.Less_FYYMsgInt64FYYMsgInt64
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FYYMsgInt64&               A                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FYYMsgInt64&               B                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUtilityBPLibrary::Less_FYYMsgInt64FYYMsgInt64(const struct FYYMsgInt64& A, const struct FYYMsgInt64& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "Less_FYYMsgInt64FYYMsgInt64");

	Params::UtilityBPLibrary_Less_FYYMsgInt64FYYMsgInt64 Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.LessEqual_FYYMsgInt64FYYMsgInt64
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FYYMsgInt64&               A                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FYYMsgInt64&               B                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUtilityBPLibrary::LessEqual_FYYMsgInt64FYYMsgInt64(const struct FYYMsgInt64& A, const struct FYYMsgInt64& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "LessEqual_FYYMsgInt64FYYMsgInt64");

	Params::UtilityBPLibrary_LessEqual_FYYMsgInt64FYYMsgInt64 Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.Multiply_FYYMsgInt64FYYMsgInt64
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FYYMsgInt64&               A                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FYYMsgInt64&               B                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FYYMsgInt64                      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FYYMsgInt64 UUtilityBPLibrary::Multiply_FYYMsgInt64FYYMsgInt64(const struct FYYMsgInt64& A, const struct FYYMsgInt64& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "Multiply_FYYMsgInt64FYYMsgInt64");

	Params::UtilityBPLibrary_Multiply_FYYMsgInt64FYYMsgInt64 Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.NotEqual_FYYMsgInt64FYYMsgInt64
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FYYMsgInt64&               A                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FYYMsgInt64&               B                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUtilityBPLibrary::NotEqual_FYYMsgInt64FYYMsgInt64(const struct FYYMsgInt64& A, const struct FYYMsgInt64& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "NotEqual_FYYMsgInt64FYYMsgInt64");

	Params::UtilityBPLibrary_NotEqual_FYYMsgInt64FYYMsgInt64 Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.Percent_FYYMsgInt64FYYMsgInt64
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FYYMsgInt64&               A                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FYYMsgInt64&               B                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FYYMsgInt64                      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FYYMsgInt64 UUtilityBPLibrary::Percent_FYYMsgInt64FYYMsgInt64(const struct FYYMsgInt64& A, const struct FYYMsgInt64& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "Percent_FYYMsgInt64FYYMsgInt64");

	Params::UtilityBPLibrary_Percent_FYYMsgInt64FYYMsgInt64 Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.SetPlanarReflectionScreenPercentage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlanarReflectionComponent*       PlanarReflectionComponent                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   nPercentage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUtilityBPLibrary::SetPlanarReflectionScreenPercentage(class UPlanarReflectionComponent* PlanarReflectionComponent, int32 nPercentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "SetPlanarReflectionScreenPercentage");

	Params::UtilityBPLibrary_SetPlanarReflectionScreenPercentage Parms{};

	Parms.PlanarReflectionComponent = PlanarReflectionComponent;
	Parms.nPercentage = nPercentage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.UtilityBPLibrary.SetPVPServerIP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUtilityBPLibrary::SetPVPServerIP(const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "SetPVPServerIP");

	Params::UtilityBPLibrary_SetPVPServerIP Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.UtilityBPLibrary.SetViveportHeadUrl
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUtilityBPLibrary::SetViveportHeadUrl(const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "SetViveportHeadUrl");

	Params::UtilityBPLibrary_SetViveportHeadUrl Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.UtilityBPLibrary.SetViveportID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUtilityBPLibrary::SetViveportID(const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "SetViveportID");

	Params::UtilityBPLibrary_SetViveportID Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.UtilityBPLibrary.SetViveportIsGetUserData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUtilityBPLibrary::SetViveportIsGetUserData(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "SetViveportIsGetUserData");

	Params::UtilityBPLibrary_SetViveportIsGetUserData Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.UtilityBPLibrary.SetViveportNickName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUtilityBPLibrary::SetViveportNickName(const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "SetViveportNickName");

	Params::UtilityBPLibrary_SetViveportNickName Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.UtilityBPLibrary.SetViveportPassword
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUtilityBPLibrary::SetViveportPassword(const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "SetViveportPassword");

	Params::UtilityBPLibrary_SetViveportPassword Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.UtilityBPLibrary.SortArrayWithDefault
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<class UObject*>&           inArray                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class UObject*>*                 OutArray                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UUtilityBPLibrary::SortArrayWithDefault(const TArray<class UObject*>& inArray, TArray<class UObject*>* OutArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "SortArrayWithDefault");

	Params::UtilityBPLibrary_SortArrayWithDefault Parms{};

	Parms.inArray = std::move(inArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutArray != nullptr)
		*OutArray = std::move(Parms.OutArray);
}


// Function SiliconRising.UtilityBPLibrary.StringToInt64
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FYYMsgInt64                      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FYYMsgInt64 UUtilityBPLibrary::StringToInt64(const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "StringToInt64");

	Params::UtilityBPLibrary_StringToInt64 Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.UtilityBPLibrary.Subtract_FYYMsgInt64FYYMsgInt64
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FYYMsgInt64&               A                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FYYMsgInt64&               B                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FYYMsgInt64                      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FYYMsgInt64 UUtilityBPLibrary::Subtract_FYYMsgInt64FYYMsgInt64(const struct FYYMsgInt64& A, const struct FYYMsgInt64& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityBPLibrary", "Subtract_FYYMsgInt64FYYMsgInt64");

	Params::UtilityBPLibrary_Subtract_FYYMsgInt64FYYMsgInt64 Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.ViveportSDK.GetIsDRMCheckOK
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AViveportSDK::GetIsDRMCheckOK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViveportSDK", "GetIsDRMCheckOK");

	Params::ViveportSDK_GetIsDRMCheckOK Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.ViveportSDK.GetIsSDKCheckOK
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AViveportSDK::GetIsSDKCheckOK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViveportSDK", "GetIsSDKCheckOK");

	Params::ViveportSDK_GetIsSDKCheckOK Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.ViveportSDK.StartViveportSDK
// (Final, Native, Public, BlueprintCallable)

void AViveportSDK::StartViveportSDK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViveportSDK", "StartViveportSDK");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.WeaponAnimInstance.ChangeAnimState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EWState                                 CurState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWeaponAnimInstance::ChangeAnimState(EWState CurState, bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponAnimInstance", "ChangeAnimState");

	Params::WeaponAnimInstance_ChangeAnimState Parms{};

	Parms.CurState = CurState;
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.WeaponAnimInstance.GetBoltCurrentOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UWeaponAnimInstance::GetBoltCurrentOffset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponAnimInstance", "GetBoltCurrentOffset");

	Params::WeaponAnimInstance_GetBoltCurrentOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.WeaponAnimInstance.GetBoltCurrentTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform UWeaponAnimInstance::GetBoltCurrentTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponAnimInstance", "GetBoltCurrentTransform");

	Params::WeaponAnimInstance_GetBoltCurrentTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.WeaponAnimInstance.GetBoltInitTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform UWeaponAnimInstance::GetBoltInitTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponAnimInstance", "GetBoltInitTransform");

	Params::WeaponAnimInstance_GetBoltInitTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SiliconRising.WeaponAnimInstance.SetBoltInitTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FTransform&                InitTransform                                          (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UWeaponAnimInstance::SetBoltInitTransform(const struct FTransform& InitTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponAnimInstance", "SetBoltInitTransform");

	Params::WeaponAnimInstance_SetBoltInitTransform Parms{};

	Parms.InitTransform = std::move(InitTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.WeaponAnimInstance.UpdateReloadDelay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   fDelta                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWeaponAnimInstance::UpdateReloadDelay(float fDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponAnimInstance", "UpdateReloadDelay");

	Params::WeaponAnimInstance_UpdateReloadDelay Parms{};

	Parms.fDelta = fDelta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SiliconRising.FlatBuffersYYMsgIdent.PackIdent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgIdent&               InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgIdent::PackIdent(class UObject* InWorldContextObject, const struct FYYMsgIdent& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgIdent", "PackIdent");

	Params::FlatBuffersYYMsgIdent_PackIdent Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgIdent.UnpackIdent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgIdent*                     OutUE4Data                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgIdent::UnpackIdent(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgIdent* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgIdent", "UnpackIdent");

	Params::FlatBuffersYYMsgIdent_UnpackIdent Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgVector2.PackVector2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgVector2&             InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgVector2::PackVector2(class UObject* InWorldContextObject, const struct FYYMsgVector2& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgVector2", "PackVector2");

	Params::FlatBuffersYYMsgVector2_PackVector2 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgVector2.UnpackVector2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgVector2*                   OutUE4Data                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgVector2::UnpackVector2(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgVector2* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgVector2", "UnpackVector2");

	Params::FlatBuffersYYMsgVector2_UnpackVector2 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgVector3.PackVector3
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgVector3&             InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgVector3::PackVector3(class UObject* InWorldContextObject, const struct FYYMsgVector3& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgVector3", "PackVector3");

	Params::FlatBuffersYYMsgVector3_PackVector3 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgVector3.UnpackVector3
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgVector3*                   OutUE4Data                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgVector3::UnpackVector3(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgVector3* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgVector3", "UnpackVector3");

	Params::FlatBuffersYYMsgVector3_UnpackVector3 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgVector4.PackVector4
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgVector4&             InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgVector4::PackVector4(class UObject* InWorldContextObject, const struct FYYMsgVector4& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgVector4", "PackVector4");

	Params::FlatBuffersYYMsgVector4_PackVector4 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgVector4.UnpackVector4
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgVector4*                   OutUE4Data                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgVector4::UnpackVector4(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgVector4* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgVector4", "UnpackVector4");

	Params::FlatBuffersYYMsgVector4_UnpackVector4 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPropertyInt.PackPropertyInt
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgPropertyInt&         InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPropertyInt::PackPropertyInt(class UObject* InWorldContextObject, const struct FYYMsgPropertyInt& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPropertyInt", "PackPropertyInt");

	Params::FlatBuffersYYMsgPropertyInt_PackPropertyInt Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPropertyInt.UnpackPropertyInt
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgPropertyInt*               OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPropertyInt::UnpackPropertyInt(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgPropertyInt* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPropertyInt", "UnpackPropertyInt");

	Params::FlatBuffersYYMsgPropertyInt_UnpackPropertyInt Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPropertyFloat.PackPropertyFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgPropertyFloat&       InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPropertyFloat::PackPropertyFloat(class UObject* InWorldContextObject, const struct FYYMsgPropertyFloat& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPropertyFloat", "PackPropertyFloat");

	Params::FlatBuffersYYMsgPropertyFloat_PackPropertyFloat Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPropertyFloat.UnpackPropertyFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgPropertyFloat*             OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPropertyFloat::UnpackPropertyFloat(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgPropertyFloat* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPropertyFloat", "UnpackPropertyFloat");

	Params::FlatBuffersYYMsgPropertyFloat_UnpackPropertyFloat Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPropertyString.PackPropertyString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgPropertyString&      InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPropertyString::PackPropertyString(class UObject* InWorldContextObject, const struct FYYMsgPropertyString& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPropertyString", "PackPropertyString");

	Params::FlatBuffersYYMsgPropertyString_PackPropertyString Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPropertyString.UnpackPropertyString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgPropertyString*            OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPropertyString::UnpackPropertyString(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgPropertyString* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPropertyString", "UnpackPropertyString");

	Params::FlatBuffersYYMsgPropertyString_UnpackPropertyString Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPropertyByte.PackPropertyByte
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgPropertyByte&        InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPropertyByte::PackPropertyByte(class UObject* InWorldContextObject, const struct FYYMsgPropertyByte& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPropertyByte", "PackPropertyByte");

	Params::FlatBuffersYYMsgPropertyByte_PackPropertyByte Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPropertyByte.UnpackPropertyByte
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgPropertyByte*              OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPropertyByte::UnpackPropertyByte(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgPropertyByte* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPropertyByte", "UnpackPropertyByte");

	Params::FlatBuffersYYMsgPropertyByte_UnpackPropertyByte Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPropertyObject.PackPropertyObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgPropertyObject&      InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPropertyObject::PackPropertyObject(class UObject* InWorldContextObject, const struct FYYMsgPropertyObject& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPropertyObject", "PackPropertyObject");

	Params::FlatBuffersYYMsgPropertyObject_PackPropertyObject Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPropertyObject.UnpackPropertyObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgPropertyObject*            OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPropertyObject::UnpackPropertyObject(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgPropertyObject* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPropertyObject", "UnpackPropertyObject");

	Params::FlatBuffersYYMsgPropertyObject_UnpackPropertyObject Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPropertyVector2.PackPropertyVector2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgPropertyVector2&     InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPropertyVector2::PackPropertyVector2(class UObject* InWorldContextObject, const struct FYYMsgPropertyVector2& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPropertyVector2", "PackPropertyVector2");

	Params::FlatBuffersYYMsgPropertyVector2_PackPropertyVector2 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPropertyVector2.UnpackPropertyVector2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgPropertyVector2*           OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPropertyVector2::UnpackPropertyVector2(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgPropertyVector2* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPropertyVector2", "UnpackPropertyVector2");

	Params::FlatBuffersYYMsgPropertyVector2_UnpackPropertyVector2 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPropertyVector3.PackPropertyVector3
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgPropertyVector3&     InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPropertyVector3::PackPropertyVector3(class UObject* InWorldContextObject, const struct FYYMsgPropertyVector3& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPropertyVector3", "PackPropertyVector3");

	Params::FlatBuffersYYMsgPropertyVector3_PackPropertyVector3 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPropertyVector3.UnpackPropertyVector3
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgPropertyVector3*           OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPropertyVector3::UnpackPropertyVector3(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgPropertyVector3* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPropertyVector3", "UnpackPropertyVector3");

	Params::FlatBuffersYYMsgPropertyVector3_UnpackPropertyVector3 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPropertyVector4.PackPropertyVector4
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgPropertyVector4&     InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPropertyVector4::PackPropertyVector4(class UObject* InWorldContextObject, const struct FYYMsgPropertyVector4& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPropertyVector4", "PackPropertyVector4");

	Params::FlatBuffersYYMsgPropertyVector4_PackPropertyVector4 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPropertyVector4.UnpackPropertyVector4
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgPropertyVector4*           OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPropertyVector4::UnpackPropertyVector4(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgPropertyVector4* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPropertyVector4", "UnpackPropertyVector4");

	Params::FlatBuffersYYMsgPropertyVector4_UnpackPropertyVector4 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRecordInt.PackRecordInt
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgRecordInt&           InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRecordInt::PackRecordInt(class UObject* InWorldContextObject, const struct FYYMsgRecordInt& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRecordInt", "PackRecordInt");

	Params::FlatBuffersYYMsgRecordInt_PackRecordInt Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRecordInt.UnpackRecordInt
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgRecordInt*                 OutUE4Data                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRecordInt::UnpackRecordInt(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgRecordInt* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRecordInt", "UnpackRecordInt");

	Params::FlatBuffersYYMsgRecordInt_UnpackRecordInt Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRecordFloat.PackRecordFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgRecordFloat&         InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRecordFloat::PackRecordFloat(class UObject* InWorldContextObject, const struct FYYMsgRecordFloat& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRecordFloat", "PackRecordFloat");

	Params::FlatBuffersYYMsgRecordFloat_PackRecordFloat Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRecordFloat.UnpackRecordFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgRecordFloat*               OutUE4Data                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRecordFloat::UnpackRecordFloat(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgRecordFloat* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRecordFloat", "UnpackRecordFloat");

	Params::FlatBuffersYYMsgRecordFloat_UnpackRecordFloat Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRecordString.PackRecordString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgRecordString&        InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRecordString::PackRecordString(class UObject* InWorldContextObject, const struct FYYMsgRecordString& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRecordString", "PackRecordString");

	Params::FlatBuffersYYMsgRecordString_PackRecordString Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRecordString.UnpackRecordString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgRecordString*              OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRecordString::UnpackRecordString(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgRecordString* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRecordString", "UnpackRecordString");

	Params::FlatBuffersYYMsgRecordString_UnpackRecordString Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRecordByte.PackRecordByte
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgRecordByte&          InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRecordByte::PackRecordByte(class UObject* InWorldContextObject, const struct FYYMsgRecordByte& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRecordByte", "PackRecordByte");

	Params::FlatBuffersYYMsgRecordByte_PackRecordByte Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRecordByte.UnpackRecordByte
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgRecordByte*                OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRecordByte::UnpackRecordByte(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgRecordByte* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRecordByte", "UnpackRecordByte");

	Params::FlatBuffersYYMsgRecordByte_UnpackRecordByte Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRecordObject.PackRecordObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgRecordObject&        InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRecordObject::PackRecordObject(class UObject* InWorldContextObject, const struct FYYMsgRecordObject& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRecordObject", "PackRecordObject");

	Params::FlatBuffersYYMsgRecordObject_PackRecordObject Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRecordObject.UnpackRecordObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgRecordObject*              OutUE4Data                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRecordObject::UnpackRecordObject(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgRecordObject* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRecordObject", "UnpackRecordObject");

	Params::FlatBuffersYYMsgRecordObject_UnpackRecordObject Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRecordVector2.PackRecordVector2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgRecordVector2&       InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRecordVector2::PackRecordVector2(class UObject* InWorldContextObject, const struct FYYMsgRecordVector2& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRecordVector2", "PackRecordVector2");

	Params::FlatBuffersYYMsgRecordVector2_PackRecordVector2 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRecordVector2.UnpackRecordVector2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgRecordVector2*             OutUE4Data                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRecordVector2::UnpackRecordVector2(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgRecordVector2* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRecordVector2", "UnpackRecordVector2");

	Params::FlatBuffersYYMsgRecordVector2_UnpackRecordVector2 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRecordVector3.PackRecordVector3
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgRecordVector3&       InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRecordVector3::PackRecordVector3(class UObject* InWorldContextObject, const struct FYYMsgRecordVector3& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRecordVector3", "PackRecordVector3");

	Params::FlatBuffersYYMsgRecordVector3_PackRecordVector3 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRecordVector3.UnpackRecordVector3
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgRecordVector3*             OutUE4Data                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRecordVector3::UnpackRecordVector3(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgRecordVector3* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRecordVector3", "UnpackRecordVector3");

	Params::FlatBuffersYYMsgRecordVector3_UnpackRecordVector3 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRecordVector4.PackRecordVector4
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgRecordVector4&       InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRecordVector4::PackRecordVector4(class UObject* InWorldContextObject, const struct FYYMsgRecordVector4& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRecordVector4", "PackRecordVector4");

	Params::FlatBuffersYYMsgRecordVector4_PackRecordVector4 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRecordVector4.UnpackRecordVector4
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgRecordVector4*             OutUE4Data                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRecordVector4::UnpackRecordVector4(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgRecordVector4* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRecordVector4", "UnpackRecordVector4");

	Params::FlatBuffersYYMsgRecordVector4_UnpackRecordVector4 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRecordAddRowStruct.PackRecordAddRowStruct
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgRecordAddRowStruct&  InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRecordAddRowStruct::PackRecordAddRowStruct(class UObject* InWorldContextObject, const struct FYYMsgRecordAddRowStruct& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRecordAddRowStruct", "PackRecordAddRowStruct");

	Params::FlatBuffersYYMsgRecordAddRowStruct_PackRecordAddRowStruct Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRecordAddRowStruct.UnpackRecordAddRowStruct
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgRecordAddRowStruct*        OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRecordAddRowStruct::UnpackRecordAddRowStruct(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgRecordAddRowStruct* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRecordAddRowStruct", "UnpackRecordAddRowStruct");

	Params::FlatBuffersYYMsgRecordAddRowStruct_UnpackRecordAddRowStruct Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordBase.PackObjectRecordBase
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectRecordBase&    InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordBase::PackObjectRecordBase(class UObject* InWorldContextObject, const struct FYYMsgObjectRecordBase& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordBase", "PackObjectRecordBase");

	Params::FlatBuffersYYMsgObjectRecordBase_PackObjectRecordBase Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordBase.UnpackObjectRecordBase
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectRecordBase*          OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordBase::UnpackObjectRecordBase(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectRecordBase* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordBase", "UnpackObjectRecordBase");

	Params::FlatBuffersYYMsgObjectRecordBase_UnpackObjectRecordBase Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectPropertyList.PackObjectPropertyList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectPropertyList&  InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectPropertyList::PackObjectPropertyList(class UObject* InWorldContextObject, const struct FYYMsgObjectPropertyList& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectPropertyList", "PackObjectPropertyList");

	Params::FlatBuffersYYMsgObjectPropertyList_PackObjectPropertyList Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectPropertyList.UnpackObjectPropertyList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectPropertyList*        OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectPropertyList::UnpackObjectPropertyList(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectPropertyList* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectPropertyList", "UnpackObjectPropertyList");

	Params::FlatBuffersYYMsgObjectPropertyList_UnpackObjectPropertyList Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgMultiObjectPropertyList.PackMultiObjectPropertyList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgMultiObjectPropertyList&InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgMultiObjectPropertyList::PackMultiObjectPropertyList(class UObject* InWorldContextObject, const struct FYYMsgMultiObjectPropertyList& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgMultiObjectPropertyList", "PackMultiObjectPropertyList");

	Params::FlatBuffersYYMsgMultiObjectPropertyList_PackMultiObjectPropertyList Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgMultiObjectPropertyList.UnpackMultiObjectPropertyList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgMultiObjectPropertyList*   OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgMultiObjectPropertyList::UnpackMultiObjectPropertyList(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgMultiObjectPropertyList* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgMultiObjectPropertyList", "UnpackMultiObjectPropertyList");

	Params::FlatBuffersYYMsgMultiObjectPropertyList_UnpackMultiObjectPropertyList Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordList.PackObjectRecordList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectRecordList&    InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordList::PackObjectRecordList(class UObject* InWorldContextObject, const struct FYYMsgObjectRecordList& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordList", "PackObjectRecordList");

	Params::FlatBuffersYYMsgObjectRecordList_PackObjectRecordList Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordList.UnpackObjectRecordList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectRecordList*          OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordList::UnpackObjectRecordList(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectRecordList* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordList", "UnpackObjectRecordList");

	Params::FlatBuffersYYMsgObjectRecordList_UnpackObjectRecordList Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgMultiObjectRecordList.PackMultiObjectRecordList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgMultiObjectRecordList&InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgMultiObjectRecordList::PackMultiObjectRecordList(class UObject* InWorldContextObject, const struct FYYMsgMultiObjectRecordList& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgMultiObjectRecordList", "PackMultiObjectRecordList");

	Params::FlatBuffersYYMsgMultiObjectRecordList_PackMultiObjectRecordList Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgMultiObjectRecordList.UnpackMultiObjectRecordList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgMultiObjectRecordList*     OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgMultiObjectRecordList::UnpackMultiObjectRecordList(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgMultiObjectRecordList* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgMultiObjectRecordList", "UnpackMultiObjectRecordList");

	Params::FlatBuffersYYMsgMultiObjectRecordList_UnpackMultiObjectRecordList Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectPropertyInt.PackObjectPropertyInt
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectPropertyInt&   InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectPropertyInt::PackObjectPropertyInt(class UObject* InWorldContextObject, const struct FYYMsgObjectPropertyInt& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectPropertyInt", "PackObjectPropertyInt");

	Params::FlatBuffersYYMsgObjectPropertyInt_PackObjectPropertyInt Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectPropertyInt.UnpackObjectPropertyInt
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectPropertyInt*         OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectPropertyInt::UnpackObjectPropertyInt(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectPropertyInt* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectPropertyInt", "UnpackObjectPropertyInt");

	Params::FlatBuffersYYMsgObjectPropertyInt_UnpackObjectPropertyInt Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectPropertyFloat.PackObjectPropertyFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectPropertyFloat& InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectPropertyFloat::PackObjectPropertyFloat(class UObject* InWorldContextObject, const struct FYYMsgObjectPropertyFloat& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectPropertyFloat", "PackObjectPropertyFloat");

	Params::FlatBuffersYYMsgObjectPropertyFloat_PackObjectPropertyFloat Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectPropertyFloat.UnpackObjectPropertyFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectPropertyFloat*       OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectPropertyFloat::UnpackObjectPropertyFloat(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectPropertyFloat* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectPropertyFloat", "UnpackObjectPropertyFloat");

	Params::FlatBuffersYYMsgObjectPropertyFloat_UnpackObjectPropertyFloat Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectPropertyString.PackObjectPropertyString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectPropertyString&InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectPropertyString::PackObjectPropertyString(class UObject* InWorldContextObject, const struct FYYMsgObjectPropertyString& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectPropertyString", "PackObjectPropertyString");

	Params::FlatBuffersYYMsgObjectPropertyString_PackObjectPropertyString Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectPropertyString.UnpackObjectPropertyString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectPropertyString*      OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectPropertyString::UnpackObjectPropertyString(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectPropertyString* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectPropertyString", "UnpackObjectPropertyString");

	Params::FlatBuffersYYMsgObjectPropertyString_UnpackObjectPropertyString Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectPropertyByte.PackObjectPropertyByte
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectPropertyByte&  InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectPropertyByte::PackObjectPropertyByte(class UObject* InWorldContextObject, const struct FYYMsgObjectPropertyByte& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectPropertyByte", "PackObjectPropertyByte");

	Params::FlatBuffersYYMsgObjectPropertyByte_PackObjectPropertyByte Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectPropertyByte.UnpackObjectPropertyByte
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectPropertyByte*        OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectPropertyByte::UnpackObjectPropertyByte(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectPropertyByte* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectPropertyByte", "UnpackObjectPropertyByte");

	Params::FlatBuffersYYMsgObjectPropertyByte_UnpackObjectPropertyByte Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectPropertyObject.PackObjectPropertyObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectPropertyObject&InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectPropertyObject::PackObjectPropertyObject(class UObject* InWorldContextObject, const struct FYYMsgObjectPropertyObject& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectPropertyObject", "PackObjectPropertyObject");

	Params::FlatBuffersYYMsgObjectPropertyObject_PackObjectPropertyObject Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectPropertyObject.UnpackObjectPropertyObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectPropertyObject*      OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectPropertyObject::UnpackObjectPropertyObject(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectPropertyObject* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectPropertyObject", "UnpackObjectPropertyObject");

	Params::FlatBuffersYYMsgObjectPropertyObject_UnpackObjectPropertyObject Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectPropertyVector3.PackObjectPropertyVector3
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectPropertyVector3&InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectPropertyVector3::PackObjectPropertyVector3(class UObject* InWorldContextObject, const struct FYYMsgObjectPropertyVector3& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectPropertyVector3", "PackObjectPropertyVector3");

	Params::FlatBuffersYYMsgObjectPropertyVector3_PackObjectPropertyVector3 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectPropertyVector3.UnpackObjectPropertyVector3
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectPropertyVector3*     OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectPropertyVector3::UnpackObjectPropertyVector3(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectPropertyVector3* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectPropertyVector3", "UnpackObjectPropertyVector3");

	Params::FlatBuffersYYMsgObjectPropertyVector3_UnpackObjectPropertyVector3 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectPropertyVector4.PackObjectPropertyVector4
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectPropertyVector4&InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectPropertyVector4::PackObjectPropertyVector4(class UObject* InWorldContextObject, const struct FYYMsgObjectPropertyVector4& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectPropertyVector4", "PackObjectPropertyVector4");

	Params::FlatBuffersYYMsgObjectPropertyVector4_PackObjectPropertyVector4 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectPropertyVector4.UnpackObjectPropertyVector4
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectPropertyVector4*     OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectPropertyVector4::UnpackObjectPropertyVector4(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectPropertyVector4* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectPropertyVector4", "UnpackObjectPropertyVector4");

	Params::FlatBuffersYYMsgObjectPropertyVector4_UnpackObjectPropertyVector4 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordInt.PackObjectRecordInt
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectRecordInt&     InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordInt::PackObjectRecordInt(class UObject* InWorldContextObject, const struct FYYMsgObjectRecordInt& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordInt", "PackObjectRecordInt");

	Params::FlatBuffersYYMsgObjectRecordInt_PackObjectRecordInt Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordInt.UnpackObjectRecordInt
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectRecordInt*           OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordInt::UnpackObjectRecordInt(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectRecordInt* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordInt", "UnpackObjectRecordInt");

	Params::FlatBuffersYYMsgObjectRecordInt_UnpackObjectRecordInt Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordFloat.PackObjectRecordFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectRecordFloat&   InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordFloat::PackObjectRecordFloat(class UObject* InWorldContextObject, const struct FYYMsgObjectRecordFloat& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordFloat", "PackObjectRecordFloat");

	Params::FlatBuffersYYMsgObjectRecordFloat_PackObjectRecordFloat Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordFloat.UnpackObjectRecordFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectRecordFloat*         OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordFloat::UnpackObjectRecordFloat(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectRecordFloat* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordFloat", "UnpackObjectRecordFloat");

	Params::FlatBuffersYYMsgObjectRecordFloat_UnpackObjectRecordFloat Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordVector2.PackObjectRecordVector2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectRecordVector2& InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordVector2::PackObjectRecordVector2(class UObject* InWorldContextObject, const struct FYYMsgObjectRecordVector2& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordVector2", "PackObjectRecordVector2");

	Params::FlatBuffersYYMsgObjectRecordVector2_PackObjectRecordVector2 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordVector2.UnpackObjectRecordVector2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectRecordVector2*       OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordVector2::UnpackObjectRecordVector2(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectRecordVector2* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordVector2", "UnpackObjectRecordVector2");

	Params::FlatBuffersYYMsgObjectRecordVector2_UnpackObjectRecordVector2 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordVector3.PackObjectRecordVector3
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectRecordVector3& InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordVector3::PackObjectRecordVector3(class UObject* InWorldContextObject, const struct FYYMsgObjectRecordVector3& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordVector3", "PackObjectRecordVector3");

	Params::FlatBuffersYYMsgObjectRecordVector3_PackObjectRecordVector3 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordVector3.UnpackObjectRecordVector3
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectRecordVector3*       OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordVector3::UnpackObjectRecordVector3(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectRecordVector3* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordVector3", "UnpackObjectRecordVector3");

	Params::FlatBuffersYYMsgObjectRecordVector3_UnpackObjectRecordVector3 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordVector4.PackObjectRecordVector4
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectRecordVector4& InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordVector4::PackObjectRecordVector4(class UObject* InWorldContextObject, const struct FYYMsgObjectRecordVector4& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordVector4", "PackObjectRecordVector4");

	Params::FlatBuffersYYMsgObjectRecordVector4_PackObjectRecordVector4 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordVector4.UnpackObjectRecordVector4
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectRecordVector4*       OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordVector4::UnpackObjectRecordVector4(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectRecordVector4* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordVector4", "UnpackObjectRecordVector4");

	Params::FlatBuffersYYMsgObjectRecordVector4_UnpackObjectRecordVector4 Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordSwap.PackObjectRecordSwap
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectRecordSwap&    InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordSwap::PackObjectRecordSwap(class UObject* InWorldContextObject, const struct FYYMsgObjectRecordSwap& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordSwap", "PackObjectRecordSwap");

	Params::FlatBuffersYYMsgObjectRecordSwap_PackObjectRecordSwap Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordSwap.UnpackObjectRecordSwap
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectRecordSwap*          OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordSwap::UnpackObjectRecordSwap(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectRecordSwap* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordSwap", "UnpackObjectRecordSwap");

	Params::FlatBuffersYYMsgObjectRecordSwap_UnpackObjectRecordSwap Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordAddRow.PackObjectRecordAddRow
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectRecordAddRow&  InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordAddRow::PackObjectRecordAddRow(class UObject* InWorldContextObject, const struct FYYMsgObjectRecordAddRow& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordAddRow", "PackObjectRecordAddRow");

	Params::FlatBuffersYYMsgObjectRecordAddRow_PackObjectRecordAddRow Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordAddRow.UnpackObjectRecordAddRow
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectRecordAddRow*        OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordAddRow::UnpackObjectRecordAddRow(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectRecordAddRow* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordAddRow", "UnpackObjectRecordAddRow");

	Params::FlatBuffersYYMsgObjectRecordAddRow_UnpackObjectRecordAddRow Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordRemove.PackObjectRecordRemove
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectRecordRemove&  InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordRemove::PackObjectRecordRemove(class UObject* InWorldContextObject, const struct FYYMsgObjectRecordRemove& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordRemove", "PackObjectRecordRemove");

	Params::FlatBuffersYYMsgObjectRecordRemove_PackObjectRecordRemove Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordRemove.UnpackObjectRecordRemove
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectRecordRemove*        OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordRemove::UnpackObjectRecordRemove(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectRecordRemove* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordRemove", "UnpackObjectRecordRemove");

	Params::FlatBuffersYYMsgObjectRecordRemove_UnpackObjectRecordRemove Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordCleared.PackObjectRecordCleared
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgObjectRecordCleared& InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordCleared::PackObjectRecordCleared(class UObject* InWorldContextObject, const struct FYYMsgObjectRecordCleared& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordCleared", "PackObjectRecordCleared");

	Params::FlatBuffersYYMsgObjectRecordCleared_PackObjectRecordCleared Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgObjectRecordCleared.UnpackObjectRecordCleared
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgObjectRecordCleared*       OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgObjectRecordCleared::UnpackObjectRecordCleared(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgObjectRecordCleared* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgObjectRecordCleared", "UnpackObjectRecordCleared");

	Params::FlatBuffersYYMsgObjectRecordCleared_UnpackObjectRecordCleared Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPlayerPropertyBase.PackPlayerPropertyBase
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgPlayerPropertyBase&  InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPlayerPropertyBase::PackPlayerPropertyBase(class UObject* InWorldContextObject, const struct FYYMsgPlayerPropertyBase& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPlayerPropertyBase", "PackPlayerPropertyBase");

	Params::FlatBuffersYYMsgPlayerPropertyBase_PackPlayerPropertyBase Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPlayerPropertyBase.UnpackPlayerPropertyBase
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgPlayerPropertyBase*        OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPlayerPropertyBase::UnpackPlayerPropertyBase(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgPlayerPropertyBase* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPlayerPropertyBase", "UnpackPlayerPropertyBase");

	Params::FlatBuffersYYMsgPlayerPropertyBase_UnpackPlayerPropertyBase Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPlayerRecordBase.PackPlayerRecordBase
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgPlayerRecordBase&    InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPlayerRecordBase::PackPlayerRecordBase(class UObject* InWorldContextObject, const struct FYYMsgPlayerRecordBase& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPlayerRecordBase", "PackPlayerRecordBase");

	Params::FlatBuffersYYMsgPlayerRecordBase_PackPlayerRecordBase Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPlayerRecordBase.UnpackPlayerRecordBase
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgPlayerRecordBase*          OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPlayerRecordBase::UnpackPlayerRecordBase(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgPlayerRecordBase* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPlayerRecordBase", "UnpackPlayerRecordBase");

	Params::FlatBuffersYYMsgPlayerRecordBase_UnpackPlayerRecordBase Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPlayerRecordList.PackPlayerRecordList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgPlayerRecordList&    InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPlayerRecordList::PackPlayerRecordList(class UObject* InWorldContextObject, const struct FYYMsgPlayerRecordList& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPlayerRecordList", "PackPlayerRecordList");

	Params::FlatBuffersYYMsgPlayerRecordList_PackPlayerRecordList Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPlayerRecordList.UnpackPlayerRecordList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgPlayerRecordList*          OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPlayerRecordList::UnpackPlayerRecordList(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgPlayerRecordList* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPlayerRecordList", "UnpackPlayerRecordList");

	Params::FlatBuffersYYMsgPlayerRecordList_UnpackPlayerRecordList Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgMsgBase.PackMsgBase
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgMsgBase&             InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgMsgBase::PackMsgBase(class UObject* InWorldContextObject, const struct FYYMsgMsgBase& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgMsgBase", "PackMsgBase");

	Params::FlatBuffersYYMsgMsgBase_PackMsgBase Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgMsgBase.UnpackMsgBase
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgMsgBase*                   OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgMsgBase::UnpackMsgBase(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgMsgBase* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgMsgBase", "UnpackMsgBase");

	Params::FlatBuffersYYMsgMsgBase_UnpackMsgBase Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPackSURLParam.PackPackSURLParam
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgPackSURLParam&       InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPackSURLParam::PackPackSURLParam(class UObject* InWorldContextObject, const struct FYYMsgPackSURLParam& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPackSURLParam", "PackPackSURLParam");

	Params::FlatBuffersYYMsgPackSURLParam_PackPackSURLParam Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPackSURLParam.UnpackPackSURLParam
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgPackSURLParam*             OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPackSURLParam::UnpackPackSURLParam(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgPackSURLParam* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPackSURLParam", "UnpackPackSURLParam");

	Params::FlatBuffersYYMsgPackSURLParam_UnpackPackSURLParam Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckPingPong.PackReqAckPingPong
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgReqAckPingPong&      InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckPingPong::PackReqAckPingPong(class UObject* InWorldContextObject, const struct FYYMsgReqAckPingPong& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckPingPong", "PackReqAckPingPong");

	Params::FlatBuffersYYMsgReqAckPingPong_PackReqAckPingPong Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckPingPong.UnpackReqAckPingPong
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgReqAckPingPong*            OutUE4Data                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckPingPong::UnpackReqAckPingPong(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgReqAckPingPong* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckPingPong", "UnpackReqAckPingPong");

	Params::FlatBuffersYYMsgReqAckPingPong_UnpackReqAckPingPong Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckLogin.PackReqAckLogin
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgReqAckLogin&         InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckLogin::PackReqAckLogin(class UObject* InWorldContextObject, const struct FYYMsgReqAckLogin& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckLogin", "PackReqAckLogin");

	Params::FlatBuffersYYMsgReqAckLogin_PackReqAckLogin Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckLogin.UnpackReqAckLogin
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgReqAckLogin*               OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckLogin::UnpackReqAckLogin(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgReqAckLogin* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckLogin", "UnpackReqAckLogin");

	Params::FlatBuffersYYMsgReqAckLogin_UnpackReqAckLogin Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqStartMatch.PackReqStartMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgReqStartMatch&       InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqStartMatch::PackReqStartMatch(class UObject* InWorldContextObject, const struct FYYMsgReqStartMatch& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqStartMatch", "PackReqStartMatch");

	Params::FlatBuffersYYMsgReqStartMatch_PackReqStartMatch Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqStartMatch.UnpackReqStartMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgReqStartMatch*             OutUE4Data                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqStartMatch::UnpackReqStartMatch(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgReqStartMatch* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqStartMatch", "UnpackReqStartMatch");

	Params::FlatBuffersYYMsgReqStartMatch_UnpackReqStartMatch Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRoomCampMember.PackRoomCampMember
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgRoomCampMember&      InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRoomCampMember::PackRoomCampMember(class UObject* InWorldContextObject, const struct FYYMsgRoomCampMember& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRoomCampMember", "PackRoomCampMember");

	Params::FlatBuffersYYMsgRoomCampMember_PackRoomCampMember Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRoomCampMember.UnpackRoomCampMember
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgRoomCampMember*            OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRoomCampMember::UnpackRoomCampMember(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgRoomCampMember* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRoomCampMember", "UnpackRoomCampMember");

	Params::FlatBuffersYYMsgRoomCampMember_UnpackRoomCampMember Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRoomCamp.PackRoomCamp
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgRoomCamp&            InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRoomCamp::PackRoomCamp(class UObject* InWorldContextObject, const struct FYYMsgRoomCamp& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRoomCamp", "PackRoomCamp");

	Params::FlatBuffersYYMsgRoomCamp_PackRoomCamp Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgRoomCamp.UnpackRoomCamp
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgRoomCamp*                  OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgRoomCamp::UnpackRoomCamp(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgRoomCamp* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgRoomCamp", "UnpackRoomCamp");

	Params::FlatBuffersYYMsgRoomCamp_UnpackRoomCamp Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgAckStartMatch.PackAckStartMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgAckStartMatch&       InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgAckStartMatch::PackAckStartMatch(class UObject* InWorldContextObject, const struct FYYMsgAckStartMatch& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgAckStartMatch", "PackAckStartMatch");

	Params::FlatBuffersYYMsgAckStartMatch_PackAckStartMatch Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgAckStartMatch.UnpackAckStartMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgAckStartMatch*             OutUE4Data                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgAckStartMatch::UnpackAckStartMatch(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgAckStartMatch* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgAckStartMatch", "UnpackAckStartMatch");

	Params::FlatBuffersYYMsgAckStartMatch_UnpackAckStartMatch Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqCancelMatch.PackReqCancelMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgReqCancelMatch&      InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqCancelMatch::PackReqCancelMatch(class UObject* InWorldContextObject, const struct FYYMsgReqCancelMatch& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqCancelMatch", "PackReqCancelMatch");

	Params::FlatBuffersYYMsgReqCancelMatch_PackReqCancelMatch Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqCancelMatch.UnpackReqCancelMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgReqCancelMatch*            OutUE4Data                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqCancelMatch::UnpackReqCancelMatch(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgReqCancelMatch* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqCancelMatch", "UnpackReqCancelMatch");

	Params::FlatBuffersYYMsgReqCancelMatch_UnpackReqCancelMatch Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgAckCancelMatch.PackAckCancelMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgAckCancelMatch&      InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgAckCancelMatch::PackAckCancelMatch(class UObject* InWorldContextObject, const struct FYYMsgAckCancelMatch& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgAckCancelMatch", "PackAckCancelMatch");

	Params::FlatBuffersYYMsgAckCancelMatch_PackAckCancelMatch Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgAckCancelMatch.UnpackAckCancelMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgAckCancelMatch*            OutUE4Data                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgAckCancelMatch::UnpackAckCancelMatch(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgAckCancelMatch* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgAckCancelMatch", "UnpackAckCancelMatch");

	Params::FlatBuffersYYMsgAckCancelMatch_UnpackAckCancelMatch Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqFinishMatch.PackReqFinishMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgReqFinishMatch&      InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqFinishMatch::PackReqFinishMatch(class UObject* InWorldContextObject, const struct FYYMsgReqFinishMatch& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqFinishMatch", "PackReqFinishMatch");

	Params::FlatBuffersYYMsgReqFinishMatch_PackReqFinishMatch Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqFinishMatch.UnpackReqFinishMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgReqFinishMatch*            OutUE4Data                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqFinishMatch::UnpackReqFinishMatch(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgReqFinishMatch* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqFinishMatch", "UnpackReqFinishMatch");

	Params::FlatBuffersYYMsgReqFinishMatch_UnpackReqFinishMatch Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgAckFinishMatch.PackAckFinishMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgAckFinishMatch&      InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgAckFinishMatch::PackAckFinishMatch(class UObject* InWorldContextObject, const struct FYYMsgAckFinishMatch& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgAckFinishMatch", "PackAckFinishMatch");

	Params::FlatBuffersYYMsgAckFinishMatch_PackAckFinishMatch Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgAckFinishMatch.UnpackAckFinishMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgAckFinishMatch*            OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgAckFinishMatch::UnpackAckFinishMatch(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgAckFinishMatch* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgAckFinishMatch", "UnpackAckFinishMatch");

	Params::FlatBuffersYYMsgAckFinishMatch_UnpackAckFinishMatch Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckRoomMember.PackReqAckRoomMember
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgReqAckRoomMember&    InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckRoomMember::PackReqAckRoomMember(class UObject* InWorldContextObject, const struct FYYMsgReqAckRoomMember& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckRoomMember", "PackReqAckRoomMember");

	Params::FlatBuffersYYMsgReqAckRoomMember_PackReqAckRoomMember Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckRoomMember.UnpackReqAckRoomMember
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgReqAckRoomMember*          OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckRoomMember::UnpackReqAckRoomMember(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgReqAckRoomMember* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckRoomMember", "UnpackReqAckRoomMember");

	Params::FlatBuffersYYMsgReqAckRoomMember_UnpackReqAckRoomMember Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckEnterRoom.PackReqAckEnterRoom
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgReqAckEnterRoom&     InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckEnterRoom::PackReqAckEnterRoom(class UObject* InWorldContextObject, const struct FYYMsgReqAckEnterRoom& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckEnterRoom", "PackReqAckEnterRoom");

	Params::FlatBuffersYYMsgReqAckEnterRoom_PackReqAckEnterRoom Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckEnterRoom.UnpackReqAckEnterRoom
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgReqAckEnterRoom*           OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckEnterRoom::UnpackReqAckEnterRoom(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgReqAckEnterRoom* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckEnterRoom", "UnpackReqAckEnterRoom");

	Params::FlatBuffersYYMsgReqAckEnterRoom_UnpackReqAckEnterRoom Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckRoomInfo.PackReqAckRoomInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgReqAckRoomInfo&      InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckRoomInfo::PackReqAckRoomInfo(class UObject* InWorldContextObject, const struct FYYMsgReqAckRoomInfo& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckRoomInfo", "PackReqAckRoomInfo");

	Params::FlatBuffersYYMsgReqAckRoomInfo_PackReqAckRoomInfo Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckRoomInfo.UnpackReqAckRoomInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgReqAckRoomInfo*            OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckRoomInfo::UnpackReqAckRoomInfo(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgReqAckRoomInfo* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckRoomInfo", "UnpackReqAckRoomInfo");

	Params::FlatBuffersYYMsgReqAckRoomInfo_UnpackReqAckRoomInfo Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckRoomList.PackReqAckRoomList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgReqAckRoomList&      InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckRoomList::PackReqAckRoomList(class UObject* InWorldContextObject, const struct FYYMsgReqAckRoomList& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckRoomList", "PackReqAckRoomList");

	Params::FlatBuffersYYMsgReqAckRoomList_PackReqAckRoomList Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckRoomList.UnpackReqAckRoomList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgReqAckRoomList*            OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckRoomList::UnpackReqAckRoomList(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgReqAckRoomList* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckRoomList", "UnpackReqAckRoomList");

	Params::FlatBuffersYYMsgReqAckRoomList_UnpackReqAckRoomList Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckCreateRoom.PackReqAckCreateRoom
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgReqAckCreateRoom&    InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckCreateRoom::PackReqAckCreateRoom(class UObject* InWorldContextObject, const struct FYYMsgReqAckCreateRoom& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckCreateRoom", "PackReqAckCreateRoom");

	Params::FlatBuffersYYMsgReqAckCreateRoom_PackReqAckCreateRoom Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckCreateRoom.UnpackReqAckCreateRoom
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgReqAckCreateRoom*          OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckCreateRoom::UnpackReqAckCreateRoom(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgReqAckCreateRoom* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckCreateRoom", "UnpackReqAckCreateRoom");

	Params::FlatBuffersYYMsgReqAckCreateRoom_UnpackReqAckCreateRoom Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckQuickEnter.PackReqAckQuickEnter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgReqAckQuickEnter&    InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckQuickEnter::PackReqAckQuickEnter(class UObject* InWorldContextObject, const struct FYYMsgReqAckQuickEnter& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckQuickEnter", "PackReqAckQuickEnter");

	Params::FlatBuffersYYMsgReqAckQuickEnter_PackReqAckQuickEnter Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckQuickEnter.UnpackReqAckQuickEnter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgReqAckQuickEnter*          OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckQuickEnter::UnpackReqAckQuickEnter(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgReqAckQuickEnter* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckQuickEnter", "UnpackReqAckQuickEnter");

	Params::FlatBuffersYYMsgReqAckQuickEnter_UnpackReqAckQuickEnter Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckRoomStart.PackReqAckRoomStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgReqAckRoomStart&     InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckRoomStart::PackReqAckRoomStart(class UObject* InWorldContextObject, const struct FYYMsgReqAckRoomStart& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckRoomStart", "PackReqAckRoomStart");

	Params::FlatBuffersYYMsgReqAckRoomStart_PackReqAckRoomStart Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckRoomStart.UnpackReqAckRoomStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgReqAckRoomStart*           OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckRoomStart::UnpackReqAckRoomStart(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgReqAckRoomStart* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckRoomStart", "UnpackReqAckRoomStart");

	Params::FlatBuffersYYMsgReqAckRoomStart_UnpackReqAckRoomStart Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckHeadUrl.PackReqAckHeadUrl
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgReqAckHeadUrl&       InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckHeadUrl::PackReqAckHeadUrl(class UObject* InWorldContextObject, const struct FYYMsgReqAckHeadUrl& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckHeadUrl", "PackReqAckHeadUrl");

	Params::FlatBuffersYYMsgReqAckHeadUrl_PackReqAckHeadUrl Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckHeadUrl.UnpackReqAckHeadUrl
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgReqAckHeadUrl*             OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckHeadUrl::UnpackReqAckHeadUrl(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgReqAckHeadUrl* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckHeadUrl", "UnpackReqAckHeadUrl");

	Params::FlatBuffersYYMsgReqAckHeadUrl_UnpackReqAckHeadUrl Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckLoaderServerRegister.PackReqAckLoaderServerRegister
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgReqAckLoaderServerRegister&InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckLoaderServerRegister::PackReqAckLoaderServerRegister(class UObject* InWorldContextObject, const struct FYYMsgReqAckLoaderServerRegister& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckLoaderServerRegister", "PackReqAckLoaderServerRegister");

	Params::FlatBuffersYYMsgReqAckLoaderServerRegister_PackReqAckLoaderServerRegister Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckLoaderServerRegister.UnpackReqAckLoaderServerRegister
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgReqAckLoaderServerRegister*OutUE4Data                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckLoaderServerRegister::UnpackReqAckLoaderServerRegister(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgReqAckLoaderServerRegister* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckLoaderServerRegister", "UnpackReqAckLoaderServerRegister");

	Params::FlatBuffersYYMsgReqAckLoaderServerRegister_UnpackReqAckLoaderServerRegister Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckLoadPVPServer.PackReqAckLoadPVPServer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgReqAckLoadPVPServer& InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckLoadPVPServer::PackReqAckLoadPVPServer(class UObject* InWorldContextObject, const struct FYYMsgReqAckLoadPVPServer& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckLoadPVPServer", "PackReqAckLoadPVPServer");

	Params::FlatBuffersYYMsgReqAckLoadPVPServer_PackReqAckLoadPVPServer Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckLoadPVPServer.UnpackReqAckLoadPVPServer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgReqAckLoadPVPServer*       OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckLoadPVPServer::UnpackReqAckLoadPVPServer(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgReqAckLoadPVPServer* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckLoadPVPServer", "UnpackReqAckLoadPVPServer");

	Params::FlatBuffersYYMsgReqAckLoadPVPServer_UnpackReqAckLoadPVPServer Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPVPPlayerInfo.PackPVPPlayerInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgPVPPlayerInfo&       InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPVPPlayerInfo::PackPVPPlayerInfo(class UObject* InWorldContextObject, const struct FYYMsgPVPPlayerInfo& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPVPPlayerInfo", "PackPVPPlayerInfo");

	Params::FlatBuffersYYMsgPVPPlayerInfo_PackPVPPlayerInfo Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgPVPPlayerInfo.UnpackPVPPlayerInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgPVPPlayerInfo*             OutUE4Data                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgPVPPlayerInfo::UnpackPVPPlayerInfo(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgPVPPlayerInfo* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgPVPPlayerInfo", "UnpackPVPPlayerInfo");

	Params::FlatBuffersYYMsgPVPPlayerInfo_UnpackPVPPlayerInfo Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckPVPServerRegister.PackReqAckPVPServerRegister
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgReqAckPVPServerRegister&InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckPVPServerRegister::PackReqAckPVPServerRegister(class UObject* InWorldContextObject, const struct FYYMsgReqAckPVPServerRegister& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckPVPServerRegister", "PackReqAckPVPServerRegister");

	Params::FlatBuffersYYMsgReqAckPVPServerRegister_PackReqAckPVPServerRegister Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckPVPServerRegister.UnpackReqAckPVPServerRegister
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgReqAckPVPServerRegister*   OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckPVPServerRegister::UnpackReqAckPVPServerRegister(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgReqAckPVPServerRegister* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckPVPServerRegister", "UnpackReqAckPVPServerRegister");

	Params::FlatBuffersYYMsgReqAckPVPServerRegister_UnpackReqAckPVPServerRegister Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckPVPServerStart.PackReqAckPVPServerStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgReqAckPVPServerStart&InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckPVPServerStart::PackReqAckPVPServerStart(class UObject* InWorldContextObject, const struct FYYMsgReqAckPVPServerStart& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckPVPServerStart", "PackReqAckPVPServerStart");

	Params::FlatBuffersYYMsgReqAckPVPServerStart_PackReqAckPVPServerStart Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckPVPServerStart.UnpackReqAckPVPServerStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgReqAckPVPServerStart*      OutUE4Data                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckPVPServerStart::UnpackReqAckPVPServerStart(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgReqAckPVPServerStart* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckPVPServerStart", "UnpackReqAckPVPServerStart");

	Params::FlatBuffersYYMsgReqAckPVPServerStart_UnpackReqAckPVPServerStart Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckPVPServerInfo.PackReqAckPVPServerInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgReqAckPVPServerInfo& InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckPVPServerInfo::PackReqAckPVPServerInfo(class UObject* InWorldContextObject, const struct FYYMsgReqAckPVPServerInfo& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckPVPServerInfo", "PackReqAckPVPServerInfo");

	Params::FlatBuffersYYMsgReqAckPVPServerInfo_PackReqAckPVPServerInfo Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckPVPServerInfo.UnpackReqAckPVPServerInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgReqAckPVPServerInfo*       OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckPVPServerInfo::UnpackReqAckPVPServerInfo(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgReqAckPVPServerInfo* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckPVPServerInfo", "UnpackReqAckPVPServerInfo");

	Params::FlatBuffersYYMsgReqAckPVPServerInfo_UnpackReqAckPVPServerInfo Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckPVPServerFinished.PackReqAckPVPServerFinished
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgReqAckPVPServerFinished&InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckPVPServerFinished::PackReqAckPVPServerFinished(class UObject* InWorldContextObject, const struct FYYMsgReqAckPVPServerFinished& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckPVPServerFinished", "PackReqAckPVPServerFinished");

	Params::FlatBuffersYYMsgReqAckPVPServerFinished_PackReqAckPVPServerFinished Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckPVPServerFinished.UnpackReqAckPVPServerFinished
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgReqAckPVPServerFinished*   OutUE4Data                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckPVPServerFinished::UnpackReqAckPVPServerFinished(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgReqAckPVPServerFinished* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckPVPServerFinished", "UnpackReqAckPVPServerFinished");

	Params::FlatBuffersYYMsgReqAckPVPServerFinished_UnpackReqAckPVPServerFinished Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckPVPShutDown.PackReqAckPVPShutDown
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FYYMsgReqAckPVPShutDown&   InUE4Data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<uint8>*                          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckPVPShutDown::PackReqAckPVPShutDown(class UObject* InWorldContextObject, const struct FYYMsgReqAckPVPShutDown& InUE4Data, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckPVPShutDown", "PackReqAckPVPShutDown");

	Params::FlatBuffersYYMsgReqAckPVPShutDown_PackReqAckPVPShutDown Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUE4Data = std::move(InUE4Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SiliconRising.FlatBuffersYYMsgReqAckPVPShutDown.UnpackReqAckPVPShutDown
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FYYMsgReqAckPVPShutDown*         OutUE4Data                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlatBuffersYYMsgReqAckPVPShutDown::UnpackReqAckPVPShutDown(class UObject* InWorldContextObject, const TArray<uint8>& InData, struct FYYMsgReqAckPVPShutDown* OutUE4Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FlatBuffersYYMsgReqAckPVPShutDown", "UnpackReqAckPVPShutDown");

	Params::FlatBuffersYYMsgReqAckPVPShutDown_UnpackReqAckPVPShutDown Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUE4Data != nullptr)
		*OutUE4Data = std::move(Parms.OutUE4Data);

	return Parms.ReturnValue;
}

}


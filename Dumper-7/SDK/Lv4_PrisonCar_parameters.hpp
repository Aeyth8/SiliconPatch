#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lv4_PrisonCar

#include "Basic.hpp"


namespace SDK::Params
{

// Function Lv4_PrisonCar.Lv4_PrisonCar_C.ExecuteUbergraph_Lv4_PrisonCar
// 0x00D8 (0x00D8 - 0x0000)
struct Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentGear_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue1;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEngineRotationSpeed_ReturnValue;       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue5;               // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue6;               // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar) == 0x000008, "Wrong alignment on Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar");
static_assert(sizeof(Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar) == 0x0000D8, "Wrong size on Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar");
static_assert(offsetof(Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar, EntryPoint) == 0x000000, "Member 'Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar::EntryPoint' has a wrong offset!");
static_assert(offsetof(Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar, CallFunc_GetCurrentGear_ReturnValue) == 0x000038, "Member 'Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar::CallFunc_GetCurrentGear_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar, CallFunc_Conv_IntToString_ReturnValue1) == 0x000050, "Member 'Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar::CallFunc_Conv_IntToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar, CallFunc_Concat_StrStr_ReturnValue1) == 0x000060, "Member 'Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar, CallFunc_GetEngineRotationSpeed_ReturnValue) == 0x000070, "Member 'Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar::CallFunc_GetEngineRotationSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar, CallFunc_Conv_FloatToString_ReturnValue) == 0x000078, "Member 'Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar, CallFunc_Concat_StrStr_ReturnValue2) == 0x000088, "Member 'Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar, CallFunc_Concat_StrStr_ReturnValue3) == 0x000098, "Member 'Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar, CallFunc_Concat_StrStr_ReturnValue4) == 0x0000A8, "Member 'Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar, CallFunc_Concat_StrStr_ReturnValue5) == 0x0000B8, "Member 'Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar::CallFunc_Concat_StrStr_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar, CallFunc_Concat_StrStr_ReturnValue6) == 0x0000C8, "Member 'Lv4_PrisonCar_C_ExecuteUbergraph_Lv4_PrisonCar::CallFunc_Concat_StrStr_ReturnValue6' has a wrong offset!");

// Function Lv4_PrisonCar.Lv4_PrisonCar_C.SetRPM
// 0x0020 (0x0020 - 0x0000)
struct Lv4_PrisonCar_C_SetRPM final
{
public:
	float                                         RPM;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMer2WheeledVehicleMovement4W*          K2Node_DynamicCast_AsMer_2Wheeled_Vehicle_Movement_4W; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lv4_PrisonCar_C_SetRPM) == 0x000008, "Wrong alignment on Lv4_PrisonCar_C_SetRPM");
static_assert(sizeof(Lv4_PrisonCar_C_SetRPM) == 0x000020, "Wrong size on Lv4_PrisonCar_C_SetRPM");
static_assert(offsetof(Lv4_PrisonCar_C_SetRPM, RPM) == 0x000000, "Member 'Lv4_PrisonCar_C_SetRPM::RPM' has a wrong offset!");
static_assert(offsetof(Lv4_PrisonCar_C_SetRPM, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'Lv4_PrisonCar_C_SetRPM::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv4_PrisonCar_C_SetRPM, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'Lv4_PrisonCar_C_SetRPM::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv4_PrisonCar_C_SetRPM, CallFunc_SelectFloat_ReturnValue) == 0x00000C, "Member 'Lv4_PrisonCar_C_SetRPM::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lv4_PrisonCar_C_SetRPM, K2Node_DynamicCast_AsMer_2Wheeled_Vehicle_Movement_4W) == 0x000010, "Member 'Lv4_PrisonCar_C_SetRPM::K2Node_DynamicCast_AsMer_2Wheeled_Vehicle_Movement_4W' has a wrong offset!");
static_assert(offsetof(Lv4_PrisonCar_C_SetRPM, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Lv4_PrisonCar_C_SetRPM::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Lv4_PrisonCar.Lv4_PrisonCar_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Lv4_PrisonCar_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lv4_PrisonCar_C_ReceiveTick) == 0x000004, "Wrong alignment on Lv4_PrisonCar_C_ReceiveTick");
static_assert(sizeof(Lv4_PrisonCar_C_ReceiveTick) == 0x000004, "Wrong size on Lv4_PrisonCar_C_ReceiveTick");
static_assert(offsetof(Lv4_PrisonCar_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Lv4_PrisonCar_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}


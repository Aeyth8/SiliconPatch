#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Wpn_Pistol_PVP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BPWeaponBase_classes.hpp"
#include "SiliconRising_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Wpn_Pistol_PVP.Wpn_Pistol_PVP_C
// 0x0020 (0x08A0 - 0x0880)
class AWpn_Pistol_PVP_C final : public ABPWeaponBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Wpn_Pistol_PVP_C;                   // 0x0880(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AWpn_Clip_C*                            Clip;                                              // 0x0888(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponAnimInstance*                    AnimBP_0;                                          // 0x0890(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Wpn_Pistol_PVP(int32 EntryPoint);
	void FirstTutorial();
	void DoOnInsertClip(class AWpn_Clip_C* Clip_0, bool IsDelay);
	void ChangeAnimState(EWState CurState, bool NewValue);
	void Evt_PullTrigger();
	void Evt_ClipEmpty();
	void Evt_StopFire();
	void OnLineTriggerPull(bool IsFromRightHand, class AActor* hand);
	void Evt_Fire();
	void ReceiveTick(float DeltaSeconds);
	void Evt_Reload();
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Wpn_Pistol_PVP_C">();
	}
	static class AWpn_Pistol_PVP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWpn_Pistol_PVP_C>();
	}
};
static_assert(alignof(AWpn_Pistol_PVP_C) == 0x000010, "Wrong alignment on AWpn_Pistol_PVP_C");
static_assert(sizeof(AWpn_Pistol_PVP_C) == 0x0008A0, "Wrong size on AWpn_Pistol_PVP_C");
static_assert(offsetof(AWpn_Pistol_PVP_C, UberGraphFrame_Wpn_Pistol_PVP_C) == 0x000880, "Member 'AWpn_Pistol_PVP_C::UberGraphFrame_Wpn_Pistol_PVP_C' has a wrong offset!");
static_assert(offsetof(AWpn_Pistol_PVP_C, Clip) == 0x000888, "Member 'AWpn_Pistol_PVP_C::Clip' has a wrong offset!");
static_assert(offsetof(AWpn_Pistol_PVP_C, AnimBP_0) == 0x000890, "Member 'AWpn_Pistol_PVP_C::AnimBP_0' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Missile

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Missile.BP_Missile_C.ExecuteUbergraph_BP_Missile
// 0x0240 (0x0240 - 0x0000)
struct BP_Missile_C_ExecuteUbergraph_BP_Missile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMer2OnlineSave_C*                      CallFunc_GetSettingsFromDisk_AsMer_2Online_Save;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSettingsFromDisk_IsExist;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasBlock__Result;                         // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0090(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerProjectile_C*                    K2Node_DynamicCast_AsPlayer_Projectile;            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    K2Node_DynamicCast_AsBP_Character_Base;            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnParticle_ReturnValue;                // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMer2PlayerController_C*                K2Node_DynamicCast_AsMer_2Player_Controller;       // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Velocity;                       // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue1;         // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyRadialDamageWithFalloff_ReturnValue; // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Missile_C_ExecuteUbergraph_BP_Missile) == 0x000008, "Wrong alignment on BP_Missile_C_ExecuteUbergraph_BP_Missile");
static_assert(sizeof(BP_Missile_C_ExecuteUbergraph_BP_Missile) == 0x000240, "Wrong size on BP_Missile_C_ExecuteUbergraph_BP_Missile");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, EntryPoint) == 0x000000, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_GetSettingsFromDisk_AsMer_2Online_Save) == 0x000008, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_GetSettingsFromDisk_AsMer_2Online_Save' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_GetSettingsFromDisk_IsExist) == 0x000010, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_GetSettingsFromDisk_IsExist' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_Divide_IntInt_ReturnValue) == 0x000014, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, K2Node_Event_DeltaSeconds) == 0x00001C, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, Temp_object_Variable) == 0x000020, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_HasBlock__Result) == 0x000034, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_HasBlock__Result' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_GetGameInstance_ReturnValue) == 0x000040, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, K2Node_DynamicCast_AsMer_2Game_Instance) == 0x000048, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::K2Node_DynamicCast_AsMer_2Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_MakeRotFromX_ReturnValue) == 0x000054, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000060, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, K2Node_ComponentBoundEvent_HitComponent) == 0x000068, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, K2Node_ComponentBoundEvent_OtherActor) == 0x000070, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, K2Node_ComponentBoundEvent_OtherComp) == 0x000078, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000080, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, K2Node_ComponentBoundEvent_Hit) == 0x000090, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_BreakHitResult_bBlockingHit) == 0x000118, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_BreakHitResult_bInitialOverlap) == 0x000119, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_BreakHitResult_Time) == 0x00011C, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_BreakHitResult_Distance) == 0x000120, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_BreakHitResult_Location) == 0x000124, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_BreakHitResult_Normal) == 0x00013C, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_BreakHitResult_ImpactNormal) == 0x000148, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_BreakHitResult_PhysMat) == 0x000158, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_BreakHitResult_HitActor) == 0x000160, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_BreakHitResult_HitComponent) == 0x000168, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_BreakHitResult_HitBoneName) == 0x000170, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_BreakHitResult_HitItem) == 0x000178, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_BreakHitResult_FaceIndex) == 0x00017C, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_BreakHitResult_TraceStart) == 0x000180, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_BreakHitResult_TraceEnd) == 0x00018C, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, K2Node_DynamicCast_AsPlayer_Projectile) == 0x000198, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::K2Node_DynamicCast_AsPlayer_Projectile' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, K2Node_DynamicCast_bSuccess1) == 0x0001A0, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_GetOwner_ReturnValue) == 0x0001A8, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, K2Node_CustomEvent_Location) == 0x0001B0, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, K2Node_DynamicCast_AsBP_Character_Base) == 0x0001C0, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::K2Node_DynamicCast_AsBP_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, K2Node_DynamicCast_bSuccess2) == 0x0001C8, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_SpawnParticle_ReturnValue) == 0x0001D0, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_SpawnParticle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_GetController_ReturnValue) == 0x0001D8, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, K2Node_DynamicCast_AsMer_2Player_Controller) == 0x0001E0, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::K2Node_DynamicCast_AsMer_2Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, K2Node_DynamicCast_bSuccess3) == 0x0001E8, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, K2Node_CustomEvent_Velocity) == 0x0001EC, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::K2Node_CustomEvent_Velocity' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, K2Node_CustomEvent_Rotation) == 0x0001F8, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_K2_SetActorRotation_ReturnValue1) == 0x000204, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_K2_SetActorRotation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, Temp_float_Variable) == 0x000208, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, Temp_bool_Variable) == 0x00020C, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, K2Node_Select_Default) == 0x000210, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_ApplyRadialDamageWithFalloff_ReturnValue) == 0x000214, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_ApplyRadialDamageWithFalloff_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000218, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, CallFunc_GetGameState_ReturnValue) == 0x000228, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, K2Node_DynamicCast_AsMer_2Game_State) == 0x000230, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_ExecuteUbergraph_BP_Missile, K2Node_DynamicCast_bSuccess4) == 0x000238, "Member 'BP_Missile_C_ExecuteUbergraph_BP_Missile::K2Node_DynamicCast_bSuccess4' has a wrong offset!");

// Function BP_Missile.BP_Missile_C.InitMissile
// 0x0018 (0x0018 - 0x0000)
struct BP_Missile_C_InitMissile final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Missile_C_InitMissile) == 0x000004, "Wrong alignment on BP_Missile_C_InitMissile");
static_assert(sizeof(BP_Missile_C_InitMissile) == 0x000018, "Wrong size on BP_Missile_C_InitMissile");
static_assert(offsetof(BP_Missile_C_InitMissile, Velocity) == 0x000000, "Member 'BP_Missile_C_InitMissile::Velocity' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_InitMissile, Rotation) == 0x00000C, "Member 'BP_Missile_C_InitMissile::Rotation' has a wrong offset!");

// Function BP_Missile.BP_Missile_C.PlayFX
// 0x000C (0x000C - 0x0000)
struct BP_Missile_C_PlayFX final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Missile_C_PlayFX) == 0x000004, "Wrong alignment on BP_Missile_C_PlayFX");
static_assert(sizeof(BP_Missile_C_PlayFX) == 0x00000C, "Wrong size on BP_Missile_C_PlayFX");
static_assert(offsetof(BP_Missile_C_PlayFX, Location) == 0x000000, "Member 'BP_Missile_C_PlayFX::Location' has a wrong offset!");

// Function BP_Missile.BP_Missile_C.BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Missile_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0028(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Missile_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Missile_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_Missile_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_Missile_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_Missile_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_Missile_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Missile_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Missile_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_Missile_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, Hit) == 0x000028, "Member 'BP_Missile_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_Missile.BP_Missile_C.AddDamge
// 0x0270 (0x0270 - 0x0000)
struct BP_Missile_C_AddDamge final
{
public:
	float                                         FinalDamage;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    TargetPlayer;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damge;                                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamgeDistance;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue5;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0068(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue6;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x0080(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0098(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_123[0x1];                                      // 0x0123(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x01A0(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_CharacterBase_C*                    K2Node_DynamicCast_AsBP_Character_Base;            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue2;     // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x01D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Missile_C_AddDamge) == 0x000008, "Wrong alignment on BP_Missile_C_AddDamge");
static_assert(sizeof(BP_Missile_C_AddDamge) == 0x000270, "Wrong size on BP_Missile_C_AddDamge");
static_assert(offsetof(BP_Missile_C_AddDamge, FinalDamage) == 0x000000, "Member 'BP_Missile_C_AddDamge::FinalDamage' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, TargetPlayer) == 0x000008, "Member 'BP_Missile_C_AddDamge::TargetPlayer' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, Damge) == 0x000010, "Member 'BP_Missile_C_AddDamge::Damge' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, DamgeDistance) == 0x000014, "Member 'BP_Missile_C_AddDamge::DamgeDistance' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_Missile_C_AddDamge::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_Missile_C_AddDamge::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'BP_Missile_C_AddDamge::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x00002C, "Member 'BP_Missile_C_AddDamge::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_Missile_C_AddDamge::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_Missile_C_AddDamge::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000040, "Member 'BP_Missile_C_AddDamge::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_Missile_C_AddDamge::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000048, "Member 'BP_Missile_C_AddDamge::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x00004C, "Member 'BP_Missile_C_AddDamge::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x000050, "Member 'BP_Missile_C_AddDamge::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_Missile_C_AddDamge::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000058, "Member 'BP_Missile_C_AddDamge::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x00005C, "Member 'BP_Missile_C_AddDamge::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_Multiply_FloatFloat_ReturnValue5) == 0x000060, "Member 'BP_Missile_C_AddDamge::CallFunc_Multiply_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, Temp_object_Variable) == 0x000068, "Member 'BP_Missile_C_AddDamge::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_Multiply_FloatFloat_ReturnValue6) == 0x000078, "Member 'BP_Missile_C_AddDamge::CallFunc_Multiply_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_SphereTraceMulti_OutHits) == 0x000080, "Member 'BP_Missile_C_AddDamge::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_SphereTraceMulti_ReturnValue) == 0x000090, "Member 'BP_Missile_C_AddDamge::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'BP_Missile_C_AddDamge::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_Missile_C_AddDamge::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_Less_IntInt_ReturnValue) == 0x000120, "Member 'BP_Missile_C_AddDamge::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_BreakHitResult_bBlockingHit) == 0x000121, "Member 'BP_Missile_C_AddDamge::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_BreakHitResult_bInitialOverlap) == 0x000122, "Member 'BP_Missile_C_AddDamge::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_BreakHitResult_Time) == 0x000124, "Member 'BP_Missile_C_AddDamge::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_BreakHitResult_Distance) == 0x000128, "Member 'BP_Missile_C_AddDamge::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_BreakHitResult_Location) == 0x00012C, "Member 'BP_Missile_C_AddDamge::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_BreakHitResult_ImpactPoint) == 0x000138, "Member 'BP_Missile_C_AddDamge::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_BreakHitResult_Normal) == 0x000144, "Member 'BP_Missile_C_AddDamge::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member 'BP_Missile_C_AddDamge::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_BreakHitResult_PhysMat) == 0x000160, "Member 'BP_Missile_C_AddDamge::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_BreakHitResult_HitActor) == 0x000168, "Member 'BP_Missile_C_AddDamge::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_BreakHitResult_HitComponent) == 0x000170, "Member 'BP_Missile_C_AddDamge::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_BreakHitResult_HitBoneName) == 0x000178, "Member 'BP_Missile_C_AddDamge::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_BreakHitResult_HitItem) == 0x000180, "Member 'BP_Missile_C_AddDamge::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_BreakHitResult_FaceIndex) == 0x000184, "Member 'BP_Missile_C_AddDamge::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_BreakHitResult_TraceStart) == 0x000188, "Member 'BP_Missile_C_AddDamge::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_BreakHitResult_TraceEnd) == 0x000194, "Member 'BP_Missile_C_AddDamge::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, K2Node_MakeArray_Array) == 0x0001A0, "Member 'BP_Missile_C_AddDamge::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, K2Node_DynamicCast_AsBP_Character_Base) == 0x0001B0, "Member 'BP_Missile_C_AddDamge::K2Node_DynamicCast_AsBP_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, K2Node_DynamicCast_bSuccess) == 0x0001B8, "Member 'BP_Missile_C_AddDamge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_K2_GetComponentLocation_ReturnValue2) == 0x0001BC, "Member 'BP_Missile_C_AddDamge::CallFunc_K2_GetComponentLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001C8, "Member 'BP_Missile_C_AddDamge::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_LineTraceSingle_OutHit) == 0x0001D0, "Member 'BP_Missile_C_AddDamge::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_LineTraceSingle_ReturnValue) == 0x000258, "Member 'BP_Missile_C_AddDamge::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00025C, "Member 'BP_Missile_C_AddDamge::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_AddDamge, CallFunc_VSize_ReturnValue) == 0x000268, "Member 'BP_Missile_C_AddDamge::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function BP_Missile.BP_Missile_C.HasBlock?
// 0x0228 (0x0228 - 0x0000)
struct BP_Missile_C_HasBlock_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                TargetPlayer;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0038(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x0048(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0060(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EB[0x1];                                       // 0x00EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0168(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_CharacterBase_C*                    K2Node_DynamicCast_AsBP_Character_Base;            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue2;     // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0198(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Missile_C_HasBlock_) == 0x000008, "Wrong alignment on BP_Missile_C_HasBlock_");
static_assert(sizeof(BP_Missile_C_HasBlock_) == 0x000228, "Wrong size on BP_Missile_C_HasBlock_");
static_assert(offsetof(BP_Missile_C_HasBlock_, Result) == 0x000000, "Member 'BP_Missile_C_HasBlock_::Result' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, TargetPlayer) == 0x000008, "Member 'BP_Missile_C_HasBlock_::TargetPlayer' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_Missile_C_HasBlock_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_Missile_C_HasBlock_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_Missile_C_HasBlock_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00001C, "Member 'BP_Missile_C_HasBlock_::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x000028, "Member 'BP_Missile_C_HasBlock_::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, Temp_object_Variable) == 0x000038, "Member 'BP_Missile_C_HasBlock_::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_SphereTraceMulti_OutHits) == 0x000048, "Member 'BP_Missile_C_HasBlock_::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_SphereTraceMulti_ReturnValue) == 0x000058, "Member 'BP_Missile_C_HasBlock_::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_Missile_C_HasBlock_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_Missile_C_HasBlock_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_Missile_C_HasBlock_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_BreakHitResult_bBlockingHit) == 0x0000E9, "Member 'BP_Missile_C_HasBlock_::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000EA, "Member 'BP_Missile_C_HasBlock_::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_BreakHitResult_Time) == 0x0000EC, "Member 'BP_Missile_C_HasBlock_::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_BreakHitResult_Distance) == 0x0000F0, "Member 'BP_Missile_C_HasBlock_::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_BreakHitResult_Location) == 0x0000F4, "Member 'BP_Missile_C_HasBlock_::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_BreakHitResult_ImpactPoint) == 0x000100, "Member 'BP_Missile_C_HasBlock_::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_BreakHitResult_Normal) == 0x00010C, "Member 'BP_Missile_C_HasBlock_::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_BreakHitResult_ImpactNormal) == 0x000118, "Member 'BP_Missile_C_HasBlock_::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_BreakHitResult_PhysMat) == 0x000128, "Member 'BP_Missile_C_HasBlock_::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_BreakHitResult_HitActor) == 0x000130, "Member 'BP_Missile_C_HasBlock_::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_BreakHitResult_HitComponent) == 0x000138, "Member 'BP_Missile_C_HasBlock_::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_BreakHitResult_HitBoneName) == 0x000140, "Member 'BP_Missile_C_HasBlock_::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_BreakHitResult_HitItem) == 0x000148, "Member 'BP_Missile_C_HasBlock_::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_BreakHitResult_FaceIndex) == 0x00014C, "Member 'BP_Missile_C_HasBlock_::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_BreakHitResult_TraceStart) == 0x000150, "Member 'BP_Missile_C_HasBlock_::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_BreakHitResult_TraceEnd) == 0x00015C, "Member 'BP_Missile_C_HasBlock_::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, K2Node_MakeArray_Array) == 0x000168, "Member 'BP_Missile_C_HasBlock_::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, K2Node_DynamicCast_AsBP_Character_Base) == 0x000178, "Member 'BP_Missile_C_HasBlock_::K2Node_DynamicCast_AsBP_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'BP_Missile_C_HasBlock_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_K2_GetComponentLocation_ReturnValue2) == 0x000184, "Member 'BP_Missile_C_HasBlock_::CallFunc_K2_GetComponentLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000190, "Member 'BP_Missile_C_HasBlock_::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_LineTraceSingle_OutHit) == 0x000198, "Member 'BP_Missile_C_HasBlock_::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Missile_C_HasBlock_, CallFunc_LineTraceSingle_ReturnValue) == 0x000220, "Member 'BP_Missile_C_HasBlock_::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");

// Function BP_Missile.BP_Missile_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Missile_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Missile_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Missile_C_ReceiveTick");
static_assert(sizeof(BP_Missile_C_ReceiveTick) == 0x000004, "Wrong size on BP_Missile_C_ReceiveTick");
static_assert(offsetof(BP_Missile_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Missile_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}


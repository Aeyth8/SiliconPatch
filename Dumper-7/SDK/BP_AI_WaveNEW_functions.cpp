#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AI_WaveNEW

#include "Basic.hpp"

#include "BP_AI_WaveNEW_classes.hpp"
#include "BP_AI_WaveNEW_parameters.hpp"


namespace SDK
{

// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.ExecuteUbergraph_BP_AI_WaveNEW
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AI_WaveNEW_C::ExecuteUbergraph_BP_AI_WaveNEW(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_WaveNEW_C", "ExecuteUbergraph_BP_AI_WaveNEW");

	Params::BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AI_WaveNEW_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_WaveNEW_C", "ReceiveTick");

	Params::BP_AI_WaveNEW_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AI_WaveNEW_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_WaveNEW_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AI_WaveNEW_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_WaveNEW_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.ActiveMe
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AI_WaveNEW_C::ActiveMe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_WaveNEW_C", "ActiveMe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.AddSpawner
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FStruct_SpawnerConfigNew&  Config                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// int32                                   _index                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_AISpawnerNEW_C**              Spawner                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AI_WaveNEW_C::AddSpawner(const struct FStruct_SpawnerConfigNew& Config, int32 _index, class ABP_AISpawnerNEW_C** Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_WaveNEW_C", "AddSpawner");

	Params::BP_AI_WaveNEW_C_AddSpawner Parms{};

	Parms.Config = std::move(Config);
	Parms._index = _index;

	UObject::ProcessEvent(Func, &Parms);

	if (Spawner != nullptr)
		*Spawner = Parms.Spawner;
}


// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.GetSpawnerFromIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_AISpawnerNEW_C**              Spawner                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AI_WaveNEW_C::GetSpawnerFromIndex(int32 Index_0, class ABP_AISpawnerNEW_C** Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_WaveNEW_C", "GetSpawnerFromIndex");

	Params::BP_AI_WaveNEW_C_GetSpawnerFromIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Spawner != nullptr)
		*Spawner = Parms.Spawner;
}


// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.ResetMe
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AI_WaveNEW_C::ResetMe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_WaveNEW_C", "ResetMe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.ClearMapItems
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AI_WaveNEW_C::ClearMapItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_WaveNEW_C", "ClearMapItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.CheckleftAICount
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AI_WaveNEW_C::CheckleftAICount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_WaveNEW_C", "CheckleftAICount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.CheckAllLeftAICount
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AI_WaveNEW_C::CheckAllLeftAICount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_WaveNEW_C", "CheckAllLeftAICount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.UpdateAICount
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AI_WaveNEW_C::UpdateAICount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_WaveNEW_C", "UpdateAICount");

	UObject::ProcessEvent(Func, nullptr);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AI_Wave

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Struct_SpawnerConfig_structs.hpp"
#include "EnumDifficuty_structs.hpp"


namespace SDK::Params
{

// Function BP_AI_Wave.BP_AI_Wave_C.ExecuteUbergraph_BP_AI_Wave
// 0x0680 (0x0680 - 0x0000)
struct BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable1;                               // 0x0048(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable4;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable5;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable4;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable5;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable6;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue6;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable6;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable7;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable8;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue7;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue8;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable7;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable8;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable9;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue9;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable9;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable10;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable11;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue10;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue11;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable10;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable11;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable12;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue2;                // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable12;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue12;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable13;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_SpawnerConfig                  CallFunc_Array_Get_Item;                           // 0x00E8(0x0058)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AISpawner_C*                        CallFunc_AddSpawner_Spawner;                       // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AISpawner_C*                        CallFunc_Array_Get_Item1;                          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAllDead_AllDead;                        // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AISpawner_C*                        CallFunc_Array_Get_Item2;                          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAllDead_AllDead1;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_183[0x1];                                      // 0x0183(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable1;                                // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x018E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18F[0x1];                                      // 0x018F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0xC];                                      // 0x01E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable3;                                // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerSwitchPoint_C*                CallFunc_FinishSpawningActor_ReturnValue;          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable4;                                // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable5;                                // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Success, const class FString& Msg)> K2Node_CreateDelegate_OutputDelegate1;   // 0x0248(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable14;                   // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AISpawner_C*                        CallFunc_Array_Get_Item3;                          // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x026E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Value;                          // 0x026F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_PlayerSwitchPoint_C*                CallFunc_Array_Get_Item4;                          // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x027D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27E[0x2];                                      // 0x027E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CharacterBase_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0280(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable13;                  // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    CallFunc_Array_Get_Item5;                          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterPhone_C*                   K2Node_DynamicCast_AsBP_Character_Phone;           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AA[0x2];                                      // 0x02AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue13;                 // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue5;                // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsClear;                        // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x02B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B6[0x2];                                      // 0x02B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item6;                          // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue6;                // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue4;                 // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CharacterBase_C*>            CallFunc_GetAllActorsOfClass_OutActors1;           // 0x02C8(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_CharacterBase_C*                    CallFunc_Array_Get_Item7;                          // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue7;                // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue5;                 // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNeedOnlyVerify_IsNeed;                 // 0x02E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x02E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E7[0x1];                                      // 0x02E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance;           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue14;                 // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_322[0x6];                                      // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue5;                  // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Success;                        // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B[0x5];                                      // 0x033B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Msg;                            // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable6;                                // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable7;                                // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterPhone_C*                   K2Node_DynamicCast_AsBP_Character_Phone1;          // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue1;             // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance1;          // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x3];                                      // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable8;                                // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AI_Wave_C*                          CallFunc_Array_Get_Item8;                          // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue8;                // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue6;                 // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue1;              // 0x03A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue1;                    // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BA[0x6];                                      // 0x03BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue2;             // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance2;          // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x03D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue2;                    // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlanarReflection*>              CallFunc_GetAllActorsOfClass_OutActors2;           // 0x03F0(0x0010)(ZeroConstructor, ReferenceParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue3;             // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlanarReflection*                      CallFunc_Array_Get_Item9;                          // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance3;          // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419[0x3];                                      // 0x0419(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue9;                // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue7;                 // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_NotCheckChoice;                 // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_422[0x2];                                      // 0x0422(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable14;                  // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue8;                 // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429[0x3];                                      // 0x0429(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue15;                 // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable9;                                // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerSwitchPoint_C*                CallFunc_Array_Get_Item10;                         // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue10;               // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue9;                 // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_445[0x3];                                      // 0x0445(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerSwitchPoint_C*                CallFunc_Array_Get_Item11;                         // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue11;               // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EnumDifficuty                                 Temp_byte_Variable;                                // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue10;                // 0x0455(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_456[0x2];                                      // 0x0456(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select1_Default;                            // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CharacterBase_C*>            CallFunc_GetAllActorsOfClass_OutActors3;           // 0x0460(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class ABP_CharacterBase_C*>            CallFunc_GetAllActorsOfClass_OutActors4;           // 0x0470(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_CharacterBase_C*                    CallFunc_Array_Get_Item12;                         // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterBase_C*                    CallFunc_Array_Get_Item13;                         // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue12;               // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue13;               // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue11;                // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue12;                // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49A[0x2];                                      // 0x049A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable10;                               // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x04A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x04B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x04C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x04D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent1;   // 0x04E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor1;            // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp1;             // 0x04F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex1;        // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x04FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FD[0x3];                                      // 0x04FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0500(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 CallFunc_GetDisplayName_ReturnValue2;              // 0x0588(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_CharacterBase_C*                    K2Node_DynamicCast_AsBP_Character_Base;            // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x05A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue6;                  // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x05B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue7;                  // 0x05BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BB[0x5];                                      // 0x05BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue3;              // 0x05C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x05D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x05E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x05F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x0600(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_CharacterBase_C*                    K2Node_DynamicCast_AsBP_Character_Base1;           // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue5;               // 0x0620(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue6;               // 0x0630(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue7;               // 0x0640(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class ABP_RestrictWall_C*>             CallFunc_GetAllActorsOfClass_OutActors5;           // 0x0650(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_RestrictWall_C*                     CallFunc_Array_Get_Item14;                         // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RestrictWall_C*                     CallFunc_Array_Get_Item15;                         // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue14;               // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue15;               // 0x0674(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue13;                // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue14;                // 0x0679(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue1;              // 0x067A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsCheckNextWave;                // 0x067B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave) == 0x000010, "Wrong alignment on BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave");
static_assert(sizeof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave) == 0x000680, "Wrong size on BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, EntryPoint) == 0x000000, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_name_Variable) == 0x000010, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Loop_Counter_Variable1) == 0x000020, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Loop_Counter_Variable2) == 0x000024, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Add_IntInt_ReturnValue1) == 0x000028, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Add_IntInt_ReturnValue2) == 0x00002C, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Array_Index_Variable1) == 0x000030, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_HasAuthority_ReturnValue) == 0x000034, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Array_Index_Variable2) == 0x000038, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Loop_Counter_Variable3) == 0x00003C, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Add_IntInt_ReturnValue3) == 0x000040, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Array_Index_Variable3) == 0x000044, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_name_Variable1) == 0x000048, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Loop_Counter_Variable4) == 0x000050, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Loop_Counter_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Add_IntInt_ReturnValue4) == 0x000054, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_HasAuthority_ReturnValue1) == 0x000058, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_HasAuthority_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Loop_Counter_Variable5) == 0x00005C, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Loop_Counter_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Add_IntInt_ReturnValue5) == 0x000060, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Array_Index_Variable4) == 0x000064, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Array_Index_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Array_Index_Variable5) == 0x000068, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Array_Index_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Loop_Counter_Variable6) == 0x00006C, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Loop_Counter_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Add_IntInt_ReturnValue6) == 0x000070, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Add_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Array_Index_Variable6) == 0x000074, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Array_Index_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Loop_Counter_Variable7) == 0x000078, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Loop_Counter_Variable7' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Loop_Counter_Variable8) == 0x00007C, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Loop_Counter_Variable8' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Add_IntInt_ReturnValue7) == 0x000080, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Add_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Add_IntInt_ReturnValue8) == 0x000084, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Add_IntInt_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Array_Index_Variable7) == 0x000088, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Array_Index_Variable7' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Array_Index_Variable8) == 0x00008C, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Array_Index_Variable8' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Loop_Counter_Variable9) == 0x000090, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Loop_Counter_Variable9' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Add_IntInt_ReturnValue9) == 0x000094, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Add_IntInt_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Array_Index_Variable9) == 0x000098, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Array_Index_Variable9' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_bool_IsClosed_Variable) == 0x00009C, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_bool_Has_Been_Initd_Variable) == 0x00009D, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Loop_Counter_Variable10) == 0x0000A0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Loop_Counter_Variable10' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Loop_Counter_Variable11) == 0x0000A4, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Loop_Counter_Variable11' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Add_IntInt_ReturnValue10) == 0x0000A8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Add_IntInt_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Add_IntInt_ReturnValue11) == 0x0000AC, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Add_IntInt_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Array_Index_Variable10) == 0x0000B0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Array_Index_Variable10' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Array_Index_Variable11) == 0x0000B4, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Array_Index_Variable11' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Array_Index_Variable12) == 0x0000B8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Array_Index_Variable12' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_CreateDelegate_OutputDelegate) == 0x0000C0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_HasAuthority_ReturnValue2) == 0x0000D1, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_HasAuthority_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Loop_Counter_Variable12) == 0x0000D4, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Loop_Counter_Variable12' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Add_IntInt_ReturnValue12) == 0x0000D8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Add_IntInt_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Array_Index_Variable13) == 0x0000DC, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Array_Index_Variable13' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_Event_DeltaSeconds) == 0x0000E0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Length_ReturnValue) == 0x000140, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_AddSpawner_Spawner) == 0x000148, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_AddSpawner_Spawner' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Variable) == 0x000150, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Add_ReturnValue) == 0x000154, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Length_ReturnValue1) == 0x000158, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Get_Item1) == 0x000160, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Greater_IntInt_ReturnValue) == 0x000168, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_IsAllDead_AllDead) == 0x000169, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_IsAllDead_AllDead' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Get_Item2) == 0x000170, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_IsAllDead_AllDead1) == 0x000178, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_IsAllDead_AllDead1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Length_ReturnValue2) == 0x00017C, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Less_IntInt_ReturnValue) == 0x000180, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Not_PreBool_ReturnValue) == 0x000181, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_BooleanAND_ReturnValue) == 0x000182, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Variable1) == 0x000184, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Variable2) == 0x000188, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Not_PreBool_ReturnValue1) == 0x00018C, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_BooleanAND_ReturnValue1) == 0x00018D, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_IsValid_ReturnValue1) == 0x00018E, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_GetTransform_ReturnValue) == 0x000190, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_BreakTransform_Location) == 0x0001C0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_BreakTransform_Rotation) == 0x0001CC, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_BreakTransform_Scale) == 0x0001D8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_MakeTransform_ReturnValue) == 0x0001F0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Add_ReturnValue1) == 0x000220, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000228, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Variable3) == 0x000230, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_FinishSpawningActor_ReturnValue) == 0x000238, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Variable4) == 0x000240, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Variable5) == 0x000244, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_CreateDelegate_OutputDelegate1) == 0x000248, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Array_Index_Variable14) == 0x000258, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Array_Index_Variable14' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Get_Item3) == 0x000260, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Length_ReturnValue3) == 0x000268, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_BooleanAND_ReturnValue2) == 0x00026C, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Contains_ReturnValue) == 0x00026D, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_IsValid_ReturnValue2) == 0x00026E, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_CustomEvent_Value) == 0x00026F, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Get_Item4) == 0x000270, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Length_ReturnValue4) == 0x000278, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_IsValid_ReturnValue3) == 0x00027C, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Less_IntInt_ReturnValue1) == 0x00027D, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_GetAllActorsOfClass_OutActors) == 0x000280, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Loop_Counter_Variable13) == 0x000290, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Loop_Counter_Variable13' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Get_Item5) == 0x000298, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_DynamicCast_AsBP_Character_Phone) == 0x0002A0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_DynamicCast_AsBP_Character_Phone' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_DynamicCast_bSuccess) == 0x0002A8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Less_IntInt_ReturnValue2) == 0x0002A9, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Add_IntInt_ReturnValue13) == 0x0002AC, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Add_IntInt_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Length_ReturnValue5) == 0x0002B0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Length_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_CustomEvent_IsClear) == 0x0002B4, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_CustomEvent_IsClear' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Less_IntInt_ReturnValue3) == 0x0002B5, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Get_Item6) == 0x0002B8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Get_Item6' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Length_ReturnValue6) == 0x0002C0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Length_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Less_IntInt_ReturnValue4) == 0x0002C4, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Less_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_GetAllActorsOfClass_OutActors1) == 0x0002C8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_GetAllActorsOfClass_OutActors1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Get_Item7) == 0x0002D8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Get_Item7' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Length_ReturnValue7) == 0x0002E0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Length_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Less_IntInt_ReturnValue5) == 0x0002E4, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Less_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_GetNeedOnlyVerify_IsNeed) == 0x0002E5, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_GetNeedOnlyVerify_IsNeed' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_BooleanAND_ReturnValue3) == 0x0002E6, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Conv_StringToInt_ReturnValue) == 0x0002E8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_GetGameInstance_ReturnValue) == 0x0002F0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_DynamicCast_AsMer_2Game_Instance) == 0x0002F8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_DynamicCast_AsMer_2Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_DynamicCast_bSuccess1) == 0x000300, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_GetGameState_ReturnValue) == 0x000308, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_DynamicCast_AsMer_2Game_State) == 0x000310, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_DynamicCast_bSuccess2) == 0x000318, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Add_IntInt_ReturnValue14) == 0x00031C, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Add_IntInt_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Not_PreBool_ReturnValue2) == 0x000320, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_BooleanAND_ReturnValue4) == 0x000321, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_GetDisplayName_ReturnValue) == 0x000328, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_IsValid_ReturnValue4) == 0x000338, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_BooleanAND_ReturnValue5) == 0x000339, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_BooleanAND_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_CustomEvent_Success) == 0x00033A, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_CustomEvent_Msg) == 0x000340, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_CustomEvent_Msg' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Variable6) == 0x000350, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_Select_Default) == 0x000354, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Variable7) == 0x000358, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Variable7' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_IsValid_ReturnValue5) == 0x00035C, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_GetPlayerPawn_ReturnValue) == 0x000360, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_DynamicCast_AsBP_Character_Phone1) == 0x000368, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_DynamicCast_AsBP_Character_Phone1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_DynamicCast_bSuccess3) == 0x000370, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000374, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_GetGameInstance_ReturnValue1) == 0x000380, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_GetGameInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_DynamicCast_AsMer_2Game_Instance1) == 0x000388, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_DynamicCast_AsMer_2Game_Instance1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_DynamicCast_bSuccess4) == 0x000390, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Variable8) == 0x000394, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Variable8' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Get_Item8) == 0x000398, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Get_Item8' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Length_ReturnValue8) == 0x0003A0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Length_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Less_IntInt_ReturnValue6) == 0x0003A4, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Less_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_GetDisplayName_ReturnValue1) == 0x0003A8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_GetDisplayName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Contains_ReturnValue) == 0x0003B8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Contains_ReturnValue1) == 0x0003B9, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Contains_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_GetGameInstance_ReturnValue2) == 0x0003C0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_GetGameInstance_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_DynamicCast_AsMer_2Game_Instance2) == 0x0003C8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_DynamicCast_AsMer_2Game_Instance2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_DynamicCast_bSuccess5) == 0x0003D0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_GetCurrentLevelName_ReturnValue) == 0x0003D8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Contains_ReturnValue2) == 0x0003E8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Contains_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_GetAllActorsOfClass_OutActors2) == 0x0003F0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_GetAllActorsOfClass_OutActors2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_GetGameInstance_ReturnValue3) == 0x000400, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_GetGameInstance_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Get_Item9) == 0x000408, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Get_Item9' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_DynamicCast_AsMer_2Game_Instance3) == 0x000410, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_DynamicCast_AsMer_2Game_Instance3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_DynamicCast_bSuccess6) == 0x000418, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Length_ReturnValue9) == 0x00041C, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Length_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Less_IntInt_ReturnValue7) == 0x000420, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Less_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_CustomEvent_NotCheckChoice) == 0x000421, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_CustomEvent_NotCheckChoice' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Loop_Counter_Variable14) == 0x000424, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Loop_Counter_Variable14' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Less_IntInt_ReturnValue8) == 0x000428, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Less_IntInt_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Add_IntInt_ReturnValue15) == 0x00042C, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Add_IntInt_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000430, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Variable9) == 0x000434, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Variable9' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Get_Item10) == 0x000438, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Get_Item10' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Length_ReturnValue10) == 0x000440, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Length_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Less_IntInt_ReturnValue9) == 0x000444, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Less_IntInt_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Get_Item11) == 0x000448, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Get_Item11' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Length_ReturnValue11) == 0x000450, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Length_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_byte_Variable) == 0x000454, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Less_IntInt_ReturnValue10) == 0x000455, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Less_IntInt_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_Select1_Default) == 0x000458, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_GetAllActorsOfClass_OutActors3) == 0x000460, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_GetAllActorsOfClass_OutActors3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_GetAllActorsOfClass_OutActors4) == 0x000470, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_GetAllActorsOfClass_OutActors4' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Get_Item12) == 0x000480, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Get_Item12' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Get_Item13) == 0x000488, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Get_Item13' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Length_ReturnValue12) == 0x000490, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Length_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Length_ReturnValue13) == 0x000494, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Length_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Less_IntInt_ReturnValue11) == 0x000498, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Less_IntInt_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Less_IntInt_ReturnValue12) == 0x000499, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Less_IntInt_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, Temp_int_Variable10) == 0x00049C, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::Temp_int_Variable10' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Conv_IntToString_ReturnValue) == 0x0004A0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Concat_StrStr_ReturnValue) == 0x0004B0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Concat_StrStr_ReturnValue1) == 0x0004C0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Concat_StrStr_ReturnValue2) == 0x0004D0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_ComponentBoundEvent_OverlappedComponent1) == 0x0004E0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_ComponentBoundEvent_OverlappedComponent1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_ComponentBoundEvent_OtherActor1) == 0x0004E8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_ComponentBoundEvent_OtherActor1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_ComponentBoundEvent_OtherComp1) == 0x0004F0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_ComponentBoundEvent_OtherComp1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_ComponentBoundEvent_OtherBodyIndex1) == 0x0004F8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_ComponentBoundEvent_OtherBodyIndex1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_ComponentBoundEvent_bFromSweep) == 0x0004FC, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_ComponentBoundEvent_SweepResult) == 0x000500, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_GetDisplayName_ReturnValue2) == 0x000588, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_GetDisplayName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_DynamicCast_AsBP_Character_Base) == 0x000598, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_DynamicCast_AsBP_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_DynamicCast_bSuccess7) == 0x0005A0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Conv_BoolToString_ReturnValue) == 0x0005A8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_BooleanAND_ReturnValue6) == 0x0005B8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_BooleanAND_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Not_PreBool_ReturnValue3) == 0x0005B9, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_BooleanAND_ReturnValue7) == 0x0005BA, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_BooleanAND_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_GetDisplayName_ReturnValue3) == 0x0005C0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_GetDisplayName_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Concat_StrStr_ReturnValue3) == 0x0005D0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0005E0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_ComponentBoundEvent_OtherActor) == 0x0005E8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_ComponentBoundEvent_OtherComp) == 0x0005F0, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0005F8, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Concat_StrStr_ReturnValue4) == 0x000600, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_DynamicCast_AsBP_Character_Base1) == 0x000610, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_DynamicCast_AsBP_Character_Base1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_DynamicCast_bSuccess8) == 0x000618, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Concat_StrStr_ReturnValue5) == 0x000620, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Concat_StrStr_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Concat_StrStr_ReturnValue6) == 0x000630, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Concat_StrStr_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Concat_StrStr_ReturnValue7) == 0x000640, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Concat_StrStr_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_GetAllActorsOfClass_OutActors5) == 0x000650, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_GetAllActorsOfClass_OutActors5' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Get_Item14) == 0x000660, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Get_Item14' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Get_Item15) == 0x000668, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Get_Item15' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Length_ReturnValue14) == 0x000670, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Length_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Length_ReturnValue15) == 0x000674, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Length_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Less_IntInt_ReturnValue13) == 0x000678, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Less_IntInt_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Less_IntInt_ReturnValue14) == 0x000679, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Less_IntInt_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, CallFunc_Array_Contains_ReturnValue1) == 0x00067A, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::CallFunc_Array_Contains_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave, K2Node_CustomEvent_IsCheckNextWave) == 0x00067B, "Member 'BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave::K2Node_CustomEvent_IsCheckNextWave' has a wrong offset!");

// Function BP_AI_Wave.BP_AI_Wave_C.DeactiveRestricWalls
// 0x0001 (0x0001 - 0x0000)
struct BP_AI_Wave_C_DeactiveRestricWalls final
{
public:
	bool                                          IsCheckNextWave;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_Wave_C_DeactiveRestricWalls) == 0x000001, "Wrong alignment on BP_AI_Wave_C_DeactiveRestricWalls");
static_assert(sizeof(BP_AI_Wave_C_DeactiveRestricWalls) == 0x000001, "Wrong size on BP_AI_Wave_C_DeactiveRestricWalls");
static_assert(offsetof(BP_AI_Wave_C_DeactiveRestricWalls, IsCheckNextWave) == 0x000000, "Member 'BP_AI_Wave_C_DeactiveRestricWalls::IsCheckNextWave' has a wrong offset!");

// Function BP_AI_Wave.BP_AI_Wave_C.BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_AI_Wave.BP_AI_Wave_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_AI_Wave.BP_AI_Wave_C.PrivateActiveMe
// 0x0001 (0x0001 - 0x0000)
struct BP_AI_Wave_C_PrivateActiveMe final
{
public:
	bool                                          NotCheckChoice;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_Wave_C_PrivateActiveMe) == 0x000001, "Wrong alignment on BP_AI_Wave_C_PrivateActiveMe");
static_assert(sizeof(BP_AI_Wave_C_PrivateActiveMe) == 0x000001, "Wrong size on BP_AI_Wave_C_PrivateActiveMe");
static_assert(offsetof(BP_AI_Wave_C_PrivateActiveMe, NotCheckChoice) == 0x000000, "Member 'BP_AI_Wave_C_PrivateActiveMe::NotCheckChoice' has a wrong offset!");

// Function BP_AI_Wave.BP_AI_Wave_C.CustomEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_AI_Wave_C_CustomEvent_1 final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Msg;                                               // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AI_Wave_C_CustomEvent_1) == 0x000008, "Wrong alignment on BP_AI_Wave_C_CustomEvent_1");
static_assert(sizeof(BP_AI_Wave_C_CustomEvent_1) == 0x000018, "Wrong size on BP_AI_Wave_C_CustomEvent_1");
static_assert(offsetof(BP_AI_Wave_C_CustomEvent_1, Success) == 0x000000, "Member 'BP_AI_Wave_C_CustomEvent_1::Success' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_CustomEvent_1, Msg) == 0x000008, "Member 'BP_AI_Wave_C_CustomEvent_1::Msg' has a wrong offset!");

// Function BP_AI_Wave.BP_AI_Wave_C.OnSetSwitchPoints
// 0x0001 (0x0001 - 0x0000)
struct BP_AI_Wave_C_OnSetSwitchPoints final
{
public:
	bool                                          IsClear;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_Wave_C_OnSetSwitchPoints) == 0x000001, "Wrong alignment on BP_AI_Wave_C_OnSetSwitchPoints");
static_assert(sizeof(BP_AI_Wave_C_OnSetSwitchPoints) == 0x000001, "Wrong size on BP_AI_Wave_C_OnSetSwitchPoints");
static_assert(offsetof(BP_AI_Wave_C_OnSetSwitchPoints, IsClear) == 0x000000, "Member 'BP_AI_Wave_C_OnSetSwitchPoints::IsClear' has a wrong offset!");

// Function BP_AI_Wave.BP_AI_Wave_C.ActiveSwitchPoints
// 0x0001 (0x0001 - 0x0000)
struct BP_AI_Wave_C_ActiveSwitchPoints final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_Wave_C_ActiveSwitchPoints) == 0x000001, "Wrong alignment on BP_AI_Wave_C_ActiveSwitchPoints");
static_assert(sizeof(BP_AI_Wave_C_ActiveSwitchPoints) == 0x000001, "Wrong size on BP_AI_Wave_C_ActiveSwitchPoints");
static_assert(offsetof(BP_AI_Wave_C_ActiveSwitchPoints, Value) == 0x000000, "Member 'BP_AI_Wave_C_ActiveSwitchPoints::Value' has a wrong offset!");

// Function BP_AI_Wave.BP_AI_Wave_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AI_Wave_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AI_Wave_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AI_Wave_C_ReceiveTick");
static_assert(sizeof(BP_AI_Wave_C_ReceiveTick) == 0x000004, "Wrong size on BP_AI_Wave_C_ReceiveTick");
static_assert(offsetof(BP_AI_Wave_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AI_Wave_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AI_Wave.BP_AI_Wave_C.UserConstructionScript
// 0x0460 (0x0460 - 0x0000)
struct BP_AI_Wave_C_UserConstructionScript final
{
public:
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0000(0x0018)()
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransformAtSplinePoint_ReturnValue;    // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue1;             // 0x0080(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue2;             // 0x0098(0x0018)()
	float                                         CallFunc_BreakVector_X1;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X2;                           // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00E8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult1;   // 0x0170(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X3;                           // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y3;                           // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z3;                           // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransformAtSplinePoint_ReturnValue1;   // 0x0210(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location1;                 // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation1;                 // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale1;                    // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X4;                           // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y4;                           // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z4;                           // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0280(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakVector_X5;                           // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y5;                           // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z5;                           // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue3;                  // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0328(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult1; // 0x03B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0438(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0448(0x0018)()
};
static_assert(alignof(BP_AI_Wave_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_AI_Wave_C_UserConstructionScript");
static_assert(sizeof(BP_AI_Wave_C_UserConstructionScript) == 0x000460, "Wrong size on BP_AI_Wave_C_UserConstructionScript");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_MakeLiteralText_ReturnValue) == 0x000000, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_GetTransformAtSplinePoint_ReturnValue) == 0x000020, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_GetTransformAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakTransform_Location) == 0x000050, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000074, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000078, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x00007C, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_MakeLiteralText_ReturnValue1) == 0x000080, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_MakeLiteralText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_MakeLiteralText_ReturnValue2) == 0x000098, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_MakeLiteralText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakVector_X1) == 0x0000B0, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakVector_Y1) == 0x0000B4, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakVector_Z1) == 0x0000B8, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakVector_X2) == 0x0000BC, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakVector_Y2) == 0x0000C0, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakVector_Z2) == 0x0000C4, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x0000CC, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue1) == 0x0000D8, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000E8, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult1) == 0x000170, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001F8, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakVector_X3) == 0x000204, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakVector_X3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakVector_Y3) == 0x000208, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakVector_Y3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakVector_Z3) == 0x00020C, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakVector_Z3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_GetTransformAtSplinePoint_ReturnValue1) == 0x000210, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_GetTransformAtSplinePoint_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_Add_FloatFloat_ReturnValue) == 0x000240, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakTransform_Location1) == 0x000244, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakTransform_Location1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakTransform_Rotation1) == 0x000250, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakTransform_Rotation1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakTransform_Scale1) == 0x00025C, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakTransform_Scale1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue2) == 0x000268, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakVector_X4) == 0x000274, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakVector_X4' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakVector_Y4) == 0x000278, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakVector_Y4' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakVector_Z4) == 0x00027C, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakVector_Z4' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000280, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakVector_X5) == 0x000308, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakVector_X5' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakVector_Y5) == 0x00030C, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakVector_Y5' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_BreakVector_Z5) == 0x000310, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_BreakVector_Z5' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000314, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue3) == 0x000318, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000328, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult1) == 0x0003B0, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue) == 0x000438, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_UserConstructionScript, CallFunc_Conv_StringToText_ReturnValue) == 0x000448, "Member 'BP_AI_Wave_C_UserConstructionScript::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_AI_Wave.BP_AI_Wave_C.ActiveMe
// 0x0001 (0x0001 - 0x0000)
struct BP_AI_Wave_C_ActiveMe final
{
public:
	bool                                          NotCheckChoose;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_Wave_C_ActiveMe) == 0x000001, "Wrong alignment on BP_AI_Wave_C_ActiveMe");
static_assert(sizeof(BP_AI_Wave_C_ActiveMe) == 0x000001, "Wrong size on BP_AI_Wave_C_ActiveMe");
static_assert(offsetof(BP_AI_Wave_C_ActiveMe, NotCheckChoose) == 0x000000, "Member 'BP_AI_Wave_C_ActiveMe::NotCheckChoose' has a wrong offset!");

// Function BP_AI_Wave.BP_AI_Wave_C.AddSpawner
// 0x00B0 (0x00B0 - 0x0000)
struct BP_AI_Wave_C_AddSpawner final
{
public:
	struct FStruct_SpawnerConfig                  Config;                                            // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class ABP_AISpawner_C*                        Spawner;                                           // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0xF];                                       // 0x0061(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AISpawner_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AI_Wave_C_AddSpawner) == 0x000010, "Wrong alignment on BP_AI_Wave_C_AddSpawner");
static_assert(sizeof(BP_AI_Wave_C_AddSpawner) == 0x0000B0, "Wrong size on BP_AI_Wave_C_AddSpawner");
static_assert(offsetof(BP_AI_Wave_C_AddSpawner, Config) == 0x000000, "Member 'BP_AI_Wave_C_AddSpawner::Config' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_AddSpawner, Spawner) == 0x000058, "Member 'BP_AI_Wave_C_AddSpawner::Spawner' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_AddSpawner, CallFunc_HasAuthority_ReturnValue) == 0x000060, "Member 'BP_AI_Wave_C_AddSpawner::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_AddSpawner, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'BP_AI_Wave_C_AddSpawner::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_AddSpawner, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A0, "Member 'BP_AI_Wave_C_AddSpawner::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_AddSpawner, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A8, "Member 'BP_AI_Wave_C_AddSpawner::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_AI_Wave.BP_AI_Wave_C.GetSpawnerFromIndex
// 0x0028 (0x0028 - 0x0000)
struct BP_AI_Wave_C_GetSpawnerFromIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AISpawner_C*                        Spawner;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AISpawner_C*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_Wave_C_GetSpawnerFromIndex) == 0x000008, "Wrong alignment on BP_AI_Wave_C_GetSpawnerFromIndex");
static_assert(sizeof(BP_AI_Wave_C_GetSpawnerFromIndex) == 0x000028, "Wrong size on BP_AI_Wave_C_GetSpawnerFromIndex");
static_assert(offsetof(BP_AI_Wave_C_GetSpawnerFromIndex, Index_0) == 0x000000, "Member 'BP_AI_Wave_C_GetSpawnerFromIndex::Index_0' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_GetSpawnerFromIndex, Spawner) == 0x000008, "Member 'BP_AI_Wave_C_GetSpawnerFromIndex::Spawner' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_GetSpawnerFromIndex, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AI_Wave_C_GetSpawnerFromIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_GetSpawnerFromIndex, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_AI_Wave_C_GetSpawnerFromIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_GetSpawnerFromIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_AI_Wave_C_GetSpawnerFromIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_GetSpawnerFromIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_AI_Wave_C_GetSpawnerFromIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AI_Wave.BP_AI_Wave_C.FadeCamera
// 0x0038 (0x0038 - 0x0000)
struct BP_AI_Wave_C_FadeCamera final
{
public:
	bool                                          IsFadeOut;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_CharacterBase_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_Wave_C_FadeCamera) == 0x000008, "Wrong alignment on BP_AI_Wave_C_FadeCamera");
static_assert(sizeof(BP_AI_Wave_C_FadeCamera) == 0x000038, "Wrong size on BP_AI_Wave_C_FadeCamera");
static_assert(offsetof(BP_AI_Wave_C_FadeCamera, IsFadeOut) == 0x000000, "Member 'BP_AI_Wave_C_FadeCamera::IsFadeOut' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_FadeCamera, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AI_Wave_C_FadeCamera::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_FadeCamera, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AI_Wave_C_FadeCamera::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_FadeCamera, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AI_Wave_C_FadeCamera::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_FadeCamera, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_AI_Wave_C_FadeCamera::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_FadeCamera, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_AI_Wave_C_FadeCamera::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_FadeCamera, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AI_Wave_C_FadeCamera::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_FadeCamera, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_AI_Wave_C_FadeCamera::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AI_Wave.BP_AI_Wave_C.TeleportPlayer
// 0x03B0 (0x03B0 - 0x0000)
struct BP_AI_Wave_C_TeleportPlayer final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_CommandLineArgValue_value;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CommandLineArgValue_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CharacterBase_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_CharacterBase_C*                    CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CharacterBase_C*>            CallFunc_GetAllActorsOfClass_OutActors1;           // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          Temp_bool_Variable3;                               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item1;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    K2Node_DynamicCast_AsBP_Character_Base;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue1;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterBase_C*                    K2Node_DynamicCast_AsBP_Character_Base1;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMer2PlayerController_C*                K2Node_DynamicCast_AsMer_2Player_Controller;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterPhone_C*                   K2Node_DynamicCast_AsBP_Character_Phone;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0140(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue1;    // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UArrowComponent*                        K2Node_Select_Default;                             // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UArrowComponent*                        K2Node_Select1_Default;                            // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select2_Default;                            // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Select3_Default;                            // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0260(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0290(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult1;      // 0x0320(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue1;         // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_Wave_C_TeleportPlayer) == 0x000010, "Wrong alignment on BP_AI_Wave_C_TeleportPlayer");
static_assert(sizeof(BP_AI_Wave_C_TeleportPlayer) == 0x0003B0, "Wrong size on BP_AI_Wave_C_TeleportPlayer");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, Temp_bool_Variable) == 0x000000, "Member 'BP_AI_Wave_C_TeleportPlayer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, Temp_bool_Variable1) == 0x000001, "Member 'BP_AI_Wave_C_TeleportPlayer::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, Temp_bool_Variable2) == 0x000002, "Member 'BP_AI_Wave_C_TeleportPlayer::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AI_Wave_C_TeleportPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AI_Wave_C_TeleportPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, Temp_int_Array_Index_Variable1) == 0x000010, "Member 'BP_AI_Wave_C_TeleportPlayer::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_CommandLineArgValue_value) == 0x000018, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_CommandLineArgValue_value' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_CommandLineArgValue_ReturnValue) == 0x000028, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_CommandLineArgValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000029, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_GetAllActorsOfClass_OutActors1) == 0x000050, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_GetAllActorsOfClass_OutActors1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, Temp_bool_Variable3) == 0x000060, "Member 'BP_AI_Wave_C_TeleportPlayer::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_Array_Get_Item1) == 0x000068, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, K2Node_DynamicCast_AsBP_Character_Base) == 0x000078, "Member 'BP_AI_Wave_C_TeleportPlayer::K2Node_DynamicCast_AsBP_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_AI_Wave_C_TeleportPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_IsLocallyControlled_ReturnValue) == 0x000081, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_GetController_ReturnValue) == 0x000088, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_IsValid_ReturnValue1) == 0x000090, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_GetController_ReturnValue1) == 0x000098, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_GetController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, K2Node_DynamicCast_AsBP_Character_Base1) == 0x0000A0, "Member 'BP_AI_Wave_C_TeleportPlayer::K2Node_DynamicCast_AsBP_Character_Base1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, K2Node_DynamicCast_bSuccess1) == 0x0000A8, "Member 'BP_AI_Wave_C_TeleportPlayer::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, K2Node_DynamicCast_AsMer_2Player_Controller) == 0x0000B0, "Member 'BP_AI_Wave_C_TeleportPlayer::K2Node_DynamicCast_AsMer_2Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, K2Node_DynamicCast_bSuccess2) == 0x0000B8, "Member 'BP_AI_Wave_C_TeleportPlayer::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, K2Node_DynamicCast_AsBP_Character_Phone) == 0x0000C0, "Member 'BP_AI_Wave_C_TeleportPlayer::K2Node_DynamicCast_AsBP_Character_Phone' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, K2Node_DynamicCast_bSuccess3) == 0x0000C8, "Member 'BP_AI_Wave_C_TeleportPlayer::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x0000CC, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000D0, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_Array_Length_ReturnValue1) == 0x0000DC, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000E0, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, Temp_int_Loop_Counter_Variable1) == 0x0000F0, "Member 'BP_AI_Wave_C_TeleportPlayer::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_Less_IntInt_ReturnValue1) == 0x0000F4, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_Add_IntInt_ReturnValue1) == 0x0000F8, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x0000FC, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000108, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_Add_VectorVector_ReturnValue) == 0x000114, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_IsValid_ReturnValue2) == 0x000120, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_BreakVector_X) == 0x000124, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_BreakVector_Y) == 0x000128, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_BreakVector_Z) == 0x00012C, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_Add_FloatFloat_ReturnValue) == 0x000130, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_MakeVector_ReturnValue) == 0x000134, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000140, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0001C8, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x0001CC, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_GetLocationAtSplinePoint_ReturnValue1) == 0x0001D8, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_GetLocationAtSplinePoint_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, K2Node_Select_Default) == 0x0001E8, "Member 'BP_AI_Wave_C_TeleportPlayer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x0001F0, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, K2Node_Select1_Default) == 0x000200, "Member 'BP_AI_Wave_C_TeleportPlayer::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, K2Node_Select2_Default) == 0x000208, "Member 'BP_AI_Wave_C_TeleportPlayer::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000214, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, K2Node_Select3_Default) == 0x000220, "Member 'BP_AI_Wave_C_TeleportPlayer::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_BreakRotator_Roll) == 0x00022C, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_BreakRotator_Pitch) == 0x000230, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_BreakRotator_Yaw) == 0x000234, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_BreakVector_X1) == 0x000238, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_BreakVector_Y1) == 0x00023C, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_BreakVector_Z1) == 0x000240, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_MakeRotator_ReturnValue) == 0x000244, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000250, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_MakeVector_ReturnValue1) == 0x000254, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_MakeTransform_ReturnValue) == 0x000260, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000290, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000318, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_K2_SetActorLocation_SweepHitResult1) == 0x000320, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_K2_SetActorLocation_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_TeleportPlayer, CallFunc_K2_SetActorLocation_ReturnValue1) == 0x0003A8, "Member 'BP_AI_Wave_C_TeleportPlayer::CallFunc_K2_SetActorLocation_ReturnValue1' has a wrong offset!");

// Function BP_AI_Wave.BP_AI_Wave_C.ResetMe
// 0x0020 (0x0020 - 0x0000)
struct BP_AI_Wave_C_ResetMe final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AISpawner_C*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_Wave_C_ResetMe) == 0x000008, "Wrong alignment on BP_AI_Wave_C_ResetMe");
static_assert(sizeof(BP_AI_Wave_C_ResetMe) == 0x000020, "Wrong size on BP_AI_Wave_C_ResetMe");
static_assert(offsetof(BP_AI_Wave_C_ResetMe, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_AI_Wave_C_ResetMe::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ResetMe, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AI_Wave_C_ResetMe::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ResetMe, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AI_Wave_C_ResetMe::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ResetMe, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AI_Wave_C_ResetMe::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ResetMe, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_AI_Wave_C_ResetMe::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ResetMe, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_AI_Wave_C_ResetMe::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AI_Wave.BP_AI_Wave_C.ClearMapItems
// 0x0030 (0x0030 - 0x0000)
struct BP_AI_Wave_C_ClearMapItems final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_ItemBase_C*>                 CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_ItemBase_C*                         CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_Wave_C_ClearMapItems) == 0x000008, "Wrong alignment on BP_AI_Wave_C_ClearMapItems");
static_assert(sizeof(BP_AI_Wave_C_ClearMapItems) == 0x000030, "Wrong size on BP_AI_Wave_C_ClearMapItems");
static_assert(offsetof(BP_AI_Wave_C_ClearMapItems, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_AI_Wave_C_ClearMapItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ClearMapItems, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AI_Wave_C_ClearMapItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ClearMapItems, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AI_Wave_C_ClearMapItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ClearMapItems, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_AI_Wave_C_ClearMapItems::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ClearMapItems, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AI_Wave_C_ClearMapItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ClearMapItems, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_AI_Wave_C_ClearMapItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ClearMapItems, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_AI_Wave_C_ClearMapItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ClearMapItems, CallFunc_IsValid_ReturnValue) == 0x00002D, "Member 'BP_AI_Wave_C_ClearMapItems::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AI_Wave.BP_AI_Wave_C.ActiveSwitchPoint
// 0x0028 (0x0028 - 0x0000)
struct BP_AI_Wave_C_ActiveSwitchPoint final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerSwitchPoint_C*                CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_Wave_C_ActiveSwitchPoint) == 0x000008, "Wrong alignment on BP_AI_Wave_C_ActiveSwitchPoint");
static_assert(sizeof(BP_AI_Wave_C_ActiveSwitchPoint) == 0x000028, "Wrong size on BP_AI_Wave_C_ActiveSwitchPoint");
static_assert(offsetof(BP_AI_Wave_C_ActiveSwitchPoint, IsActive) == 0x000000, "Member 'BP_AI_Wave_C_ActiveSwitchPoint::IsActive' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ActiveSwitchPoint, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AI_Wave_C_ActiveSwitchPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ActiveSwitchPoint, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AI_Wave_C_ActiveSwitchPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ActiveSwitchPoint, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AI_Wave_C_ActiveSwitchPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ActiveSwitchPoint, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_AI_Wave_C_ActiveSwitchPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ActiveSwitchPoint, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_AI_Wave_C_ActiveSwitchPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_ActiveSwitchPoint, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_AI_Wave_C_ActiveSwitchPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AI_Wave.BP_AI_Wave_C.IsFinished
// 0x0001 (0x0001 - 0x0000)
struct BP_AI_Wave_C_IsFinished final
{
public:
	bool                                          IsFinished_0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_Wave_C_IsFinished) == 0x000001, "Wrong alignment on BP_AI_Wave_C_IsFinished");
static_assert(sizeof(BP_AI_Wave_C_IsFinished) == 0x000001, "Wrong size on BP_AI_Wave_C_IsFinished");
static_assert(offsetof(BP_AI_Wave_C_IsFinished, IsFinished_0) == 0x000000, "Member 'BP_AI_Wave_C_IsFinished::IsFinished_0' has a wrong offset!");

// Function BP_AI_Wave.BP_AI_Wave_C.KillAllAI
// 0x0028 (0x0028 - 0x0000)
struct BP_AI_Wave_C_KillAllAI final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AISpawner_C*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AI_Wave_C_KillAllAI) == 0x000008, "Wrong alignment on BP_AI_Wave_C_KillAllAI");
static_assert(sizeof(BP_AI_Wave_C_KillAllAI) == 0x000028, "Wrong size on BP_AI_Wave_C_KillAllAI");
static_assert(offsetof(BP_AI_Wave_C_KillAllAI, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_AI_Wave_C_KillAllAI::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_KillAllAI, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_AI_Wave_C_KillAllAI::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_KillAllAI, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AI_Wave_C_KillAllAI::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_KillAllAI, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AI_Wave_C_KillAllAI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_KillAllAI, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_AI_Wave_C_KillAllAI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_KillAllAI, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_AI_Wave_C_KillAllAI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_Wave_C_KillAllAI, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_AI_Wave_C_KillAllAI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}


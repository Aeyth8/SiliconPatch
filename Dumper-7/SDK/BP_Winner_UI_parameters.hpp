#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Winner_UI

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Winner_UI.BP_Winner_UI_C.ExecuteUbergraph_BP_Winner_UI
// 0x0008 (0x0008 - 0x0000)
struct BP_Winner_UI_C_ExecuteUbergraph_BP_Winner_UI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_RedWin1;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_RedWin;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Winner_UI_C_ExecuteUbergraph_BP_Winner_UI) == 0x000004, "Wrong alignment on BP_Winner_UI_C_ExecuteUbergraph_BP_Winner_UI");
static_assert(sizeof(BP_Winner_UI_C_ExecuteUbergraph_BP_Winner_UI) == 0x000008, "Wrong size on BP_Winner_UI_C_ExecuteUbergraph_BP_Winner_UI");
static_assert(offsetof(BP_Winner_UI_C_ExecuteUbergraph_BP_Winner_UI, EntryPoint) == 0x000000, "Member 'BP_Winner_UI_C_ExecuteUbergraph_BP_Winner_UI::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Winner_UI_C_ExecuteUbergraph_BP_Winner_UI, K2Node_CustomEvent_RedWin1) == 0x000004, "Member 'BP_Winner_UI_C_ExecuteUbergraph_BP_Winner_UI::K2Node_CustomEvent_RedWin1' has a wrong offset!");
static_assert(offsetof(BP_Winner_UI_C_ExecuteUbergraph_BP_Winner_UI, K2Node_CustomEvent_RedWin) == 0x000005, "Member 'BP_Winner_UI_C_ExecuteUbergraph_BP_Winner_UI::K2Node_CustomEvent_RedWin' has a wrong offset!");

// Function BP_Winner_UI.BP_Winner_UI_C.OnShowWinnerUI
// 0x0001 (0x0001 - 0x0000)
struct BP_Winner_UI_C_OnShowWinnerUI final
{
public:
	bool                                          RedWin;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Winner_UI_C_OnShowWinnerUI) == 0x000001, "Wrong alignment on BP_Winner_UI_C_OnShowWinnerUI");
static_assert(sizeof(BP_Winner_UI_C_OnShowWinnerUI) == 0x000001, "Wrong size on BP_Winner_UI_C_OnShowWinnerUI");
static_assert(offsetof(BP_Winner_UI_C_OnShowWinnerUI, RedWin) == 0x000000, "Member 'BP_Winner_UI_C_OnShowWinnerUI::RedWin' has a wrong offset!");

// Function BP_Winner_UI.BP_Winner_UI_C.OnShowWinnerUIBroadcast
// 0x0001 (0x0001 - 0x0000)
struct BP_Winner_UI_C_OnShowWinnerUIBroadcast final
{
public:
	bool                                          RedWin;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Winner_UI_C_OnShowWinnerUIBroadcast) == 0x000001, "Wrong alignment on BP_Winner_UI_C_OnShowWinnerUIBroadcast");
static_assert(sizeof(BP_Winner_UI_C_OnShowWinnerUIBroadcast) == 0x000001, "Wrong size on BP_Winner_UI_C_OnShowWinnerUIBroadcast");
static_assert(offsetof(BP_Winner_UI_C_OnShowWinnerUIBroadcast, RedWin) == 0x000000, "Member 'BP_Winner_UI_C_OnShowWinnerUIBroadcast::RedWin' has a wrong offset!");

}


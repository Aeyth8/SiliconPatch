#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_new_EnemyPlunger

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Enum_BehaviorType_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_new_EnemyPlunger.AnimBP_new_EnemyPlunger_C
// 0x17C8 (0x1B20 - 0x0358)
class UAnimBP_new_EnemyPlunger_C final : public UAnimInstance
{
public:
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_41A30E494AC8B3E6C0704AB63EE25ED1; // 0x0368(0x0040)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_98CD6D4E4B30A35318452BAAEDBCFEED; // 0x03A8(0x0128)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_27BF1D954C6E6765D33F1FBFFDA6BA27; // 0x04D0(0x0128)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_A631D1EE4FEA072BB99ECE909ACE8AF1; // 0x05F8(0x00D0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_B673730F4BD3DE2A21510B932A8893B1; // 0x06C8(0x0128)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_885F23564EF81E9320B12DBC859E589E; // 0x07F0(0x0128)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_9EB5D2E54EE9D97177B03598A3146268; // 0x0918(0x00D0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_46F8E3834644B58C79059CAF63415E8F; // 0x09E8(0x0128)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_31590BA04DDD39CEBB2C7592DCE12033; // 0x0B10(0x0128)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2010DD804B1807DE9BB071AD1A721691; // 0x0C38(0x0128)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_DCBAD1B94BDDA049CF1CCEABF5C1C653; // 0x0D60(0x0128)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_8ED135CA4B1DC915035AAB90523D9AD7; // 0x0E88(0x0128)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_C82B0553467995A50971428E6DAFB1B8; // 0x0FB0(0x00D0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_51070DFE42F46EBCADA07AA67C8CBE62; // 0x1080(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2B0C46864AB3346887F9E5AA3A25140E; // 0x1150(0x00A0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_0FBF71C941359D596CA785B93380779A; // 0x11F0(0x0128)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_90C0874C44FF003BD34D91A5D2EE208B; // 0x1318(0x00D0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_3BBD2C164282AF918586E9B13A891829; // 0x13E8(0x00E0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_DACE75894BDE1D592815569EDF53AF0E; // 0x14C8(0x0040)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_022A9F234DD427C1DF745BB0C9E25807; // 0x1508(0x00E0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_A89D03164CD9359A828243AC5D39CF5B; // 0x15E8(0x00D8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8126BA4942D278C819092F9DE6BA3E00; // 0x16C0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1C9302AB4D1862526E12C4A6D46E4BF6; // 0x1708(0x0068)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_5671C3164EC6BBB7985F98BF6839136D; // 0x1770(0x00D8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_F46F0F57431A66D5E9A8BD8D0D040C58; // 0x1848(0x0048)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_37829AF7466719318BFBE4A6C026ADD6; // 0x1890(0x01E0)()
	bool                                          IsInAir_;                                          // 0x1A70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A71[0x3];                                     // 0x1A71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Speed;                                             // 0x1A74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_BehaviorType                             CurrentBehavior;                                   // 0x1A78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A79[0x3];                                     // 0x1A79(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Direction;                                         // 0x1A7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCrouching;                                       // 0x1A80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasTarget;                                         // 0x1A81(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A82[0x2];                                     // 0x1A82(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FootOff_L;                                         // 0x1A84(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootOff_R;                                         // 0x1A90(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootJoint_L;                                       // 0x1A9C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootJoint_R;                                       // 0x1AA8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AB4[0x4];                                     // 0x1AB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   HandIKSocket;                                      // 0x1AB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HandL_Weight;                                      // 0x1AC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC4[0xC];                                     // 0x1AC4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             HandL_Trans;                                       // 0x1AD0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EnableHandIk;                                      // 0x1B00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B01[0x3];                                     // 0x1B01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CrouchBlendTime;                                   // 0x1B04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCrouchComplete;                                  // 0x1B08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B09[0x3];                                     // 0x1B09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AimPitch;                                          // 0x1B0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnDelta;                                         // 0x1B10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          lsInL2P2;                                          // 0x1B14(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_AnimBP_new_EnemyPlunger(int32 EntryPoint);
	void BlueprintBeginPlay();
	void AnimNotify_StandToIdleComplete();
	void AnimNotify_ReloadEnd();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_new_EnemyPlunger_AnimGraphNode_BlendListByBool_C82B0553467995A50971428E6DAFB1B8();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_new_EnemyPlunger_C">();
	}
	static class UAnimBP_new_EnemyPlunger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_new_EnemyPlunger_C>();
	}
};
static_assert(alignof(UAnimBP_new_EnemyPlunger_C) == 0x000010, "Wrong alignment on UAnimBP_new_EnemyPlunger_C");
static_assert(sizeof(UAnimBP_new_EnemyPlunger_C) == 0x001B20, "Wrong size on UAnimBP_new_EnemyPlunger_C");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, UberGraphFrame) == 0x000360, "Member 'UAnimBP_new_EnemyPlunger_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_Root_41A30E494AC8B3E6C0704AB63EE25ED1) == 0x000368, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_Root_41A30E494AC8B3E6C0704AB63EE25ED1' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_BlendSpacePlayer_98CD6D4E4B30A35318452BAAEDBCFEED) == 0x0003A8, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_BlendSpacePlayer_98CD6D4E4B30A35318452BAAEDBCFEED' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_BlendSpacePlayer_27BF1D954C6E6765D33F1FBFFDA6BA27) == 0x0004D0, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_BlendSpacePlayer_27BF1D954C6E6765D33F1FBFFDA6BA27' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_BlendListByBool_A631D1EE4FEA072BB99ECE909ACE8AF1) == 0x0005F8, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_BlendListByBool_A631D1EE4FEA072BB99ECE909ACE8AF1' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_BlendSpacePlayer_B673730F4BD3DE2A21510B932A8893B1) == 0x0006C8, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_BlendSpacePlayer_B673730F4BD3DE2A21510B932A8893B1' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_BlendSpacePlayer_885F23564EF81E9320B12DBC859E589E) == 0x0007F0, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_BlendSpacePlayer_885F23564EF81E9320B12DBC859E589E' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_BlendListByBool_9EB5D2E54EE9D97177B03598A3146268) == 0x000918, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_BlendListByBool_9EB5D2E54EE9D97177B03598A3146268' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_BlendSpacePlayer_46F8E3834644B58C79059CAF63415E8F) == 0x0009E8, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_BlendSpacePlayer_46F8E3834644B58C79059CAF63415E8F' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_BlendSpacePlayer_31590BA04DDD39CEBB2C7592DCE12033) == 0x000B10, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_BlendSpacePlayer_31590BA04DDD39CEBB2C7592DCE12033' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_BlendSpacePlayer_2010DD804B1807DE9BB071AD1A721691) == 0x000C38, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_BlendSpacePlayer_2010DD804B1807DE9BB071AD1A721691' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_BlendSpacePlayer_DCBAD1B94BDDA049CF1CCEABF5C1C653) == 0x000D60, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_BlendSpacePlayer_DCBAD1B94BDDA049CF1CCEABF5C1C653' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_BlendSpacePlayer_8ED135CA4B1DC915035AAB90523D9AD7) == 0x000E88, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_BlendSpacePlayer_8ED135CA4B1DC915035AAB90523D9AD7' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_BlendListByBool_C82B0553467995A50971428E6DAFB1B8) == 0x000FB0, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_BlendListByBool_C82B0553467995A50971428E6DAFB1B8' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_BlendListByBool_51070DFE42F46EBCADA07AA67C8CBE62) == 0x001080, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_BlendListByBool_51070DFE42F46EBCADA07AA67C8CBE62' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_SequencePlayer_2B0C46864AB3346887F9E5AA3A25140E) == 0x001150, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_SequencePlayer_2B0C46864AB3346887F9E5AA3A25140E' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_BlendSpacePlayer_0FBF71C941359D596CA785B93380779A) == 0x0011F0, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_BlendSpacePlayer_0FBF71C941359D596CA785B93380779A' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_BlendListByBool_90C0874C44FF003BD34D91A5D2EE208B) == 0x001318, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_BlendListByBool_90C0874C44FF003BD34D91A5D2EE208B' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_BlendListByEnum_3BBD2C164282AF918586E9B13A891829) == 0x0013E8, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_BlendListByEnum_3BBD2C164282AF918586E9B13A891829' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_StateResult_DACE75894BDE1D592815569EDF53AF0E) == 0x0014C8, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_StateResult_DACE75894BDE1D592815569EDF53AF0E' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_StateMachine_022A9F234DD427C1DF745BB0C9E25807) == 0x001508, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_StateMachine_022A9F234DD427C1DF745BB0C9E25807' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_SaveCachedPose_A89D03164CD9359A828243AC5D39CF5B) == 0x0015E8, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_SaveCachedPose_A89D03164CD9359A828243AC5D39CF5B' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_UseCachedPose_8126BA4942D278C819092F9DE6BA3E00) == 0x0016C0, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_UseCachedPose_8126BA4942D278C819092F9DE6BA3E00' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_Slot_1C9302AB4D1862526E12C4A6D46E4BF6) == 0x001708, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_Slot_1C9302AB4D1862526E12C4A6D46E4BF6' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_LayeredBoneBlend_5671C3164EC6BBB7985F98BF6839136D) == 0x001770, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_LayeredBoneBlend_5671C3164EC6BBB7985F98BF6839136D' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_UseCachedPose_F46F0F57431A66D5E9A8BD8D0D040C58) == 0x001848, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_UseCachedPose_F46F0F57431A66D5E9A8BD8D0D040C58' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AnimGraphNode_RotationOffsetBlendSpace_37829AF7466719318BFBE4A6C026ADD6) == 0x001890, "Member 'UAnimBP_new_EnemyPlunger_C::AnimGraphNode_RotationOffsetBlendSpace_37829AF7466719318BFBE4A6C026ADD6' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, IsInAir_) == 0x001A70, "Member 'UAnimBP_new_EnemyPlunger_C::IsInAir_' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, Speed) == 0x001A74, "Member 'UAnimBP_new_EnemyPlunger_C::Speed' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, CurrentBehavior) == 0x001A78, "Member 'UAnimBP_new_EnemyPlunger_C::CurrentBehavior' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, Direction) == 0x001A7C, "Member 'UAnimBP_new_EnemyPlunger_C::Direction' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, IsCrouching) == 0x001A80, "Member 'UAnimBP_new_EnemyPlunger_C::IsCrouching' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, HasTarget) == 0x001A81, "Member 'UAnimBP_new_EnemyPlunger_C::HasTarget' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, FootOff_L) == 0x001A84, "Member 'UAnimBP_new_EnemyPlunger_C::FootOff_L' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, FootOff_R) == 0x001A90, "Member 'UAnimBP_new_EnemyPlunger_C::FootOff_R' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, FootJoint_L) == 0x001A9C, "Member 'UAnimBP_new_EnemyPlunger_C::FootJoint_L' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, FootJoint_R) == 0x001AA8, "Member 'UAnimBP_new_EnemyPlunger_C::FootJoint_R' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, HandIKSocket) == 0x001AB8, "Member 'UAnimBP_new_EnemyPlunger_C::HandIKSocket' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, HandL_Weight) == 0x001AC0, "Member 'UAnimBP_new_EnemyPlunger_C::HandL_Weight' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, HandL_Trans) == 0x001AD0, "Member 'UAnimBP_new_EnemyPlunger_C::HandL_Trans' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, EnableHandIk) == 0x001B00, "Member 'UAnimBP_new_EnemyPlunger_C::EnableHandIk' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, CrouchBlendTime) == 0x001B04, "Member 'UAnimBP_new_EnemyPlunger_C::CrouchBlendTime' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, IsCrouchComplete) == 0x001B08, "Member 'UAnimBP_new_EnemyPlunger_C::IsCrouchComplete' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, AimPitch) == 0x001B0C, "Member 'UAnimBP_new_EnemyPlunger_C::AimPitch' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, TurnDelta) == 0x001B10, "Member 'UAnimBP_new_EnemyPlunger_C::TurnDelta' has a wrong offset!");
static_assert(offsetof(UAnimBP_new_EnemyPlunger_C, lsInL2P2) == 0x001B14, "Member 'UAnimBP_new_EnemyPlunger_C::lsInL2P2' has a wrong offset!");

}


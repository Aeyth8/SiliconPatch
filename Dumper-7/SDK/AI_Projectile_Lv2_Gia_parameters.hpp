#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AI_Projectile_Lv2_Gia

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AI_Projectile_Lv2_Gia.AI_Projectile_Lv2_Gia_C.ExecuteUbergraph_AI_Projectile_Lv2_Gia
// 0x0020 (0x0020 - 0x0000)
struct AI_Projectile_Lv2_Gia_C_ExecuteUbergraph_AI_Projectile_Lv2_Gia final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Speed;                          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Speed;                                // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Projectile_Lv2_Gia_C_ExecuteUbergraph_AI_Projectile_Lv2_Gia) == 0x000004, "Wrong alignment on AI_Projectile_Lv2_Gia_C_ExecuteUbergraph_AI_Projectile_Lv2_Gia");
static_assert(sizeof(AI_Projectile_Lv2_Gia_C_ExecuteUbergraph_AI_Projectile_Lv2_Gia) == 0x000020, "Wrong size on AI_Projectile_Lv2_Gia_C_ExecuteUbergraph_AI_Projectile_Lv2_Gia");
static_assert(offsetof(AI_Projectile_Lv2_Gia_C_ExecuteUbergraph_AI_Projectile_Lv2_Gia, EntryPoint) == 0x000000, "Member 'AI_Projectile_Lv2_Gia_C_ExecuteUbergraph_AI_Projectile_Lv2_Gia::EntryPoint' has a wrong offset!");
static_assert(offsetof(AI_Projectile_Lv2_Gia_C_ExecuteUbergraph_AI_Projectile_Lv2_Gia, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'AI_Projectile_Lv2_Gia_C_ExecuteUbergraph_AI_Projectile_Lv2_Gia::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(AI_Projectile_Lv2_Gia_C_ExecuteUbergraph_AI_Projectile_Lv2_Gia, K2Node_CustomEvent_Speed) == 0x000008, "Member 'AI_Projectile_Lv2_Gia_C_ExecuteUbergraph_AI_Projectile_Lv2_Gia::K2Node_CustomEvent_Speed' has a wrong offset!");
static_assert(offsetof(AI_Projectile_Lv2_Gia_C_ExecuteUbergraph_AI_Projectile_Lv2_Gia, K2Node_Event_Speed) == 0x000014, "Member 'AI_Projectile_Lv2_Gia_C_ExecuteUbergraph_AI_Projectile_Lv2_Gia::K2Node_Event_Speed' has a wrong offset!");

// Function AI_Projectile_Lv2_Gia.AI_Projectile_Lv2_Gia_C.CustomEvent_1
// 0x000C (0x000C - 0x0000)
struct AI_Projectile_Lv2_Gia_C_CustomEvent_1 final
{
public:
	struct FVector                                Speed;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Projectile_Lv2_Gia_C_CustomEvent_1) == 0x000004, "Wrong alignment on AI_Projectile_Lv2_Gia_C_CustomEvent_1");
static_assert(sizeof(AI_Projectile_Lv2_Gia_C_CustomEvent_1) == 0x00000C, "Wrong size on AI_Projectile_Lv2_Gia_C_CustomEvent_1");
static_assert(offsetof(AI_Projectile_Lv2_Gia_C_CustomEvent_1, Speed) == 0x000000, "Member 'AI_Projectile_Lv2_Gia_C_CustomEvent_1::Speed' has a wrong offset!");

// Function AI_Projectile_Lv2_Gia.AI_Projectile_Lv2_Gia_C.CustomEvent
// 0x000C (0x000C - 0x0000)
struct AI_Projectile_Lv2_Gia_C_CustomEvent final
{
public:
	struct FVector                                Speed;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Projectile_Lv2_Gia_C_CustomEvent) == 0x000004, "Wrong alignment on AI_Projectile_Lv2_Gia_C_CustomEvent");
static_assert(sizeof(AI_Projectile_Lv2_Gia_C_CustomEvent) == 0x00000C, "Wrong size on AI_Projectile_Lv2_Gia_C_CustomEvent");
static_assert(offsetof(AI_Projectile_Lv2_Gia_C_CustomEvent, Speed) == 0x000000, "Member 'AI_Projectile_Lv2_Gia_C_CustomEvent::Speed' has a wrong offset!");

// Function AI_Projectile_Lv2_Gia.AI_Projectile_Lv2_Gia_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct AI_Projectile_Lv2_Gia_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Projectile_Lv2_Gia_C_ReceiveTick) == 0x000004, "Wrong alignment on AI_Projectile_Lv2_Gia_C_ReceiveTick");
static_assert(sizeof(AI_Projectile_Lv2_Gia_C_ReceiveTick) == 0x000004, "Wrong size on AI_Projectile_Lv2_Gia_C_ReceiveTick");
static_assert(offsetof(AI_Projectile_Lv2_Gia_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'AI_Projectile_Lv2_Gia_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}


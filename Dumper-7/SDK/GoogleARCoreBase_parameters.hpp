#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GoogleARCoreBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GoogleARCoreBase_structs.hpp"
#include "AugmentedReality_structs.hpp"


namespace SDK::Params
{

// Function GoogleARCoreBase.GoogleARCoreCameraIntrinsics.GetFocalLength
// 0x0008 (0x0008 - 0x0000)
struct GoogleARCoreCameraIntrinsics_GetFocalLength final
{
public:
	float                                         OutFX;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutFY;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreCameraIntrinsics_GetFocalLength) == 0x000004, "Wrong alignment on GoogleARCoreCameraIntrinsics_GetFocalLength");
static_assert(sizeof(GoogleARCoreCameraIntrinsics_GetFocalLength) == 0x000008, "Wrong size on GoogleARCoreCameraIntrinsics_GetFocalLength");
static_assert(offsetof(GoogleARCoreCameraIntrinsics_GetFocalLength, OutFX) == 0x000000, "Member 'GoogleARCoreCameraIntrinsics_GetFocalLength::OutFX' has a wrong offset!");
static_assert(offsetof(GoogleARCoreCameraIntrinsics_GetFocalLength, OutFY) == 0x000004, "Member 'GoogleARCoreCameraIntrinsics_GetFocalLength::OutFY' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreCameraIntrinsics.GetImageDimensions
// 0x0008 (0x0008 - 0x0000)
struct GoogleARCoreCameraIntrinsics_GetImageDimensions final
{
public:
	int32                                         OutWidth;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutHeight;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreCameraIntrinsics_GetImageDimensions) == 0x000004, "Wrong alignment on GoogleARCoreCameraIntrinsics_GetImageDimensions");
static_assert(sizeof(GoogleARCoreCameraIntrinsics_GetImageDimensions) == 0x000008, "Wrong size on GoogleARCoreCameraIntrinsics_GetImageDimensions");
static_assert(offsetof(GoogleARCoreCameraIntrinsics_GetImageDimensions, OutWidth) == 0x000000, "Member 'GoogleARCoreCameraIntrinsics_GetImageDimensions::OutWidth' has a wrong offset!");
static_assert(offsetof(GoogleARCoreCameraIntrinsics_GetImageDimensions, OutHeight) == 0x000004, "Member 'GoogleARCoreCameraIntrinsics_GetImageDimensions::OutHeight' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreCameraIntrinsics.GetPrincipalPoint
// 0x0008 (0x0008 - 0x0000)
struct GoogleARCoreCameraIntrinsics_GetPrincipalPoint final
{
public:
	float                                         OutCX;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutCY;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreCameraIntrinsics_GetPrincipalPoint) == 0x000004, "Wrong alignment on GoogleARCoreCameraIntrinsics_GetPrincipalPoint");
static_assert(sizeof(GoogleARCoreCameraIntrinsics_GetPrincipalPoint) == 0x000008, "Wrong size on GoogleARCoreCameraIntrinsics_GetPrincipalPoint");
static_assert(offsetof(GoogleARCoreCameraIntrinsics_GetPrincipalPoint, OutCX) == 0x000000, "Member 'GoogleARCoreCameraIntrinsics_GetPrincipalPoint::OutCX' has a wrong offset!");
static_assert(offsetof(GoogleARCoreCameraIntrinsics_GetPrincipalPoint, OutCY) == 0x000004, "Member 'GoogleARCoreCameraIntrinsics_GetPrincipalPoint::OutCY' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.AcquireCameraImage
// 0x0010 (0x0010 - 0x0000)
struct GoogleARCoreFrameFunctionLibrary_AcquireCameraImage final
{
public:
	class UGoogleARCoreCameraImage*               OutLatestCameraImage;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGoogleARCoreFunctionStatus                   ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GoogleARCoreFrameFunctionLibrary_AcquireCameraImage) == 0x000008, "Wrong alignment on GoogleARCoreFrameFunctionLibrary_AcquireCameraImage");
static_assert(sizeof(GoogleARCoreFrameFunctionLibrary_AcquireCameraImage) == 0x000010, "Wrong size on GoogleARCoreFrameFunctionLibrary_AcquireCameraImage");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_AcquireCameraImage, OutLatestCameraImage) == 0x000000, "Member 'GoogleARCoreFrameFunctionLibrary_AcquireCameraImage::OutLatestCameraImage' has a wrong offset!");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_AcquireCameraImage, ReturnValue) == 0x000008, "Member 'GoogleARCoreFrameFunctionLibrary_AcquireCameraImage::ReturnValue' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.AcquirePointCloud
// 0x0010 (0x0010 - 0x0000)
struct GoogleARCoreFrameFunctionLibrary_AcquirePointCloud final
{
public:
	class UGoogleARCorePointCloud*                OutLatestPointCloud;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGoogleARCoreFunctionStatus                   ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GoogleARCoreFrameFunctionLibrary_AcquirePointCloud) == 0x000008, "Wrong alignment on GoogleARCoreFrameFunctionLibrary_AcquirePointCloud");
static_assert(sizeof(GoogleARCoreFrameFunctionLibrary_AcquirePointCloud) == 0x000010, "Wrong size on GoogleARCoreFrameFunctionLibrary_AcquirePointCloud");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_AcquirePointCloud, OutLatestPointCloud) == 0x000000, "Member 'GoogleARCoreFrameFunctionLibrary_AcquirePointCloud::OutLatestPointCloud' has a wrong offset!");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_AcquirePointCloud, ReturnValue) == 0x000008, "Member 'GoogleARCoreFrameFunctionLibrary_AcquirePointCloud::ReturnValue' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.ARCoreLineTrace
// 0x0078 (0x0078 - 0x0000)
struct GoogleARCoreFrameFunctionLibrary_ARCoreLineTrace final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ScreenPosition;                                    // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<EGoogleARCoreLineTraceChannel>           TraceChannels;                                     // 0x0010(0x0050)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FARTraceResult>                 OutHitResults;                                     // 0x0060(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GoogleARCoreFrameFunctionLibrary_ARCoreLineTrace) == 0x000008, "Wrong alignment on GoogleARCoreFrameFunctionLibrary_ARCoreLineTrace");
static_assert(sizeof(GoogleARCoreFrameFunctionLibrary_ARCoreLineTrace) == 0x000078, "Wrong size on GoogleARCoreFrameFunctionLibrary_ARCoreLineTrace");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_ARCoreLineTrace, WorldContextObject) == 0x000000, "Member 'GoogleARCoreFrameFunctionLibrary_ARCoreLineTrace::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_ARCoreLineTrace, ScreenPosition) == 0x000008, "Member 'GoogleARCoreFrameFunctionLibrary_ARCoreLineTrace::ScreenPosition' has a wrong offset!");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_ARCoreLineTrace, TraceChannels) == 0x000010, "Member 'GoogleARCoreFrameFunctionLibrary_ARCoreLineTrace::TraceChannels' has a wrong offset!");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_ARCoreLineTrace, OutHitResults) == 0x000060, "Member 'GoogleARCoreFrameFunctionLibrary_ARCoreLineTrace::OutHitResults' has a wrong offset!");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_ARCoreLineTrace, ReturnValue) == 0x000070, "Member 'GoogleARCoreFrameFunctionLibrary_ARCoreLineTrace::ReturnValue' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.ARCoreLineTraceRay
// 0x0088 (0x0088 - 0x0000)
struct GoogleARCoreFrameFunctionLibrary_ARCoreLineTraceRay final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Start;                                             // 0x0008(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                End;                                               // 0x0014(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<EGoogleARCoreLineTraceChannel>           TraceChannels;                                     // 0x0020(0x0050)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FARTraceResult>                 OutHitResults;                                     // 0x0070(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GoogleARCoreFrameFunctionLibrary_ARCoreLineTraceRay) == 0x000008, "Wrong alignment on GoogleARCoreFrameFunctionLibrary_ARCoreLineTraceRay");
static_assert(sizeof(GoogleARCoreFrameFunctionLibrary_ARCoreLineTraceRay) == 0x000088, "Wrong size on GoogleARCoreFrameFunctionLibrary_ARCoreLineTraceRay");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_ARCoreLineTraceRay, WorldContextObject) == 0x000000, "Member 'GoogleARCoreFrameFunctionLibrary_ARCoreLineTraceRay::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_ARCoreLineTraceRay, Start) == 0x000008, "Member 'GoogleARCoreFrameFunctionLibrary_ARCoreLineTraceRay::Start' has a wrong offset!");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_ARCoreLineTraceRay, End) == 0x000014, "Member 'GoogleARCoreFrameFunctionLibrary_ARCoreLineTraceRay::End' has a wrong offset!");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_ARCoreLineTraceRay, TraceChannels) == 0x000020, "Member 'GoogleARCoreFrameFunctionLibrary_ARCoreLineTraceRay::TraceChannels' has a wrong offset!");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_ARCoreLineTraceRay, OutHitResults) == 0x000070, "Member 'GoogleARCoreFrameFunctionLibrary_ARCoreLineTraceRay::OutHitResults' has a wrong offset!");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_ARCoreLineTraceRay, ReturnValue) == 0x000080, "Member 'GoogleARCoreFrameFunctionLibrary_ARCoreLineTraceRay::ReturnValue' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.GetCameraImageIntrinsics
// 0x0010 (0x0010 - 0x0000)
struct GoogleARCoreFrameFunctionLibrary_GetCameraImageIntrinsics final
{
public:
	class UGoogleARCoreCameraIntrinsics*          OutCameraIntrinsics;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGoogleARCoreFunctionStatus                   ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GoogleARCoreFrameFunctionLibrary_GetCameraImageIntrinsics) == 0x000008, "Wrong alignment on GoogleARCoreFrameFunctionLibrary_GetCameraImageIntrinsics");
static_assert(sizeof(GoogleARCoreFrameFunctionLibrary_GetCameraImageIntrinsics) == 0x000010, "Wrong size on GoogleARCoreFrameFunctionLibrary_GetCameraImageIntrinsics");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_GetCameraImageIntrinsics, OutCameraIntrinsics) == 0x000000, "Member 'GoogleARCoreFrameFunctionLibrary_GetCameraImageIntrinsics::OutCameraIntrinsics' has a wrong offset!");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_GetCameraImageIntrinsics, ReturnValue) == 0x000008, "Member 'GoogleARCoreFrameFunctionLibrary_GetCameraImageIntrinsics::ReturnValue' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.GetCameraTextureIntrinsics
// 0x0010 (0x0010 - 0x0000)
struct GoogleARCoreFrameFunctionLibrary_GetCameraTextureIntrinsics final
{
public:
	class UGoogleARCoreCameraIntrinsics*          OutCameraIntrinsics;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGoogleARCoreFunctionStatus                   ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GoogleARCoreFrameFunctionLibrary_GetCameraTextureIntrinsics) == 0x000008, "Wrong alignment on GoogleARCoreFrameFunctionLibrary_GetCameraTextureIntrinsics");
static_assert(sizeof(GoogleARCoreFrameFunctionLibrary_GetCameraTextureIntrinsics) == 0x000010, "Wrong size on GoogleARCoreFrameFunctionLibrary_GetCameraTextureIntrinsics");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_GetCameraTextureIntrinsics, OutCameraIntrinsics) == 0x000000, "Member 'GoogleARCoreFrameFunctionLibrary_GetCameraTextureIntrinsics::OutCameraIntrinsics' has a wrong offset!");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_GetCameraTextureIntrinsics, ReturnValue) == 0x000008, "Member 'GoogleARCoreFrameFunctionLibrary_GetCameraTextureIntrinsics::ReturnValue' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.GetLightEstimation
// 0x0014 (0x0014 - 0x0000)
struct GoogleARCoreFrameFunctionLibrary_GetLightEstimation final
{
public:
	struct FGoogleARCoreLightEstimate             OutLightEstimate;                                  // 0x0000(0x0014)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreFrameFunctionLibrary_GetLightEstimation) == 0x000004, "Wrong alignment on GoogleARCoreFrameFunctionLibrary_GetLightEstimation");
static_assert(sizeof(GoogleARCoreFrameFunctionLibrary_GetLightEstimation) == 0x000014, "Wrong size on GoogleARCoreFrameFunctionLibrary_GetLightEstimation");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_GetLightEstimation, OutLightEstimate) == 0x000000, "Member 'GoogleARCoreFrameFunctionLibrary_GetLightEstimation::OutLightEstimate' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.GetPointCloud
// 0x0010 (0x0010 - 0x0000)
struct GoogleARCoreFrameFunctionLibrary_GetPointCloud final
{
public:
	class UGoogleARCorePointCloud*                OutLatestPointCloud;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGoogleARCoreFunctionStatus                   ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GoogleARCoreFrameFunctionLibrary_GetPointCloud) == 0x000008, "Wrong alignment on GoogleARCoreFrameFunctionLibrary_GetPointCloud");
static_assert(sizeof(GoogleARCoreFrameFunctionLibrary_GetPointCloud) == 0x000010, "Wrong size on GoogleARCoreFrameFunctionLibrary_GetPointCloud");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_GetPointCloud, OutLatestPointCloud) == 0x000000, "Member 'GoogleARCoreFrameFunctionLibrary_GetPointCloud::OutLatestPointCloud' has a wrong offset!");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_GetPointCloud, ReturnValue) == 0x000008, "Member 'GoogleARCoreFrameFunctionLibrary_GetPointCloud::ReturnValue' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.GetPose
// 0x0030 (0x0030 - 0x0000)
struct GoogleARCoreFrameFunctionLibrary_GetPose final
{
public:
	struct FTransform                             OutPose;                                           // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreFrameFunctionLibrary_GetPose) == 0x000010, "Wrong alignment on GoogleARCoreFrameFunctionLibrary_GetPose");
static_assert(sizeof(GoogleARCoreFrameFunctionLibrary_GetPose) == 0x000030, "Wrong size on GoogleARCoreFrameFunctionLibrary_GetPose");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_GetPose, OutPose) == 0x000000, "Member 'GoogleARCoreFrameFunctionLibrary_GetPose::OutPose' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.GetTrackingState
// 0x0001 (0x0001 - 0x0000)
struct GoogleARCoreFrameFunctionLibrary_GetTrackingState final
{
public:
	EGoogleARCoreTrackingState                    ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreFrameFunctionLibrary_GetTrackingState) == 0x000001, "Wrong alignment on GoogleARCoreFrameFunctionLibrary_GetTrackingState");
static_assert(sizeof(GoogleARCoreFrameFunctionLibrary_GetTrackingState) == 0x000001, "Wrong size on GoogleARCoreFrameFunctionLibrary_GetTrackingState");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_GetTrackingState, ReturnValue) == 0x000000, "Member 'GoogleARCoreFrameFunctionLibrary_GetTrackingState::ReturnValue' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.GetUpdatedARPins
// 0x0010 (0x0010 - 0x0000)
struct GoogleARCoreFrameFunctionLibrary_GetUpdatedARPins final
{
public:
	TArray<class UARPin*>                         OutAnchorList;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreFrameFunctionLibrary_GetUpdatedARPins) == 0x000008, "Wrong alignment on GoogleARCoreFrameFunctionLibrary_GetUpdatedARPins");
static_assert(sizeof(GoogleARCoreFrameFunctionLibrary_GetUpdatedARPins) == 0x000010, "Wrong size on GoogleARCoreFrameFunctionLibrary_GetUpdatedARPins");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_GetUpdatedARPins, OutAnchorList) == 0x000000, "Member 'GoogleARCoreFrameFunctionLibrary_GetUpdatedARPins::OutAnchorList' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.GetUpdatedPlanes
// 0x0010 (0x0010 - 0x0000)
struct GoogleARCoreFrameFunctionLibrary_GetUpdatedPlanes final
{
public:
	TArray<class UARPlaneGeometry*>               OutPlaneList;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreFrameFunctionLibrary_GetUpdatedPlanes) == 0x000008, "Wrong alignment on GoogleARCoreFrameFunctionLibrary_GetUpdatedPlanes");
static_assert(sizeof(GoogleARCoreFrameFunctionLibrary_GetUpdatedPlanes) == 0x000010, "Wrong size on GoogleARCoreFrameFunctionLibrary_GetUpdatedPlanes");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_GetUpdatedPlanes, OutPlaneList) == 0x000000, "Member 'GoogleARCoreFrameFunctionLibrary_GetUpdatedPlanes::OutPlaneList' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.GetUpdatedTrackablePoints
// 0x0010 (0x0010 - 0x0000)
struct GoogleARCoreFrameFunctionLibrary_GetUpdatedTrackablePoints final
{
public:
	TArray<class UARTrackedPoint*>                OutTrackablePointList;                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreFrameFunctionLibrary_GetUpdatedTrackablePoints) == 0x000008, "Wrong alignment on GoogleARCoreFrameFunctionLibrary_GetUpdatedTrackablePoints");
static_assert(sizeof(GoogleARCoreFrameFunctionLibrary_GetUpdatedTrackablePoints) == 0x000010, "Wrong size on GoogleARCoreFrameFunctionLibrary_GetUpdatedTrackablePoints");
static_assert(offsetof(GoogleARCoreFrameFunctionLibrary_GetUpdatedTrackablePoints, OutTrackablePointList) == 0x000000, "Member 'GoogleARCoreFrameFunctionLibrary_GetUpdatedTrackablePoints::OutTrackablePointList' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreAugmentedImage.GetCenter
// 0x000C (0x000C - 0x0000)
struct GoogleARCoreAugmentedImage_GetCenter final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreAugmentedImage_GetCenter) == 0x000004, "Wrong alignment on GoogleARCoreAugmentedImage_GetCenter");
static_assert(sizeof(GoogleARCoreAugmentedImage_GetCenter) == 0x00000C, "Wrong size on GoogleARCoreAugmentedImage_GetCenter");
static_assert(offsetof(GoogleARCoreAugmentedImage_GetCenter, ReturnValue) == 0x000000, "Member 'GoogleARCoreAugmentedImage_GetCenter::ReturnValue' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreAugmentedImage.GetExtent
// 0x000C (0x000C - 0x0000)
struct GoogleARCoreAugmentedImage_GetExtent final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreAugmentedImage_GetExtent) == 0x000004, "Wrong alignment on GoogleARCoreAugmentedImage_GetExtent");
static_assert(sizeof(GoogleARCoreAugmentedImage_GetExtent) == 0x00000C, "Wrong size on GoogleARCoreAugmentedImage_GetExtent");
static_assert(offsetof(GoogleARCoreAugmentedImage_GetExtent, ReturnValue) == 0x000000, "Member 'GoogleARCoreAugmentedImage_GetExtent::ReturnValue' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreAugmentedImage.GetImageIndex
// 0x0004 (0x0004 - 0x0000)
struct GoogleARCoreAugmentedImage_GetImageIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreAugmentedImage_GetImageIndex) == 0x000004, "Wrong alignment on GoogleARCoreAugmentedImage_GetImageIndex");
static_assert(sizeof(GoogleARCoreAugmentedImage_GetImageIndex) == 0x000004, "Wrong size on GoogleARCoreAugmentedImage_GetImageIndex");
static_assert(offsetof(GoogleARCoreAugmentedImage_GetImageIndex, ReturnValue) == 0x000000, "Member 'GoogleARCoreAugmentedImage_GetImageIndex::ReturnValue' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreAugmentedImage.GetImageName
// 0x0010 (0x0010 - 0x0000)
struct GoogleARCoreAugmentedImage_GetImageName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreAugmentedImage_GetImageName) == 0x000008, "Wrong alignment on GoogleARCoreAugmentedImage_GetImageName");
static_assert(sizeof(GoogleARCoreAugmentedImage_GetImageName) == 0x000010, "Wrong size on GoogleARCoreAugmentedImage_GetImageName");
static_assert(offsetof(GoogleARCoreAugmentedImage_GetImageName, ReturnValue) == 0x000000, "Member 'GoogleARCoreAugmentedImage_GetImageName::ReturnValue' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreCameraImage.GetHeight
// 0x0004 (0x0004 - 0x0000)
struct GoogleARCoreCameraImage_GetHeight final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreCameraImage_GetHeight) == 0x000004, "Wrong alignment on GoogleARCoreCameraImage_GetHeight");
static_assert(sizeof(GoogleARCoreCameraImage_GetHeight) == 0x000004, "Wrong size on GoogleARCoreCameraImage_GetHeight");
static_assert(offsetof(GoogleARCoreCameraImage_GetHeight, ReturnValue) == 0x000000, "Member 'GoogleARCoreCameraImage_GetHeight::ReturnValue' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreCameraImage.GetPlaneCount
// 0x0004 (0x0004 - 0x0000)
struct GoogleARCoreCameraImage_GetPlaneCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreCameraImage_GetPlaneCount) == 0x000004, "Wrong alignment on GoogleARCoreCameraImage_GetPlaneCount");
static_assert(sizeof(GoogleARCoreCameraImage_GetPlaneCount) == 0x000004, "Wrong size on GoogleARCoreCameraImage_GetPlaneCount");
static_assert(offsetof(GoogleARCoreCameraImage_GetPlaneCount, ReturnValue) == 0x000000, "Member 'GoogleARCoreCameraImage_GetPlaneCount::ReturnValue' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreCameraImage.GetWidth
// 0x0004 (0x0004 - 0x0000)
struct GoogleARCoreCameraImage_GetWidth final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreCameraImage_GetWidth) == 0x000004, "Wrong alignment on GoogleARCoreCameraImage_GetWidth");
static_assert(sizeof(GoogleARCoreCameraImage_GetWidth) == 0x000004, "Wrong size on GoogleARCoreCameraImage_GetWidth");
static_assert(offsetof(GoogleARCoreCameraImage_GetWidth, ReturnValue) == 0x000000, "Member 'GoogleARCoreCameraImage_GetWidth::ReturnValue' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.CheckARCoreAvailability
// 0x0028 (0x0028 - 0x0000)
struct GoogleARCoreSessionFunctionLibrary_CheckARCoreAvailability final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	EGoogleARCoreAvailability                     OutAvailability;                                   // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GoogleARCoreSessionFunctionLibrary_CheckARCoreAvailability) == 0x000008, "Wrong alignment on GoogleARCoreSessionFunctionLibrary_CheckARCoreAvailability");
static_assert(sizeof(GoogleARCoreSessionFunctionLibrary_CheckARCoreAvailability) == 0x000028, "Wrong size on GoogleARCoreSessionFunctionLibrary_CheckARCoreAvailability");
static_assert(offsetof(GoogleARCoreSessionFunctionLibrary_CheckARCoreAvailability, WorldContextObject) == 0x000000, "Member 'GoogleARCoreSessionFunctionLibrary_CheckARCoreAvailability::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GoogleARCoreSessionFunctionLibrary_CheckARCoreAvailability, LatentInfo) == 0x000008, "Member 'GoogleARCoreSessionFunctionLibrary_CheckARCoreAvailability::LatentInfo' has a wrong offset!");
static_assert(offsetof(GoogleARCoreSessionFunctionLibrary_CheckARCoreAvailability, OutAvailability) == 0x000020, "Member 'GoogleARCoreSessionFunctionLibrary_CheckARCoreAvailability::OutAvailability' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.GetAllPlanes
// 0x0010 (0x0010 - 0x0000)
struct GoogleARCoreSessionFunctionLibrary_GetAllPlanes final
{
public:
	TArray<class UARPlaneGeometry*>               OutPlaneList;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreSessionFunctionLibrary_GetAllPlanes) == 0x000008, "Wrong alignment on GoogleARCoreSessionFunctionLibrary_GetAllPlanes");
static_assert(sizeof(GoogleARCoreSessionFunctionLibrary_GetAllPlanes) == 0x000010, "Wrong size on GoogleARCoreSessionFunctionLibrary_GetAllPlanes");
static_assert(offsetof(GoogleARCoreSessionFunctionLibrary_GetAllPlanes, OutPlaneList) == 0x000000, "Member 'GoogleARCoreSessionFunctionLibrary_GetAllPlanes::OutPlaneList' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.GetAllTrackablePoints
// 0x0010 (0x0010 - 0x0000)
struct GoogleARCoreSessionFunctionLibrary_GetAllTrackablePoints final
{
public:
	TArray<class UARTrackedPoint*>                OutTrackablePointList;                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreSessionFunctionLibrary_GetAllTrackablePoints) == 0x000008, "Wrong alignment on GoogleARCoreSessionFunctionLibrary_GetAllTrackablePoints");
static_assert(sizeof(GoogleARCoreSessionFunctionLibrary_GetAllTrackablePoints) == 0x000010, "Wrong size on GoogleARCoreSessionFunctionLibrary_GetAllTrackablePoints");
static_assert(offsetof(GoogleARCoreSessionFunctionLibrary_GetAllTrackablePoints, OutTrackablePointList) == 0x000000, "Member 'GoogleARCoreSessionFunctionLibrary_GetAllTrackablePoints::OutTrackablePointList' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.GetARCoreCameraConfig
// 0x0014 (0x0014 - 0x0000)
struct GoogleARCoreSessionFunctionLibrary_GetARCoreCameraConfig final
{
public:
	struct FGoogleARCoreCameraConfig              OutCurrentCameraConfig;                            // 0x0000(0x0010)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GoogleARCoreSessionFunctionLibrary_GetARCoreCameraConfig) == 0x000004, "Wrong alignment on GoogleARCoreSessionFunctionLibrary_GetARCoreCameraConfig");
static_assert(sizeof(GoogleARCoreSessionFunctionLibrary_GetARCoreCameraConfig) == 0x000014, "Wrong size on GoogleARCoreSessionFunctionLibrary_GetARCoreCameraConfig");
static_assert(offsetof(GoogleARCoreSessionFunctionLibrary_GetARCoreCameraConfig, OutCurrentCameraConfig) == 0x000000, "Member 'GoogleARCoreSessionFunctionLibrary_GetARCoreCameraConfig::OutCurrentCameraConfig' has a wrong offset!");
static_assert(offsetof(GoogleARCoreSessionFunctionLibrary_GetARCoreCameraConfig, ReturnValue) == 0x000010, "Member 'GoogleARCoreSessionFunctionLibrary_GetARCoreCameraConfig::ReturnValue' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.GetARCoreEventManager
// 0x0008 (0x0008 - 0x0000)
struct GoogleARCoreSessionFunctionLibrary_GetARCoreEventManager final
{
public:
	class UGoogleARCoreEventManager*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreSessionFunctionLibrary_GetARCoreEventManager) == 0x000008, "Wrong alignment on GoogleARCoreSessionFunctionLibrary_GetARCoreEventManager");
static_assert(sizeof(GoogleARCoreSessionFunctionLibrary_GetARCoreEventManager) == 0x000008, "Wrong size on GoogleARCoreSessionFunctionLibrary_GetARCoreEventManager");
static_assert(offsetof(GoogleARCoreSessionFunctionLibrary_GetARCoreEventManager, ReturnValue) == 0x000000, "Member 'GoogleARCoreSessionFunctionLibrary_GetARCoreEventManager::ReturnValue' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.GetPassthroughCameraImageUV
// 0x0020 (0x0020 - 0x0000)
struct GoogleARCoreSessionFunctionLibrary_GetPassthroughCameraImageUV final
{
public:
	TArray<float>                                 InUV;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<float>                                 OutUV;                                             // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreSessionFunctionLibrary_GetPassthroughCameraImageUV) == 0x000008, "Wrong alignment on GoogleARCoreSessionFunctionLibrary_GetPassthroughCameraImageUV");
static_assert(sizeof(GoogleARCoreSessionFunctionLibrary_GetPassthroughCameraImageUV) == 0x000020, "Wrong size on GoogleARCoreSessionFunctionLibrary_GetPassthroughCameraImageUV");
static_assert(offsetof(GoogleARCoreSessionFunctionLibrary_GetPassthroughCameraImageUV, InUV) == 0x000000, "Member 'GoogleARCoreSessionFunctionLibrary_GetPassthroughCameraImageUV::InUV' has a wrong offset!");
static_assert(offsetof(GoogleARCoreSessionFunctionLibrary_GetPassthroughCameraImageUV, OutUV) == 0x000010, "Member 'GoogleARCoreSessionFunctionLibrary_GetPassthroughCameraImageUV::OutUV' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.InstallARCoreService
// 0x0028 (0x0028 - 0x0000)
struct GoogleARCoreSessionFunctionLibrary_InstallARCoreService final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	EGoogleARCoreInstallRequestResult             OutInstallResult;                                  // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GoogleARCoreSessionFunctionLibrary_InstallARCoreService) == 0x000008, "Wrong alignment on GoogleARCoreSessionFunctionLibrary_InstallARCoreService");
static_assert(sizeof(GoogleARCoreSessionFunctionLibrary_InstallARCoreService) == 0x000028, "Wrong size on GoogleARCoreSessionFunctionLibrary_InstallARCoreService");
static_assert(offsetof(GoogleARCoreSessionFunctionLibrary_InstallARCoreService, WorldContextObject) == 0x000000, "Member 'GoogleARCoreSessionFunctionLibrary_InstallARCoreService::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GoogleARCoreSessionFunctionLibrary_InstallARCoreService, LatentInfo) == 0x000008, "Member 'GoogleARCoreSessionFunctionLibrary_InstallARCoreService::LatentInfo' has a wrong offset!");
static_assert(offsetof(GoogleARCoreSessionFunctionLibrary_InstallARCoreService, OutInstallResult) == 0x000020, "Member 'GoogleARCoreSessionFunctionLibrary_InstallARCoreService::OutInstallResult' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.IsPassthroughCameraRenderingEnabled
// 0x0001 (0x0001 - 0x0000)
struct GoogleARCoreSessionFunctionLibrary_IsPassthroughCameraRenderingEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreSessionFunctionLibrary_IsPassthroughCameraRenderingEnabled) == 0x000001, "Wrong alignment on GoogleARCoreSessionFunctionLibrary_IsPassthroughCameraRenderingEnabled");
static_assert(sizeof(GoogleARCoreSessionFunctionLibrary_IsPassthroughCameraRenderingEnabled) == 0x000001, "Wrong size on GoogleARCoreSessionFunctionLibrary_IsPassthroughCameraRenderingEnabled");
static_assert(offsetof(GoogleARCoreSessionFunctionLibrary_IsPassthroughCameraRenderingEnabled, ReturnValue) == 0x000000, "Member 'GoogleARCoreSessionFunctionLibrary_IsPassthroughCameraRenderingEnabled::ReturnValue' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.SetARCoreCameraConfig
// 0x0014 (0x0014 - 0x0000)
struct GoogleARCoreSessionFunctionLibrary_SetARCoreCameraConfig final
{
public:
	struct FGoogleARCoreCameraConfig              TargetCameraConfig;                                // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GoogleARCoreSessionFunctionLibrary_SetARCoreCameraConfig) == 0x000004, "Wrong alignment on GoogleARCoreSessionFunctionLibrary_SetARCoreCameraConfig");
static_assert(sizeof(GoogleARCoreSessionFunctionLibrary_SetARCoreCameraConfig) == 0x000014, "Wrong size on GoogleARCoreSessionFunctionLibrary_SetARCoreCameraConfig");
static_assert(offsetof(GoogleARCoreSessionFunctionLibrary_SetARCoreCameraConfig, TargetCameraConfig) == 0x000000, "Member 'GoogleARCoreSessionFunctionLibrary_SetARCoreCameraConfig::TargetCameraConfig' has a wrong offset!");
static_assert(offsetof(GoogleARCoreSessionFunctionLibrary_SetARCoreCameraConfig, ReturnValue) == 0x000010, "Member 'GoogleARCoreSessionFunctionLibrary_SetARCoreCameraConfig::ReturnValue' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.SetPassthroughCameraRenderingEnabled
// 0x0001 (0x0001 - 0x0000)
struct GoogleARCoreSessionFunctionLibrary_SetPassthroughCameraRenderingEnabled final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreSessionFunctionLibrary_SetPassthroughCameraRenderingEnabled) == 0x000001, "Wrong alignment on GoogleARCoreSessionFunctionLibrary_SetPassthroughCameraRenderingEnabled");
static_assert(sizeof(GoogleARCoreSessionFunctionLibrary_SetPassthroughCameraRenderingEnabled) == 0x000001, "Wrong size on GoogleARCoreSessionFunctionLibrary_SetPassthroughCameraRenderingEnabled");
static_assert(offsetof(GoogleARCoreSessionFunctionLibrary_SetPassthroughCameraRenderingEnabled, bEnable) == 0x000000, "Member 'GoogleARCoreSessionFunctionLibrary_SetPassthroughCameraRenderingEnabled::bEnable' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.StartARCoreSession
// 0x0028 (0x0028 - 0x0000)
struct GoogleARCoreSessionFunctionLibrary_StartARCoreSession final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UGoogleARCoreSessionConfig*             Configuration;                                     // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCoreSessionFunctionLibrary_StartARCoreSession) == 0x000008, "Wrong alignment on GoogleARCoreSessionFunctionLibrary_StartARCoreSession");
static_assert(sizeof(GoogleARCoreSessionFunctionLibrary_StartARCoreSession) == 0x000028, "Wrong size on GoogleARCoreSessionFunctionLibrary_StartARCoreSession");
static_assert(offsetof(GoogleARCoreSessionFunctionLibrary_StartARCoreSession, WorldContextObject) == 0x000000, "Member 'GoogleARCoreSessionFunctionLibrary_StartARCoreSession::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GoogleARCoreSessionFunctionLibrary_StartARCoreSession, LatentInfo) == 0x000008, "Member 'GoogleARCoreSessionFunctionLibrary_StartARCoreSession::LatentInfo' has a wrong offset!");
static_assert(offsetof(GoogleARCoreSessionFunctionLibrary_StartARCoreSession, Configuration) == 0x000020, "Member 'GoogleARCoreSessionFunctionLibrary_StartARCoreSession::Configuration' has a wrong offset!");

// Function GoogleARCoreBase.ARCoreAndroidPermissionHandler.OnPermissionsGranted
// 0x0020 (0x0020 - 0x0000)
struct ARCoreAndroidPermissionHandler_OnPermissionsGranted final
{
public:
	TArray<class FString>                         Permissions;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<bool>                                  Granted;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ARCoreAndroidPermissionHandler_OnPermissionsGranted) == 0x000008, "Wrong alignment on ARCoreAndroidPermissionHandler_OnPermissionsGranted");
static_assert(sizeof(ARCoreAndroidPermissionHandler_OnPermissionsGranted) == 0x000020, "Wrong size on ARCoreAndroidPermissionHandler_OnPermissionsGranted");
static_assert(offsetof(ARCoreAndroidPermissionHandler_OnPermissionsGranted, Permissions) == 0x000000, "Member 'ARCoreAndroidPermissionHandler_OnPermissionsGranted::Permissions' has a wrong offset!");
static_assert(offsetof(ARCoreAndroidPermissionHandler_OnPermissionsGranted, Granted) == 0x000010, "Member 'ARCoreAndroidPermissionHandler_OnPermissionsGranted::Granted' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCorePointCloud.GetPoint
// 0x0014 (0x0014 - 0x0000)
struct GoogleARCorePointCloud_GetPoint final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                OutWorldPosition;                                  // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutConfidence;                                     // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCorePointCloud_GetPoint) == 0x000004, "Wrong alignment on GoogleARCorePointCloud_GetPoint");
static_assert(sizeof(GoogleARCorePointCloud_GetPoint) == 0x000014, "Wrong size on GoogleARCorePointCloud_GetPoint");
static_assert(offsetof(GoogleARCorePointCloud_GetPoint, Index_0) == 0x000000, "Member 'GoogleARCorePointCloud_GetPoint::Index_0' has a wrong offset!");
static_assert(offsetof(GoogleARCorePointCloud_GetPoint, OutWorldPosition) == 0x000004, "Member 'GoogleARCorePointCloud_GetPoint::OutWorldPosition' has a wrong offset!");
static_assert(offsetof(GoogleARCorePointCloud_GetPoint, OutConfidence) == 0x000010, "Member 'GoogleARCorePointCloud_GetPoint::OutConfidence' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCorePointCloud.GetPointInTrackingSpace
// 0x0014 (0x0014 - 0x0000)
struct GoogleARCorePointCloud_GetPointInTrackingSpace final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                OutTrackingSpaceLocation;                          // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutConfidence;                                     // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCorePointCloud_GetPointInTrackingSpace) == 0x000004, "Wrong alignment on GoogleARCorePointCloud_GetPointInTrackingSpace");
static_assert(sizeof(GoogleARCorePointCloud_GetPointInTrackingSpace) == 0x000014, "Wrong size on GoogleARCorePointCloud_GetPointInTrackingSpace");
static_assert(offsetof(GoogleARCorePointCloud_GetPointInTrackingSpace, Index_0) == 0x000000, "Member 'GoogleARCorePointCloud_GetPointInTrackingSpace::Index_0' has a wrong offset!");
static_assert(offsetof(GoogleARCorePointCloud_GetPointInTrackingSpace, OutTrackingSpaceLocation) == 0x000004, "Member 'GoogleARCorePointCloud_GetPointInTrackingSpace::OutTrackingSpaceLocation' has a wrong offset!");
static_assert(offsetof(GoogleARCorePointCloud_GetPointInTrackingSpace, OutConfidence) == 0x000010, "Member 'GoogleARCorePointCloud_GetPointInTrackingSpace::OutConfidence' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCorePointCloud.GetPointNum
// 0x0004 (0x0004 - 0x0000)
struct GoogleARCorePointCloud_GetPointNum final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCorePointCloud_GetPointNum) == 0x000004, "Wrong alignment on GoogleARCorePointCloud_GetPointNum");
static_assert(sizeof(GoogleARCorePointCloud_GetPointNum) == 0x000004, "Wrong size on GoogleARCorePointCloud_GetPointNum");
static_assert(offsetof(GoogleARCorePointCloud_GetPointNum, ReturnValue) == 0x000000, "Member 'GoogleARCorePointCloud_GetPointNum::ReturnValue' has a wrong offset!");

// Function GoogleARCoreBase.GoogleARCorePointCloud.IsUpdated
// 0x0001 (0x0001 - 0x0000)
struct GoogleARCorePointCloud_IsUpdated final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleARCorePointCloud_IsUpdated) == 0x000001, "Wrong alignment on GoogleARCorePointCloud_IsUpdated");
static_assert(sizeof(GoogleARCorePointCloud_IsUpdated) == 0x000001, "Wrong size on GoogleARCorePointCloud_IsUpdated");
static_assert(offsetof(GoogleARCorePointCloud_IsUpdated, ReturnValue) == 0x000000, "Member 'GoogleARCorePointCloud_IsUpdated::ReturnValue' has a wrong offset!");

}


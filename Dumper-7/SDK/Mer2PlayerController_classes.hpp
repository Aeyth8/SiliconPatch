#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mer2PlayerController

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Mer2PlayerController.Mer2PlayerController_C
// 0x0088 (0x0700 - 0x0678)
#pragma pack(push, 0x1)
class alignas(0x10) AMer2PlayerController_C : public APlayerController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0678(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          HMDEnabled;                                        // 0x0680(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_681[0x7];                                      // 0x0681(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 IsAuto;                                            // 0x0688(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 UniqueId;                                          // 0x0698(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	uint8                                         Pad_6A8[0x8];                                      // 0x06A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp;                                              // 0x06B0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UClass*                                 Char_PCMode;                                       // 0x06E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Char_VRMode_1P;                                    // 0x06E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Char_VRMode_2P;                                    // 0x06F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Mer2PlayerController(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void OnPossess(const struct FTransform& Transform);
	void InitHMD(bool bHasHMD);
	void InitiatePlay(const class FString& IsAuto_0, const class FString& UniqueId_0);
	void ReturnHMDStatus(bool bHMDEnabled, const struct FVector& HMDOffset, const struct FRotator& HMDRotation);
	void GetHMDStatus();
	void InpActEvt_Equals_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_BackSpace_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void UserConstructionScript();
	void InitiateHMD();
	struct FTransform GetinitTransform(bool Is2P);
	struct FTransform GetinitTransformOnline(bool Is2P);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Mer2PlayerController_C">();
	}
	static class AMer2PlayerController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMer2PlayerController_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(AMer2PlayerController_C) == 0x000010, "Wrong alignment on AMer2PlayerController_C");
static_assert(sizeof(AMer2PlayerController_C) == 0x000700, "Wrong size on AMer2PlayerController_C");
static_assert(offsetof(AMer2PlayerController_C, UberGraphFrame) == 0x000678, "Member 'AMer2PlayerController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMer2PlayerController_C, HMDEnabled) == 0x000680, "Member 'AMer2PlayerController_C::HMDEnabled' has a wrong offset!");
static_assert(offsetof(AMer2PlayerController_C, IsAuto) == 0x000688, "Member 'AMer2PlayerController_C::IsAuto' has a wrong offset!");
static_assert(offsetof(AMer2PlayerController_C, UniqueId) == 0x000698, "Member 'AMer2PlayerController_C::UniqueId' has a wrong offset!");
static_assert(offsetof(AMer2PlayerController_C, Temp) == 0x0006B0, "Member 'AMer2PlayerController_C::Temp' has a wrong offset!");
static_assert(offsetof(AMer2PlayerController_C, Char_PCMode) == 0x0006E0, "Member 'AMer2PlayerController_C::Char_PCMode' has a wrong offset!");
static_assert(offsetof(AMer2PlayerController_C, Char_VRMode_1P) == 0x0006E8, "Member 'AMer2PlayerController_C::Char_VRMode_1P' has a wrong offset!");
static_assert(offsetof(AMer2PlayerController_C, Char_VRMode_2P) == 0x0006F0, "Member 'AMer2PlayerController_C::Char_VRMode_2P' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MobileHUD

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MobileHUD.MobileHUD_C
// 0x0050 (0x0258 - 0x0208)
class UMobileHUD_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0208(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 ArrowL;                                            // 0x0210(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ArrowR;                                            // 0x0218(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           hpProgress;                                        // 0x0220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                leftSwitch;                                        // 0x0228(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             playerScore;                                       // 0x0230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ProgressBlack;                                     // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                rightSwitch;                                       // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ABP_CharacterPhone_C*                   Player;                                            // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMer2GameInstance_C*                    GameInstance;                                      // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MobileHUD(int32 EntryPoint);
	void Construct();
	void BndEvt__rightSwitch_K2Node_ComponentBoundEvent_295_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__leftSwitch_K2Node_ComponentBoundEvent_277_OnButtonReleasedEvent__DelegateSignature();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void EnableSwitchButton(bool lsEnabled, bool lsleft_);
	void CheckButtonHovered(class UButton* _button);
	void SetButtonPerent(float _percent, class UButton* Button);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MobileHUD_C">();
	}
	static class UMobileHUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMobileHUD_C>();
	}
};
static_assert(alignof(UMobileHUD_C) == 0x000008, "Wrong alignment on UMobileHUD_C");
static_assert(sizeof(UMobileHUD_C) == 0x000258, "Wrong size on UMobileHUD_C");
static_assert(offsetof(UMobileHUD_C, UberGraphFrame) == 0x000208, "Member 'UMobileHUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMobileHUD_C, ArrowL) == 0x000210, "Member 'UMobileHUD_C::ArrowL' has a wrong offset!");
static_assert(offsetof(UMobileHUD_C, ArrowR) == 0x000218, "Member 'UMobileHUD_C::ArrowR' has a wrong offset!");
static_assert(offsetof(UMobileHUD_C, hpProgress) == 0x000220, "Member 'UMobileHUD_C::hpProgress' has a wrong offset!");
static_assert(offsetof(UMobileHUD_C, leftSwitch) == 0x000228, "Member 'UMobileHUD_C::leftSwitch' has a wrong offset!");
static_assert(offsetof(UMobileHUD_C, playerScore) == 0x000230, "Member 'UMobileHUD_C::playerScore' has a wrong offset!");
static_assert(offsetof(UMobileHUD_C, ProgressBlack) == 0x000238, "Member 'UMobileHUD_C::ProgressBlack' has a wrong offset!");
static_assert(offsetof(UMobileHUD_C, rightSwitch) == 0x000240, "Member 'UMobileHUD_C::rightSwitch' has a wrong offset!");
static_assert(offsetof(UMobileHUD_C, Player) == 0x000248, "Member 'UMobileHUD_C::Player' has a wrong offset!");
static_assert(offsetof(UMobileHUD_C, GameInstance) == 0x000250, "Member 'UMobileHUD_C::GameInstance' has a wrong offset!");

}


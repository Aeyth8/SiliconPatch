#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lv3_BaseCar

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.ExecuteUbergraph_BP_Lv3_BaseCar
// 0x0370 (0x0370 - 0x0000)
struct BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable2;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentGear_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_SteeringInput;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable2;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable3;                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable3;                      // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable4;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AVehicle_MC_C*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0078(0x0010)(ZeroConstructor, ReferenceParm)
	class AVehicle_MC_C*                          CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor2;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp2;             // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x00C8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x2];                                      // 0x0152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVehicle_MC_C*                          K2Node_DynamicCast_AsVehicle_MC;                   // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Delta;                          // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue;                // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EB[0x5];                                      // 0x01EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RunBehaviorTree_ReturnValue;              // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FA[0x6];                                      // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent1;   // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor1;            // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp1;             // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex1;        // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0228(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue1;       // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable4;                      // 0x02CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x02CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_HitActor;                       // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Loc;                            // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AStaticMeshActor*                       K2Node_DynamicCast_AsStatic_Mesh_Actor;            // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0305(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0306(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_307[0x1];                                      // 0x0307(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X1;                         // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y1;                         // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_313[0x5];                                      // 0x0313(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue1; // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnParticle_ReturnValue;                // 0x0330(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x0348(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance;           // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue3;          // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x036A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B[0x1];                                      // 0x036B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar) == 0x000008, "Wrong alignment on BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar");
static_assert(sizeof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar) == 0x000370, "Wrong size on BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, EntryPoint) == 0x000000, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, Temp_bool_Has_Been_Initd_Variable1) == 0x000006, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, Temp_bool_Has_Been_Initd_Variable2) == 0x000007, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::Temp_bool_Has_Been_Initd_Variable2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, Temp_bool_IsClosed_Variable1) == 0x000008, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_InputAxisEvent_AxisValue1) == 0x00000C, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_InputAxisEvent_AxisValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_InputAxisEvent_AxisValue) == 0x000010, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_GetCurrentGear_ReturnValue) == 0x000018, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_GetCurrentGear_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_CustomEvent_SteeringInput) == 0x000020, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_CustomEvent_SteeringInput' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_Event_Damage) == 0x000028, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_Event_DamageType) == 0x000030, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_Event_InstigatedBy) == 0x000038, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_Event_DamageCauser) == 0x000040, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, Temp_bool_IsClosed_Variable2) == 0x00004C, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::Temp_bool_IsClosed_Variable2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, Temp_bool_Has_Been_Initd_Variable3) == 0x00004D, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::Temp_bool_Has_Been_Initd_Variable3' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, Temp_bool_IsClosed_Variable3) == 0x00004E, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::Temp_bool_IsClosed_Variable3' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_GetActorUpVector_ReturnValue) == 0x000050, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_GetUpVector_ReturnValue) == 0x00005C, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_Dot_VectorVector_ReturnValue) == 0x000068, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, Temp_bool_Has_Been_Initd_Variable4) == 0x00006C, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::Temp_bool_Has_Been_Initd_Variable4' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_DegAcos_ReturnValue) == 0x000070, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_GetAllActorsOfClass_OutActors) == 0x000078, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_Greater_IntInt_ReturnValue) == 0x000098, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_ComponentBoundEvent_HitComponent) == 0x0000A0, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_ComponentBoundEvent_OtherActor2) == 0x0000A8, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_ComponentBoundEvent_OtherActor2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_ComponentBoundEvent_OtherComp2) == 0x0000B0, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_ComponentBoundEvent_OtherComp2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_ComponentBoundEvent_NormalImpulse) == 0x0000B8, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_ComponentBoundEvent_Hit) == 0x0000C8, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BreakHitResult_bBlockingHit) == 0x000150, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BreakHitResult_bInitialOverlap) == 0x000151, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BreakHitResult_Time) == 0x000154, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BreakHitResult_Distance) == 0x000158, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BreakHitResult_Location) == 0x00015C, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BreakHitResult_ImpactPoint) == 0x000168, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BreakHitResult_Normal) == 0x000174, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BreakHitResult_ImpactNormal) == 0x000180, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BreakHitResult_PhysMat) == 0x000190, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BreakHitResult_HitActor) == 0x000198, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BreakHitResult_HitComponent) == 0x0001A0, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BreakHitResult_HitBoneName) == 0x0001A8, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BreakHitResult_HitItem) == 0x0001B0, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BreakHitResult_FaceIndex) == 0x0001B4, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BreakHitResult_TraceStart) == 0x0001B8, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BreakHitResult_TraceEnd) == 0x0001C4, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_DynamicCast_AsVehicle_MC) == 0x0001D0, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_DynamicCast_AsVehicle_MC' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_DynamicCast_bSuccess) == 0x0001D8, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_CustomEvent_Delta) == 0x0001DC, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_CustomEvent_Delta' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_Less_IntInt_ReturnValue1) == 0x0001E0, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001E4, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_Not_PreBool_ReturnValue) == 0x0001E8, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BooleanAND_ReturnValue) == 0x0001E9, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_K2_TeleportTo_ReturnValue) == 0x0001EA, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_K2_TeleportTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_GetAIController_ReturnValue) == 0x0001F0, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_RunBehaviorTree_ReturnValue) == 0x0001F8, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_RunBehaviorTree_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_IsValid_ReturnValue1) == 0x0001F9, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000200, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_ComponentBoundEvent_OverlappedComponent1) == 0x000208, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_ComponentBoundEvent_OverlappedComponent1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_ComponentBoundEvent_OtherActor1) == 0x000210, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_ComponentBoundEvent_OtherActor1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_ComponentBoundEvent_OtherComp1) == 0x000218, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_ComponentBoundEvent_OtherComp1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_ComponentBoundEvent_OtherBodyIndex1) == 0x000220, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_ComponentBoundEvent_OtherBodyIndex1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_ComponentBoundEvent_bFromSweep) == 0x000224, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_ComponentBoundEvent_SweepResult) == 0x000228, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0002B0, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_ComponentBoundEvent_OtherActor) == 0x0002B8, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_ComponentBoundEvent_OtherComp) == 0x0002C0, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0002C8, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0002CC, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_NotEqual_ObjectObject_ReturnValue1) == 0x0002CD, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_NotEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, Temp_bool_IsClosed_Variable4) == 0x0002CE, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::Temp_bool_IsClosed_Variable4' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_Greater_IntInt_ReturnValue1) == 0x0002CF, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_CustomEvent_HitActor) == 0x0002D0, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_CustomEvent_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_CustomEvent_Loc) == 0x0002D8, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_CustomEvent_Loc' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_DynamicCast_AsStatic_Mesh_Actor) == 0x0002E8, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_DynamicCast_AsStatic_Mesh_Actor' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_DynamicCast_bSuccess1) == 0x0002F0, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, Temp_float_Variable) == 0x0002F4, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0002F8, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BreakVector2D_X) == 0x0002FC, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BreakVector2D_Y) == 0x000300, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x000304, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_Less_FloatFloat_ReturnValue) == 0x000305, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BooleanAND_ReturnValue1) == 0x000306, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BreakVector2D_X1) == 0x000308, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BreakVector2D_X1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BreakVector2D_Y1) == 0x00030C, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BreakVector2D_Y1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x000310, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_Less_FloatFloat_ReturnValue1) == 0x000311, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BooleanAND_ReturnValue2) == 0x000312, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000318, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BooleanOR_ReturnValue) == 0x000320, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_CreateDynamicMaterialInstance_ReturnValue1) == 0x000328, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_CreateDynamicMaterialInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_SpawnParticle_ReturnValue) == 0x000330, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_SpawnParticle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, Temp_bool_Variable) == 0x000338, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_GetGameInstance_ReturnValue) == 0x000340, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_GetComponentVelocity_ReturnValue) == 0x000348, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_DynamicCast_AsMer_2Game_Instance) == 0x000358, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_DynamicCast_AsMer_2Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_DynamicCast_bSuccess2) == 0x000360, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_VSize_ReturnValue) == 0x000364, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_Greater_FloatFloat_ReturnValue3) == 0x000368, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_Greater_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BooleanAND_ReturnValue3) == 0x000369, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, CallFunc_BooleanAND_ReturnValue4) == 0x00036A, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar, K2Node_Select_Default) == 0x00036C, "Member 'BP_Lv3_BaseCar_C_ExecuteUbergraph_BP_Lv3_BaseCar::K2Node_Select_Default' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.HitSound
// 0x0018 (0x0018 - 0x0000)
struct BP_Lv3_BaseCar_C_HitSound final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Loc;                                               // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv3_BaseCar_C_HitSound) == 0x000008, "Wrong alignment on BP_Lv3_BaseCar_C_HitSound");
static_assert(sizeof(BP_Lv3_BaseCar_C_HitSound) == 0x000018, "Wrong size on BP_Lv3_BaseCar_C_HitSound");
static_assert(offsetof(BP_Lv3_BaseCar_C_HitSound, HitActor) == 0x000000, "Member 'BP_Lv3_BaseCar_C_HitSound::HitActor' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_HitSound, Loc) == 0x000008, "Member 'BP_Lv3_BaseCar_C_HitSound::Loc' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.BndEvt__head_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Lv3_BaseCar_C_BndEvt__head_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.TeleportCheck
// 0x0004 (0x0004 - 0x0000)
struct BP_Lv3_BaseCar_C_TeleportCheck final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv3_BaseCar_C_TeleportCheck) == 0x000004, "Wrong alignment on BP_Lv3_BaseCar_C_TeleportCheck");
static_assert(sizeof(BP_Lv3_BaseCar_C_TeleportCheck) == 0x000004, "Wrong size on BP_Lv3_BaseCar_C_TeleportCheck");
static_assert(offsetof(BP_Lv3_BaseCar_C_TeleportCheck, Delta) == 0x000000, "Member 'BP_Lv3_BaseCar_C_TeleportCheck::Delta' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Lv3_BaseCar_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0028(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Lv3_BaseCar_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Lv3_BaseCar_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_Lv3_BaseCar_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_Lv3_BaseCar_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_Lv3_BaseCar_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_Lv3_BaseCar_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Lv3_BaseCar_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Lv3_BaseCar_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_Lv3_BaseCar_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000028, "Member 'BP_Lv3_BaseCar_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_Lv3_BaseCar_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv3_BaseCar_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on BP_Lv3_BaseCar_C_ReceiveAnyDamage");
static_assert(sizeof(BP_Lv3_BaseCar_C_ReceiveAnyDamage) == 0x000020, "Wrong size on BP_Lv3_BaseCar_C_ReceiveAnyDamage");
static_assert(offsetof(BP_Lv3_BaseCar_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'BP_Lv3_BaseCar_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'BP_Lv3_BaseCar_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'BP_Lv3_BaseCar_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'BP_Lv3_BaseCar_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.AiControlled
// 0x0004 (0x0004 - 0x0000)
struct BP_Lv3_BaseCar_C_AiControlled final
{
public:
	float                                         SteeringInput_0;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv3_BaseCar_C_AiControlled) == 0x000004, "Wrong alignment on BP_Lv3_BaseCar_C_AiControlled");
static_assert(sizeof(BP_Lv3_BaseCar_C_AiControlled) == 0x000004, "Wrong size on BP_Lv3_BaseCar_C_AiControlled");
static_assert(offsetof(BP_Lv3_BaseCar_C_AiControlled, SteeringInput_0) == 0x000000, "Member 'BP_Lv3_BaseCar_C_AiControlled::SteeringInput_0' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Lv3_BaseCar_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv3_BaseCar_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Lv3_BaseCar_C_ReceiveTick");
static_assert(sizeof(BP_Lv3_BaseCar_C_ReceiveTick) == 0x000004, "Wrong size on BP_Lv3_BaseCar_C_ReceiveTick");
static_assert(offsetof(BP_Lv3_BaseCar_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Lv3_BaseCar_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_15
// 0x0004 (0x0004 - 0x0000)
struct BP_Lv3_BaseCar_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_15 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv3_BaseCar_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_15) == 0x000004, "Wrong alignment on BP_Lv3_BaseCar_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_15");
static_assert(sizeof(BP_Lv3_BaseCar_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_15) == 0x000004, "Wrong size on BP_Lv3_BaseCar_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_15");
static_assert(offsetof(BP_Lv3_BaseCar_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_15, AxisValue) == 0x000000, "Member 'BP_Lv3_BaseCar_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_15::AxisValue' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_6
// 0x0004 (0x0004 - 0x0000)
struct BP_Lv3_BaseCar_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_6 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv3_BaseCar_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_6) == 0x000004, "Wrong alignment on BP_Lv3_BaseCar_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_6");
static_assert(sizeof(BP_Lv3_BaseCar_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_6) == 0x000004, "Wrong size on BP_Lv3_BaseCar_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_6");
static_assert(offsetof(BP_Lv3_BaseCar_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_6, AxisValue) == 0x000000, "Member 'BP_Lv3_BaseCar_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_6::AxisValue' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.Setup Incar HUD
// 0x0058 (0x0058 - 0x0000)
struct BP_Lv3_BaseCar_C_Setup_Incar_HUD final
{
public:
	bool                                          IsInCar;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AVehicleHUD_C*                          PlayerHUD;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue1;           // 0x0038(0x0018)()
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv3_BaseCar_C_Setup_Incar_HUD) == 0x000008, "Wrong alignment on BP_Lv3_BaseCar_C_Setup_Incar_HUD");
static_assert(sizeof(BP_Lv3_BaseCar_C_Setup_Incar_HUD) == 0x000058, "Wrong size on BP_Lv3_BaseCar_C_Setup_Incar_HUD");
static_assert(offsetof(BP_Lv3_BaseCar_C_Setup_Incar_HUD, IsInCar) == 0x000000, "Member 'BP_Lv3_BaseCar_C_Setup_Incar_HUD::IsInCar' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_Setup_Incar_HUD, PlayerHUD) == 0x000008, "Member 'BP_Lv3_BaseCar_C_Setup_Incar_HUD::PlayerHUD' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_Setup_Incar_HUD, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'BP_Lv3_BaseCar_C_Setup_Incar_HUD::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_Setup_Incar_HUD, CallFunc_SelectColor_ReturnValue) == 0x000028, "Member 'BP_Lv3_BaseCar_C_Setup_Incar_HUD::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_Setup_Incar_HUD, CallFunc_Conv_StringToText_ReturnValue1) == 0x000038, "Member 'BP_Lv3_BaseCar_C_Setup_Incar_HUD::CallFunc_Conv_StringToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_Setup_Incar_HUD, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x000050, "Member 'BP_Lv3_BaseCar_C_Setup_Incar_HUD::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.Update HUD Strings
// 0x0058 (0x0058 - 0x0000)
struct BP_Lv3_BaseCar_C_Update_HUD_Strings final
{
public:
	int32                                         CurrentGear;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentGear_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetForwardSpeed_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue1;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lv3_BaseCar_C_Update_HUD_Strings) == 0x000008, "Wrong alignment on BP_Lv3_BaseCar_C_Update_HUD_Strings");
static_assert(sizeof(BP_Lv3_BaseCar_C_Update_HUD_Strings) == 0x000058, "Wrong size on BP_Lv3_BaseCar_C_Update_HUD_Strings");
static_assert(offsetof(BP_Lv3_BaseCar_C_Update_HUD_Strings, CurrentGear) == 0x000000, "Member 'BP_Lv3_BaseCar_C_Update_HUD_Strings::CurrentGear' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_Update_HUD_Strings, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_Lv3_BaseCar_C_Update_HUD_Strings::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_Update_HUD_Strings, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'BP_Lv3_BaseCar_C_Update_HUD_Strings::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_Update_HUD_Strings, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_Lv3_BaseCar_C_Update_HUD_Strings::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_Update_HUD_Strings, CallFunc_GetCurrentGear_ReturnValue) == 0x000028, "Member 'BP_Lv3_BaseCar_C_Update_HUD_Strings::CallFunc_GetCurrentGear_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_Update_HUD_Strings, CallFunc_GetForwardSpeed_ReturnValue) == 0x00002C, "Member 'BP_Lv3_BaseCar_C_Update_HUD_Strings::CallFunc_GetForwardSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_Update_HUD_Strings, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_Lv3_BaseCar_C_Update_HUD_Strings::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_Update_HUD_Strings, CallFunc_Abs_ReturnValue) == 0x000034, "Member 'BP_Lv3_BaseCar_C_Update_HUD_Strings::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_Update_HUD_Strings, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_Lv3_BaseCar_C_Update_HUD_Strings::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_Update_HUD_Strings, CallFunc_FFloor_ReturnValue) == 0x00003C, "Member 'BP_Lv3_BaseCar_C_Update_HUD_Strings::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_Update_HUD_Strings, CallFunc_Conv_IntToString_ReturnValue1) == 0x000040, "Member 'BP_Lv3_BaseCar_C_Update_HUD_Strings::CallFunc_Conv_IntToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_Update_HUD_Strings, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'BP_Lv3_BaseCar_C_Update_HUD_Strings::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.SpawnNPC
// 0x0350 (0x0350 - 0x0000)
struct BP_Lv3_BaseCar_C_SpawnNPC final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable1;                                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Lv3_NPCBase_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue1;               // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorRelativeTransform_SweepHitResult; // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue1;                // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1; // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue1;                // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Lv3_NPCBase_C*                      CallFunc_FinishSpawningActor_ReturnValue1;         // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A8[0x8];                                      // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue2;               // 0x01B0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorRelativeTransform_SweepHitResult1; // 0x01E8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_GetTransform_ReturnValue2;                // 0x0270(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue2;                // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2; // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Lv3_NPCBase_C*                      CallFunc_FinishSpawningActor_ReturnValue2;         // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorRelativeTransform_SweepHitResult2; // 0x02C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Lv3_BaseCar_C_SpawnNPC) == 0x000010, "Wrong alignment on BP_Lv3_BaseCar_C_SpawnNPC");
static_assert(sizeof(BP_Lv3_BaseCar_C_SpawnNPC) == 0x000350, "Wrong size on BP_Lv3_BaseCar_C_SpawnNPC");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, Temp_int_Variable) == 0x000000, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, Temp_int_Variable1) == 0x000040, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_Add_IntInt_ReturnValue1) == 0x000048, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000080, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_IsValidClass_ReturnValue) == 0x000088, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_FinishSpawningActor_ReturnValue) == 0x000090, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_MakeTransform_ReturnValue1) == 0x0000A0, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_MakeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_K2_SetActorRelativeTransform_SweepHitResult) == 0x0000D0, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_K2_SetActorRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_Array_Add_ReturnValue) == 0x000158, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_GetTransform_ReturnValue1) == 0x000160, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_GetTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1) == 0x000190, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_IsValidClass_ReturnValue1) == 0x000198, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_IsValidClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_FinishSpawningActor_ReturnValue1) == 0x0001A0, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_FinishSpawningActor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_MakeTransform_ReturnValue2) == 0x0001B0, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_MakeTransform_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_Array_Add_ReturnValue1) == 0x0001E0, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_K2_SetActorRelativeTransform_SweepHitResult1) == 0x0001E8, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_K2_SetActorRelativeTransform_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_GetTransform_ReturnValue2) == 0x000270, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_GetTransform_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_IsValidClass_ReturnValue2) == 0x0002A0, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_IsValidClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2) == 0x0002A8, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_FinishSpawningActor_ReturnValue2) == 0x0002B0, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_FinishSpawningActor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_Array_Add_ReturnValue2) == 0x0002B8, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnNPC, CallFunc_K2_SetActorRelativeTransform_SweepHitResult2) == 0x0002C0, "Member 'BP_Lv3_BaseCar_C_SpawnNPC::CallFunc_K2_SetActorRelativeTransform_SweepHitResult2' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.LeaveRoad
// 0x0030 (0x0030 - 0x0000)
struct BP_Lv3_BaseCar_C_LeaveRoad final
{
public:
	float                                         X;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lv3_BaseCar_C_LeaveRoad) == 0x000008, "Wrong alignment on BP_Lv3_BaseCar_C_LeaveRoad");
static_assert(sizeof(BP_Lv3_BaseCar_C_LeaveRoad) == 0x000030, "Wrong size on BP_Lv3_BaseCar_C_LeaveRoad");
static_assert(offsetof(BP_Lv3_BaseCar_C_LeaveRoad, X) == 0x000000, "Member 'BP_Lv3_BaseCar_C_LeaveRoad::X' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_LeaveRoad, Y) == 0x000004, "Member 'BP_Lv3_BaseCar_C_LeaveRoad::Y' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_LeaveRoad, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Lv3_BaseCar_C_LeaveRoad::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_LeaveRoad, CallFunc_MakeVector2D_ReturnValue) == 0x00000C, "Member 'BP_Lv3_BaseCar_C_LeaveRoad::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_LeaveRoad, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_Lv3_BaseCar_C_LeaveRoad::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_LeaveRoad, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_Lv3_BaseCar_C_LeaveRoad::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_LeaveRoad, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_Lv3_BaseCar_C_LeaveRoad::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_LeaveRoad, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_Lv3_BaseCar_C_LeaveRoad::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_LeaveRoad, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_Lv3_BaseCar_C_LeaveRoad::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_LeaveRoad, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'BP_Lv3_BaseCar_C_LeaveRoad::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.InitCar
// 0x0090 (0x0090 - 0x0000)
struct BP_Lv3_BaseCar_C_InitCar final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Driver_0;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Attack01;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Attack02;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_lv3_ActiveBox_C*                    ActiveBox_0;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxRPM;                                            // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InitSpeed;                                         // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMer2WheeledVehicleMovement4W*          K2Node_DynamicCast_AsMer_2Wheeled_Vehicle_Movement_4W; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_NVSplineMesh_C*>             CallFunc_GetAllActorsOfClass_OutActors;            // 0x0070(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_NVSplineMesh_C*                     CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lv3_BaseCar_C_InitCar) == 0x000008, "Wrong alignment on BP_Lv3_BaseCar_C_InitCar");
static_assert(sizeof(BP_Lv3_BaseCar_C_InitCar) == 0x000090, "Wrong size on BP_Lv3_BaseCar_C_InitCar");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, Pos) == 0x000000, "Member 'BP_Lv3_BaseCar_C_InitCar::Pos' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, Driver_0) == 0x000008, "Member 'BP_Lv3_BaseCar_C_InitCar::Driver_0' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, Attack01) == 0x000010, "Member 'BP_Lv3_BaseCar_C_InitCar::Attack01' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, Attack02) == 0x000018, "Member 'BP_Lv3_BaseCar_C_InitCar::Attack02' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, ActiveBox_0) == 0x000020, "Member 'BP_Lv3_BaseCar_C_InitCar::ActiveBox_0' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, MaxRPM) == 0x000028, "Member 'BP_Lv3_BaseCar_C_InitCar::MaxRPM' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, InitSpeed) == 0x00002C, "Member 'BP_Lv3_BaseCar_C_InitCar::InitSpeed' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_Lv3_BaseCar_C_InitCar::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000034, "Member 'BP_Lv3_BaseCar_C_InitCar::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BP_Lv3_BaseCar_C_InitCar::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_Lv3_BaseCar_C_InitCar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_Lv3_BaseCar_C_InitCar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_Lv3_BaseCar_C_InitCar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, CallFunc_GetActorForwardVector_ReturnValue) == 0x000048, "Member 'BP_Lv3_BaseCar_C_InitCar::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000054, "Member 'BP_Lv3_BaseCar_C_InitCar::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, K2Node_DynamicCast_AsMer_2Wheeled_Vehicle_Movement_4W) == 0x000060, "Member 'BP_Lv3_BaseCar_C_InitCar::K2Node_DynamicCast_AsMer_2Wheeled_Vehicle_Movement_4W' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_Lv3_BaseCar_C_InitCar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, CallFunc_GetAllActorsOfClass_OutActors) == 0x000070, "Member 'BP_Lv3_BaseCar_C_InitCar::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_Lv3_BaseCar_C_InitCar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_Lv3_BaseCar_C_InitCar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BP_Lv3_BaseCar_C_InitCar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_InitCar, CallFunc_ActorHasTag_ReturnValue) == 0x00008D, "Member 'BP_Lv3_BaseCar_C_InitCar::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.BlowUpCar
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Lv3_BaseCar_C_BlowUpCar final
{
public:
	float                                         NewLocalVar_0;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue1;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Lv3_NPCBase_C*                      K2Node_DynamicCast_AsBP_Lv_3_NPCBase;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv3_BaseCar_C_BlowUpCar) == 0x000008, "Wrong alignment on BP_Lv3_BaseCar_C_BlowUpCar");
static_assert(sizeof(BP_Lv3_BaseCar_C_BlowUpCar) == 0x0000B0, "Wrong size on BP_Lv3_BaseCar_C_BlowUpCar");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, NewLocalVar_0) == 0x000000, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, CallFunc_RandomBool_ReturnValue) == 0x000008, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, CallFunc_SelectFloat_ReturnValue) == 0x00000C, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000028, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, CallFunc_SpawnSoundAtLocation_ReturnValue1) == 0x000030, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::CallFunc_SpawnSoundAtLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000038, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, K2Node_DynamicCast_AsBP_Lv_3_NPCBase) == 0x000060, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::K2Node_DynamicCast_AsBP_Lv_3_NPCBase' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, CallFunc_SelectFloat_ReturnValue1) == 0x00006C, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::CallFunc_SelectFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, CallFunc_GetActorForwardVector_ReturnValue) == 0x000078, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000084, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000088, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000094, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000098, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_BlowUpCar, CallFunc_MakeVector_ReturnValue1) == 0x0000A4, "Member 'BP_Lv3_BaseCar_C_BlowUpCar::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.XYLocation
// 0x0188 (0x0188 - 0x0000)
struct BP_Lv3_BaseCar_C_XYLocation final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Distance_Between_Locations_Distance;      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue1;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue1;      // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Distance_Between_Locations_Distance1;     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue1;                      // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue; // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue1; // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue2;          // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Distance_Between_Locations_Distance2;     // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindRotationClosestToWorldLocation_ReturnValue; // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue2;      // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll2;                       // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch2;                      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw2;                        // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue1;                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue2;        // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue3;            // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv3_BaseCar_C_XYLocation) == 0x000008, "Wrong alignment on BP_Lv3_BaseCar_C_XYLocation");
static_assert(sizeof(BP_Lv3_BaseCar_C_XYLocation) == 0x000188, "Wrong size on BP_Lv3_BaseCar_C_XYLocation");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, Target) == 0x000000, "Member 'BP_Lv3_BaseCar_C_XYLocation::Target' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000014, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000020, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Distance_Between_Locations_Distance) == 0x00002C, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Distance_Between_Locations_Distance' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_FindLookAtRotation_ReturnValue) == 0x000030, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_FindLookAtRotation_ReturnValue1) == 0x00003C, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_FindLookAtRotation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000048, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_NormalizedDeltaRotator_ReturnValue1) == 0x000054, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_NormalizedDeltaRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_BreakRotator_Roll) == 0x000060, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_BreakRotator_Pitch) == 0x000064, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_BreakRotator_Yaw) == 0x000068, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_BreakRotator_Roll1) == 0x00006C, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_BreakRotator_Pitch1) == 0x000070, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_BreakRotator_Yaw1) == 0x000074, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Less_FloatFloat_ReturnValue) == 0x000078, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_SelectFloat_ReturnValue) == 0x00007C, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000080, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000084, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_BreakVector2D_X) == 0x000090, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_BreakVector2D_Y) == 0x000094, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Distance_Between_Locations_Distance1) == 0x000098, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Distance_Between_Locations_Distance1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x00009C, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x0000A4, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0000A8, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000AC, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_FClamp_ReturnValue) == 0x0000B0, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x0000B4, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_FClamp_ReturnValue1) == 0x0000B8, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_FClamp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Add_FloatFloat_ReturnValue1) == 0x0000BC, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_FindLocationClosestToWorldLocation_ReturnValue) == 0x0000C0, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_FindLocationClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_FindLocationClosestToWorldLocation_ReturnValue1) == 0x0000CC, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_FindLocationClosestToWorldLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_FindLookAtRotation_ReturnValue2) == 0x0000D8, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_FindLookAtRotation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Distance_Between_Locations_Distance2) == 0x0000E4, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Distance_Between_Locations_Distance2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_FindRotationClosestToWorldLocation_ReturnValue) == 0x0000E8, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_FindRotationClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_GetRightVector_ReturnValue) == 0x0000F4, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_NormalizedDeltaRotator_ReturnValue2) == 0x000100, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_NormalizedDeltaRotator_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00010C, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_BreakRotator_Roll2) == 0x000118, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_BreakRotator_Roll2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_BreakRotator_Pitch2) == 0x00011C, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_BreakRotator_Pitch2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_BreakRotator_Yaw2) == 0x000120, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_BreakRotator_Yaw2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000124, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Abs_ReturnValue) == 0x000130, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Add_VectorVector_ReturnValue1) == 0x000134, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000140, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_SelectFloat_ReturnValue1) == 0x000144, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_SelectFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x000148, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_GetForwardVector_ReturnValue) == 0x00014C, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000158, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Multiply_VectorFloat_ReturnValue2) == 0x000164, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Multiply_VectorFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Add_VectorVector_ReturnValue2) == 0x000170, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_XYLocation, CallFunc_Add_VectorVector_ReturnValue3) == 0x00017C, "Member 'BP_Lv3_BaseCar_C_XYLocation::CallFunc_Add_VectorVector_ReturnValue3' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.SetCarLifeSpan
// 0x0028 (0x0028 - 0x0000)
struct BP_Lv3_BaseCar_C_SetCarLifeSpan final
{
public:
	float                                         LifeSpan;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lv3_BaseCar_C_SetCarLifeSpan) == 0x000008, "Wrong alignment on BP_Lv3_BaseCar_C_SetCarLifeSpan");
static_assert(sizeof(BP_Lv3_BaseCar_C_SetCarLifeSpan) == 0x000028, "Wrong size on BP_Lv3_BaseCar_C_SetCarLifeSpan");
static_assert(offsetof(BP_Lv3_BaseCar_C_SetCarLifeSpan, LifeSpan) == 0x000000, "Member 'BP_Lv3_BaseCar_C_SetCarLifeSpan::LifeSpan' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SetCarLifeSpan, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Lv3_BaseCar_C_SetCarLifeSpan::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SetCarLifeSpan, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Lv3_BaseCar_C_SetCarLifeSpan::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SetCarLifeSpan, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Lv3_BaseCar_C_SetCarLifeSpan::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SetCarLifeSpan, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_Lv3_BaseCar_C_SetCarLifeSpan::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SetCarLifeSpan, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_Lv3_BaseCar_C_SetCarLifeSpan::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SetCarLifeSpan, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_Lv3_BaseCar_C_SetCarLifeSpan::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SetCarLifeSpan, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_Lv3_BaseCar_C_SetCarLifeSpan::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.SetTargetActor
// 0x0018 (0x0018 - 0x0000)
struct BP_Lv3_BaseCar_C_SetTargetActor final
{
public:
	class AActor*                                 Traget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangeTargetOffset;                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              TargetOffset;                                      // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv3_BaseCar_C_SetTargetActor) == 0x000008, "Wrong alignment on BP_Lv3_BaseCar_C_SetTargetActor");
static_assert(sizeof(BP_Lv3_BaseCar_C_SetTargetActor) == 0x000018, "Wrong size on BP_Lv3_BaseCar_C_SetTargetActor");
static_assert(offsetof(BP_Lv3_BaseCar_C_SetTargetActor, Traget) == 0x000000, "Member 'BP_Lv3_BaseCar_C_SetTargetActor::Traget' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SetTargetActor, ChangeTargetOffset) == 0x000008, "Member 'BP_Lv3_BaseCar_C_SetTargetActor::ChangeTargetOffset' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SetTargetActor, TargetOffset) == 0x00000C, "Member 'BP_Lv3_BaseCar_C_SetTargetActor::TargetOffset' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.MCEngineSound
// 0x0008 (0x0008 - 0x0000)
struct BP_Lv3_BaseCar_C_MCEngineSound final
{
public:
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lv3_BaseCar_C_MCEngineSound) == 0x000004, "Wrong alignment on BP_Lv3_BaseCar_C_MCEngineSound");
static_assert(sizeof(BP_Lv3_BaseCar_C_MCEngineSound) == 0x000008, "Wrong size on BP_Lv3_BaseCar_C_MCEngineSound");
static_assert(offsetof(BP_Lv3_BaseCar_C_MCEngineSound, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000000, "Member 'BP_Lv3_BaseCar_C_MCEngineSound::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_MCEngineSound, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'BP_Lv3_BaseCar_C_MCEngineSound::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.GetRandomSound
// 0x0030 (0x0030 - 0x0000)
struct BP_Lv3_BaseCar_C_GetRandomSound final
{
public:
	TArray<class USoundBase*>                     NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class USoundBase*                             NewParam1;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv3_BaseCar_C_GetRandomSound) == 0x000008, "Wrong alignment on BP_Lv3_BaseCar_C_GetRandomSound");
static_assert(sizeof(BP_Lv3_BaseCar_C_GetRandomSound) == 0x000030, "Wrong size on BP_Lv3_BaseCar_C_GetRandomSound");
static_assert(offsetof(BP_Lv3_BaseCar_C_GetRandomSound, NewParam) == 0x000000, "Member 'BP_Lv3_BaseCar_C_GetRandomSound::NewParam' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_GetRandomSound, NewParam1) == 0x000010, "Member 'BP_Lv3_BaseCar_C_GetRandomSound::NewParam1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_GetRandomSound, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_Lv3_BaseCar_C_GetRandomSound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_GetRandomSound, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_Lv3_BaseCar_C_GetRandomSound::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_GetRandomSound, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000020, "Member 'BP_Lv3_BaseCar_C_GetRandomSound::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_GetRandomSound, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Lv3_BaseCar_C_GetRandomSound::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.SpawnHitSound
// 0x0070 (0x0070 - 0x0000)
struct BP_Lv3_BaseCar_C_SpawnHitSound final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Lv3_BaseCar_C*                      K2Node_DynamicCast_AsBP_Lv_3_Base_Car;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CallFunc_GetRandomSound_NewParam1;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetRandomSound_NewParam11;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue1;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnParticle_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lv3_BaseCar_C_SpawnHitSound) == 0x000008, "Wrong alignment on BP_Lv3_BaseCar_C_SpawnHitSound");
static_assert(sizeof(BP_Lv3_BaseCar_C_SpawnHitSound) == 0x000070, "Wrong size on BP_Lv3_BaseCar_C_SpawnHitSound");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnHitSound, HitActor) == 0x000000, "Member 'BP_Lv3_BaseCar_C_SpawnHitSound::HitActor' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnHitSound, K2Node_DynamicCast_AsBP_Lv_3_Base_Car) == 0x000008, "Member 'BP_Lv3_BaseCar_C_SpawnHitSound::K2Node_DynamicCast_AsBP_Lv_3_Base_Car' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnHitSound, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_Lv3_BaseCar_C_SpawnHitSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnHitSound, CallFunc_GetRandomSound_NewParam1) == 0x000018, "Member 'BP_Lv3_BaseCar_C_SpawnHitSound::CallFunc_GetRandomSound_NewParam1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnHitSound, CallFunc_GetRandomSound_NewParam11) == 0x000020, "Member 'BP_Lv3_BaseCar_C_SpawnHitSound::CallFunc_GetRandomSound_NewParam11' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnHitSound, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000028, "Member 'BP_Lv3_BaseCar_C_SpawnHitSound::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnHitSound, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000038, "Member 'BP_Lv3_BaseCar_C_SpawnHitSound::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnHitSound, CallFunc_ComposeRotators_ReturnValue) == 0x000040, "Member 'BP_Lv3_BaseCar_C_SpawnHitSound::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnHitSound, CallFunc_SpawnSoundAttached_ReturnValue1) == 0x000050, "Member 'BP_Lv3_BaseCar_C_SpawnHitSound::CallFunc_SpawnSoundAttached_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnHitSound, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_Lv3_BaseCar_C_SpawnHitSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnHitSound, CallFunc_SpawnParticle_ReturnValue) == 0x000060, "Member 'BP_Lv3_BaseCar_C_SpawnHitSound::CallFunc_SpawnParticle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_SpawnHitSound, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'BP_Lv3_BaseCar_C_SpawnHitSound::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Lv3_BaseCar.BP_Lv3_BaseCar_C.TaillightController
// 0x0040 (0x0040 - 0x0000)
struct BP_Lv3_BaseCar_C_TaillightController final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Right;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Left;                                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lv3_BaseCar_C_TaillightController) == 0x000004, "Wrong alignment on BP_Lv3_BaseCar_C_TaillightController");
static_assert(sizeof(BP_Lv3_BaseCar_C_TaillightController) == 0x000040, "Wrong size on BP_Lv3_BaseCar_C_TaillightController");
static_assert(offsetof(BP_Lv3_BaseCar_C_TaillightController, Delta) == 0x000000, "Member 'BP_Lv3_BaseCar_C_TaillightController::Delta' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_TaillightController, Right) == 0x000004, "Member 'BP_Lv3_BaseCar_C_TaillightController::Right' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_TaillightController, Left) == 0x000008, "Member 'BP_Lv3_BaseCar_C_TaillightController::Left' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_TaillightController, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00000C, "Member 'BP_Lv3_BaseCar_C_TaillightController::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_TaillightController, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_Lv3_BaseCar_C_TaillightController::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_TaillightController, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x00001C, "Member 'BP_Lv3_BaseCar_C_TaillightController::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_TaillightController, CallFunc_BreakRotator_Roll) == 0x000028, "Member 'BP_Lv3_BaseCar_C_TaillightController::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_TaillightController, CallFunc_BreakRotator_Pitch) == 0x00002C, "Member 'BP_Lv3_BaseCar_C_TaillightController::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_TaillightController, CallFunc_BreakRotator_Yaw) == 0x000030, "Member 'BP_Lv3_BaseCar_C_TaillightController::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_TaillightController, CallFunc_Less_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_Lv3_BaseCar_C_TaillightController::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_TaillightController, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x000035, "Member 'BP_Lv3_BaseCar_C_TaillightController::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_TaillightController, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x000036, "Member 'BP_Lv3_BaseCar_C_TaillightController::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_TaillightController, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_Lv3_BaseCar_C_TaillightController::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_BaseCar_C_TaillightController, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BP_Lv3_BaseCar_C_TaillightController::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PVP_FrontServerConnection

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SiliconRising_structs.hpp"
#include "SiliconRising_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PVP_FrontServerConnection.BP_PVP_FrontServerConnection_C
// 0x0158 (0x05B0 - 0x0458)
class ABP_PVP_FrontServerConnection_C final : public ATcpPvpClientToBackendServer
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0458(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          AlreadyConnected;                                  // 0x0468(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FYYMsgIdent                            PlayerID;                                          // 0x0470(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FYYMsgReqAckRoomInfo                   CurrentRoomInfo;                                   // 0x0480(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FYYMsgData                             SendMsg;                                           // 0x0500(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	UMulticastDelegateProperty_                   OnLogin;                                           // 0x0518(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnCreateRoom;                                      // 0x0528(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnEnterRoom;                                       // 0x0538(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnLeaveRoom;                                       // 0x0548(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnRoomList;                                        // 0x0558(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnRoomInfo;                                        // 0x0568(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnRoomStart;                                       // 0x0578(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnQuickEnter;                                      // 0x0588(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsConnected;                                       // 0x0598(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_599[0x7];                                      // 0x0599(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnAlreadyConnected;                                // 0x05A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_BP_PVP_FrontServerConnection(int32 EntryPoint);
	void Evt_OnConnected();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Evt_OnDisconnect();
	void SendReqQuickEnter(const struct FYYMsgIdent& Player_ID);
	void SendReqRoomInfo(const struct FYYMsgReqAckRoomInfo& RoomInfo);
	void Evt_ReceiveMessage(const struct FYYMsgData& Message);
	void SendReqRoomStart(const class FString& RoomName);
	void SendReqLeaveRoom();
	void SendReqEnterRoom(const class FString& Room_Name, int32 Team, int32 Position);
	void SendReqRoomList(int32 page, int32 Page_Size);
	void OnSendMessage();
	void SendReqCreateRoom(const class FString& Room_Name, const class FString& Password);
	void UserConstructionScript();
	void CountPlayers(const struct FYYMsgReqAckRoomInfo& RoomInfo, int32* Count);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PVP_FrontServerConnection_C">();
	}
	static class ABP_PVP_FrontServerConnection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PVP_FrontServerConnection_C>();
	}
};
static_assert(alignof(ABP_PVP_FrontServerConnection_C) == 0x000008, "Wrong alignment on ABP_PVP_FrontServerConnection_C");
static_assert(sizeof(ABP_PVP_FrontServerConnection_C) == 0x0005B0, "Wrong size on ABP_PVP_FrontServerConnection_C");
static_assert(offsetof(ABP_PVP_FrontServerConnection_C, UberGraphFrame) == 0x000458, "Member 'ABP_PVP_FrontServerConnection_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PVP_FrontServerConnection_C, DefaultSceneRoot) == 0x000460, "Member 'ABP_PVP_FrontServerConnection_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_PVP_FrontServerConnection_C, AlreadyConnected) == 0x000468, "Member 'ABP_PVP_FrontServerConnection_C::AlreadyConnected' has a wrong offset!");
static_assert(offsetof(ABP_PVP_FrontServerConnection_C, PlayerID) == 0x000470, "Member 'ABP_PVP_FrontServerConnection_C::PlayerID' has a wrong offset!");
static_assert(offsetof(ABP_PVP_FrontServerConnection_C, CurrentRoomInfo) == 0x000480, "Member 'ABP_PVP_FrontServerConnection_C::CurrentRoomInfo' has a wrong offset!");
static_assert(offsetof(ABP_PVP_FrontServerConnection_C, SendMsg) == 0x000500, "Member 'ABP_PVP_FrontServerConnection_C::SendMsg' has a wrong offset!");
static_assert(offsetof(ABP_PVP_FrontServerConnection_C, OnLogin) == 0x000518, "Member 'ABP_PVP_FrontServerConnection_C::OnLogin' has a wrong offset!");
static_assert(offsetof(ABP_PVP_FrontServerConnection_C, OnCreateRoom) == 0x000528, "Member 'ABP_PVP_FrontServerConnection_C::OnCreateRoom' has a wrong offset!");
static_assert(offsetof(ABP_PVP_FrontServerConnection_C, OnEnterRoom) == 0x000538, "Member 'ABP_PVP_FrontServerConnection_C::OnEnterRoom' has a wrong offset!");
static_assert(offsetof(ABP_PVP_FrontServerConnection_C, OnLeaveRoom) == 0x000548, "Member 'ABP_PVP_FrontServerConnection_C::OnLeaveRoom' has a wrong offset!");
static_assert(offsetof(ABP_PVP_FrontServerConnection_C, OnRoomList) == 0x000558, "Member 'ABP_PVP_FrontServerConnection_C::OnRoomList' has a wrong offset!");
static_assert(offsetof(ABP_PVP_FrontServerConnection_C, OnRoomInfo) == 0x000568, "Member 'ABP_PVP_FrontServerConnection_C::OnRoomInfo' has a wrong offset!");
static_assert(offsetof(ABP_PVP_FrontServerConnection_C, OnRoomStart) == 0x000578, "Member 'ABP_PVP_FrontServerConnection_C::OnRoomStart' has a wrong offset!");
static_assert(offsetof(ABP_PVP_FrontServerConnection_C, OnQuickEnter) == 0x000588, "Member 'ABP_PVP_FrontServerConnection_C::OnQuickEnter' has a wrong offset!");
static_assert(offsetof(ABP_PVP_FrontServerConnection_C, IsConnected) == 0x000598, "Member 'ABP_PVP_FrontServerConnection_C::IsConnected' has a wrong offset!");
static_assert(offsetof(ABP_PVP_FrontServerConnection_C, OnAlreadyConnected) == 0x0005A0, "Member 'ABP_PVP_FrontServerConnection_C::OnAlreadyConnected' has a wrong offset!");

}


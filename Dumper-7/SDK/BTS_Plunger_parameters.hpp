#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_Plunger

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTS_Plunger.BTS_Plunger_C.ExecuteUbergraph_BTS_Plunger
// 0x0080 (0x0080 - 0x0000)
struct BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Lv2_NPCBase_C*                      K2Node_DynamicCast_AsBP_Lv_2_NPCBase;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger) == 0x000008, "Wrong alignment on BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger");
static_assert(sizeof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger) == 0x000080, "Wrong size on BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger");
static_assert(offsetof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger, EntryPoint) == 0x000000, "Member 'BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger, CallFunc_BreakVector_X) == 0x000014, "Member 'BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger, CallFunc_BreakVector_Y) == 0x000018, "Member 'BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger, CallFunc_BreakVector_Z) == 0x00001C, "Member 'BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger, CallFunc_IsValid_ReturnValue1) == 0x000020, "Member 'BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000024, "Member 'BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger, CallFunc_BreakVector_X1) == 0x000030, "Member 'BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger, CallFunc_BreakVector_Y1) == 0x000034, "Member 'BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger, CallFunc_BreakVector_Z1) == 0x000038, "Member 'BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger, CallFunc_MakeVector_ReturnValue) == 0x00003C, "Member 'BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger, K2Node_Event_OwnerController) == 0x000048, "Member 'BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger, K2Node_Event_ControlledPawn) == 0x000050, "Member 'BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger, K2Node_Event_DeltaSeconds) == 0x000058, "Member 'BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger, K2Node_DynamicCast_AsBP_Lv_2_NPCBase) == 0x000060, "Member 'BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger::K2Node_DynamicCast_AsBP_Lv_2_NPCBase' has a wrong offset!");
static_assert(offsetof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x00006C, "Member 'BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000078, "Member 'BTS_Plunger_C_ExecuteUbergraph_BTS_Plunger::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");

// Function BTS_Plunger.BTS_Plunger_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTS_Plunger_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_Plunger_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTS_Plunger_C_ReceiveTickAI");
static_assert(sizeof(BTS_Plunger_C_ReceiveTickAI) == 0x000018, "Wrong size on BTS_Plunger_C_ReceiveTickAI");
static_assert(offsetof(BTS_Plunger_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTS_Plunger_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_Plunger_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTS_Plunger_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_Plunger_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTS_Plunger_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

}


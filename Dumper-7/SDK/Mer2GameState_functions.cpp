#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mer2GameState

#include "Basic.hpp"

#include "Mer2GameState_classes.hpp"
#include "Mer2GameState_parameters.hpp"


namespace SDK
{

// Function Mer2GameState.Mer2GameState_C.ExecuteUbergraph_Mer2GameState
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMer2GameState_C::ExecuteUbergraph_Mer2GameState(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameState_C", "ExecuteUbergraph_Mer2GameState");

	Params::Mer2GameState_C_ExecuteUbergraph_Mer2GameState Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameState.Mer2GameState_C.Lv2Alert
// (BlueprintCallable, BlueprintEvent)

void AMer2GameState_C::Lv2Alert()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameState_C", "Lv2Alert");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameState.Mer2GameState_C.AddPassByCarCount
// (BlueprintCallable, BlueprintEvent)

void AMer2GameState_C::AddPassByCarCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameState_C", "AddPassByCarCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameState.Mer2GameState_C.UnlockAssassin
// (BlueprintCallable, BlueprintEvent)

void AMer2GameState_C::UnlockAssassin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameState_C", "UnlockAssassin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameState.Mer2GameState_C.AddBreakCarGlassCount
// (BlueprintCallable, BlueprintEvent)

void AMer2GameState_C::AddBreakCarGlassCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameState_C", "AddBreakCarGlassCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameState.Mer2GameState_C.AddBossJumpDodgeCount
// (BlueprintCallable, BlueprintEvent)

void AMer2GameState_C::AddBossJumpDodgeCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameState_C", "AddBossJumpDodgeCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameState.Mer2GameState_C.AddGunAyCount
// (BlueprintCallable, BlueprintEvent)

void AMer2GameState_C::AddGunAyCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameState_C", "AddGunAyCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameState.Mer2GameState_C.AddRevolveCount
// (BlueprintCallable, BlueprintEvent)

void AMer2GameState_C::AddRevolveCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameState_C", "AddRevolveCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameState.Mer2GameState_C.AddPlayerHitCount
// (BlueprintCallable, BlueprintEvent)

void AMer2GameState_C::AddPlayerHitCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameState_C", "AddPlayerHitCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameState.Mer2GameState_C.AddHitBossMissileCount
// (BlueprintCallable, BlueprintEvent)

void AMer2GameState_C::AddHitBossMissileCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameState_C", "AddHitBossMissileCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameState.Mer2GameState_C.AddHitMissileCount
// (BlueprintCallable, BlueprintEvent)

void AMer2GameState_C::AddHitMissileCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameState_C", "AddHitMissileCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameState.Mer2GameState_C.AddHeadShotCount
// (BlueprintCallable, BlueprintEvent)

void AMer2GameState_C::AddHeadShotCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameState_C", "AddHeadShotCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameState.Mer2GameState_C.AddHPBonusGetCount
// (BlueprintCallable, BlueprintEvent)

void AMer2GameState_C::AddHPBonusGetCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameState_C", "AddHPBonusGetCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameState.Mer2GameState_C.AddAchievementLevel2KillBird
// (BlueprintCallable, BlueprintEvent)

void AMer2GameState_C::AddAchievementLevel2KillBird()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameState_C", "AddAchievementLevel2KillBird");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameState.Mer2GameState_C.AddAchievementKillCount
// (BlueprintCallable, BlueprintEvent)

void AMer2GameState_C::AddAchievementKillCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameState_C", "AddAchievementKillCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameState.Mer2GameState_C.SendPlayerID
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    nickName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsServer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMer2GameState_C::SendPlayerID(const class FString& ID, const class FString& nickName, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameState_C", "SendPlayerID");

	Params::Mer2GameState_C_SendPlayerID Parms{};

	Parms.ID = std::move(ID);
	Parms.nickName = std::move(nickName);
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameState.Mer2GameState_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMer2GameState_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameState_C", "ReceiveTick");

	Params::Mer2GameState_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameState.Mer2GameState_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AMer2GameState_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameState_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameState.Mer2GameState_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AMer2GameState_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameState_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameState.Mer2GameState_C.ClearScore
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OneP                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMer2GameState_C::ClearScore(bool OneP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameState_C", "ClearScore");

	Params::Mer2GameState_C_ClearScore Parms{};

	Parms.OneP = OneP;

	UObject::ProcessEvent(Func, &Parms);
}

}


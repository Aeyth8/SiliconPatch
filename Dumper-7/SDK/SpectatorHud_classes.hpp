#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpectatorHud

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SpectatorHud.SpectatorHud_C
// 0x00D8 (0x02E0 - 0x0208)
class USpectatorHud_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0208(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             Accuracy;                                          // 0x0210(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             AccuracyText;                                      // 0x0218(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Bonus;                                             // 0x0220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BonusText;                                         // 0x0228(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BulletScore;                                       // 0x0230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_1;                                     // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GameOver;                                          // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           GameOverCanvas;                                    // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             gameTime;                                          // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HeadShot;                                          // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HeadShotText;                                      // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_221;                                         // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 InPlay;                                            // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           InPlayCanvas;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Kill;                                              // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             KillText;                                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LeaderboardText;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 logo;                                              // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPCModeHud_C*                           PCModeHud;                                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           RankList;                                          // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ScoreText;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TotalScore;                                        // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TotalScoreText;                                    // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         Time;                                              // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             MyOwner;                                           // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInPlay;                                          // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShowInMainmenu;                                  // 0x02D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_SpectatorHud(int32 EntryPoint);
	void OnSetLeaderboardData(TArray<struct FLeaderBoardData>& LeaderBoardData);
	void ChangeHUDStatus(bool IsInPlay_0);
	void ChangeHUDMode(bool IsShowDebug);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void UpdateText();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SpectatorHud_C">();
	}
	static class USpectatorHud_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpectatorHud_C>();
	}
};
static_assert(alignof(USpectatorHud_C) == 0x000008, "Wrong alignment on USpectatorHud_C");
static_assert(sizeof(USpectatorHud_C) == 0x0002E0, "Wrong size on USpectatorHud_C");
static_assert(offsetof(USpectatorHud_C, UberGraphFrame) == 0x000208, "Member 'USpectatorHud_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, Accuracy) == 0x000210, "Member 'USpectatorHud_C::Accuracy' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, AccuracyText) == 0x000218, "Member 'USpectatorHud_C::AccuracyText' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, Bonus) == 0x000220, "Member 'USpectatorHud_C::Bonus' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, BonusText) == 0x000228, "Member 'USpectatorHud_C::BonusText' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, BulletScore) == 0x000230, "Member 'USpectatorHud_C::BulletScore' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, CanvasPanel_1) == 0x000238, "Member 'USpectatorHud_C::CanvasPanel_1' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, GameOver) == 0x000240, "Member 'USpectatorHud_C::GameOver' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, GameOverCanvas) == 0x000248, "Member 'USpectatorHud_C::GameOverCanvas' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, gameTime) == 0x000250, "Member 'USpectatorHud_C::gameTime' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, HeadShot) == 0x000258, "Member 'USpectatorHud_C::HeadShot' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, HeadShotText) == 0x000260, "Member 'USpectatorHud_C::HeadShotText' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, Image_221) == 0x000268, "Member 'USpectatorHud_C::Image_221' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, InPlay) == 0x000270, "Member 'USpectatorHud_C::InPlay' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, InPlayCanvas) == 0x000278, "Member 'USpectatorHud_C::InPlayCanvas' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, Kill) == 0x000280, "Member 'USpectatorHud_C::Kill' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, KillText) == 0x000288, "Member 'USpectatorHud_C::KillText' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, LeaderboardText) == 0x000290, "Member 'USpectatorHud_C::LeaderboardText' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, logo) == 0x000298, "Member 'USpectatorHud_C::logo' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, PCModeHud) == 0x0002A0, "Member 'USpectatorHud_C::PCModeHud' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, RankList) == 0x0002A8, "Member 'USpectatorHud_C::RankList' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, ScoreText) == 0x0002B0, "Member 'USpectatorHud_C::ScoreText' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, TotalScore) == 0x0002B8, "Member 'USpectatorHud_C::TotalScore' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, TotalScoreText) == 0x0002C0, "Member 'USpectatorHud_C::TotalScoreText' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, Time) == 0x0002C8, "Member 'USpectatorHud_C::Time' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, MyOwner) == 0x0002D0, "Member 'USpectatorHud_C::MyOwner' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, IsInPlay) == 0x0002D8, "Member 'USpectatorHud_C::IsInPlay' has a wrong offset!");
static_assert(offsetof(USpectatorHud_C, IsShowInMainmenu) == 0x0002D9, "Member 'USpectatorHud_C::IsShowInMainmenu' has a wrong offset!");

}


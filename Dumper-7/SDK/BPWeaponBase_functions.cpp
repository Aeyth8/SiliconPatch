#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPWeaponBase

#include "Basic.hpp"

#include "BPWeaponBase_classes.hpp"
#include "BPWeaponBase_parameters.hpp"


namespace SDK
{

// Function BPWeaponBase.BPWeaponBase_C.ExecuteUbergraph_BPWeaponBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPWeaponBase_C::ExecuteUbergraph_BPWeaponBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "ExecuteUbergraph_BPWeaponBase");

	Params::BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeaponBase.BPWeaponBase_C.OnPullBoltHandOn
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPWeaponBase_C::OnPullBoltHandOn(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "OnPullBoltHandOn");

	Params::BPWeaponBase_C_OnPullBoltHandOn Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeaponBase.BPWeaponBase_C.Evt_ReloadLeftOneBullet
// (BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::Evt_ReloadLeftOneBullet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "Evt_ReloadLeftOneBullet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.HightlightBolt
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPWeaponBase_C::HightlightBolt(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "HightlightBolt");

	Params::BPWeaponBase_C_HightlightBolt Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeaponBase.BPWeaponBase_C.DoOnInsertClip_Base
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWpn_Clip_C*                      Clip                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDelay                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPWeaponBase_C::DoOnInsertClip_Base(class AWpn_Clip_C* Clip, bool IsDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "DoOnInsertClip_Base");

	Params::BPWeaponBase_C_DoOnInsertClip_Base Parms{};

	Parms.Clip = Clip;
	Parms.IsDelay = IsDelay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeaponBase.BPWeaponBase_C.CustomEvent_5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWpn_Clip_C*                      Clip                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDelay                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPWeaponBase_C::CustomEvent_5(class AWpn_Clip_C* Clip, bool IsDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "CustomEvent_5");

	Params::BPWeaponBase_C_CustomEvent_5 Parms{};

	Parms.Clip = Clip;
	Parms.IsDelay = IsDelay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeaponBase.BPWeaponBase_C.SwitchLight
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPWeaponBase_C::SwitchLight(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "SwitchLight");

	Params::BPWeaponBase_C_SwitchLight Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeaponBase.BPWeaponBase_C.BothHandHold
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHold                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPWeaponBase_C::BothHandHold(bool IsHold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "BothHandHold");

	Params::BPWeaponBase_C_BothHandHold Parms{};

	Parms.IsHold = IsHold;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeaponBase.BPWeaponBase_C.CheatOnInsertClip
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Clip                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPWeaponBase_C::CheatOnInsertClip(class AActor* Clip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "CheatOnInsertClip");

	Params::BPWeaponBase_C_CheatOnInsertClip Parms{};

	Parms.Clip = Clip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeaponBase.BPWeaponBase_C.CustomEvent_4
// (BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::CustomEvent_4()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "CustomEvent_4");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.CustomEvent_3
// (BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::CustomEvent_3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "CustomEvent_3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPWeaponBase_C::BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature");

	Params::BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeaponBase.BPWeaponBase_C.BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABPWeaponBase_C::BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeaponBase.BPWeaponBase_C.Evt_PullTrigger
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::Evt_PullTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "Evt_PullTrigger");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.Evt_ClipEmpty
// (BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::Evt_ClipEmpty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "Evt_ClipEmpty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.Evt_StopFire
// (BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::Evt_StopFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "Evt_StopFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABPWeaponBase_C::BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BPWeaponBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeaponBase.BPWeaponBase_C.ResetPullBolt
// (BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::ResetPullBolt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "ResetPullBolt");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.CustomEvent_1
// (BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::CustomEvent_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "CustomEvent_1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.Evt_EndInfinite
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::Evt_EndInfinite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "Evt_EndInfinite");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.Evt_StartInfinite
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::Evt_StartInfinite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "Evt_StartInfinite");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.FlyToTarget
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  TargetComponent_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFromRightHand                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPWeaponBase_C::FlyToTarget(class USceneComponent* TargetComponent_0, bool IsFromRightHand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "FlyToTarget");

	Params::BPWeaponBase_C_FlyToTarget Parms{};

	Parms.TargetComponent_0 = TargetComponent_0;
	Parms.IsFromRightHand = IsFromRightHand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeaponBase.BPWeaponBase_C.InitPR
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::InitPR()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "InitPR");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.Evt_ShotHaptic
// (BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::Evt_ShotHaptic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "Evt_ShotHaptic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.OnLineSpawnClip
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::OnLineSpawnClip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "OnLineSpawnClip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.Evt_SpawnClip
// (BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::Evt_SpawnClip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "Evt_SpawnClip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.Evt_DropWeapon
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::Evt_DropWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "Evt_DropWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.BP_PlayShellDropVfx
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UParticleSystem*                  VFX                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FTransform&                T                                                      (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABPWeaponBase_C::BP_PlayShellDropVfx(class UParticleSystem* VFX, const struct FTransform& T)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "BP_PlayShellDropVfx");

	Params::BPWeaponBase_C_BP_PlayShellDropVfx Parms{};

	Parms.VFX = VFX;
	Parms.T = std::move(T);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeaponBase.BPWeaponBase_C.OnLineGripped
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::OnLineGripped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "OnLineGripped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.OnLineTriggerReleased
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::OnLineTriggerReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "OnLineTriggerReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.OnLineReload
// (BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::OnLineReload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "OnLineReload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.OnLineFire
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::OnLineFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "OnLineFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.OnLineTriggerPull
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFromRightHand                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           hand                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPWeaponBase_C::OnLineTriggerPull(bool IsFromRightHand, class AActor* hand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "OnLineTriggerPull");

	Params::BPWeaponBase_C_OnLineTriggerPull Parms{};

	Parms.IsFromRightHand = IsFromRightHand;
	Parms.hand = hand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeaponBase.BPWeaponBase_C.Evt_Fire
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::Evt_Fire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "Evt_Fire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.RecoilTimeLine
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::RecoilTimeLine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "RecoilTimeLine");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.UpdateUI
// (BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::UpdateUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "UpdateUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EmitterTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ParticleTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Normal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPhysicalMaterial*                PhysMat                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPWeaponBase_C::CustomEvent_0(class FName EventName, float EmitterTime, int32 ParticleTime, const struct FVector& Location, const struct FVector& Velocity, const struct FVector& Direction, const struct FVector& Normal, class FName BoneName, class UPhysicalMaterial* PhysMat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "CustomEvent_0");

	Params::BPWeaponBase_C_CustomEvent_0 Parms{};

	Parms.EventName = EventName;
	Parms.EmitterTime = EmitterTime;
	Parms.ParticleTime = ParticleTime;
	Parms.Location = std::move(Location);
	Parms.Velocity = std::move(Velocity);
	Parms.Direction = std::move(Direction);
	Parms.Normal = std::move(Normal);
	Parms.BoneName = BoneName;
	Parms.PhysMat = PhysMat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeaponBase.BPWeaponBase_C.Evt_Reload
// (BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::Evt_Reload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "Evt_Reload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.Evt_RecoilTimeLine
// (BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::Evt_RecoilTimeLine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "Evt_RecoilTimeLine");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABPWeaponBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.BndEvt__BP_InteractionComponent_K2Node_ComponentBoundEvent_3_OnTriggerGripped__DelegateSignature
// (BlueprintEvent)

void ABPWeaponBase_C::BndEvt__BP_InteractionComponent_K2Node_ComponentBoundEvent_3_OnTriggerGripped__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "BndEvt__BP_InteractionComponent_K2Node_ComponentBoundEvent_3_OnTriggerGripped__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.BndEvt__BP_InteractionComponent_K2Node_ComponentBoundEvent_2_OnTriggerReleased__DelegateSignature
// (BlueprintEvent)

void ABPWeaponBase_C::BndEvt__BP_InteractionComponent_K2Node_ComponentBoundEvent_2_OnTriggerReleased__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "BndEvt__BP_InteractionComponent_K2Node_ComponentBoundEvent_2_OnTriggerReleased__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.BndEvt__BP_InteractionComponent_K2Node_ComponentBoundEvent_1_OnTriggerPulled__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    lsFromRightHand                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           hand                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPWeaponBase_C::BndEvt__BP_InteractionComponent_K2Node_ComponentBoundEvent_1_OnTriggerPulled__DelegateSignature(bool lsFromRightHand, class AActor* hand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "BndEvt__BP_InteractionComponent_K2Node_ComponentBoundEvent_1_OnTriggerPulled__DelegateSignature");

	Params::BPWeaponBase_C_BndEvt__BP_InteractionComponent_K2Node_ComponentBoundEvent_1_OnTriggerPulled__DelegateSignature Parms{};

	Parms.lsFromRightHand = lsFromRightHand;
	Parms.hand = hand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeaponBase.BPWeaponBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPWeaponBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "ReceiveTick");

	Params::BPWeaponBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeaponBase.BPWeaponBase_C.SetRenderCustomDepth
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Val                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPWeaponBase_C::SetRenderCustomDepth(bool Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "SetRenderCustomDepth");

	Params::BPWeaponBase_C_SetRenderCustomDepth Parms{};

	Parms.Val = Val;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeaponBase.BPWeaponBase_C.OnPlayPickUpSound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::OnPlayPickUpSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "OnPlayPickUpSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.Recoil Matinee__UpdateFunc
// (BlueprintEvent)

void ABPWeaponBase_C::Recoil_Matinee__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "Recoil Matinee__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.Recoil Matinee__FinishedFunc
// (BlueprintEvent)

void ABPWeaponBase_C::Recoil_Matinee__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "Recoil Matinee__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.SetUIText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLeft                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPWeaponBase_C::SetUIText(bool IsLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "SetUIText");

	Params::BPWeaponBase_C_SetUIText Parms{};

	Parms.IsLeft = IsLeft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPWeaponBase.BPWeaponBase_C.ComputeYawRecoil
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABPWeaponBase_C::ComputeYawRecoil()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "ComputeYawRecoil");

	Params::BPWeaponBase_C_ComputeYawRecoil Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPWeaponBase.BPWeaponBase_C.ComputePitchRecoil
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABPWeaponBase_C::ComputePitchRecoil()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "ComputePitchRecoil");

	Params::BPWeaponBase_C_ComputePitchRecoil Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPWeaponBase.BPWeaponBase_C.ComputePushRecoil
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  Recoil_X_Push_                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPWeaponBase_C::ComputePushRecoil(float* Recoil_X_Push_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "ComputePushRecoil");

	Params::BPWeaponBase_C_ComputePushRecoil Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Recoil_X_Push_ != nullptr)
		*Recoil_X_Push_ = Parms.Recoil_X_Push_;
}


// Function BPWeaponBase.BPWeaponBase_C.ApplyRecoilToTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                GunToWorld                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FTransform*                      NewGunToWorld                                          (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABPWeaponBase_C::ApplyRecoilToTransform(const struct FTransform& GunToWorld, struct FTransform* NewGunToWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "ApplyRecoilToTransform");

	Params::BPWeaponBase_C_ApplyRecoilToTransform Parms{};

	Parms.GunToWorld = std::move(GunToWorld);

	UObject::ProcessEvent(Func, &Parms);

	if (NewGunToWorld != nullptr)
		*NewGunToWorld = std::move(Parms.NewGunToWorld);
}


// Function BPWeaponBase.BPWeaponBase_C.InitRelativePR
// (Public, BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::InitRelativePR()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "InitRelativePR");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.SpawnClip
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::SpawnClip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "SpawnClip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.DropClip
// (Public, BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::DropClip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "DropClip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.GetLeftBulletInBag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPWeaponBase_C::GetLeftBulletInBag(int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "GetLeftBulletInBag");

	Params::BPWeaponBase_C_GetLeftBulletInBag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function BPWeaponBase.BPWeaponBase_C.PlayPickUpSound
// (Public, BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::PlayPickUpSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "PlayPickUpSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.OnRep_ClipClass
// (BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::OnRep_ClipClass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "OnRep_ClipClass");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.OnRep_InitialRecoilSettings
// (BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::OnRep_InitialRecoilSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "OnRep_InitialRecoilSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.AjustUI
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::AjustUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "AjustUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.CheckSize
// (Public, BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::CheckSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "CheckSize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.ComputeRollRecoil
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABPWeaponBase_C::ComputeRollRecoil()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "ComputeRollRecoil");

	Params::BPWeaponBase_C_ComputeRollRecoil Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPWeaponBase.BPWeaponBase_C.OnRep_ClipActor
// (BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::OnRep_ClipActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "OnRep_ClipActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPWeaponBase.BPWeaponBase_C.GetThrowBulletDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPWeaponBase_C::GetThrowBulletDirection(struct FVector* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "GetThrowBulletDirection");

	Params::BPWeaponBase_C_GetThrowBulletDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);
}


// Function BPWeaponBase.BPWeaponBase_C.GetBoltLength
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPWeaponBase_C::GetBoltLength(float* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "GetBoltLength");

	Params::BPWeaponBase_C_GetBoltLength Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BPWeaponBase.BPWeaponBase_C.PullBoltMaxLength
// (Public, BlueprintCallable, BlueprintEvent)

void ABPWeaponBase_C::PullBoltMaxLength()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPWeaponBase_C", "PullBoltMaxLength");

	UObject::ProcessEvent(Func, nullptr);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GoogleARCoreBase

#include "Basic.hpp"

#include "GoogleARCoreBase_classes.hpp"
#include "GoogleARCoreBase_parameters.hpp"


namespace SDK
{

// Function GoogleARCoreBase.GoogleARCoreCameraIntrinsics.GetFocalLength
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                                  OutFX                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutFY                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGoogleARCoreCameraIntrinsics::GetFocalLength(float* OutFX, float* OutFY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoogleARCoreCameraIntrinsics", "GetFocalLength");

	Params::GoogleARCoreCameraIntrinsics_GetFocalLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFX != nullptr)
		*OutFX = Parms.OutFX;

	if (OutFY != nullptr)
		*OutFY = Parms.OutFY;
}


// Function GoogleARCoreBase.GoogleARCoreCameraIntrinsics.GetImageDimensions
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32*                                  OutWidth                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutHeight                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGoogleARCoreCameraIntrinsics::GetImageDimensions(int32* OutWidth, int32* OutHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoogleARCoreCameraIntrinsics", "GetImageDimensions");

	Params::GoogleARCoreCameraIntrinsics_GetImageDimensions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWidth != nullptr)
		*OutWidth = Parms.OutWidth;

	if (OutHeight != nullptr)
		*OutHeight = Parms.OutHeight;
}


// Function GoogleARCoreBase.GoogleARCoreCameraIntrinsics.GetPrincipalPoint
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                                  OutCX                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutCY                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGoogleARCoreCameraIntrinsics::GetPrincipalPoint(float* OutCX, float* OutCY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoogleARCoreCameraIntrinsics", "GetPrincipalPoint");

	Params::GoogleARCoreCameraIntrinsics_GetPrincipalPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCX != nullptr)
		*OutCX = Parms.OutCX;

	if (OutCY != nullptr)
		*OutCY = Parms.OutCY;
}


// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.AcquireCameraImage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UGoogleARCoreCameraImage**        OutLatestCameraImage                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGoogleARCoreFunctionStatus             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGoogleARCoreFunctionStatus UGoogleARCoreFrameFunctionLibrary::AcquireCameraImage(class UGoogleARCoreCameraImage** OutLatestCameraImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreFrameFunctionLibrary", "AcquireCameraImage");

	Params::GoogleARCoreFrameFunctionLibrary_AcquireCameraImage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLatestCameraImage != nullptr)
		*OutLatestCameraImage = Parms.OutLatestCameraImage;

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.AcquirePointCloud
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UGoogleARCorePointCloud**         OutLatestPointCloud                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGoogleARCoreFunctionStatus             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGoogleARCoreFunctionStatus UGoogleARCoreFrameFunctionLibrary::AcquirePointCloud(class UGoogleARCorePointCloud** OutLatestPointCloud)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreFrameFunctionLibrary", "AcquirePointCloud");

	Params::GoogleARCoreFrameFunctionLibrary_AcquirePointCloud Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLatestPointCloud != nullptr)
		*OutLatestPointCloud = Parms.OutLatestPointCloud;

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.ARCoreLineTrace
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 ScreenPosition                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSet<EGoogleARCoreLineTraceChannel>&TraceChannels                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FARTraceResult>*          OutHitResults                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGoogleARCoreFrameFunctionLibrary::ARCoreLineTrace(class UObject* WorldContextObject, const struct FVector2D& ScreenPosition, const TSet<EGoogleARCoreLineTraceChannel>& TraceChannels, TArray<struct FARTraceResult>* OutHitResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreFrameFunctionLibrary", "ARCoreLineTrace");

	Params::GoogleARCoreFrameFunctionLibrary_ARCoreLineTrace Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ScreenPosition = std::move(ScreenPosition);
	Parms.TraceChannels = std::move(TraceChannels);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitResults != nullptr)
		*OutHitResults = std::move(Parms.OutHitResults);

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.ARCoreLineTraceRay
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Start                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   End                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSet<EGoogleARCoreLineTraceChannel>&TraceChannels                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FARTraceResult>*          OutHitResults                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGoogleARCoreFrameFunctionLibrary::ARCoreLineTraceRay(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const TSet<EGoogleARCoreLineTraceChannel>& TraceChannels, TArray<struct FARTraceResult>* OutHitResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreFrameFunctionLibrary", "ARCoreLineTraceRay");

	Params::GoogleARCoreFrameFunctionLibrary_ARCoreLineTraceRay Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.TraceChannels = std::move(TraceChannels);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitResults != nullptr)
		*OutHitResults = std::move(Parms.OutHitResults);

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.GetCameraImageIntrinsics
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UGoogleARCoreCameraIntrinsics**   OutCameraIntrinsics                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGoogleARCoreFunctionStatus             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGoogleARCoreFunctionStatus UGoogleARCoreFrameFunctionLibrary::GetCameraImageIntrinsics(class UGoogleARCoreCameraIntrinsics** OutCameraIntrinsics)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreFrameFunctionLibrary", "GetCameraImageIntrinsics");

	Params::GoogleARCoreFrameFunctionLibrary_GetCameraImageIntrinsics Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCameraIntrinsics != nullptr)
		*OutCameraIntrinsics = Parms.OutCameraIntrinsics;

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.GetCameraTextureIntrinsics
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UGoogleARCoreCameraIntrinsics**   OutCameraIntrinsics                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGoogleARCoreFunctionStatus             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGoogleARCoreFunctionStatus UGoogleARCoreFrameFunctionLibrary::GetCameraTextureIntrinsics(class UGoogleARCoreCameraIntrinsics** OutCameraIntrinsics)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreFrameFunctionLibrary", "GetCameraTextureIntrinsics");

	Params::GoogleARCoreFrameFunctionLibrary_GetCameraTextureIntrinsics Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCameraIntrinsics != nullptr)
		*OutCameraIntrinsics = Parms.OutCameraIntrinsics;

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.GetLightEstimation
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGoogleARCoreLightEstimate*      OutLightEstimate                                       (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UGoogleARCoreFrameFunctionLibrary::GetLightEstimation(struct FGoogleARCoreLightEstimate* OutLightEstimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreFrameFunctionLibrary", "GetLightEstimation");

	Params::GoogleARCoreFrameFunctionLibrary_GetLightEstimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLightEstimate != nullptr)
		*OutLightEstimate = std::move(Parms.OutLightEstimate);
}


// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.GetPointCloud
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UGoogleARCorePointCloud**         OutLatestPointCloud                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGoogleARCoreFunctionStatus             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGoogleARCoreFunctionStatus UGoogleARCoreFrameFunctionLibrary::GetPointCloud(class UGoogleARCorePointCloud** OutLatestPointCloud)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreFrameFunctionLibrary", "GetPointCloud");

	Params::GoogleARCoreFrameFunctionLibrary_GetPointCloud Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLatestPointCloud != nullptr)
		*OutLatestPointCloud = Parms.OutLatestPointCloud;

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.GetPose
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTransform*                      OutPose                                                (Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UGoogleARCoreFrameFunctionLibrary::GetPose(struct FTransform* OutPose)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreFrameFunctionLibrary", "GetPose");

	Params::GoogleARCoreFrameFunctionLibrary_GetPose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPose != nullptr)
		*OutPose = std::move(Parms.OutPose);
}


// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.GetTrackingState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGoogleARCoreTrackingState              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGoogleARCoreTrackingState UGoogleARCoreFrameFunctionLibrary::GetTrackingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreFrameFunctionLibrary", "GetTrackingState");

	Params::GoogleARCoreFrameFunctionLibrary_GetTrackingState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.GetUpdatedARPins
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UARPin*>*                  OutAnchorList                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UGoogleARCoreFrameFunctionLibrary::GetUpdatedARPins(TArray<class UARPin*>* OutAnchorList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreFrameFunctionLibrary", "GetUpdatedARPins");

	Params::GoogleARCoreFrameFunctionLibrary_GetUpdatedARPins Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAnchorList != nullptr)
		*OutAnchorList = std::move(Parms.OutAnchorList);
}


// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.GetUpdatedPlanes
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UARPlaneGeometry*>*        OutPlaneList                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UGoogleARCoreFrameFunctionLibrary::GetUpdatedPlanes(TArray<class UARPlaneGeometry*>* OutPlaneList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreFrameFunctionLibrary", "GetUpdatedPlanes");

	Params::GoogleARCoreFrameFunctionLibrary_GetUpdatedPlanes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPlaneList != nullptr)
		*OutPlaneList = std::move(Parms.OutPlaneList);
}


// Function GoogleARCoreBase.GoogleARCoreFrameFunctionLibrary.GetUpdatedTrackablePoints
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UARTrackedPoint*>*         OutTrackablePointList                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UGoogleARCoreFrameFunctionLibrary::GetUpdatedTrackablePoints(TArray<class UARTrackedPoint*>* OutTrackablePointList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreFrameFunctionLibrary", "GetUpdatedTrackablePoints");

	Params::GoogleARCoreFrameFunctionLibrary_GetUpdatedTrackablePoints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTrackablePointList != nullptr)
		*OutTrackablePointList = std::move(Parms.OutTrackablePointList);
}


// Function GoogleARCoreBase.GoogleARCoreAugmentedImage.GetCenter
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UGoogleARCoreAugmentedImage::GetCenter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoogleARCoreAugmentedImage", "GetCenter");

	Params::GoogleARCoreAugmentedImage_GetCenter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCoreAugmentedImage.GetExtent
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UGoogleARCoreAugmentedImage::GetExtent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoogleARCoreAugmentedImage", "GetExtent");

	Params::GoogleARCoreAugmentedImage_GetExtent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCoreAugmentedImage.GetImageIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGoogleARCoreAugmentedImage::GetImageIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoogleARCoreAugmentedImage", "GetImageIndex");

	Params::GoogleARCoreAugmentedImage_GetImageIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCoreAugmentedImage.GetImageName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UGoogleARCoreAugmentedImage::GetImageName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoogleARCoreAugmentedImage", "GetImageName");

	Params::GoogleARCoreAugmentedImage_GetImageName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCoreCameraImage.Release
// (Final, Native, Public, BlueprintCallable)

void UGoogleARCoreCameraImage::Release()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoogleARCoreCameraImage", "Release");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GoogleARCoreBase.GoogleARCoreCameraImage.GetHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGoogleARCoreCameraImage::GetHeight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoogleARCoreCameraImage", "GetHeight");

	Params::GoogleARCoreCameraImage_GetHeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCoreCameraImage.GetPlaneCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGoogleARCoreCameraImage::GetPlaneCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoogleARCoreCameraImage", "GetPlaneCount");

	Params::GoogleARCoreCameraImage_GetPlaneCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCoreCameraImage.GetWidth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGoogleARCoreCameraImage::GetWidth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoogleARCoreCameraImage", "GetWidth");

	Params::GoogleARCoreCameraImage_GetWidth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.CheckARCoreAvailability
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EGoogleARCoreAvailability*              OutAvailability                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGoogleARCoreSessionFunctionLibrary::CheckARCoreAvailability(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, EGoogleARCoreAvailability* OutAvailability)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreSessionFunctionLibrary", "CheckARCoreAvailability");

	Params::GoogleARCoreSessionFunctionLibrary_CheckARCoreAvailability Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAvailability != nullptr)
		*OutAvailability = Parms.OutAvailability;
}


// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.GetAllPlanes
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UARPlaneGeometry*>*        OutPlaneList                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UGoogleARCoreSessionFunctionLibrary::GetAllPlanes(TArray<class UARPlaneGeometry*>* OutPlaneList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreSessionFunctionLibrary", "GetAllPlanes");

	Params::GoogleARCoreSessionFunctionLibrary_GetAllPlanes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPlaneList != nullptr)
		*OutPlaneList = std::move(Parms.OutPlaneList);
}


// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.GetAllTrackablePoints
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UARTrackedPoint*>*         OutTrackablePointList                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UGoogleARCoreSessionFunctionLibrary::GetAllTrackablePoints(TArray<class UARTrackedPoint*>* OutTrackablePointList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreSessionFunctionLibrary", "GetAllTrackablePoints");

	Params::GoogleARCoreSessionFunctionLibrary_GetAllTrackablePoints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTrackablePointList != nullptr)
		*OutTrackablePointList = std::move(Parms.OutTrackablePointList);
}


// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.GetARCoreCameraConfig
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGoogleARCoreCameraConfig*       OutCurrentCameraConfig                                 (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGoogleARCoreSessionFunctionLibrary::GetARCoreCameraConfig(struct FGoogleARCoreCameraConfig* OutCurrentCameraConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreSessionFunctionLibrary", "GetARCoreCameraConfig");

	Params::GoogleARCoreSessionFunctionLibrary_GetARCoreCameraConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCurrentCameraConfig != nullptr)
		*OutCurrentCameraConfig = std::move(Parms.OutCurrentCameraConfig);

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.GetARCoreEventManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UGoogleARCoreEventManager*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGoogleARCoreEventManager* UGoogleARCoreSessionFunctionLibrary::GetARCoreEventManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreSessionFunctionLibrary", "GetARCoreEventManager");

	Params::GoogleARCoreSessionFunctionLibrary_GetARCoreEventManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.GetPassthroughCameraImageUV
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<float>&                    InUV                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<float>*                          OutUV                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UGoogleARCoreSessionFunctionLibrary::GetPassthroughCameraImageUV(const TArray<float>& InUV, TArray<float>* OutUV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreSessionFunctionLibrary", "GetPassthroughCameraImageUV");

	Params::GoogleARCoreSessionFunctionLibrary_GetPassthroughCameraImageUV Parms{};

	Parms.InUV = std::move(InUV);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUV != nullptr)
		*OutUV = std::move(Parms.OutUV);
}


// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.InstallARCoreService
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EGoogleARCoreInstallRequestResult*      OutInstallResult                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGoogleARCoreSessionFunctionLibrary::InstallARCoreService(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, EGoogleARCoreInstallRequestResult* OutInstallResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreSessionFunctionLibrary", "InstallARCoreService");

	Params::GoogleARCoreSessionFunctionLibrary_InstallARCoreService Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutInstallResult != nullptr)
		*OutInstallResult = Parms.OutInstallResult;
}


// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.IsPassthroughCameraRenderingEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGoogleARCoreSessionFunctionLibrary::IsPassthroughCameraRenderingEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreSessionFunctionLibrary", "IsPassthroughCameraRenderingEnabled");

	Params::GoogleARCoreSessionFunctionLibrary_IsPassthroughCameraRenderingEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.SetARCoreCameraConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGoogleARCoreCameraConfig& TargetCameraConfig                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGoogleARCoreSessionFunctionLibrary::SetARCoreCameraConfig(const struct FGoogleARCoreCameraConfig& TargetCameraConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreSessionFunctionLibrary", "SetARCoreCameraConfig");

	Params::GoogleARCoreSessionFunctionLibrary_SetARCoreCameraConfig Parms{};

	Parms.TargetCameraConfig = std::move(TargetCameraConfig);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.SetPassthroughCameraRenderingEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGoogleARCoreSessionFunctionLibrary::SetPassthroughCameraRenderingEnabled(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreSessionFunctionLibrary", "SetPassthroughCameraRenderingEnabled");

	Params::GoogleARCoreSessionFunctionLibrary_SetPassthroughCameraRenderingEnabled Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GoogleARCoreBase.GoogleARCoreSessionFunctionLibrary.StartARCoreSession
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class UGoogleARCoreSessionConfig*       Configuration                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGoogleARCoreSessionFunctionLibrary::StartARCoreSession(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class UGoogleARCoreSessionConfig* Configuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoogleARCoreSessionFunctionLibrary", "StartARCoreSession");

	Params::GoogleARCoreSessionFunctionLibrary_StartARCoreSession Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.Configuration = Configuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GoogleARCoreBase.ARCoreAndroidPermissionHandler.OnPermissionsGranted
// (Final, Native, Public, HasOutParams)
// Parameters:
// const TArray<class FString>&            Permissions                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<bool>&                     Granted                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UARCoreAndroidPermissionHandler::OnPermissionsGranted(const TArray<class FString>& Permissions, const TArray<bool>& Granted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ARCoreAndroidPermissionHandler", "OnPermissionsGranted");

	Params::ARCoreAndroidPermissionHandler_OnPermissionsGranted Parms{};

	Parms.Permissions = std::move(Permissions);
	Parms.Granted = std::move(Granted);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GoogleARCoreBase.GoogleARCorePointCloud.GetPoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         OutWorldPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutConfidence                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGoogleARCorePointCloud::GetPoint(int32 Index_0, struct FVector* OutWorldPosition, float* OutConfidence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoogleARCorePointCloud", "GetPoint");

	Params::GoogleARCorePointCloud_GetPoint Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWorldPosition != nullptr)
		*OutWorldPosition = std::move(Parms.OutWorldPosition);

	if (OutConfidence != nullptr)
		*OutConfidence = Parms.OutConfidence;
}


// Function GoogleARCoreBase.GoogleARCorePointCloud.GetPointInTrackingSpace
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         OutTrackingSpaceLocation                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutConfidence                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGoogleARCorePointCloud::GetPointInTrackingSpace(int32 Index_0, struct FVector* OutTrackingSpaceLocation, float* OutConfidence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoogleARCorePointCloud", "GetPointInTrackingSpace");

	Params::GoogleARCorePointCloud_GetPointInTrackingSpace Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTrackingSpaceLocation != nullptr)
		*OutTrackingSpaceLocation = std::move(Parms.OutTrackingSpaceLocation);

	if (OutConfidence != nullptr)
		*OutConfidence = Parms.OutConfidence;
}


// Function GoogleARCoreBase.GoogleARCorePointCloud.GetPointNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGoogleARCorePointCloud::GetPointNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoogleARCorePointCloud", "GetPointNum");

	Params::GoogleARCorePointCloud_GetPointNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCorePointCloud.IsUpdated
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGoogleARCorePointCloud::IsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoogleARCorePointCloud", "IsUpdated");

	Params::GoogleARCorePointCloud_IsUpdated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GoogleARCoreBase.GoogleARCorePointCloud.ReleasePointCloud
// (Final, Native, Public, BlueprintCallable)

void UGoogleARCorePointCloud::ReleasePointCloud()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoogleARCorePointCloud", "ReleasePointCloud");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}


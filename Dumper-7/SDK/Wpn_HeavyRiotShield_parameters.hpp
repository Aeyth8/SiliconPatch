#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Wpn_HeavyRiotShield

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Wpn_HeavyRiotShield.Wpn_HeavyRiotShield_C.ExecuteUbergraph_Wpn_HeavyRiotShield
// 0x0290 (0x0290 - 0x0000)
struct Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable;                              // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable1;                             // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Second;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsDefend;                       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_HeavyRiot_Shield_C*             K2Node_DynamicCast_AsAnim_BP_Heavy_Riot_Shield;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue1;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_HeavyRiot_Shield_C*             K2Node_DynamicCast_AsAnim_BP_Heavy_Riot_Shield1;   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0060(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAI_Projectile_C*                       K2Node_DynamicCast_AsAI_Projectile;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsRight;                        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Select_Default;                             // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnParticle_ReturnValue;                // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x01B0(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AAI_Ape_Missile_C*                      K2Node_DynamicCast_AsAI_Ape_Missile;               // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MissileStart_BreakableBridge_C*     K2Node_DynamicCast_AsBP_Missile_Start_Breakable_Bridge; // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MissileStart_C*                     K2Node_DynamicCast_AsBP_Missile_Start;             // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Missile_C*                          K2Node_DynamicCast_AsBP_Missile;                   // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AttackDrone_FirstMissile_C*         K2Node_DynamicCast_AsBP_Attack_Drone_First_Missile; // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x0283(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue3;                   // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield) == 0x000010, "Wrong alignment on Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield");
static_assert(sizeof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield) == 0x000290, "Wrong size on Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, EntryPoint) == 0x000000, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::EntryPoint' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, Temp_bool_Variable) == 0x000004, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, Temp_struct_Variable) == 0x000008, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, Temp_struct_Variable1) == 0x000014, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, Temp_bool_IsClosed_Variable) == 0x000021, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_Event_DeltaSeconds) == 0x000024, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_CustomEvent_Second) == 0x000028, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_CustomEvent_Second' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_CustomEvent_IsDefend) == 0x00002C, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_CustomEvent_IsDefend' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, CallFunc_GetAnimInstance_ReturnValue) == 0x000030, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_DynamicCast_AsAnim_BP_Heavy_Riot_Shield) == 0x000038, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_DynamicCast_AsAnim_BP_Heavy_Riot_Shield' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, CallFunc_GetAnimInstance_ReturnValue1) == 0x000048, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::CallFunc_GetAnimInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_DynamicCast_AsAnim_BP_Heavy_Riot_Shield1) == 0x000050, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_DynamicCast_AsAnim_BP_Heavy_Riot_Shield1' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_DynamicCast_bSuccess1) == 0x000058, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_Event_Damage) == 0x00005C, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_Event_DamageType) == 0x000060, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_Event_InstigatedBy) == 0x000068, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_Event_DamageCauser) == 0x000070, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_DynamicCast_AsAI_Projectile) == 0x000078, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_DynamicCast_AsAI_Projectile' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_DynamicCast_bSuccess2) == 0x000080, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, Temp_bool_Has_Been_Initd_Variable) == 0x000081, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_CustomEvent_IsRight) == 0x000088, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_CustomEvent_IsRight' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_Select_Default) == 0x00008C, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0000A0, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0000D0, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, CallFunc_BreakTransform_Location) == 0x000158, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, CallFunc_BreakTransform_Rotation) == 0x000164, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, CallFunc_BreakTransform_Scale) == 0x000170, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, CallFunc_SpawnParticle_ReturnValue) == 0x000180, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::CallFunc_SpawnParticle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_ComponentBoundEvent_HitComponent) == 0x000188, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_ComponentBoundEvent_OtherActor) == 0x000190, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_ComponentBoundEvent_OtherComp) == 0x000198, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_ComponentBoundEvent_NormalImpulse) == 0x0001A0, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_ComponentBoundEvent_Hit) == 0x0001B0, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_DynamicCast_AsAI_Ape_Missile) == 0x000238, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_DynamicCast_AsAI_Ape_Missile' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_DynamicCast_bSuccess3) == 0x000240, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_DynamicCast_AsBP_Missile_Start_Breakable_Bridge) == 0x000248, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_DynamicCast_AsBP_Missile_Start_Breakable_Bridge' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_DynamicCast_bSuccess4) == 0x000250, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_DynamicCast_AsBP_Missile_Start) == 0x000258, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_DynamicCast_AsBP_Missile_Start' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_DynamicCast_bSuccess5) == 0x000260, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_DynamicCast_AsBP_Missile) == 0x000268, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_DynamicCast_AsBP_Missile' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_DynamicCast_bSuccess6) == 0x000270, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_DynamicCast_AsBP_Attack_Drone_First_Missile) == 0x000278, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_DynamicCast_AsBP_Attack_Drone_First_Missile' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, K2Node_DynamicCast_bSuccess7) == 0x000280, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, CallFunc_BooleanOR_ReturnValue) == 0x000281, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, CallFunc_BooleanOR_ReturnValue1) == 0x000282, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, CallFunc_BooleanOR_ReturnValue2) == 0x000283, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield, CallFunc_BooleanOR_ReturnValue3) == 0x000284, "Member 'Wpn_HeavyRiotShield_C_ExecuteUbergraph_Wpn_HeavyRiotShield::CallFunc_BooleanOR_ReturnValue3' has a wrong offset!");

// Function Wpn_HeavyRiotShield.Wpn_HeavyRiotShield_C.BndEvt__WeaponMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct Wpn_HeavyRiotShield_C_BndEvt__WeaponMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0028(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Wpn_HeavyRiotShield_C_BndEvt__WeaponMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on Wpn_HeavyRiotShield_C_BndEvt__WeaponMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(Wpn_HeavyRiotShield_C_BndEvt__WeaponMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on Wpn_HeavyRiotShield_C_BndEvt__WeaponMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(Wpn_HeavyRiotShield_C_BndEvt__WeaponMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'Wpn_HeavyRiotShield_C_BndEvt__WeaponMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_BndEvt__WeaponMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Wpn_HeavyRiotShield_C_BndEvt__WeaponMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_BndEvt__WeaponMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Wpn_HeavyRiotShield_C_BndEvt__WeaponMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_BndEvt__WeaponMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'Wpn_HeavyRiotShield_C_BndEvt__WeaponMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_BndEvt__WeaponMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000028, "Member 'Wpn_HeavyRiotShield_C_BndEvt__WeaponMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function Wpn_HeavyRiotShield.Wpn_HeavyRiotShield_C.ShieldInit
// 0x0001 (0x0001 - 0x0000)
struct Wpn_HeavyRiotShield_C_ShieldInit final
{
public:
	bool                                          IsRight;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Wpn_HeavyRiotShield_C_ShieldInit) == 0x000001, "Wrong alignment on Wpn_HeavyRiotShield_C_ShieldInit");
static_assert(sizeof(Wpn_HeavyRiotShield_C_ShieldInit) == 0x000001, "Wrong size on Wpn_HeavyRiotShield_C_ShieldInit");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ShieldInit, IsRight) == 0x000000, "Member 'Wpn_HeavyRiotShield_C_ShieldInit::IsRight' has a wrong offset!");

// Function Wpn_HeavyRiotShield.Wpn_HeavyRiotShield_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct Wpn_HeavyRiotShield_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Wpn_HeavyRiotShield_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on Wpn_HeavyRiotShield_C_ReceiveAnyDamage");
static_assert(sizeof(Wpn_HeavyRiotShield_C_ReceiveAnyDamage) == 0x000020, "Wrong size on Wpn_HeavyRiotShield_C_ReceiveAnyDamage");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'Wpn_HeavyRiotShield_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'Wpn_HeavyRiotShield_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'Wpn_HeavyRiotShield_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'Wpn_HeavyRiotShield_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function Wpn_HeavyRiotShield.Wpn_HeavyRiotShield_C.SetDefend
// 0x0001 (0x0001 - 0x0000)
struct Wpn_HeavyRiotShield_C_SetDefend final
{
public:
	bool                                          IsDefend;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Wpn_HeavyRiotShield_C_SetDefend) == 0x000001, "Wrong alignment on Wpn_HeavyRiotShield_C_SetDefend");
static_assert(sizeof(Wpn_HeavyRiotShield_C_SetDefend) == 0x000001, "Wrong size on Wpn_HeavyRiotShield_C_SetDefend");
static_assert(offsetof(Wpn_HeavyRiotShield_C_SetDefend, IsDefend) == 0x000000, "Member 'Wpn_HeavyRiotShield_C_SetDefend::IsDefend' has a wrong offset!");

// Function Wpn_HeavyRiotShield.Wpn_HeavyRiotShield_C.DelayDestroy
// 0x0004 (0x0004 - 0x0000)
struct Wpn_HeavyRiotShield_C_DelayDestroy final
{
public:
	float                                         Second;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Wpn_HeavyRiotShield_C_DelayDestroy) == 0x000004, "Wrong alignment on Wpn_HeavyRiotShield_C_DelayDestroy");
static_assert(sizeof(Wpn_HeavyRiotShield_C_DelayDestroy) == 0x000004, "Wrong size on Wpn_HeavyRiotShield_C_DelayDestroy");
static_assert(offsetof(Wpn_HeavyRiotShield_C_DelayDestroy, Second) == 0x000000, "Member 'Wpn_HeavyRiotShield_C_DelayDestroy::Second' has a wrong offset!");

// Function Wpn_HeavyRiotShield.Wpn_HeavyRiotShield_C.OnRep_HitCount
// 0x0020 (0x0020 - 0x0000)
struct Wpn_HeavyRiotShield_C_OnRep_HitCount final
{
public:
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Wpn_HeavyRiotShield_C_OnRep_HitCount) == 0x000008, "Wrong alignment on Wpn_HeavyRiotShield_C_OnRep_HitCount");
static_assert(sizeof(Wpn_HeavyRiotShield_C_OnRep_HitCount) == 0x000020, "Wrong size on Wpn_HeavyRiotShield_C_OnRep_HitCount");
static_assert(offsetof(Wpn_HeavyRiotShield_C_OnRep_HitCount, CallFunc_Conv_IntToString_ReturnValue) == 0x000000, "Member 'Wpn_HeavyRiotShield_C_OnRep_HitCount::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_HeavyRiotShield_C_OnRep_HitCount, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'Wpn_HeavyRiotShield_C_OnRep_HitCount::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function Wpn_HeavyRiotShield.Wpn_HeavyRiotShield_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Wpn_HeavyRiotShield_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Wpn_HeavyRiotShield_C_ReceiveTick) == 0x000004, "Wrong alignment on Wpn_HeavyRiotShield_C_ReceiveTick");
static_assert(sizeof(Wpn_HeavyRiotShield_C_ReceiveTick) == 0x000004, "Wrong size on Wpn_HeavyRiotShield_C_ReceiveTick");
static_assert(offsetof(Wpn_HeavyRiotShield_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Wpn_HeavyRiotShield_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}


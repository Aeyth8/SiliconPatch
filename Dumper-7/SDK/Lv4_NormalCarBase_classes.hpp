#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lv4_NormalCarBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Lv4BaseCar_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Lv4-NormalCarBase.Lv4-NormalCarBase_C
// 0x0040 (0x06D0 - 0x0690)
class ALv4_NormalCarBase_C final : public ABP_Lv4BaseCar_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Lv4_NormalCarBase_C;                // 0x0690(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0698(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          CanIntercept;                                      // 0x06A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A1[0x7];                                      // 0x06A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        WheelAudio_0;                                      // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        NPCWheelAudio;                                     // 0x06B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitMc;                                             // 0x06B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B9[0x7];                                      // 0x06B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMesh*>                  AllMesh;                                           // 0x06C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_Lv4_NormalCarBase(int32 EntryPoint);
	void BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void XYTargetLocation();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Lv4-NormalCarBase_C">();
	}
	static class ALv4_NormalCarBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALv4_NormalCarBase_C>();
	}
};
static_assert(alignof(ALv4_NormalCarBase_C) == 0x000008, "Wrong alignment on ALv4_NormalCarBase_C");
static_assert(sizeof(ALv4_NormalCarBase_C) == 0x0006D0, "Wrong size on ALv4_NormalCarBase_C");
static_assert(offsetof(ALv4_NormalCarBase_C, UberGraphFrame_Lv4_NormalCarBase_C) == 0x000690, "Member 'ALv4_NormalCarBase_C::UberGraphFrame_Lv4_NormalCarBase_C' has a wrong offset!");
static_assert(offsetof(ALv4_NormalCarBase_C, Box) == 0x000698, "Member 'ALv4_NormalCarBase_C::Box' has a wrong offset!");
static_assert(offsetof(ALv4_NormalCarBase_C, CanIntercept) == 0x0006A0, "Member 'ALv4_NormalCarBase_C::CanIntercept' has a wrong offset!");
static_assert(offsetof(ALv4_NormalCarBase_C, WheelAudio_0) == 0x0006A8, "Member 'ALv4_NormalCarBase_C::WheelAudio_0' has a wrong offset!");
static_assert(offsetof(ALv4_NormalCarBase_C, NPCWheelAudio) == 0x0006B0, "Member 'ALv4_NormalCarBase_C::NPCWheelAudio' has a wrong offset!");
static_assert(offsetof(ALv4_NormalCarBase_C, HitMc) == 0x0006B8, "Member 'ALv4_NormalCarBase_C::HitMc' has a wrong offset!");
static_assert(offsetof(ALv4_NormalCarBase_C, AllMesh) == 0x0006C0, "Member 'ALv4_NormalCarBase_C::AllMesh' has a wrong offset!");

}


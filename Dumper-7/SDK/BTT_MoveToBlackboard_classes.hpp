#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_MoveToBlackboard

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "Engine_structs.hpp"
#include "SiliconRising_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_MoveToBlackboard.BTT_MoveToBlackboard_C
// 0x0070 (0x0128 - 0x00B8)
class UBTT_MoveToBlackboard_C final : public UBTT_MoveToBlackboardBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 TargetKey;                                         // 0x00C0(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 AcceptableRadiusKey;                               // 0x00E8(0x0028)(Edit, BlueprintVisible)
	EPathFollowingRequestResult                   RequestResult;                                     // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AcceptableRadius;                                  // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RequireLineOfSight;                                // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseControllerRotation;                             // 0x0119(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CharacterRef;                                      // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTT_MoveToBlackboard(int32 EntryPoint);
	void ReceiveMoveCompleted(EPathFollowingResult Result);
	void ReceiveAbort(class AActor* OwnerActor);
	void ReceiveExecute(class AActor* OwnerActor);
	void OnQueryFinishedEvent_Event_0(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus);
	void GetBlackboardValue(const struct FBlackboardKeySelector& Key, class AActor** ActorValue, struct FVector* VectorValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_MoveToBlackboard_C">();
	}
	static class UBTT_MoveToBlackboard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_MoveToBlackboard_C>();
	}
};
static_assert(alignof(UBTT_MoveToBlackboard_C) == 0x000008, "Wrong alignment on UBTT_MoveToBlackboard_C");
static_assert(sizeof(UBTT_MoveToBlackboard_C) == 0x000128, "Wrong size on UBTT_MoveToBlackboard_C");
static_assert(offsetof(UBTT_MoveToBlackboard_C, UberGraphFrame) == 0x0000B8, "Member 'UBTT_MoveToBlackboard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_MoveToBlackboard_C, TargetKey) == 0x0000C0, "Member 'UBTT_MoveToBlackboard_C::TargetKey' has a wrong offset!");
static_assert(offsetof(UBTT_MoveToBlackboard_C, AcceptableRadiusKey) == 0x0000E8, "Member 'UBTT_MoveToBlackboard_C::AcceptableRadiusKey' has a wrong offset!");
static_assert(offsetof(UBTT_MoveToBlackboard_C, RequestResult) == 0x000110, "Member 'UBTT_MoveToBlackboard_C::RequestResult' has a wrong offset!");
static_assert(offsetof(UBTT_MoveToBlackboard_C, AcceptableRadius) == 0x000114, "Member 'UBTT_MoveToBlackboard_C::AcceptableRadius' has a wrong offset!");
static_assert(offsetof(UBTT_MoveToBlackboard_C, RequireLineOfSight) == 0x000118, "Member 'UBTT_MoveToBlackboard_C::RequireLineOfSight' has a wrong offset!");
static_assert(offsetof(UBTT_MoveToBlackboard_C, UseControllerRotation) == 0x000119, "Member 'UBTT_MoveToBlackboard_C::UseControllerRotation' has a wrong offset!");
static_assert(offsetof(UBTT_MoveToBlackboard_C, CharacterRef) == 0x000120, "Member 'UBTT_MoveToBlackboard_C::CharacterRef' has a wrong offset!");

}


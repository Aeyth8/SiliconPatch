#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mer2PlayerController

#include "Basic.hpp"

#include "Mer2PlayerController_classes.hpp"
#include "Mer2PlayerController_parameters.hpp"


namespace SDK
{

// Function Mer2PlayerController.Mer2PlayerController_C.ExecuteUbergraph_Mer2PlayerController
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMer2PlayerController_C::ExecuteUbergraph_Mer2PlayerController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2PlayerController_C", "ExecuteUbergraph_Mer2PlayerController");

	Params::Mer2PlayerController_C_ExecuteUbergraph_Mer2PlayerController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2PlayerController.Mer2PlayerController_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMer2PlayerController_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2PlayerController_C", "ReceiveTick");

	Params::Mer2PlayerController_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2PlayerController.Mer2PlayerController_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AMer2PlayerController_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2PlayerController_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2PlayerController.Mer2PlayerController_C.OnPossess
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void AMer2PlayerController_C::OnPossess(const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2PlayerController_C", "OnPossess");

	Params::Mer2PlayerController_C_OnPossess Parms{};

	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2PlayerController.Mer2PlayerController_C.InitHMD
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHasHMD                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMer2PlayerController_C::InitHMD(bool bHasHMD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2PlayerController_C", "InitHMD");

	Params::Mer2PlayerController_C_InitHMD Parms{};

	Parms.bHasHMD = bHasHMD;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2PlayerController.Mer2PlayerController_C.InitiatePlay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    IsAuto_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    UniqueId_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AMer2PlayerController_C::InitiatePlay(const class FString& IsAuto_0, const class FString& UniqueId_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2PlayerController_C", "InitiatePlay");

	Params::Mer2PlayerController_C_InitiatePlay Parms{};

	Parms.IsAuto_0 = std::move(IsAuto_0);
	Parms.UniqueId_0 = std::move(UniqueId_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2PlayerController.Mer2PlayerController_C.ReturnHMDStatus
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHMDEnabled                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   HMDOffset                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  HMDRotation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMer2PlayerController_C::ReturnHMDStatus(bool bHMDEnabled, const struct FVector& HMDOffset, const struct FRotator& HMDRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2PlayerController_C", "ReturnHMDStatus");

	Params::Mer2PlayerController_C_ReturnHMDStatus Parms{};

	Parms.bHMDEnabled = bHMDEnabled;
	Parms.HMDOffset = std::move(HMDOffset);
	Parms.HMDRotation = std::move(HMDRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2PlayerController.Mer2PlayerController_C.GetHMDStatus
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void AMer2PlayerController_C::GetHMDStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2PlayerController_C", "GetHMDStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2PlayerController.Mer2PlayerController_C.InpActEvt_Equals_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMer2PlayerController_C::InpActEvt_Equals_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2PlayerController_C", "InpActEvt_Equals_K2Node_InputKeyEvent_0");

	Params::Mer2PlayerController_C_InpActEvt_Equals_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2PlayerController.Mer2PlayerController_C.InpActEvt_BackSpace_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMer2PlayerController_C::InpActEvt_BackSpace_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2PlayerController_C", "InpActEvt_BackSpace_K2Node_InputKeyEvent_1");

	Params::Mer2PlayerController_C_InpActEvt_BackSpace_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2PlayerController.Mer2PlayerController_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AMer2PlayerController_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2PlayerController_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2PlayerController.Mer2PlayerController_C.InitiateHMD
// (Public, BlueprintCallable, BlueprintEvent)

void AMer2PlayerController_C::InitiateHMD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2PlayerController_C", "InitiateHMD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2PlayerController.Mer2PlayerController_C.GetinitTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Is2P                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)

struct FTransform AMer2PlayerController_C::GetinitTransform(bool Is2P)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2PlayerController_C", "GetinitTransform");

	Params::Mer2PlayerController_C_GetinitTransform Parms{};

	Parms.Is2P = Is2P;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Mer2PlayerController.Mer2PlayerController_C.GetinitTransformOnline
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Is2P                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)

struct FTransform AMer2PlayerController_C::GetinitTransformOnline(bool Is2P)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2PlayerController_C", "GetinitTransformOnline");

	Params::Mer2PlayerController_C_GetinitTransformOnline Parms{};

	Parms.Is2P = Is2P;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


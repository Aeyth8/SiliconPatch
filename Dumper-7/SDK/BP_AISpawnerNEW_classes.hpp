#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AISpawnerNEW

#include "Basic.hpp"

#include "Struct_SpawnerConfigNew_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AISpawnerNEW.BP_AISpawnerNEW_C
// 0x00A8 (0x03D0 - 0x0328)
class ABP_AISpawnerNEW_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FStruct_SpawnerConfigNew               SpawnerConfig;                                     // 0x0338(0x0048)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CurrentCount;                                      // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentDelay;                                      // 0x0384(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomDelay;                                       // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_Base_C*                         PreviousAI;                                        // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TickDeltaTime;                                     // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsComplete_;                                       // 0x039C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFirstRun;                                        // 0x039D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsActive_;                                         // 0x039E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F[0x1];                                      // 0x039F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AI_WaveNEW_C*                       ParentWave;                                        // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStart;                                           // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_NPC_Base_C*>                 AIList;                                            // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         FirstWaitTime;                                     // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurFirstWaitTime;                                  // 0x03C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         lessCount;                                         // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AISpawnerNEW(int32 EntryPoint);
	void InitSpawner(int32 _index);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void GetSpawnCountLeft(int32* CountLeft);
	void IsWaitDelay(float DeltaTime, bool* Result);
	void IsPreviousDead(bool* Result);
	void SpwanAI(bool Retry, class ABP_NPC_Base_C** NPC);
	void IsActive(bool* Active);
	void IsComplete(bool* Complete);
	void ActiveMe();
	void IsAllDead(bool* AllDead);
	void ResetMe();
	void GetLastSpawnAILeftCount(int32* LeftCount);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AISpawnerNEW_C">();
	}
	static class ABP_AISpawnerNEW_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AISpawnerNEW_C>();
	}
};
static_assert(alignof(ABP_AISpawnerNEW_C) == 0x000008, "Wrong alignment on ABP_AISpawnerNEW_C");
static_assert(sizeof(ABP_AISpawnerNEW_C) == 0x0003D0, "Wrong size on ABP_AISpawnerNEW_C");
static_assert(offsetof(ABP_AISpawnerNEW_C, UberGraphFrame) == 0x000328, "Member 'ABP_AISpawnerNEW_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnerNEW_C, DefaultSceneRoot) == 0x000330, "Member 'ABP_AISpawnerNEW_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnerNEW_C, SpawnerConfig) == 0x000338, "Member 'ABP_AISpawnerNEW_C::SpawnerConfig' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnerNEW_C, CurrentCount) == 0x000380, "Member 'ABP_AISpawnerNEW_C::CurrentCount' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnerNEW_C, CurrentDelay) == 0x000384, "Member 'ABP_AISpawnerNEW_C::CurrentDelay' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnerNEW_C, RandomDelay) == 0x000388, "Member 'ABP_AISpawnerNEW_C::RandomDelay' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnerNEW_C, PreviousAI) == 0x000390, "Member 'ABP_AISpawnerNEW_C::PreviousAI' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnerNEW_C, TickDeltaTime) == 0x000398, "Member 'ABP_AISpawnerNEW_C::TickDeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnerNEW_C, IsComplete_) == 0x00039C, "Member 'ABP_AISpawnerNEW_C::IsComplete_' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnerNEW_C, IsFirstRun) == 0x00039D, "Member 'ABP_AISpawnerNEW_C::IsFirstRun' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnerNEW_C, IsActive_) == 0x00039E, "Member 'ABP_AISpawnerNEW_C::IsActive_' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnerNEW_C, ParentWave) == 0x0003A0, "Member 'ABP_AISpawnerNEW_C::ParentWave' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnerNEW_C, IsStart) == 0x0003A8, "Member 'ABP_AISpawnerNEW_C::IsStart' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnerNEW_C, AIList) == 0x0003B0, "Member 'ABP_AISpawnerNEW_C::AIList' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnerNEW_C, FirstWaitTime) == 0x0003C0, "Member 'ABP_AISpawnerNEW_C::FirstWaitTime' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnerNEW_C, CurFirstWaitTime) == 0x0003C4, "Member 'ABP_AISpawnerNEW_C::CurFirstWaitTime' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnerNEW_C, CurrentIndex) == 0x0003C8, "Member 'ABP_AISpawnerNEW_C::CurrentIndex' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnerNEW_C, lessCount) == 0x0003CC, "Member 'ABP_AISpawnerNEW_C::lessCount' has a wrong offset!");

}


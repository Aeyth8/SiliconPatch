#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MissileStart

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AI_Projectile_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MissileStart.BP_MissileStart_C
// 0x0048 (0x0588 - 0x0540)
class ABP_MissileStart_C : public AAI_Projectile_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_MissileStart_C;                  // 0x0540(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh_0;                                      // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               TailFlame;                                         // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               TailSmoke;                                         // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        ParticleExplosion;                                 // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActor;                                          // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseDamge;                                         // 0x0570(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExplosionRadis;                                    // 0x0574(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamgeFallingByDistance;                            // 0x0578(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamgeFallingByBlock;                               // 0x057C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ExplodeSound;                                      // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MissileStart(int32 EntryPoint);
	void PlayFX(const struct FVector& Location);
	void BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void AddDamge(float* FinalDamage);
	void HasBlock_(bool* Result);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MissileStart_C">();
	}
	static class ABP_MissileStart_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MissileStart_C>();
	}
};
static_assert(alignof(ABP_MissileStart_C) == 0x000008, "Wrong alignment on ABP_MissileStart_C");
static_assert(sizeof(ABP_MissileStart_C) == 0x000588, "Wrong size on ABP_MissileStart_C");
static_assert(offsetof(ABP_MissileStart_C, UberGraphFrame_BP_MissileStart_C) == 0x000540, "Member 'ABP_MissileStart_C::UberGraphFrame_BP_MissileStart_C' has a wrong offset!");
static_assert(offsetof(ABP_MissileStart_C, StaticMesh_0) == 0x000548, "Member 'ABP_MissileStart_C::StaticMesh_0' has a wrong offset!");
static_assert(offsetof(ABP_MissileStart_C, TailFlame) == 0x000550, "Member 'ABP_MissileStart_C::TailFlame' has a wrong offset!");
static_assert(offsetof(ABP_MissileStart_C, TailSmoke) == 0x000558, "Member 'ABP_MissileStart_C::TailSmoke' has a wrong offset!");
static_assert(offsetof(ABP_MissileStart_C, ParticleExplosion) == 0x000560, "Member 'ABP_MissileStart_C::ParticleExplosion' has a wrong offset!");
static_assert(offsetof(ABP_MissileStart_C, HitActor) == 0x000568, "Member 'ABP_MissileStart_C::HitActor' has a wrong offset!");
static_assert(offsetof(ABP_MissileStart_C, BaseDamge) == 0x000570, "Member 'ABP_MissileStart_C::BaseDamge' has a wrong offset!");
static_assert(offsetof(ABP_MissileStart_C, ExplosionRadis) == 0x000574, "Member 'ABP_MissileStart_C::ExplosionRadis' has a wrong offset!");
static_assert(offsetof(ABP_MissileStart_C, DamgeFallingByDistance) == 0x000578, "Member 'ABP_MissileStart_C::DamgeFallingByDistance' has a wrong offset!");
static_assert(offsetof(ABP_MissileStart_C, DamgeFallingByBlock) == 0x00057C, "Member 'ABP_MissileStart_C::DamgeFallingByBlock' has a wrong offset!");
static_assert(offsetof(ABP_MissileStart_C, ExplodeSound) == 0x000580, "Member 'ABP_MissileStart_C::ExplodeSound' has a wrong offset!");

}


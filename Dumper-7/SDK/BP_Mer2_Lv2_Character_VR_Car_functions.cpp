#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Mer2_Lv2_Character_VR_Car

#include "Basic.hpp"

#include "BP_Mer2_Lv2_Character_VR_Car_classes.hpp"
#include "BP_Mer2_Lv2_Character_VR_Car_parameters.hpp"


namespace SDK
{

// Function BP_Mer2_Lv2_Character_VR_Car.BP_Mer2_Lv2_Character_VR_Car_C.ExecuteUbergraph_BP_Mer2_Lv2_Character_VR_Car
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Mer2_Lv2_Character_VR_Car_C::ExecuteUbergraph_BP_Mer2_Lv2_Character_VR_Car(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mer2_Lv2_Character_VR_Car_C", "ExecuteUbergraph_BP_Mer2_Lv2_Character_VR_Car");

	Params::BP_Mer2_Lv2_Character_VR_Car_C_ExecuteUbergraph_BP_Mer2_Lv2_Character_VR_Car Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mer2_Lv2_Character_VR_Car.BP_Mer2_Lv2_Character_VR_Car_C.UpdateToClient
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                head                                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FTransform&                LeftHand_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FTransform&                RightHand_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABP_Mer2_Lv2_Character_VR_Car_C::UpdateToClient(const struct FTransform& head, const struct FTransform& LeftHand_0, const struct FTransform& RightHand_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mer2_Lv2_Character_VR_Car_C", "UpdateToClient");

	Params::BP_Mer2_Lv2_Character_VR_Car_C_UpdateToClient Parms{};

	Parms.head = std::move(head);
	Parms.LeftHand_0 = std::move(LeftHand_0);
	Parms.RightHand_0 = std::move(RightHand_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mer2_Lv2_Character_VR_Car.BP_Mer2_Lv2_Character_VR_Car_C.UpdateToServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                head                                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FTransform&                LeftHand_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FTransform&                RightHand_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABP_Mer2_Lv2_Character_VR_Car_C::UpdateToServer(const struct FTransform& head, const struct FTransform& LeftHand_0, const struct FTransform& RightHand_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mer2_Lv2_Character_VR_Car_C", "UpdateToServer");

	Params::BP_Mer2_Lv2_Character_VR_Car_C_UpdateToServer Parms{};

	Parms.head = std::move(head);
	Parms.LeftHand_0 = std::move(LeftHand_0);
	Parms.RightHand_0 = std::move(RightHand_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mer2_Lv2_Character_VR_Car.BP_Mer2_Lv2_Character_VR_Car_C.UpdateReplication
// (BlueprintCallable, BlueprintEvent)

void ABP_Mer2_Lv2_Character_VR_Car_C::UpdateReplication()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mer2_Lv2_Character_VR_Car_C", "UpdateReplication");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Mer2_Lv2_Character_VR_Car.BP_Mer2_Lv2_Character_VR_Car_C.InpActEvt_L_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Mer2_Lv2_Character_VR_Car_C::InpActEvt_L_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mer2_Lv2_Character_VR_Car_C", "InpActEvt_L_K2Node_InputKeyEvent_0");

	Params::BP_Mer2_Lv2_Character_VR_Car_C_InpActEvt_L_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mer2_Lv2_Character_VR_Car.BP_Mer2_Lv2_Character_VR_Car_C.InpActEvt_O_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Mer2_Lv2_Character_VR_Car_C::InpActEvt_O_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mer2_Lv2_Character_VR_Car_C", "InpActEvt_O_K2Node_InputKeyEvent_1");

	Params::BP_Mer2_Lv2_Character_VR_Car_C_InpActEvt_O_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mer2_Lv2_Character_VR_Car.BP_Mer2_Lv2_Character_VR_Car_C.InpActEvt_I_K2Node_InputKeyEvent_2
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Mer2_Lv2_Character_VR_Car_C::InpActEvt_I_K2Node_InputKeyEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mer2_Lv2_Character_VR_Car_C", "InpActEvt_I_K2Node_InputKeyEvent_2");

	Params::BP_Mer2_Lv2_Character_VR_Car_C_InpActEvt_I_K2Node_InputKeyEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mer2_Lv2_Character_VR_Car.BP_Mer2_Lv2_Character_VR_Car_C.InpActEvt_K_K2Node_InputKeyEvent_3
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Mer2_Lv2_Character_VR_Car_C::InpActEvt_K_K2Node_InputKeyEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mer2_Lv2_Character_VR_Car_C", "InpActEvt_K_K2Node_InputKeyEvent_3");

	Params::BP_Mer2_Lv2_Character_VR_Car_C_InpActEvt_K_K2Node_InputKeyEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mer2_Lv2_Character_VR_Car.BP_Mer2_Lv2_Character_VR_Car_C.InpActEvt_Nine_K2Node_InputKeyEvent_4
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Mer2_Lv2_Character_VR_Car_C::InpActEvt_Nine_K2Node_InputKeyEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mer2_Lv2_Character_VR_Car_C", "InpActEvt_Nine_K2Node_InputKeyEvent_4");

	Params::BP_Mer2_Lv2_Character_VR_Car_C_InpActEvt_Nine_K2Node_InputKeyEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mer2_Lv2_Character_VR_Car.BP_Mer2_Lv2_Character_VR_Car_C.InpActEvt_Eight_K2Node_InputKeyEvent_5
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Mer2_Lv2_Character_VR_Car_C::InpActEvt_Eight_K2Node_InputKeyEvent_5(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mer2_Lv2_Character_VR_Car_C", "InpActEvt_Eight_K2Node_InputKeyEvent_5");

	Params::BP_Mer2_Lv2_Character_VR_Car_C_InpActEvt_Eight_K2Node_InputKeyEvent_5 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mer2_Lv2_Character_VR_Car.BP_Mer2_Lv2_Character_VR_Car_C.SetSpectatorUI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsButton                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FlipFlop                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Mer2_Lv2_Character_VR_Car_C::SetSpectatorUI(bool IsButton, bool FlipFlop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mer2_Lv2_Character_VR_Car_C", "SetSpectatorUI");

	Params::BP_Mer2_Lv2_Character_VR_Car_C_SetSpectatorUI Parms{};

	Parms.IsButton = IsButton;
	Parms.FlipFlop = FlipFlop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mer2_Lv2_Character_VR_Car.BP_Mer2_Lv2_Character_VR_Car_C.ResetCameraHeight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Mer2_Lv2_Character_VR_Car_C::ResetCameraHeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mer2_Lv2_Character_VR_Car_C", "ResetCameraHeight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Mer2_Lv2_Character_VR_Car.BP_Mer2_Lv2_Character_VR_Car_C.RotatePointAroundPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USceneComponent*                  Center                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   RotateTargetLocation                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         TargetLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Mer2_Lv2_Character_VR_Car_C::RotatePointAroundPoint(class USceneComponent* Center, const struct FVector& RotateTargetLocation, float Angle, struct FVector* TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mer2_Lv2_Character_VR_Car_C", "RotatePointAroundPoint");

	Params::BP_Mer2_Lv2_Character_VR_Car_C_RotatePointAroundPoint Parms{};

	Parms.Center = Center;
	Parms.RotateTargetLocation = std::move(RotateTargetLocation);
	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);

	if (TargetLocation != nullptr)
		*TargetLocation = std::move(Parms.TargetLocation);
}


// Function BP_Mer2_Lv2_Character_VR_Car.BP_Mer2_Lv2_Character_VR_Car_C.SetTriggerStatus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsRightHand                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Mer2_Lv2_Character_VR_Car_C::SetTriggerStatus(bool IsRightHand, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mer2_Lv2_Character_VR_Car_C", "SetTriggerStatus");

	Params::BP_Mer2_Lv2_Character_VR_Car_C_SetTriggerStatus Parms{};

	Parms.IsRightHand = IsRightHand;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mer2_Lv2_Character_VR_Car.BP_Mer2_Lv2_Character_VR_Car_C.SetHandType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsRightHand                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EItemTypes                              Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Mer2_Lv2_Character_VR_Car_C::SetHandType(bool IsRightHand, EItemTypes Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mer2_Lv2_Character_VR_Car_C", "SetHandType");

	Params::BP_Mer2_Lv2_Character_VR_Car_C_SetHandType Parms{};

	Parms.IsRightHand = IsRightHand;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mer2_Lv2_Character_VR_Car.BP_Mer2_Lv2_Character_VR_Car_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_172
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Mer2_Lv2_Character_VR_Car_C::InpAxisEvt_LookUp_K2Node_InputAxisEvent_172(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mer2_Lv2_Character_VR_Car_C", "InpAxisEvt_LookUp_K2Node_InputAxisEvent_172");

	Params::BP_Mer2_Lv2_Character_VR_Car_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_172 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mer2_Lv2_Character_VR_Car.BP_Mer2_Lv2_Character_VR_Car_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_157
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Mer2_Lv2_Character_VR_Car_C::InpAxisEvt_Turn_K2Node_InputAxisEvent_157(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mer2_Lv2_Character_VR_Car_C", "InpAxisEvt_Turn_K2Node_InputAxisEvent_157");

	Params::BP_Mer2_Lv2_Character_VR_Car_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_157 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mer2_Lv2_Character_VR_Car.BP_Mer2_Lv2_Character_VR_Car_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Mer2_Lv2_Character_VR_Car_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mer2_Lv2_Character_VR_Car_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Mer2_Lv2_Character_VR_Car.BP_Mer2_Lv2_Character_VR_Car_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Mer2_Lv2_Character_VR_Car_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mer2_Lv2_Character_VR_Car_C", "ReceiveTick");

	Params::BP_Mer2_Lv2_Character_VR_Car_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mer2_Lv2_Character_VR_Car.BP_Mer2_Lv2_Character_VR_Car_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Mer2_Lv2_Character_VR_Car_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mer2_Lv2_Character_VR_Car_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}


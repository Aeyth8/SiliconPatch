#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_CheckDistance

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "Enum_OperationType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTD_CheckDistance.BTD_CheckDistance_C
// 0x0080 (0x0120 - 0x00A0)
class UBTD_CheckDistance_C final : public UBTDecorator_BlueprintBase
{
public:
	struct FBlackboardKeySelector                 ActorA;                                            // 0x00A0(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 ActorB;                                            // 0x00C8(0x0028)(Edit, BlueprintVisible)
	Enum_OperationType                            Operator;                                          // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlackboardKeySelector                 Distance;                                          // 0x00F8(0x0028)(Edit, BlueprintVisible)

public:
	bool PerformConditionCheck(class AActor* OwnerActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTD_CheckDistance_C">();
	}
	static class UBTD_CheckDistance_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTD_CheckDistance_C>();
	}
};
static_assert(alignof(UBTD_CheckDistance_C) == 0x000008, "Wrong alignment on UBTD_CheckDistance_C");
static_assert(sizeof(UBTD_CheckDistance_C) == 0x000120, "Wrong size on UBTD_CheckDistance_C");
static_assert(offsetof(UBTD_CheckDistance_C, ActorA) == 0x0000A0, "Member 'UBTD_CheckDistance_C::ActorA' has a wrong offset!");
static_assert(offsetof(UBTD_CheckDistance_C, ActorB) == 0x0000C8, "Member 'UBTD_CheckDistance_C::ActorB' has a wrong offset!");
static_assert(offsetof(UBTD_CheckDistance_C, Operator) == 0x0000F0, "Member 'UBTD_CheckDistance_C::Operator' has a wrong offset!");
static_assert(offsetof(UBTD_CheckDistance_C, Distance) == 0x0000F8, "Member 'UBTD_CheckDistance_C::Distance' has a wrong offset!");

}


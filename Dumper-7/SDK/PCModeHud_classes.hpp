#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PCModeHud

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "Engine_structs.hpp"
#include "EnumDifficuty_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PCModeHud.PCModeHud_C
// 0x0080 (0x0288 - 0x0208)
class UPCModeHud_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0208(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             Acurrate;                                          // 0x0210(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Difficulty;                                        // 0x0218(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Dodge;                                             // 0x0220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DodgeBonus;                                        // 0x0228(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             gameTime;                                          // 0x0230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           LeftBox;                                           // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Progress;                                          // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ProgressBonus;                                     // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           RightBox;                                          // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TxtAccuarcy;                                       // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TxtEnergy;                                         // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TxtHeadShot;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TxtHealth;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TxtTotalScore;                                     // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ABP_CharacterBase_C*                    MyOwner;                                           // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PCModeHud(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PCModeHud_C">();
	}
	static class UPCModeHud_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPCModeHud_C>();
	}
};
static_assert(alignof(UPCModeHud_C) == 0x000008, "Wrong alignment on UPCModeHud_C");
static_assert(sizeof(UPCModeHud_C) == 0x000288, "Wrong size on UPCModeHud_C");
static_assert(offsetof(UPCModeHud_C, UberGraphFrame) == 0x000208, "Member 'UPCModeHud_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPCModeHud_C, Acurrate) == 0x000210, "Member 'UPCModeHud_C::Acurrate' has a wrong offset!");
static_assert(offsetof(UPCModeHud_C, Difficulty) == 0x000218, "Member 'UPCModeHud_C::Difficulty' has a wrong offset!");
static_assert(offsetof(UPCModeHud_C, Dodge) == 0x000220, "Member 'UPCModeHud_C::Dodge' has a wrong offset!");
static_assert(offsetof(UPCModeHud_C, DodgeBonus) == 0x000228, "Member 'UPCModeHud_C::DodgeBonus' has a wrong offset!");
static_assert(offsetof(UPCModeHud_C, gameTime) == 0x000230, "Member 'UPCModeHud_C::gameTime' has a wrong offset!");
static_assert(offsetof(UPCModeHud_C, LeftBox) == 0x000238, "Member 'UPCModeHud_C::LeftBox' has a wrong offset!");
static_assert(offsetof(UPCModeHud_C, Progress) == 0x000240, "Member 'UPCModeHud_C::Progress' has a wrong offset!");
static_assert(offsetof(UPCModeHud_C, ProgressBonus) == 0x000248, "Member 'UPCModeHud_C::ProgressBonus' has a wrong offset!");
static_assert(offsetof(UPCModeHud_C, RightBox) == 0x000250, "Member 'UPCModeHud_C::RightBox' has a wrong offset!");
static_assert(offsetof(UPCModeHud_C, TxtAccuarcy) == 0x000258, "Member 'UPCModeHud_C::TxtAccuarcy' has a wrong offset!");
static_assert(offsetof(UPCModeHud_C, TxtEnergy) == 0x000260, "Member 'UPCModeHud_C::TxtEnergy' has a wrong offset!");
static_assert(offsetof(UPCModeHud_C, TxtHeadShot) == 0x000268, "Member 'UPCModeHud_C::TxtHeadShot' has a wrong offset!");
static_assert(offsetof(UPCModeHud_C, TxtHealth) == 0x000270, "Member 'UPCModeHud_C::TxtHealth' has a wrong offset!");
static_assert(offsetof(UPCModeHud_C, TxtTotalScore) == 0x000278, "Member 'UPCModeHud_C::TxtTotalScore' has a wrong offset!");
static_assert(offsetof(UPCModeHud_C, MyOwner) == 0x000280, "Member 'UPCModeHud_C::MyOwner' has a wrong offset!");

}


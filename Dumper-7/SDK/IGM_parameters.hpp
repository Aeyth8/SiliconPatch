#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IGM

#include "Basic.hpp"


namespace SDK::Params
{

// Function IGM.IGM_C.ExecuteUbergraph_IGM
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) IGM_C_ExecuteUbergraph_IGM final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IGM_C_ExecuteUbergraph_IGM) == 0x000008, "Wrong alignment on IGM_C_ExecuteUbergraph_IGM");
static_assert(sizeof(IGM_C_ExecuteUbergraph_IGM) == 0x000020, "Wrong size on IGM_C_ExecuteUbergraph_IGM");
static_assert(offsetof(IGM_C_ExecuteUbergraph_IGM, EntryPoint) == 0x000000, "Member 'IGM_C_ExecuteUbergraph_IGM::EntryPoint' has a wrong offset!");
static_assert(offsetof(IGM_C_ExecuteUbergraph_IGM, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'IGM_C_ExecuteUbergraph_IGM::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(IGM_C_ExecuteUbergraph_IGM, K2Node_Event_IsDesignTime) == 0x000018, "Member 'IGM_C_ExecuteUbergraph_IGM::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function IGM.IGM_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct IGM_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IGM_C_PreConstruct) == 0x000001, "Wrong alignment on IGM_C_PreConstruct");
static_assert(sizeof(IGM_C_PreConstruct) == 0x000001, "Wrong size on IGM_C_PreConstruct");
static_assert(offsetof(IGM_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'IGM_C_PreConstruct::IsDesignTime' has a wrong offset!");

}


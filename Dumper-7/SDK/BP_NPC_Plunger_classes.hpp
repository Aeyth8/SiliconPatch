#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC_Plunger

#include "Basic.hpp"

#include "Enum_PatrolType_structs.hpp"
#include "Engine_structs.hpp"
#include "Struct_BindTriggerAllure_structs.hpp"
#include "BP_NPC_Base_classes.hpp"
#include "Enum_BehaviorType_structs.hpp"
#include "Struct_PatrolParam_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NPC_Plunger.BP_NPC_Plunger_C
// 0x00D0 (0x0980 - 0x08B0)
class ABP_NPC_Plunger_C final : public ABP_NPC_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_NPC_Plunger_C;                   // 0x08B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          BodyTrace4;                                        // 0x08B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BodyTrace2;                                        // 0x08C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BodyTrace1;                                        // 0x08C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BodyTrace3;                                        // 0x08D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 BrokenMesh;                                        // 0x08D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         HitReactionTime;                                   // 0x08E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HitReactionTimeCurrent;                            // 0x08E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttackSpeed;                                       // 0x08E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttackSpeedMax;                                    // 0x08F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SwitchCoverTimeMin;                                // 0x08F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SwitchCoverTimeMax;                                // 0x0900(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInitSettings;                                    // 0x0908(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_909[0x3];                                      // 0x0909(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AttackSpeed_Min_;                                  // 0x090C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackSpeed_Max_;                                  // 0x0910(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SwitchCoverInterval_Min_;                          // 0x0914(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SwitchCoverInterval_Max_;                          // 0x0918(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_BehaviorType                             HitTransition;                                     // 0x091C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91D[0x3];                                      // 0x091D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PatrolRoute_C*                      _PatrolRoute;                                      // 0x0920(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_PatrolType                               _PatrolType;                                       // 0x0928(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_929[0x3];                                      // 0x0929(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _PatrolSpeed;                                      // 0x092C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnAlertEvent;                                      // 0x0930(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         AlarmRadius;                                       // 0x0940(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_944[0x4];                                      // 0x0944(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_PatrolParam>            _PatrolParam;                                      // 0x0948(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FStruct_BindTriggerAllure>      BindTriggerParam;                                  // 0x0958(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	UMulticastDelegateProperty_                   OnDeadEvent;                                       // 0x0968(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_BP_NPC_Plunger(int32 EntryPoint);
	void AlertEvent();
	void BndEvt__BehaviorComponent_K2Node_ComponentBoundEvent_0_OnEndAttackRanged__DelegateSignature();
	void PatrolInit();
	void TriggerInit();
	void OnHitHeadDead(const struct FVector& HitLocation_0, const struct FVector& HitNormal_0, class APlayerController* PlayerController);
	void ReceiveTick(float DeltaSeconds);
	void OnDeath(class APlayerController* PlayerController);
	void OnHitOther(class APlayerController* PlayerController, const struct FVector& HitLocation_0, const struct FVector& HitNormal_0);
	void OnHitBody(class APlayerController* PlayerController, const struct FVector& HitLocation_0, const struct FVector& HitNormal_0);
	void OnHitHead(class APlayerController* PlayerController, const struct FVector& HitLocation_0, const struct FVector& HitNormal_0);
	void ReceiveBeginPlay();
	void ReceiveAnyDamage(float Damage_0, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NPC_Plunger_C">();
	}
	static class ABP_NPC_Plunger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NPC_Plunger_C>();
	}
};
static_assert(alignof(ABP_NPC_Plunger_C) == 0x000010, "Wrong alignment on ABP_NPC_Plunger_C");
static_assert(sizeof(ABP_NPC_Plunger_C) == 0x000980, "Wrong size on ABP_NPC_Plunger_C");
static_assert(offsetof(ABP_NPC_Plunger_C, UberGraphFrame_BP_NPC_Plunger_C) == 0x0008B0, "Member 'ABP_NPC_Plunger_C::UberGraphFrame_BP_NPC_Plunger_C' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, BodyTrace4) == 0x0008B8, "Member 'ABP_NPC_Plunger_C::BodyTrace4' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, BodyTrace2) == 0x0008C0, "Member 'ABP_NPC_Plunger_C::BodyTrace2' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, BodyTrace1) == 0x0008C8, "Member 'ABP_NPC_Plunger_C::BodyTrace1' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, BodyTrace3) == 0x0008D0, "Member 'ABP_NPC_Plunger_C::BodyTrace3' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, BrokenMesh) == 0x0008D8, "Member 'ABP_NPC_Plunger_C::BrokenMesh' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, HitReactionTime) == 0x0008E0, "Member 'ABP_NPC_Plunger_C::HitReactionTime' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, HitReactionTimeCurrent) == 0x0008E4, "Member 'ABP_NPC_Plunger_C::HitReactionTimeCurrent' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, AttackSpeed) == 0x0008E8, "Member 'ABP_NPC_Plunger_C::AttackSpeed' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, AttackSpeedMax) == 0x0008F0, "Member 'ABP_NPC_Plunger_C::AttackSpeedMax' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, SwitchCoverTimeMin) == 0x0008F8, "Member 'ABP_NPC_Plunger_C::SwitchCoverTimeMin' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, SwitchCoverTimeMax) == 0x000900, "Member 'ABP_NPC_Plunger_C::SwitchCoverTimeMax' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, IsInitSettings) == 0x000908, "Member 'ABP_NPC_Plunger_C::IsInitSettings' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, AttackSpeed_Min_) == 0x00090C, "Member 'ABP_NPC_Plunger_C::AttackSpeed_Min_' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, AttackSpeed_Max_) == 0x000910, "Member 'ABP_NPC_Plunger_C::AttackSpeed_Max_' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, SwitchCoverInterval_Min_) == 0x000914, "Member 'ABP_NPC_Plunger_C::SwitchCoverInterval_Min_' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, SwitchCoverInterval_Max_) == 0x000918, "Member 'ABP_NPC_Plunger_C::SwitchCoverInterval_Max_' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, HitTransition) == 0x00091C, "Member 'ABP_NPC_Plunger_C::HitTransition' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, _PatrolRoute) == 0x000920, "Member 'ABP_NPC_Plunger_C::_PatrolRoute' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, _PatrolType) == 0x000928, "Member 'ABP_NPC_Plunger_C::_PatrolType' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, _PatrolSpeed) == 0x00092C, "Member 'ABP_NPC_Plunger_C::_PatrolSpeed' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, OnAlertEvent) == 0x000930, "Member 'ABP_NPC_Plunger_C::OnAlertEvent' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, AlarmRadius) == 0x000940, "Member 'ABP_NPC_Plunger_C::AlarmRadius' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, _PatrolParam) == 0x000948, "Member 'ABP_NPC_Plunger_C::_PatrolParam' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, BindTriggerParam) == 0x000958, "Member 'ABP_NPC_Plunger_C::BindTriggerParam' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Plunger_C, OnDeadEvent) == 0x000968, "Member 'ABP_NPC_Plunger_C::OnDeadEvent' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lv3_NPCBase

#include "Basic.hpp"

#include "BP_Lv3_NPCBase_classes.hpp"
#include "BP_Lv3_NPCBase_parameters.hpp"


namespace SDK
{

// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.ExecuteUbergraph_BP_Lv3_NPCBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_NPCBase_C::ExecuteUbergraph_BP_Lv3_NPCBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "ExecuteUbergraph_BP_Lv3_NPCBase");

	Params::BP_Lv3_NPCBase_C_ExecuteUbergraph_BP_Lv3_NPCBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.HitBodyDead
// (BlueprintCallable, BlueprintEvent)

void ABP_Lv3_NPCBase_C::HitBodyDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "HitBodyDead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.HitHeadDead
// (BlueprintCallable, BlueprintEvent)

void ABP_Lv3_NPCBase_C::HitHeadDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "HitHeadDead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.HitBody
// (BlueprintCallable, BlueprintEvent)

void ABP_Lv3_NPCBase_C::HitBody()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "HitBody");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.HitHead
// (BlueprintCallable, BlueprintEvent)

void ABP_Lv3_NPCBase_C::HitHead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "HitHead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.EVT_OnDestroyed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyedActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_NPCBase_C::EVT_OnDestroyed(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "EVT_OnDestroyed");

	Params::BP_Lv3_NPCBase_C_EVT_OnDestroyed Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.HeadKill
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   loacation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Normal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_NPCBase_C::HeadKill(const struct FVector& loacation, const struct FVector& Normal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "HeadKill");

	Params::BP_Lv3_NPCBase_C_HeadKill Parms{};

	Parms.loacation = std::move(loacation);
	Parms.Normal = std::move(Normal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Lv3_NPCBase_C::BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::BP_Lv3_NPCBase_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_NPCBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "ReceiveTick");

	Params::BP_Lv3_NPCBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Lv3_NPCBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Lv3_NPCBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.ChangeBehavior
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_BehaviorType                       NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_NPCBase_C::ChangeBehavior(Enum_BehaviorType NewState, const struct FVector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "ChangeBehavior");

	Params::BP_Lv3_NPCBase_C_ChangeBehavior Parms{};

	Parms.NewState = NewState;
	Parms.TargetLocation = std::move(TargetLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.GameOver
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TipsIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_NPCBase_C::GameOver(int32 TipsIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "GameOver");

	Params::BP_Lv3_NPCBase_C_GameOver Parms{};

	Parms.TipsIndex = TipsIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.Dead
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lv3_NPCBase_C::Dead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "Dead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.Attack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UseControllerRotation                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float*                                  Delay                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_NPCBase_C::Attack(bool UseControllerRotation, float* Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "Attack");

	Params::BP_Lv3_NPCBase_C_Attack Parms{};

	Parms.UseControllerRotation = UseControllerRotation;

	UObject::ProcessEvent(Func, &Parms);

	if (Delay != nullptr)
		*Delay = Parms.Delay;
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.InitNPC
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lv3_NPCBase_C::InitNPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "InitNPC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.GetDifficultConfig
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLv2_DifficultStruct*            NewParam                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_NPCBase_C::GetDifficultConfig(struct FLv2_DifficultStruct* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "GetDifficultConfig");

	Params::BP_Lv3_NPCBase_C_GetDifficultConfig Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.SpawnWeapon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Lv3_NPCBase_C::SpawnWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "SpawnWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.ThrowThunder
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float*                                  Delay                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_NPCBase_C::ThrowThunder(float* Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "ThrowThunder");

	Params::BP_Lv3_NPCBase_C_ThrowThunder Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Delay != nullptr)
		*Delay = Parms.Delay;
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.ToggleWeapon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Lv3_NPCBase_C::ToggleWeapon(bool NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "ToggleWeapon");

	Params::BP_Lv3_NPCBase_C_ToggleWeapon Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.SpawnThunder
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRotator&                  NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Lv3_NPCBase_C::SpawnThunder(const struct FRotator& NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "SpawnThunder");

	Params::BP_Lv3_NPCBase_C_SpawnThunder Parms{};

	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.Reload
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float*                                  Delay                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_NPCBase_C::Reload(float* Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "Reload");

	Params::BP_Lv3_NPCBase_C_Reload Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Delay != nullptr)
		*Delay = Parms.Delay;
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.JumpToCar
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lv3_NPCBase_C::JumpToCar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "JumpToCar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.DestroyWeapon
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lv3_NPCBase_C::DestroyWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "DestroyWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.HitAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BoneName_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lv3_NPCBase_C::HitAnim(class FName BoneName_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "HitAnim");

	Params::BP_Lv3_NPCBase_C_HitAnim Parms{};

	Parms.BoneName_0 = BoneName_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lv3_NPCBase.BP_Lv3_NPCBase_C.BlowUp
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lv3_NPCBase_C::BlowUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lv3_NPCBase_C", "BlowUp");

	UObject::ProcessEvent(Func, nullptr);
}

}


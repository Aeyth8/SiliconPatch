#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_LookAtTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTT_LookAtTarget.BTT_LookAtTarget_C.ExecuteUbergraph_BTT_LookAtTarget
// 0x0020 (0x0020 - 0x0000)
struct BTT_LookAtTarget_C_ExecuteUbergraph_BTT_LookAtTarget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OwnerActor;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AIC_C*                              K2Node_DynamicCast_AsBP_AIC;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_LookAtTarget_C_ExecuteUbergraph_BTT_LookAtTarget) == 0x000008, "Wrong alignment on BTT_LookAtTarget_C_ExecuteUbergraph_BTT_LookAtTarget");
static_assert(sizeof(BTT_LookAtTarget_C_ExecuteUbergraph_BTT_LookAtTarget) == 0x000020, "Wrong size on BTT_LookAtTarget_C_ExecuteUbergraph_BTT_LookAtTarget");
static_assert(offsetof(BTT_LookAtTarget_C_ExecuteUbergraph_BTT_LookAtTarget, EntryPoint) == 0x000000, "Member 'BTT_LookAtTarget_C_ExecuteUbergraph_BTT_LookAtTarget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_LookAtTarget_C_ExecuteUbergraph_BTT_LookAtTarget, K2Node_Event_OwnerActor) == 0x000008, "Member 'BTT_LookAtTarget_C_ExecuteUbergraph_BTT_LookAtTarget::K2Node_Event_OwnerActor' has a wrong offset!");
static_assert(offsetof(BTT_LookAtTarget_C_ExecuteUbergraph_BTT_LookAtTarget, K2Node_DynamicCast_AsBP_AIC) == 0x000010, "Member 'BTT_LookAtTarget_C_ExecuteUbergraph_BTT_LookAtTarget::K2Node_DynamicCast_AsBP_AIC' has a wrong offset!");
static_assert(offsetof(BTT_LookAtTarget_C_ExecuteUbergraph_BTT_LookAtTarget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BTT_LookAtTarget_C_ExecuteUbergraph_BTT_LookAtTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BTT_LookAtTarget.BTT_LookAtTarget_C.ReceiveExecute
// 0x0008 (0x0008 - 0x0000)
struct BTT_LookAtTarget_C_ReceiveExecute final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_LookAtTarget_C_ReceiveExecute) == 0x000008, "Wrong alignment on BTT_LookAtTarget_C_ReceiveExecute");
static_assert(sizeof(BTT_LookAtTarget_C_ReceiveExecute) == 0x000008, "Wrong size on BTT_LookAtTarget_C_ReceiveExecute");
static_assert(offsetof(BTT_LookAtTarget_C_ReceiveExecute, OwnerActor) == 0x000000, "Member 'BTT_LookAtTarget_C_ReceiveExecute::OwnerActor' has a wrong offset!");

// Function BTT_LookAtTarget.BTT_LookAtTarget_C.FaceToViewTarget
// 0x0058 (0x0058 - 0x0000)
struct BTT_LookAtTarget_C_FaceToViewTarget final
{
public:
	class ABP_AIC_C*                              SelfController;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SelfActor;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_LookAtTarget_C_FaceToViewTarget) == 0x000008, "Wrong alignment on BTT_LookAtTarget_C_FaceToViewTarget");
static_assert(sizeof(BTT_LookAtTarget_C_FaceToViewTarget) == 0x000058, "Wrong size on BTT_LookAtTarget_C_FaceToViewTarget");
static_assert(offsetof(BTT_LookAtTarget_C_FaceToViewTarget, SelfController) == 0x000000, "Member 'BTT_LookAtTarget_C_FaceToViewTarget::SelfController' has a wrong offset!");
static_assert(offsetof(BTT_LookAtTarget_C_FaceToViewTarget, SelfActor) == 0x000008, "Member 'BTT_LookAtTarget_C_FaceToViewTarget::SelfActor' has a wrong offset!");
static_assert(offsetof(BTT_LookAtTarget_C_FaceToViewTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BTT_LookAtTarget_C_FaceToViewTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_LookAtTarget_C_FaceToViewTarget, CallFunc_GetViewTarget_ReturnValue) == 0x000020, "Member 'BTT_LookAtTarget_C_FaceToViewTarget::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_LookAtTarget_C_FaceToViewTarget, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000028, "Member 'BTT_LookAtTarget_C_FaceToViewTarget::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTT_LookAtTarget_C_FaceToViewTarget, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BTT_LookAtTarget_C_FaceToViewTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_LookAtTarget_C_FaceToViewTarget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000038, "Member 'BTT_LookAtTarget_C_FaceToViewTarget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_LookAtTarget_C_FaceToViewTarget, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000044, "Member 'BTT_LookAtTarget_C_FaceToViewTarget::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_LookAtTarget_C_FaceToViewTarget, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000050, "Member 'BTT_LookAtTarget_C_FaceToViewTarget::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BTT_LookAtTarget.BTT_LookAtTarget_C.FaceToTarget
// 0x0060 (0x0060 - 0x0000)
struct BTT_LookAtTarget_C_FaceToTarget final
{
public:
	class ABP_AIC_C*                              SelfController;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCurrentAttackTarget_TargetRef;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_LookAtTarget_C_FaceToTarget) == 0x000008, "Wrong alignment on BTT_LookAtTarget_C_FaceToTarget");
static_assert(sizeof(BTT_LookAtTarget_C_FaceToTarget) == 0x000060, "Wrong size on BTT_LookAtTarget_C_FaceToTarget");
static_assert(offsetof(BTT_LookAtTarget_C_FaceToTarget, SelfController) == 0x000000, "Member 'BTT_LookAtTarget_C_FaceToTarget::SelfController' has a wrong offset!");
static_assert(offsetof(BTT_LookAtTarget_C_FaceToTarget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BTT_LookAtTarget_C_FaceToTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_LookAtTarget_C_FaceToTarget, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BTT_LookAtTarget_C_FaceToTarget::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_LookAtTarget_C_FaceToTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BTT_LookAtTarget_C_FaceToTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_LookAtTarget_C_FaceToTarget, CallFunc_GetCurrentAttackTarget_TargetRef) == 0x000028, "Member 'BTT_LookAtTarget_C_FaceToTarget::CallFunc_GetCurrentAttackTarget_TargetRef' has a wrong offset!");
static_assert(offsetof(BTT_LookAtTarget_C_FaceToTarget, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000030, "Member 'BTT_LookAtTarget_C_FaceToTarget::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTT_LookAtTarget_C_FaceToTarget, CallFunc_IsValid_ReturnValue1) == 0x00003C, "Member 'BTT_LookAtTarget_C_FaceToTarget::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTT_LookAtTarget_C_FaceToTarget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000040, "Member 'BTT_LookAtTarget_C_FaceToTarget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_LookAtTarget_C_FaceToTarget, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x00004C, "Member 'BTT_LookAtTarget_C_FaceToTarget::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_LookAtTarget_C_FaceToTarget, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000058, "Member 'BTT_LookAtTarget_C_FaceToTarget::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Wpn_Pistol

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BPWeaponBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Wpn_Pistol.Wpn_Pistol_C
// 0x0020 (0x08A0 - 0x0880)
class AWpn_Pistol_C : public ABPWeaponBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Wpn_Pistol_C;                       // 0x0880(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UMaterialInstanceDynamic*               MI;                                                // 0x0888(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFirstTutorial;                                   // 0x0890(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsStartTutorial;                                   // 0x0891(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Wpn_Pistol(int32 EntryPoint);
	void SetNotDelay();
	void FirstTutorial(bool Value);
	void OnLineTriggerPull(bool IsFromRightHand, class AActor* hand);
	void Evt_Reload();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Wpn_Pistol_C">();
	}
	static class AWpn_Pistol_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWpn_Pistol_C>();
	}
};
static_assert(alignof(AWpn_Pistol_C) == 0x000010, "Wrong alignment on AWpn_Pistol_C");
static_assert(sizeof(AWpn_Pistol_C) == 0x0008A0, "Wrong size on AWpn_Pistol_C");
static_assert(offsetof(AWpn_Pistol_C, UberGraphFrame_Wpn_Pistol_C) == 0x000880, "Member 'AWpn_Pistol_C::UberGraphFrame_Wpn_Pistol_C' has a wrong offset!");
static_assert(offsetof(AWpn_Pistol_C, MI) == 0x000888, "Member 'AWpn_Pistol_C::MI' has a wrong offset!");
static_assert(offsetof(AWpn_Pistol_C, IsFirstTutorial) == 0x000890, "Member 'AWpn_Pistol_C::IsFirstTutorial' has a wrong offset!");
static_assert(offsetof(AWpn_Pistol_C, IsStartTutorial) == 0x000891, "Member 'AWpn_Pistol_C::IsStartTutorial' has a wrong offset!");

}


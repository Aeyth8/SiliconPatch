#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemBase

#include "Basic.hpp"

#include "SiliconRising_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ItemBase.BP_ItemBase_C
// 0x0108 (0x0430 - 0x0328)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_ItemBase_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 WeaponMesh;                                        // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_1D1BEA1E4F4968C607358A93FC1302DE; // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_1D1BEA1E4F4968C607358A93FC1302DE; // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemTypes                                    ItemType;                                          // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x3];                                      // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AddHealth;                                         // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MI_Glow;                                           // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SelectionGlowScale;                                // 0x037C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GlowOpacity;                                       // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 HitActor;                                          // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitInstigatedBy;                                   // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398[0x8];                                      // 0x0398(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             MyTransform;                                       // 0x03A0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDestroy;                                         // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        HitParticle;                                       // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StayTime;                                          // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StayTimeCurrent;                                   // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             HitSound;                                          // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             HealPackSound;                                     // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterBase_C*                    Getter;                                            // 0x03F8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFromRight;                                       // 0x0400(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          StartFly_;                                         // 0x0401(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_402[0x6];                                      // 0x0402(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 FlyActor;                                          // 0x0408(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DTime;                                             // 0x0410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FlyTime;                                           // 0x0414(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnHitBonus;                                        // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_BP_ItemBase(int32 EntryPoint);
	void BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnFly();
	void ReplicateParticle();
	void ReplicateSound();
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void FlyToTarget(class AActor* Target, bool IsRightHand);
	void MovementTimeLine(const struct FTransform& MyTransform_0, class USceneComponent* self2);
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ItemBase_C">();
	}
	static class ABP_ItemBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ItemBase_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_ItemBase_C) == 0x000010, "Wrong alignment on ABP_ItemBase_C");
static_assert(sizeof(ABP_ItemBase_C) == 0x000430, "Wrong size on ABP_ItemBase_C");
static_assert(offsetof(ABP_ItemBase_C, UberGraphFrame) == 0x000328, "Member 'ABP_ItemBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, WeaponMesh) == 0x000330, "Member 'ABP_ItemBase_C::WeaponMesh' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, Box) == 0x000338, "Member 'ABP_ItemBase_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, RotatingMovement) == 0x000340, "Member 'ABP_ItemBase_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, ParticleSystem) == 0x000348, "Member 'ABP_ItemBase_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, DefaultSceneRoot) == 0x000350, "Member 'ABP_ItemBase_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, Timeline_0_NewTrack_0_1D1BEA1E4F4968C607358A93FC1302DE) == 0x000358, "Member 'ABP_ItemBase_C::Timeline_0_NewTrack_0_1D1BEA1E4F4968C607358A93FC1302DE' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, Timeline_0__Direction_1D1BEA1E4F4968C607358A93FC1302DE) == 0x00035C, "Member 'ABP_ItemBase_C::Timeline_0__Direction_1D1BEA1E4F4968C607358A93FC1302DE' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, Timeline_0) == 0x000360, "Member 'ABP_ItemBase_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, ItemType) == 0x000368, "Member 'ABP_ItemBase_C::ItemType' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, AddHealth) == 0x00036C, "Member 'ABP_ItemBase_C::AddHealth' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, MI_Glow) == 0x000370, "Member 'ABP_ItemBase_C::MI_Glow' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, Distance) == 0x000378, "Member 'ABP_ItemBase_C::Distance' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, SelectionGlowScale) == 0x00037C, "Member 'ABP_ItemBase_C::SelectionGlowScale' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, GlowOpacity) == 0x000380, "Member 'ABP_ItemBase_C::GlowOpacity' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, HitActor) == 0x000388, "Member 'ABP_ItemBase_C::HitActor' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, HitInstigatedBy) == 0x000390, "Member 'ABP_ItemBase_C::HitInstigatedBy' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, MyTransform) == 0x0003A0, "Member 'ABP_ItemBase_C::MyTransform' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, IsDestroy) == 0x0003D0, "Member 'ABP_ItemBase_C::IsDestroy' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, HitParticle) == 0x0003D8, "Member 'ABP_ItemBase_C::HitParticle' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, StayTime) == 0x0003E0, "Member 'ABP_ItemBase_C::StayTime' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, StayTimeCurrent) == 0x0003E4, "Member 'ABP_ItemBase_C::StayTimeCurrent' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, HitSound) == 0x0003E8, "Member 'ABP_ItemBase_C::HitSound' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, HealPackSound) == 0x0003F0, "Member 'ABP_ItemBase_C::HealPackSound' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, Getter) == 0x0003F8, "Member 'ABP_ItemBase_C::Getter' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, IsFromRight) == 0x000400, "Member 'ABP_ItemBase_C::IsFromRight' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, StartFly_) == 0x000401, "Member 'ABP_ItemBase_C::StartFly_' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, FlyActor) == 0x000408, "Member 'ABP_ItemBase_C::FlyActor' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, DTime) == 0x000410, "Member 'ABP_ItemBase_C::DTime' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, FlyTime) == 0x000414, "Member 'ABP_ItemBase_C::FlyTime' has a wrong offset!");
static_assert(offsetof(ABP_ItemBase_C, OnHitBonus) == 0x000418, "Member 'ABP_ItemBase_C::OnHitBonus' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_MatchSpeed

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTS_MatchSpeed.BTS_MatchSpeed_C
// 0x0058 (0x00F0 - 0x0098)
class UBTS_MatchSpeed_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_AIC_C*                              ControllerRef;                                     // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BehaviorComponent_C*                BehaviorComponent;                                 // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBlackboardKeySelector                 TargetLocationKey;                                 // 0x00B0(0x0028)(Edit, BlueprintVisible)
	struct FVector                                TargetLocation;                                    // 0x00D8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxMoveSpeed;                                      // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTS_MatchSpeed(int32 EntryPoint);
	void ReceiveTick(class AActor* OwnerActor, float DeltaSeconds);
	void ReceiveActivation(class AActor* OwnerActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTS_MatchSpeed_C">();
	}
	static class UBTS_MatchSpeed_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_MatchSpeed_C>();
	}
};
static_assert(alignof(UBTS_MatchSpeed_C) == 0x000008, "Wrong alignment on UBTS_MatchSpeed_C");
static_assert(sizeof(UBTS_MatchSpeed_C) == 0x0000F0, "Wrong size on UBTS_MatchSpeed_C");
static_assert(offsetof(UBTS_MatchSpeed_C, UberGraphFrame) == 0x000098, "Member 'UBTS_MatchSpeed_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTS_MatchSpeed_C, ControllerRef) == 0x0000A0, "Member 'UBTS_MatchSpeed_C::ControllerRef' has a wrong offset!");
static_assert(offsetof(UBTS_MatchSpeed_C, BehaviorComponent) == 0x0000A8, "Member 'UBTS_MatchSpeed_C::BehaviorComponent' has a wrong offset!");
static_assert(offsetof(UBTS_MatchSpeed_C, TargetLocationKey) == 0x0000B0, "Member 'UBTS_MatchSpeed_C::TargetLocationKey' has a wrong offset!");
static_assert(offsetof(UBTS_MatchSpeed_C, TargetLocation) == 0x0000D8, "Member 'UBTS_MatchSpeed_C::TargetLocation' has a wrong offset!");
static_assert(offsetof(UBTS_MatchSpeed_C, MaxMoveSpeed) == 0x0000E4, "Member 'UBTS_MatchSpeed_C::MaxMoveSpeed' has a wrong offset!");
static_assert(offsetof(UBTS_MatchSpeed_C, Distance) == 0x0000E8, "Member 'UBTS_MatchSpeed_C::Distance' has a wrong offset!");

}


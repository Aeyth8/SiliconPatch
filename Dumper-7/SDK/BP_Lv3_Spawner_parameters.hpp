#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lv3_Spawner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Lv3_Spawner.BP_Lv3_Wave_C.ExecuteUbergraph_BP_Lv3_Wave
// 0x00E0 (0x00E0 - 0x0000)
struct BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AVehicle_MC_C*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	class AVehicle_MC_C*                          CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_lv3_ActiveBox_C*                    K2Node_CustomEvent_ActiveBox;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0xB];                                       // 0x0085(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Lv3_BaseCar_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Lv4BaseCar_C*                       K2Node_DynamicCast_AsBP_Lv_4Base_Car;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave) == 0x000010, "Wrong alignment on BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave");
static_assert(sizeof(BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave) == 0x0000E0, "Wrong size on BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave");
static_assert(offsetof(BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave, EntryPoint) == 0x000000, "Member 'BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave, CallFunc_GetAllActorsOfClass_OutActors) == 0x000008, "Member 'BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave, K2Node_Event_DeltaSeconds) == 0x000020, "Member 'BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave, K2Node_CustomEvent_ActiveBox) == 0x000028, "Member 'BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave::K2Node_CustomEvent_ActiveBox' has a wrong offset!");
static_assert(offsetof(BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave, CallFunc_BreakTransform_Location) == 0x000060, "Member 'BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave, CallFunc_BreakTransform_Rotation) == 0x00006C, "Member 'BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave, CallFunc_BreakTransform_Scale) == 0x000078, "Member 'BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave, CallFunc_IsValidClass_ReturnValue) == 0x000084, "Member 'BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000C0, "Member 'BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000C8, "Member 'BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave, K2Node_DynamicCast_AsBP_Lv_4Base_Car) == 0x0000D0, "Member 'BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave::K2Node_DynamicCast_AsBP_Lv_4Base_Car' has a wrong offset!");
static_assert(offsetof(BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BP_Lv3_Wave_C_ExecuteUbergraph_BP_Lv3_Wave::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Lv3_Spawner.BP_Lv3_Wave_C.SpawnNPC
// 0x0008 (0x0008 - 0x0000)
struct BP_Lv3_Wave_C_SpawnNPC final
{
public:
	class ABP_lv3_ActiveBox_C*                    ActiveBox;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv3_Wave_C_SpawnNPC) == 0x000008, "Wrong alignment on BP_Lv3_Wave_C_SpawnNPC");
static_assert(sizeof(BP_Lv3_Wave_C_SpawnNPC) == 0x000008, "Wrong size on BP_Lv3_Wave_C_SpawnNPC");
static_assert(offsetof(BP_Lv3_Wave_C_SpawnNPC, ActiveBox) == 0x000000, "Member 'BP_Lv3_Wave_C_SpawnNPC::ActiveBox' has a wrong offset!");

// Function BP_Lv3_Spawner.BP_Lv3_Wave_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Lv3_Wave_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv3_Wave_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Lv3_Wave_C_ReceiveTick");
static_assert(sizeof(BP_Lv3_Wave_C_ReceiveTick) == 0x000004, "Wrong size on BP_Lv3_Wave_C_ReceiveTick");
static_assert(offsetof(BP_Lv3_Wave_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Lv3_Wave_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Lv3_Spawner.BP_Lv3_Wave_C.UserConstructionScript
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Lv3_Wave_C_UserConstructionScript final
{
public:
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0000(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0018)()
};
static_assert(alignof(BP_Lv3_Wave_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Lv3_Wave_C_UserConstructionScript");
static_assert(sizeof(BP_Lv3_Wave_C_UserConstructionScript) == 0x0000B0, "Wrong size on BP_Lv3_Wave_C_UserConstructionScript");
static_assert(offsetof(BP_Lv3_Wave_C_UserConstructionScript, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000000, "Member 'BP_Lv3_Wave_C_UserConstructionScript::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Lv3_Wave_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue) == 0x000088, "Member 'BP_Lv3_Wave_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv3_Wave_C_UserConstructionScript, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'BP_Lv3_Wave_C_UserConstructionScript::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_Lv3_Spawner.BP_Lv3_Wave_C.IsAllDead
// 0x0001 (0x0001 - 0x0000)
struct BP_Lv3_Wave_C_IsAllDead final
{
public:
	bool                                          AllDead;                                           // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lv3_Wave_C_IsAllDead) == 0x000001, "Wrong alignment on BP_Lv3_Wave_C_IsAllDead");
static_assert(sizeof(BP_Lv3_Wave_C_IsAllDead) == 0x000001, "Wrong size on BP_Lv3_Wave_C_IsAllDead");
static_assert(offsetof(BP_Lv3_Wave_C_IsAllDead, AllDead) == 0x000000, "Member 'BP_Lv3_Wave_C_IsAllDead::AllDead' has a wrong offset!");

}


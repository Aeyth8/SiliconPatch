#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MobileHUD

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function MobileHUD.MobileHUD_C.ExecuteUbergraph_MobileHUD
// 0x0090 (0x0090 - 0x0000)
struct MobileHUD_C_ExecuteUbergraph_MobileHUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterPhone_C*                   K2Node_DynamicCast_AsBP_Character_Phone;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBulletScore_Score;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0078(0x0018)()
};
static_assert(alignof(MobileHUD_C_ExecuteUbergraph_MobileHUD) == 0x000008, "Wrong alignment on MobileHUD_C_ExecuteUbergraph_MobileHUD");
static_assert(sizeof(MobileHUD_C_ExecuteUbergraph_MobileHUD) == 0x000090, "Wrong size on MobileHUD_C_ExecuteUbergraph_MobileHUD");
static_assert(offsetof(MobileHUD_C_ExecuteUbergraph_MobileHUD, EntryPoint) == 0x000000, "Member 'MobileHUD_C_ExecuteUbergraph_MobileHUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_ExecuteUbergraph_MobileHUD, K2Node_Event_MyGeometry) == 0x000004, "Member 'MobileHUD_C_ExecuteUbergraph_MobileHUD::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_ExecuteUbergraph_MobileHUD, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'MobileHUD_C_ExecuteUbergraph_MobileHUD::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_ExecuteUbergraph_MobileHUD, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000040, "Member 'MobileHUD_C_ExecuteUbergraph_MobileHUD::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_ExecuteUbergraph_MobileHUD, K2Node_DynamicCast_AsBP_Character_Phone) == 0x000048, "Member 'MobileHUD_C_ExecuteUbergraph_MobileHUD::K2Node_DynamicCast_AsBP_Character_Phone' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_ExecuteUbergraph_MobileHUD, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'MobileHUD_C_ExecuteUbergraph_MobileHUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_ExecuteUbergraph_MobileHUD, CallFunc_GetGameInstance_ReturnValue) == 0x000058, "Member 'MobileHUD_C_ExecuteUbergraph_MobileHUD::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_ExecuteUbergraph_MobileHUD, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000060, "Member 'MobileHUD_C_ExecuteUbergraph_MobileHUD::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_ExecuteUbergraph_MobileHUD, K2Node_DynamicCast_AsMer_2Game_Instance) == 0x000068, "Member 'MobileHUD_C_ExecuteUbergraph_MobileHUD::K2Node_DynamicCast_AsMer_2Game_Instance' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_ExecuteUbergraph_MobileHUD, K2Node_DynamicCast_bSuccess1) == 0x000070, "Member 'MobileHUD_C_ExecuteUbergraph_MobileHUD::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_ExecuteUbergraph_MobileHUD, CallFunc_GetBulletScore_Score) == 0x000074, "Member 'MobileHUD_C_ExecuteUbergraph_MobileHUD::CallFunc_GetBulletScore_Score' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_ExecuteUbergraph_MobileHUD, CallFunc_Conv_IntToText_ReturnValue) == 0x000078, "Member 'MobileHUD_C_ExecuteUbergraph_MobileHUD::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function MobileHUD.MobileHUD_C.Tick
// 0x003C (0x003C - 0x0000)
struct MobileHUD_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MobileHUD_C_Tick) == 0x000004, "Wrong alignment on MobileHUD_C_Tick");
static_assert(sizeof(MobileHUD_C_Tick) == 0x00003C, "Wrong size on MobileHUD_C_Tick");
static_assert(offsetof(MobileHUD_C_Tick, MyGeometry) == 0x000000, "Member 'MobileHUD_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_Tick, InDeltaTime) == 0x000038, "Member 'MobileHUD_C_Tick::InDeltaTime' has a wrong offset!");

// Function MobileHUD.MobileHUD_C.EnableSwitchButton
// 0x0006 (0x0006 - 0x0000)
struct MobileHUD_C_EnableSwitchButton final
{
public:
	bool                                          lsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          lsleft_;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue1;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MobileHUD_C_EnableSwitchButton) == 0x000001, "Wrong alignment on MobileHUD_C_EnableSwitchButton");
static_assert(sizeof(MobileHUD_C_EnableSwitchButton) == 0x000006, "Wrong size on MobileHUD_C_EnableSwitchButton");
static_assert(offsetof(MobileHUD_C_EnableSwitchButton, lsEnabled) == 0x000000, "Member 'MobileHUD_C_EnableSwitchButton::lsEnabled' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_EnableSwitchButton, lsleft_) == 0x000001, "Member 'MobileHUD_C_EnableSwitchButton::lsleft_' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_EnableSwitchButton, CallFunc_GetIsEnabled_ReturnValue) == 0x000002, "Member 'MobileHUD_C_EnableSwitchButton::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_EnableSwitchButton, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000003, "Member 'MobileHUD_C_EnableSwitchButton::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_EnableSwitchButton, CallFunc_GetIsEnabled_ReturnValue1) == 0x000004, "Member 'MobileHUD_C_EnableSwitchButton::CallFunc_GetIsEnabled_ReturnValue1' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_EnableSwitchButton, CallFunc_NotEqual_BoolBool_ReturnValue1) == 0x000005, "Member 'MobileHUD_C_EnableSwitchButton::CallFunc_NotEqual_BoolBool_ReturnValue1' has a wrong offset!");

// Function MobileHUD.MobileHUD_C.CheckButtonHovered
// 0x0018 (0x0018 - 0x0000)
struct MobileHUD_C_CheckButtonHovered final
{
public:
	class UButton*                                _button;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MobileHUD_C_CheckButtonHovered) == 0x000008, "Wrong alignment on MobileHUD_C_CheckButtonHovered");
static_assert(sizeof(MobileHUD_C_CheckButtonHovered) == 0x000018, "Wrong size on MobileHUD_C_CheckButtonHovered");
static_assert(offsetof(MobileHUD_C_CheckButtonHovered, _button) == 0x000000, "Member 'MobileHUD_C_CheckButtonHovered::_button' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_CheckButtonHovered, CallFunc_IsHovered_ReturnValue) == 0x000008, "Member 'MobileHUD_C_CheckButtonHovered::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_CheckButtonHovered, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'MobileHUD_C_CheckButtonHovered::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function MobileHUD.MobileHUD_C.SetButtonPerent
// 0x0040 (0x0040 - 0x0000)
struct MobileHUD_C_SetButtonPerent final
{
public:
	float                                         _percent;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UButton*                                Button;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CurColor;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CurDynamicMat;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue1;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MobileHUD_C_SetButtonPerent) == 0x000008, "Wrong alignment on MobileHUD_C_SetButtonPerent");
static_assert(sizeof(MobileHUD_C_SetButtonPerent) == 0x000040, "Wrong size on MobileHUD_C_SetButtonPerent");
static_assert(offsetof(MobileHUD_C_SetButtonPerent, _percent) == 0x000000, "Member 'MobileHUD_C_SetButtonPerent::_percent' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_SetButtonPerent, Button) == 0x000008, "Member 'MobileHUD_C_SetButtonPerent::Button' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_SetButtonPerent, CurColor) == 0x000010, "Member 'MobileHUD_C_SetButtonPerent::CurColor' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_SetButtonPerent, CurDynamicMat) == 0x000020, "Member 'MobileHUD_C_SetButtonPerent::CurDynamicMat' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_SetButtonPerent, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'MobileHUD_C_SetButtonPerent::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_SetButtonPerent, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000030, "Member 'MobileHUD_C_SetButtonPerent::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(MobileHUD_C_SetButtonPerent, CallFunc_GetDynamicMaterial_ReturnValue1) == 0x000038, "Member 'MobileHUD_C_SetButtonPerent::CallFunc_GetDynamicMaterial_ReturnValue1' has a wrong offset!");

}


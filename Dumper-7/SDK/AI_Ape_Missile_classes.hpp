#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AI_Ape_Missile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AI_Projectile_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AI_Ape_Missile.AI_Ape_Missile_C
// 0x0068 (0x05A8 - 0x0540)
class AAI_Ape_Missile_C final : public AAI_Projectile_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_AI_Ape_Missile_C;                   // 0x0540(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               charge;                                            // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Targets;                                           // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               weapon_ape_plsma_beam;                             // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        ParticleExplosion;                                 // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseDamge;                                         // 0x0568(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExplosionRadis;                                    // 0x056C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamgeFallingByDistance;                            // 0x0570(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamgeFallingByBlock;                               // 0x0574(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Target;                                            // 0x0578(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                HigherMiddleLocation;                              // 0x0580(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         status;                                            // 0x058C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldTurn;                                        // 0x0590(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_591[0x3];                                      // 0x0591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MiddleHight;                                       // 0x0594(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         DTime;                                             // 0x0598(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HomingAcceleration;                                // 0x059C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x05A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AI_Ape_Missile(int32 EntryPoint);
	void EnableFX(bool IsEnable);
	void PlayFX(const struct FVector& Location, bool IsShootByPlayerGun);
	void BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void AddDamge(float* FinalDamage);
	void HasBlock_(bool* Result);
	void HeadToTargetLocation(struct FVector& TargetLocation);
	void SetSpeed();
	void GetVectorFromIndex(struct FVector* Vector);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AI_Ape_Missile_C">();
	}
	static class AAI_Ape_Missile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAI_Ape_Missile_C>();
	}
};
static_assert(alignof(AAI_Ape_Missile_C) == 0x000008, "Wrong alignment on AAI_Ape_Missile_C");
static_assert(sizeof(AAI_Ape_Missile_C) == 0x0005A8, "Wrong size on AAI_Ape_Missile_C");
static_assert(offsetof(AAI_Ape_Missile_C, UberGraphFrame_AI_Ape_Missile_C) == 0x000540, "Member 'AAI_Ape_Missile_C::UberGraphFrame_AI_Ape_Missile_C' has a wrong offset!");
static_assert(offsetof(AAI_Ape_Missile_C, charge) == 0x000548, "Member 'AAI_Ape_Missile_C::charge' has a wrong offset!");
static_assert(offsetof(AAI_Ape_Missile_C, Targets) == 0x000550, "Member 'AAI_Ape_Missile_C::Targets' has a wrong offset!");
static_assert(offsetof(AAI_Ape_Missile_C, weapon_ape_plsma_beam) == 0x000558, "Member 'AAI_Ape_Missile_C::weapon_ape_plsma_beam' has a wrong offset!");
static_assert(offsetof(AAI_Ape_Missile_C, ParticleExplosion) == 0x000560, "Member 'AAI_Ape_Missile_C::ParticleExplosion' has a wrong offset!");
static_assert(offsetof(AAI_Ape_Missile_C, BaseDamge) == 0x000568, "Member 'AAI_Ape_Missile_C::BaseDamge' has a wrong offset!");
static_assert(offsetof(AAI_Ape_Missile_C, ExplosionRadis) == 0x00056C, "Member 'AAI_Ape_Missile_C::ExplosionRadis' has a wrong offset!");
static_assert(offsetof(AAI_Ape_Missile_C, DamgeFallingByDistance) == 0x000570, "Member 'AAI_Ape_Missile_C::DamgeFallingByDistance' has a wrong offset!");
static_assert(offsetof(AAI_Ape_Missile_C, DamgeFallingByBlock) == 0x000574, "Member 'AAI_Ape_Missile_C::DamgeFallingByBlock' has a wrong offset!");
static_assert(offsetof(AAI_Ape_Missile_C, Target) == 0x000578, "Member 'AAI_Ape_Missile_C::Target' has a wrong offset!");
static_assert(offsetof(AAI_Ape_Missile_C, HigherMiddleLocation) == 0x000580, "Member 'AAI_Ape_Missile_C::HigherMiddleLocation' has a wrong offset!");
static_assert(offsetof(AAI_Ape_Missile_C, status) == 0x00058C, "Member 'AAI_Ape_Missile_C::status' has a wrong offset!");
static_assert(offsetof(AAI_Ape_Missile_C, ShouldTurn) == 0x000590, "Member 'AAI_Ape_Missile_C::ShouldTurn' has a wrong offset!");
static_assert(offsetof(AAI_Ape_Missile_C, MiddleHight) == 0x000594, "Member 'AAI_Ape_Missile_C::MiddleHight' has a wrong offset!");
static_assert(offsetof(AAI_Ape_Missile_C, DTime) == 0x000598, "Member 'AAI_Ape_Missile_C::DTime' has a wrong offset!");
static_assert(offsetof(AAI_Ape_Missile_C, HomingAcceleration) == 0x00059C, "Member 'AAI_Ape_Missile_C::HomingAcceleration' has a wrong offset!");
static_assert(offsetof(AAI_Ape_Missile_C, Index_0) == 0x0005A0, "Member 'AAI_Ape_Missile_C::Index_0' has a wrong offset!");

}


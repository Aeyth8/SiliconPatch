#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BulletBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BulletBase.BP_BulletBase_C.ExecuteUbergraph_BP_BulletBase
// 0x00F0 (0x00F0 - 0x0000)
struct BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0030(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Velocity;                       // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_CustomEvent_Sound;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase) == 0x000008, "Wrong alignment on BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase");
static_assert(sizeof(BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase) == 0x0000F0, "Wrong size on BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase");
static_assert(offsetof(BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase, EntryPoint) == 0x000000, "Member 'BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase, K2Node_ComponentBoundEvent_HitComponent) == 0x000008, "Member 'BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000020, "Member 'BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase, K2Node_ComponentBoundEvent_Hit) == 0x000030, "Member 'BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase, Temp_bool_IsClosed_Variable) == 0x0000B8, "Member 'BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase, K2Node_Event_DeltaSeconds) == 0x0000BC, "Member 'BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase, CallFunc_GetOwner_ReturnValue) == 0x0000C0, "Member 'BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase, K2Node_CustomEvent_Velocity) == 0x0000CC, "Member 'BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase::K2Node_CustomEvent_Velocity' has a wrong offset!");
static_assert(offsetof(BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase, K2Node_CustomEvent_Sound) == 0x0000D8, "Member 'BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase::K2Node_CustomEvent_Sound' has a wrong offset!");
static_assert(offsetof(BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase, Temp_bool_Has_Been_Initd_Variable) == 0x0000E0, "Member 'BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase, CallFunc_IsValid_ReturnValue1) == 0x0000E1, "Member 'BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0000E8, "Member 'BP_BulletBase_C_ExecuteUbergraph_BP_BulletBase::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function BP_BulletBase.BP_BulletBase_C.BndEvt__BulletMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BulletBase_C_BndEvt__BulletMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0028(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BulletBase_C_BndEvt__BulletMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_BulletBase_C_BndEvt__BulletMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_BulletBase_C_BndEvt__BulletMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_BulletBase_C_BndEvt__BulletMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_BulletBase_C_BndEvt__BulletMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_BulletBase_C_BndEvt__BulletMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BulletBase_C_BndEvt__BulletMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_BulletBase_C_BndEvt__BulletMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BulletBase_C_BndEvt__BulletMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_BulletBase_C_BndEvt__BulletMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BulletBase_C_BndEvt__BulletMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_BulletBase_C_BndEvt__BulletMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_BulletBase_C_BndEvt__BulletMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000028, "Member 'BP_BulletBase_C_BndEvt__BulletMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_BulletBase.BP_BulletBase_C.ThrowBullet
// 0x0018 (0x0018 - 0x0000)
struct BP_BulletBase_C_ThrowBullet final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BulletBase_C_ThrowBullet) == 0x000008, "Wrong alignment on BP_BulletBase_C_ThrowBullet");
static_assert(sizeof(BP_BulletBase_C_ThrowBullet) == 0x000018, "Wrong size on BP_BulletBase_C_ThrowBullet");
static_assert(offsetof(BP_BulletBase_C_ThrowBullet, Velocity) == 0x000000, "Member 'BP_BulletBase_C_ThrowBullet::Velocity' has a wrong offset!");
static_assert(offsetof(BP_BulletBase_C_ThrowBullet, Sound) == 0x000010, "Member 'BP_BulletBase_C_ThrowBullet::Sound' has a wrong offset!");

// Function BP_BulletBase.BP_BulletBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BulletBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BulletBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BulletBase_C_ReceiveTick");
static_assert(sizeof(BP_BulletBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_BulletBase_C_ReceiveTick");
static_assert(offsetof(BP_BulletBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BulletBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}


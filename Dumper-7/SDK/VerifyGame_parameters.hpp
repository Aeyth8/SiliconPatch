#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerifyGame

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function VerifyGame.VerifyGame_C.ExecuteUbergraph_VerifyGame
// 0x0008 (0x0008 - 0x0000)
struct VerifyGame_C_ExecuteUbergraph_VerifyGame final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerifyGame_C_ExecuteUbergraph_VerifyGame) == 0x000004, "Wrong alignment on VerifyGame_C_ExecuteUbergraph_VerifyGame");
static_assert(sizeof(VerifyGame_C_ExecuteUbergraph_VerifyGame) == 0x000008, "Wrong size on VerifyGame_C_ExecuteUbergraph_VerifyGame");
static_assert(offsetof(VerifyGame_C_ExecuteUbergraph_VerifyGame, EntryPoint) == 0x000000, "Member 'VerifyGame_C_ExecuteUbergraph_VerifyGame::EntryPoint' has a wrong offset!");
static_assert(offsetof(VerifyGame_C_ExecuteUbergraph_VerifyGame, K2Node_Event_IsDesignTime) == 0x000004, "Member 'VerifyGame_C_ExecuteUbergraph_VerifyGame::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function VerifyGame.VerifyGame_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct VerifyGame_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerifyGame_C_PreConstruct) == 0x000001, "Wrong alignment on VerifyGame_C_PreConstruct");
static_assert(sizeof(VerifyGame_C_PreConstruct) == 0x000001, "Wrong size on VerifyGame_C_PreConstruct");
static_assert(offsetof(VerifyGame_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'VerifyGame_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function VerifyGame.VerifyGame_C.ApplyText
// 0x00C0 (0x00C0 - 0x0000)
struct VerifyGame_C_ApplyText final
{
public:
	class FString                                 Text_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UTextBlock*                             TextBox;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ApplySize;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetLanguageText_Found;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetLanguageText_Lan_Text;                 // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLanguageText_FontSize;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0038(0x0058)(HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A0(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerifyGame_C_ApplyText) == 0x000008, "Wrong alignment on VerifyGame_C_ApplyText");
static_assert(sizeof(VerifyGame_C_ApplyText) == 0x0000C0, "Wrong size on VerifyGame_C_ApplyText");
static_assert(offsetof(VerifyGame_C_ApplyText, Text_0) == 0x000000, "Member 'VerifyGame_C_ApplyText::Text_0' has a wrong offset!");
static_assert(offsetof(VerifyGame_C_ApplyText, TextBox) == 0x000010, "Member 'VerifyGame_C_ApplyText::TextBox' has a wrong offset!");
static_assert(offsetof(VerifyGame_C_ApplyText, ApplySize) == 0x000018, "Member 'VerifyGame_C_ApplyText::ApplySize' has a wrong offset!");
static_assert(offsetof(VerifyGame_C_ApplyText, Temp_bool_Variable) == 0x000019, "Member 'VerifyGame_C_ApplyText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(VerifyGame_C_ApplyText, CallFunc_GetLanguageText_Found) == 0x00001A, "Member 'VerifyGame_C_ApplyText::CallFunc_GetLanguageText_Found' has a wrong offset!");
static_assert(offsetof(VerifyGame_C_ApplyText, CallFunc_GetLanguageText_Lan_Text) == 0x000020, "Member 'VerifyGame_C_ApplyText::CallFunc_GetLanguageText_Lan_Text' has a wrong offset!");
static_assert(offsetof(VerifyGame_C_ApplyText, CallFunc_GetLanguageText_FontSize) == 0x000030, "Member 'VerifyGame_C_ApplyText::CallFunc_GetLanguageText_FontSize' has a wrong offset!");
static_assert(offsetof(VerifyGame_C_ApplyText, K2Node_MakeStruct_SlateFontInfo) == 0x000038, "Member 'VerifyGame_C_ApplyText::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(VerifyGame_C_ApplyText, K2Node_Select_Default) == 0x000090, "Member 'VerifyGame_C_ApplyText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(VerifyGame_C_ApplyText, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A0, "Member 'VerifyGame_C_ApplyText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(VerifyGame_C_ApplyText, CallFunc_BooleanAND_ReturnValue) == 0x0000B8, "Member 'VerifyGame_C_ApplyText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CarMap

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_CarMap.BP_CarMap_C.ExecuteUbergraph_BP_CarMap
// 0x01B0 (0x01B0 - 0x0000)
struct BP_CarMap_C_ExecuteUbergraph_BP_CarMap final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0020(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0xF];                                       // 0x00D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue1;                // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location1;                 // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation1;                 // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale1;                    // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue3;           // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue4;           // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue1;                // 0x0174(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue5;           // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue2;                // 0x0184(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue3;         // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue3;                // 0x0194(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap) == 0x000010, "Wrong alignment on BP_CarMap_C_ExecuteUbergraph_BP_CarMap");
static_assert(sizeof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap) == 0x0001B0, "Wrong size on BP_CarMap_C_ExecuteUbergraph_BP_CarMap");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, EntryPoint) == 0x000000, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_BreakVector2D_X) == 0x000004, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_BreakVector2D_Y) == 0x000008, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, K2Node_Event_IsDesignTime) == 0x00000C, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000014, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x00001C, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, K2Node_Event_MyGeometry) == 0x000020, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, K2Node_Event_InDeltaTime) == 0x000058, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, K2Node_MakeStruct_LinearColor) == 0x00005C, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_GetTransform_ReturnValue) == 0x000070, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_BreakTransform_Location) == 0x0000A0, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_BreakTransform_Rotation) == 0x0000AC, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_BreakTransform_Scale) == 0x0000B8, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_BreakRotator_Roll) == 0x0000C4, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_BreakRotator_Pitch) == 0x0000C8, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_BreakRotator_Yaw) == 0x0000CC, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_GetTransform_ReturnValue1) == 0x0000E0, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_GetTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_BreakVector_X) == 0x000110, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_BreakVector_Y) == 0x000114, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_BreakVector_Z) == 0x000118, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_BreakTransform_Location1) == 0x00011C, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_BreakTransform_Location1' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_BreakTransform_Rotation1) == 0x000128, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_BreakTransform_Rotation1' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_BreakTransform_Scale1) == 0x000134, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_BreakTransform_Scale1' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x000140, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_BreakVector_X1) == 0x000144, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_BreakVector_Y1) == 0x000148, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_BreakVector_Z1) == 0x00014C, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_Divide_FloatFloat_ReturnValue3) == 0x000150, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_Divide_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_Divide_FloatFloat_ReturnValue4) == 0x000154, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_Divide_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_MakeVector2D_ReturnValue) == 0x000158, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x000160, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_FClamp_ReturnValue) == 0x000164, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_Abs_ReturnValue) == 0x000168, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_Add_FloatFloat_ReturnValue) == 0x00016C, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000170, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_MakeVector2D_ReturnValue1) == 0x000174, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_MakeVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_SelectFloat_ReturnValue) == 0x00017C, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_Divide_FloatFloat_ReturnValue5) == 0x000180, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_Divide_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_MakeVector2D_ReturnValue2) == 0x000184, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_MakeVector2D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_Add_FloatFloat_ReturnValue1) == 0x00018C, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_Subtract_FloatFloat_ReturnValue3) == 0x000190, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_Subtract_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_MakeVector2D_ReturnValue3) == 0x000194, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_MakeVector2D_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x00019C, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_ExecuteUbergraph_BP_CarMap, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0001A0, "Member 'BP_CarMap_C_ExecuteUbergraph_BP_CarMap::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function BP_CarMap.BP_CarMap_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_CarMap_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarMap_C_Tick) == 0x000004, "Wrong alignment on BP_CarMap_C_Tick");
static_assert(sizeof(BP_CarMap_C_Tick) == 0x00003C, "Wrong size on BP_CarMap_C_Tick");
static_assert(offsetof(BP_CarMap_C_Tick, MyGeometry) == 0x000000, "Member 'BP_CarMap_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_CarMap_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_CarMap.BP_CarMap_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_CarMap_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CarMap_C_PreConstruct) == 0x000001, "Wrong alignment on BP_CarMap_C_PreConstruct");
static_assert(sizeof(BP_CarMap_C_PreConstruct) == 0x000001, "Wrong size on BP_CarMap_C_PreConstruct");
static_assert(offsetof(BP_CarMap_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_CarMap_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_CarMap.BP_CarMap_C.SetHUDTarget
// 0x0018 (0x0018 - 0x0000)
struct BP_CarMap_C_SetHUDTarget final
{
public:
	class ABP_Lv3_BaseCar_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Lv3_BaseCar_C*                      Prison;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewParam;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisplayHUD;                                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CarMap_C_SetHUDTarget) == 0x000008, "Wrong alignment on BP_CarMap_C_SetHUDTarget");
static_assert(sizeof(BP_CarMap_C_SetHUDTarget) == 0x000018, "Wrong size on BP_CarMap_C_SetHUDTarget");
static_assert(offsetof(BP_CarMap_C_SetHUDTarget, Player) == 0x000000, "Member 'BP_CarMap_C_SetHUDTarget::Player' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_SetHUDTarget, Prison) == 0x000008, "Member 'BP_CarMap_C_SetHUDTarget::Prison' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_SetHUDTarget, NewParam) == 0x000010, "Member 'BP_CarMap_C_SetHUDTarget::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_SetHUDTarget, DisplayHUD) == 0x000014, "Member 'BP_CarMap_C_SetHUDTarget::DisplayHUD' has a wrong offset!");

// Function BP_CarMap.BP_CarMap_C.GetPlayerCarLoc
// 0x0010 (0x0010 - 0x0000)
struct BP_CarMap_C_GetPlayerCarLoc final
{
public:
	struct FVector2D                              NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarMap_C_GetPlayerCarLoc) == 0x000004, "Wrong alignment on BP_CarMap_C_GetPlayerCarLoc");
static_assert(sizeof(BP_CarMap_C_GetPlayerCarLoc) == 0x000010, "Wrong size on BP_CarMap_C_GetPlayerCarLoc");
static_assert(offsetof(BP_CarMap_C_GetPlayerCarLoc, NewParam) == 0x000000, "Member 'BP_CarMap_C_GetPlayerCarLoc::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CarMap_C_GetPlayerCarLoc, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000008, "Member 'BP_CarMap_C_GetPlayerCarLoc::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");

}


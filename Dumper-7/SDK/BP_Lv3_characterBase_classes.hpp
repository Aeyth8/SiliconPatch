#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lv3_characterBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_CharacterBase_classes.hpp"
#include "SiliconRising_structs.hpp"
#include "Enum_ControllerType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Lv3_characterBase.BP_Lv3_characterBase_C
// 0x0080 (0x0D50 - 0x0CD0)
class ABP_Lv3_characterBase_C : public ABP_CharacterBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Lv3_characterBase_C;             // 0x0CD0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        IGmRoot;                                           // 0x0CD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        IGM;                                               // 0x0CE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AttackPoint;                                       // 0x0CE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 WeaponClass_0;                                     // 0x0CF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta;                                             // 0x0CF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CFC[0x4];                                      // 0x0CFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 LeftHand;                                          // 0x0D00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 RightHand;                                         // 0x0D08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameOverTips_C*                        Lv2GameOverTips;                                   // 0x0D10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   CheckCharacter;                                    // 0x0D18(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class AVehicle_MC_C*                          SelfCar;                                           // 0x0D28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverLapSteerWheel;                                 // 0x0D30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsHoldSteeringWheel;                               // 0x0D31(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPressReload;                                     // 0x0D32(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D33[0x1];                                      // 0x0D33(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CheckReset;                                        // 0x0D34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnCarReset;                                        // 0x0D38(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsPressRocker;                                     // 0x0D48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D49[0x3];                                      // 0x0D49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CarTurn;                                           // 0x0D4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Lv3_characterBase(int32 EntryPoint);
	void CheckHoldSteeringTick();
	void CustomEvent_12();
	void CustomEvent_11();
	void CustomEven(TArray<struct FLeaderBoardData>& LeaderBoardData);
	void GameFailedTips(bool PlayerIsDead);
	void OnReleaseBothHand();
	void TickBothHand();
	void OnSpawnWeapon(bool IsRight, EItemTypes WeaponType);
	void InpActEvt_HoldWheel_R_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_HoldWheel_R_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_CarTurnLeft_R_K2Node_InputActionEvent_2(const struct FKey& Key);
	void InpActEvt_CarTurnLeft_R_K2Node_InputActionEvent_3(const struct FKey& Key);
	void InpActEvt_CarTurnRight_R_K2Node_InputActionEvent_4(const struct FKey& Key);
	void InpActEvt_CarTurnRight_R_K2Node_InputActionEvent_5(const struct FKey& Key);
	void InpActEvt_Q_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_CarTurnRight_K2Node_InputActionEvent_6(const struct FKey& Key);
	void InpActEvt_CarTurnRight_K2Node_InputActionEvent_7(const struct FKey& Key);
	void InpActEvt_CarTurnLeft_K2Node_InputActionEvent_8(const struct FKey& Key);
	void InpActEvt_CarTurnLeft_K2Node_InputActionEvent_9(const struct FKey& Key);
	void InpActEvt_HoldWheel_K2Node_InputActionEvent_10(const struct FKey& Key);
	void InpActEvt_HoldWheel_K2Node_InputActionEvent_11(const struct FKey& Key);
	void InpActEvt_Fire_K2Node_InputActionEvent_12(const struct FKey& Key);
	void InpActEvt_Fire_K2Node_InputActionEvent_13(const struct FKey& Key);
	void InpActEvt_SpaceBar_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_GripButton_R_K2Node_InputActionEvent_14(const struct FKey& Key);
	void InpActEvt_GripButton_L_K2Node_InputActionEvent_15(const struct FKey& Key);
	void HoldSteeringWheel(bool IsHold);
	void CustomEvent_10();
	void CustomEvent_9();
	void ReloadRightRelease();
	void ReloadRightPress();
	void OnSendScore(bool IsPass, int32 LevelNumber);
	void ControllerTriggerLeftRelease();
	void ControllerTriggerLeftPress();
	void GameOver(int32 LevelNumber, bool RightNow);
	void DeadLogic();
	void ReleaseFireR();
	void FireR();
	void TeleportRight();
	void TeleportLeft();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UpdateHandWeaponType(bool IsRight, EItemTypes WeaponType);
	void OnShowIGM();
	void SetHeldItem_R(class AActor* InputPin, bool IsHideOld);
	void UserConstructionScript();
	void SetHeldItem_L(class AActor* InputPin, bool IsHideOld);
	void SpawnWeapon(bool IsRight, EItemTypes WeaponType);
	void InitHand();
	void TeleportTarget(const struct FVector& _pos, const struct FVector& _forward);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Lv3_characterBase_C">();
	}
	static class ABP_Lv3_characterBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Lv3_characterBase_C>();
	}
};
static_assert(alignof(ABP_Lv3_characterBase_C) == 0x000010, "Wrong alignment on ABP_Lv3_characterBase_C");
static_assert(sizeof(ABP_Lv3_characterBase_C) == 0x000D50, "Wrong size on ABP_Lv3_characterBase_C");
static_assert(offsetof(ABP_Lv3_characterBase_C, UberGraphFrame_BP_Lv3_characterBase_C) == 0x000CD0, "Member 'ABP_Lv3_characterBase_C::UberGraphFrame_BP_Lv3_characterBase_C' has a wrong offset!");
static_assert(offsetof(ABP_Lv3_characterBase_C, IGmRoot) == 0x000CD8, "Member 'ABP_Lv3_characterBase_C::IGmRoot' has a wrong offset!");
static_assert(offsetof(ABP_Lv3_characterBase_C, IGM) == 0x000CE0, "Member 'ABP_Lv3_characterBase_C::IGM' has a wrong offset!");
static_assert(offsetof(ABP_Lv3_characterBase_C, AttackPoint) == 0x000CE8, "Member 'ABP_Lv3_characterBase_C::AttackPoint' has a wrong offset!");
static_assert(offsetof(ABP_Lv3_characterBase_C, WeaponClass_0) == 0x000CF0, "Member 'ABP_Lv3_characterBase_C::WeaponClass_0' has a wrong offset!");
static_assert(offsetof(ABP_Lv3_characterBase_C, Delta) == 0x000CF8, "Member 'ABP_Lv3_characterBase_C::Delta' has a wrong offset!");
static_assert(offsetof(ABP_Lv3_characterBase_C, LeftHand) == 0x000D00, "Member 'ABP_Lv3_characterBase_C::LeftHand' has a wrong offset!");
static_assert(offsetof(ABP_Lv3_characterBase_C, RightHand) == 0x000D08, "Member 'ABP_Lv3_characterBase_C::RightHand' has a wrong offset!");
static_assert(offsetof(ABP_Lv3_characterBase_C, Lv2GameOverTips) == 0x000D10, "Member 'ABP_Lv3_characterBase_C::Lv2GameOverTips' has a wrong offset!");
static_assert(offsetof(ABP_Lv3_characterBase_C, CheckCharacter) == 0x000D18, "Member 'ABP_Lv3_characterBase_C::CheckCharacter' has a wrong offset!");
static_assert(offsetof(ABP_Lv3_characterBase_C, SelfCar) == 0x000D28, "Member 'ABP_Lv3_characterBase_C::SelfCar' has a wrong offset!");
static_assert(offsetof(ABP_Lv3_characterBase_C, OverLapSteerWheel) == 0x000D30, "Member 'ABP_Lv3_characterBase_C::OverLapSteerWheel' has a wrong offset!");
static_assert(offsetof(ABP_Lv3_characterBase_C, IsHoldSteeringWheel) == 0x000D31, "Member 'ABP_Lv3_characterBase_C::IsHoldSteeringWheel' has a wrong offset!");
static_assert(offsetof(ABP_Lv3_characterBase_C, IsPressReload) == 0x000D32, "Member 'ABP_Lv3_characterBase_C::IsPressReload' has a wrong offset!");
static_assert(offsetof(ABP_Lv3_characterBase_C, CheckReset) == 0x000D34, "Member 'ABP_Lv3_characterBase_C::CheckReset' has a wrong offset!");
static_assert(offsetof(ABP_Lv3_characterBase_C, OnCarReset) == 0x000D38, "Member 'ABP_Lv3_characterBase_C::OnCarReset' has a wrong offset!");
static_assert(offsetof(ABP_Lv3_characterBase_C, IsPressRocker) == 0x000D48, "Member 'ABP_Lv3_characterBase_C::IsPressRocker' has a wrong offset!");
static_assert(offsetof(ABP_Lv3_characterBase_C, CarTurn) == 0x000D4C, "Member 'ABP_Lv3_characterBase_C::CarTurn' has a wrong offset!");

}


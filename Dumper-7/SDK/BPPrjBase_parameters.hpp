#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPPrjBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPPrjBase.BPPrjBase_C.ExecuteUbergraph_BPPrjBase
// 0x0388 (0x0388 - 0x0000)
struct BPPrjBase_C_ExecuteUbergraph_BPPrjBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_HitComponent;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NormalImpulse;                  // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x0030(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            CallFunc_GetInstigatorController_ReturnValue;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterBase_C*                    K2Node_DynamicCast_AsBP_Character_Base;            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00E0(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_lsGameINP1__flag;                         // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetScaledBoxExtent_ReturnValue;           // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent1;          // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor1;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp1;             // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse1;         // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit1;                   // 0x0160(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_DeadlyBulletSettings_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x01F0(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_DeadlyBulletSettings_C*             CallFunc_Array_Get_Item;                           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0238(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class USoundBase*                             CallFunc_GetSFX_Sound;                             // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        CallFunc_GetVFX_VFX;                               // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2[0x2];                                      // 0x02D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0320(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_355[0x3];                                      // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnParticle_ReturnValue;                // 0x0368(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMC_Result;                              // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue1;                // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_373[0x1];                                      // 0x0373(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0378(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyRadialDamageWithFalloff_ReturnValue; // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase) == 0x000008, "Wrong alignment on BPPrjBase_C_ExecuteUbergraph_BPPrjBase");
static_assert(sizeof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase) == 0x000388, "Wrong size on BPPrjBase_C_ExecuteUbergraph_BPPrjBase");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, EntryPoint) == 0x000000, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, K2Node_CustomEvent_HitComponent) == 0x000008, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::K2Node_CustomEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, K2Node_CustomEvent_OtherActor) == 0x000010, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, K2Node_CustomEvent_OtherComp) == 0x000018, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, K2Node_CustomEvent_NormalImpulse) == 0x000020, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::K2Node_CustomEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, K2Node_CustomEvent_Hit) == 0x000030, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_GetInstigatorController_ReturnValue) == 0x0000B8, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_GetInstigatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_K2_GetPawn_ReturnValue) == 0x0000C8, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, K2Node_DynamicCast_AsBP_Character_Base) == 0x0000D0, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::K2Node_DynamicCast_AsBP_Character_Base' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, Temp_object_Variable) == 0x0000E0, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_GetGameInstance_ReturnValue) == 0x0000F0, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, K2Node_DynamicCast_AsMer_2Game_Instance) == 0x0000F8, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::K2Node_DynamicCast_AsMer_2Game_Instance' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, K2Node_DynamicCast_bSuccess1) == 0x000100, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_lsGameINP1__flag) == 0x000101, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_lsGameINP1__flag' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_GetScaledBoxExtent_ReturnValue) == 0x000104, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_GetScaledBoxExtent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000110, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000120, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_Contains_ReturnValue) == 0x000130, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, K2Node_ComponentBoundEvent_HitComponent1) == 0x000138, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::K2Node_ComponentBoundEvent_HitComponent1' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, K2Node_ComponentBoundEvent_OtherActor1) == 0x000140, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::K2Node_ComponentBoundEvent_OtherActor1' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, K2Node_ComponentBoundEvent_OtherComp1) == 0x000148, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::K2Node_ComponentBoundEvent_OtherComp1' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, K2Node_ComponentBoundEvent_NormalImpulse1) == 0x000150, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::K2Node_ComponentBoundEvent_NormalImpulse1' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, K2Node_ComponentBoundEvent_Hit1) == 0x000160, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::K2Node_ComponentBoundEvent_Hit1' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_Not_PreBool_ReturnValue) == 0x0001E8, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, K2Node_Event_DeltaSeconds) == 0x0001EC, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_GetAllActorsOfClass_OutActors) == 0x0001F0, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_Array_Get_Item) == 0x000200, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_Array_Length_ReturnValue) == 0x000208, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00020C, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, K2Node_ComponentBoundEvent_HitComponent) == 0x000210, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, K2Node_ComponentBoundEvent_OtherActor) == 0x000218, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, K2Node_ComponentBoundEvent_OtherComp) == 0x000220, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000228, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, K2Node_ComponentBoundEvent_Hit) == 0x000238, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_GetSFX_Sound) == 0x0002C0, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_GetSFX_Sound' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_GetVFX_VFX) == 0x0002C8, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_GetVFX_VFX' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_BreakHitResult_bBlockingHit) == 0x0002D0, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002D1, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_BreakHitResult_Time) == 0x0002D4, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_BreakHitResult_Distance) == 0x0002D8, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_BreakHitResult_Location) == 0x0002DC, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_BreakHitResult_ImpactPoint) == 0x0002E8, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_BreakHitResult_Normal) == 0x0002F4, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_BreakHitResult_ImpactNormal) == 0x000300, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_BreakHitResult_PhysMat) == 0x000310, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_BreakHitResult_HitActor) == 0x000318, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_BreakHitResult_HitComponent) == 0x000320, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_BreakHitResult_HitBoneName) == 0x000328, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_BreakHitResult_HitItem) == 0x000330, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_BreakHitResult_FaceIndex) == 0x000334, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_BreakHitResult_TraceStart) == 0x000338, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_BreakHitResult_TraceEnd) == 0x000344, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_ApplyDamage_ReturnValue) == 0x000350, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_ComponentHasTag_ReturnValue) == 0x000354, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_MakeRotFromX_ReturnValue) == 0x000358, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_SpawnParticle_ReturnValue) == 0x000368, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_SpawnParticle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_IsMC_Result) == 0x000370, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_IsMC_Result' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_HasAuthority_ReturnValue) == 0x000371, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_HasAuthority_ReturnValue1) == 0x000372, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_HasAuthority_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000374, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000378, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_ExecuteUbergraph_BPPrjBase, CallFunc_ApplyRadialDamageWithFalloff_ReturnValue) == 0x000384, "Member 'BPPrjBase_C_ExecuteUbergraph_BPPrjBase::CallFunc_ApplyRadialDamageWithFalloff_ReturnValue' has a wrong offset!");

// Function BPPrjBase.BPPrjBase_C.OnMulticastBulletHit
// 0x00B0 (0x00B0 - 0x0000)
struct BPPrjBase_C_OnMulticastBulletHit final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0028(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPPrjBase_C_OnMulticastBulletHit) == 0x000008, "Wrong alignment on BPPrjBase_C_OnMulticastBulletHit");
static_assert(sizeof(BPPrjBase_C_OnMulticastBulletHit) == 0x0000B0, "Wrong size on BPPrjBase_C_OnMulticastBulletHit");
static_assert(offsetof(BPPrjBase_C_OnMulticastBulletHit, HitComponent) == 0x000000, "Member 'BPPrjBase_C_OnMulticastBulletHit::HitComponent' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_OnMulticastBulletHit, OtherActor) == 0x000008, "Member 'BPPrjBase_C_OnMulticastBulletHit::OtherActor' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_OnMulticastBulletHit, OtherComp) == 0x000010, "Member 'BPPrjBase_C_OnMulticastBulletHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_OnMulticastBulletHit, NormalImpulse) == 0x000018, "Member 'BPPrjBase_C_OnMulticastBulletHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_OnMulticastBulletHit, Hit) == 0x000028, "Member 'BPPrjBase_C_OnMulticastBulletHit::Hit' has a wrong offset!");

// Function BPPrjBase.BPPrjBase_C.OnBulletHit
// 0x00B0 (0x00B0 - 0x0000)
struct BPPrjBase_C_OnBulletHit final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0028(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPPrjBase_C_OnBulletHit) == 0x000008, "Wrong alignment on BPPrjBase_C_OnBulletHit");
static_assert(sizeof(BPPrjBase_C_OnBulletHit) == 0x0000B0, "Wrong size on BPPrjBase_C_OnBulletHit");
static_assert(offsetof(BPPrjBase_C_OnBulletHit, HitComponent) == 0x000000, "Member 'BPPrjBase_C_OnBulletHit::HitComponent' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_OnBulletHit, OtherActor) == 0x000008, "Member 'BPPrjBase_C_OnBulletHit::OtherActor' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_OnBulletHit, OtherComp) == 0x000010, "Member 'BPPrjBase_C_OnBulletHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_OnBulletHit, NormalImpulse) == 0x000018, "Member 'BPPrjBase_C_OnBulletHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_OnBulletHit, Hit) == 0x000028, "Member 'BPPrjBase_C_OnBulletHit::Hit' has a wrong offset!");

// Function BPPrjBase.BPPrjBase_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BPPrjBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0028(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPPrjBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BPPrjBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BPPrjBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on BPPrjBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BPPrjBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BPPrjBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BPPrjBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BPPrjBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BPPrjBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000028, "Member 'BPPrjBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BPPrjBase.BPPrjBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BPPrjBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPPrjBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BPPrjBase_C_ReceiveTick");
static_assert(sizeof(BPPrjBase_C_ReceiveTick) == 0x000004, "Wrong size on BPPrjBase_C_ReceiveTick");
static_assert(offsetof(BPPrjBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BPPrjBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BPPrjBase.BPPrjBase_C.UserConstructionScript
// 0x0014 (0x0014 - 0x0000)
struct BPPrjBase_C_UserConstructionScript final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLifeSpan_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPPrjBase_C_UserConstructionScript) == 0x000004, "Wrong alignment on BPPrjBase_C_UserConstructionScript");
static_assert(sizeof(BPPrjBase_C_UserConstructionScript) == 0x000014, "Wrong size on BPPrjBase_C_UserConstructionScript");
static_assert(offsetof(BPPrjBase_C_UserConstructionScript, Temp_bool_Variable) == 0x000000, "Member 'BPPrjBase_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_UserConstructionScript, Temp_float_Variable) == 0x000004, "Member 'BPPrjBase_C_UserConstructionScript::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_UserConstructionScript, CallFunc_GetLifeSpan_ReturnValue) == 0x000008, "Member 'BPPrjBase_C_UserConstructionScript::CallFunc_GetLifeSpan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_UserConstructionScript, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'BPPrjBase_C_UserConstructionScript::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_UserConstructionScript, K2Node_Select_Default) == 0x000010, "Member 'BPPrjBase_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");

// Function BPPrjBase.BPPrjBase_C.InitSettings
// 0x0010 (0x0010 - 0x0000)
struct BPPrjBase_C_InitSettings final
{
public:
	bool                                          IsSpecial_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Velocity;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPPrjBase_C_InitSettings) == 0x000004, "Wrong alignment on BPPrjBase_C_InitSettings");
static_assert(sizeof(BPPrjBase_C_InitSettings) == 0x000010, "Wrong size on BPPrjBase_C_InitSettings");
static_assert(offsetof(BPPrjBase_C_InitSettings, IsSpecial_0) == 0x000000, "Member 'BPPrjBase_C_InitSettings::IsSpecial_0' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_InitSettings, Velocity) == 0x000004, "Member 'BPPrjBase_C_InitSettings::Velocity' has a wrong offset!");

// Function BPPrjBase.BPPrjBase_C.HeadToVelocityDirection
// 0x00B8 (0x00B8 - 0x0000)
struct BPPrjBase_C_HeadToVelocityDirection final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0030(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPPrjBase_C_HeadToVelocityDirection) == 0x000008, "Wrong alignment on BPPrjBase_C_HeadToVelocityDirection");
static_assert(sizeof(BPPrjBase_C_HeadToVelocityDirection) == 0x0000B8, "Wrong size on BPPrjBase_C_HeadToVelocityDirection");
static_assert(offsetof(BPPrjBase_C_HeadToVelocityDirection, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'BPPrjBase_C_HeadToVelocityDirection::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_HeadToVelocityDirection, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00000C, "Member 'BPPrjBase_C_HeadToVelocityDirection::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_HeadToVelocityDirection, CallFunc_Add_VectorVector_ReturnValue) == 0x000018, "Member 'BPPrjBase_C_HeadToVelocityDirection::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_HeadToVelocityDirection, CallFunc_FindLookAtRotation_ReturnValue) == 0x000024, "Member 'BPPrjBase_C_HeadToVelocityDirection::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_HeadToVelocityDirection, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000030, "Member 'BPPrjBase_C_HeadToVelocityDirection::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function BPPrjBase.BPPrjBase_C.GetVFX
// 0x0208 (0x0208 - 0x0000)
struct BPPrjBase_C_GetVFX final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UParticleSystem*                        VFX;                                               // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_GetPhysicalMaterial_ReturnValue;          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable1;                             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable2;                             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable3;                             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable4;                             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable5;                             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable6;                             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable7;                             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable8;                             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable9;                             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable10;                            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable11;                            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable12;                            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable1;                               // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable13;                            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable14;                            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select1_Default;                            // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select2_Default;                            // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select3_Default;                            // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select4_Default;                            // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select5_Default;                            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPPrjBase_C_GetVFX) == 0x000008, "Wrong alignment on BPPrjBase_C_GetVFX");
static_assert(sizeof(BPPrjBase_C_GetVFX) == 0x000208, "Wrong size on BPPrjBase_C_GetVFX");
static_assert(offsetof(BPPrjBase_C_GetVFX, Hit) == 0x000000, "Member 'BPPrjBase_C_GetVFX::Hit' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, VFX) == 0x000088, "Member 'BPPrjBase_C_GetVFX::VFX' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_object_Variable) == 0x000090, "Member 'BPPrjBase_C_GetVFX::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_BreakHitResult_bBlockingHit) == 0x000098, "Member 'BPPrjBase_C_GetVFX::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_BreakHitResult_bInitialOverlap) == 0x000099, "Member 'BPPrjBase_C_GetVFX::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_BreakHitResult_Time) == 0x00009C, "Member 'BPPrjBase_C_GetVFX::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_BreakHitResult_Distance) == 0x0000A0, "Member 'BPPrjBase_C_GetVFX::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_BreakHitResult_Location) == 0x0000A4, "Member 'BPPrjBase_C_GetVFX::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B0, "Member 'BPPrjBase_C_GetVFX::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_BreakHitResult_Normal) == 0x0000BC, "Member 'BPPrjBase_C_GetVFX::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_BreakHitResult_ImpactNormal) == 0x0000C8, "Member 'BPPrjBase_C_GetVFX::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_BreakHitResult_PhysMat) == 0x0000D8, "Member 'BPPrjBase_C_GetVFX::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_BreakHitResult_HitActor) == 0x0000E0, "Member 'BPPrjBase_C_GetVFX::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_BreakHitResult_HitComponent) == 0x0000E8, "Member 'BPPrjBase_C_GetVFX::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_BreakHitResult_HitBoneName) == 0x0000F0, "Member 'BPPrjBase_C_GetVFX::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_BreakHitResult_HitItem) == 0x0000F8, "Member 'BPPrjBase_C_GetVFX::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_BreakHitResult_FaceIndex) == 0x0000FC, "Member 'BPPrjBase_C_GetVFX::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_BreakHitResult_TraceStart) == 0x000100, "Member 'BPPrjBase_C_GetVFX::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_BreakHitResult_TraceEnd) == 0x00010C, "Member 'BPPrjBase_C_GetVFX::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_GetMaterial_ReturnValue) == 0x000118, "Member 'BPPrjBase_C_GetVFX::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_IsValid_ReturnValue) == 0x000120, "Member 'BPPrjBase_C_GetVFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_IsValid_ReturnValue1) == 0x000121, "Member 'BPPrjBase_C_GetVFX::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_GetPhysicalMaterial_ReturnValue) == 0x000128, "Member 'BPPrjBase_C_GetVFX::CallFunc_GetPhysicalMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_IsValid_ReturnValue2) == 0x000130, "Member 'BPPrjBase_C_GetVFX::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_int_Variable) == 0x000134, "Member 'BPPrjBase_C_GetVFX::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_object_Variable1) == 0x000138, "Member 'BPPrjBase_C_GetVFX::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_object_Variable2) == 0x000140, "Member 'BPPrjBase_C_GetVFX::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_object_Variable3) == 0x000148, "Member 'BPPrjBase_C_GetVFX::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_bool_Variable) == 0x000150, "Member 'BPPrjBase_C_GetVFX::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_object_Variable4) == 0x000158, "Member 'BPPrjBase_C_GetVFX::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_int_Variable1) == 0x000160, "Member 'BPPrjBase_C_GetVFX::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_object_Variable5) == 0x000168, "Member 'BPPrjBase_C_GetVFX::Temp_object_Variable5' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_object_Variable6) == 0x000170, "Member 'BPPrjBase_C_GetVFX::Temp_object_Variable6' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_object_Variable7) == 0x000178, "Member 'BPPrjBase_C_GetVFX::Temp_object_Variable7' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_byte_Variable) == 0x000180, "Member 'BPPrjBase_C_GetVFX::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_object_Variable8) == 0x000188, "Member 'BPPrjBase_C_GetVFX::Temp_object_Variable8' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_object_Variable9) == 0x000190, "Member 'BPPrjBase_C_GetVFX::Temp_object_Variable9' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_object_Variable10) == 0x000198, "Member 'BPPrjBase_C_GetVFX::Temp_object_Variable10' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_object_Variable11) == 0x0001A0, "Member 'BPPrjBase_C_GetVFX::Temp_object_Variable11' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_object_Variable12) == 0x0001A8, "Member 'BPPrjBase_C_GetVFX::Temp_object_Variable12' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_byte_Variable1) == 0x0001B0, "Member 'BPPrjBase_C_GetVFX::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_object_Variable13) == 0x0001B8, "Member 'BPPrjBase_C_GetVFX::Temp_object_Variable13' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_object_Variable14) == 0x0001C0, "Member 'BPPrjBase_C_GetVFX::Temp_object_Variable14' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, Temp_bool_Variable1) == 0x0001C8, "Member 'BPPrjBase_C_GetVFX::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_RandomInteger_ReturnValue) == 0x0001CC, "Member 'BPPrjBase_C_GetVFX::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, K2Node_Select_Default) == 0x0001D0, "Member 'BPPrjBase_C_GetVFX::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_IsValid_ReturnValue3) == 0x0001D8, "Member 'BPPrjBase_C_GetVFX::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, CallFunc_IsValid_ReturnValue4) == 0x0001D9, "Member 'BPPrjBase_C_GetVFX::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, K2Node_Select1_Default) == 0x0001E0, "Member 'BPPrjBase_C_GetVFX::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, K2Node_Select2_Default) == 0x0001E8, "Member 'BPPrjBase_C_GetVFX::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, K2Node_Select3_Default) == 0x0001F0, "Member 'BPPrjBase_C_GetVFX::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, K2Node_Select4_Default) == 0x0001F8, "Member 'BPPrjBase_C_GetVFX::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetVFX, K2Node_Select5_Default) == 0x000200, "Member 'BPPrjBase_C_GetVFX::K2Node_Select5_Default' has a wrong offset!");

// Function BPPrjBase.BPPrjBase_C.GetSFX
// 0x0208 (0x0208 - 0x0000)
struct BPPrjBase_C_GetSFX final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class USoundBase*                             Sound;                                             // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_GetPhysicalMaterial_ReturnValue;          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable1;                             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable2;                             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable3;                             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable4;                             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetRandomSound_Sound;                     // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CallFunc_GetRandomSound_Sound1;                    // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetRandomSound_Sound2;                    // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetRandomSound_Sound3;                    // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetRandomSound_Sound4;                    // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetRandomSound_Sound5;                    // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetRandomSound_Sound6;                    // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetRandomSound_Sound7;                    // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetRandomSound_Sound8;                    // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetRandomSound_Sound9;                    // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default;                             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetRandomSound_Sound10;                   // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetRandomSound_Sound11;                   // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetRandomSound_Sound12;                   // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetRandomSound_Sound13;                   // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetRandomSound_Sound14;                   // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetRandomSound_Sound15;                   // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetRandomSound_Sound16;                   // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetRandomSound_Sound17;                   // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetRandomSound_Sound18;                   // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetRandomSound_Sound19;                   // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPPrjBase_C_GetSFX) == 0x000008, "Wrong alignment on BPPrjBase_C_GetSFX");
static_assert(sizeof(BPPrjBase_C_GetSFX) == 0x000208, "Wrong size on BPPrjBase_C_GetSFX");
static_assert(offsetof(BPPrjBase_C_GetSFX, Hit) == 0x000000, "Member 'BPPrjBase_C_GetSFX::Hit' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, Sound) == 0x000088, "Member 'BPPrjBase_C_GetSFX::Sound' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, Temp_object_Variable) == 0x000090, "Member 'BPPrjBase_C_GetSFX::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_BreakHitResult_bBlockingHit) == 0x000098, "Member 'BPPrjBase_C_GetSFX::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_BreakHitResult_bInitialOverlap) == 0x000099, "Member 'BPPrjBase_C_GetSFX::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_BreakHitResult_Time) == 0x00009C, "Member 'BPPrjBase_C_GetSFX::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_BreakHitResult_Distance) == 0x0000A0, "Member 'BPPrjBase_C_GetSFX::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_BreakHitResult_Location) == 0x0000A4, "Member 'BPPrjBase_C_GetSFX::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B0, "Member 'BPPrjBase_C_GetSFX::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_BreakHitResult_Normal) == 0x0000BC, "Member 'BPPrjBase_C_GetSFX::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_BreakHitResult_ImpactNormal) == 0x0000C8, "Member 'BPPrjBase_C_GetSFX::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_BreakHitResult_PhysMat) == 0x0000D8, "Member 'BPPrjBase_C_GetSFX::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_BreakHitResult_HitActor) == 0x0000E0, "Member 'BPPrjBase_C_GetSFX::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_BreakHitResult_HitComponent) == 0x0000E8, "Member 'BPPrjBase_C_GetSFX::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_BreakHitResult_HitBoneName) == 0x0000F0, "Member 'BPPrjBase_C_GetSFX::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_BreakHitResult_HitItem) == 0x0000F8, "Member 'BPPrjBase_C_GetSFX::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_BreakHitResult_FaceIndex) == 0x0000FC, "Member 'BPPrjBase_C_GetSFX::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_BreakHitResult_TraceStart) == 0x000100, "Member 'BPPrjBase_C_GetSFX::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_BreakHitResult_TraceEnd) == 0x00010C, "Member 'BPPrjBase_C_GetSFX::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetMaterial_ReturnValue) == 0x000118, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_IsValid_ReturnValue) == 0x000120, "Member 'BPPrjBase_C_GetSFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_IsValid_ReturnValue1) == 0x000121, "Member 'BPPrjBase_C_GetSFX::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetPhysicalMaterial_ReturnValue) == 0x000128, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetPhysicalMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_IsValid_ReturnValue2) == 0x000130, "Member 'BPPrjBase_C_GetSFX::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, K2Node_SwitchEnum_CmpSuccess) == 0x000131, "Member 'BPPrjBase_C_GetSFX::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, Temp_object_Variable1) == 0x000138, "Member 'BPPrjBase_C_GetSFX::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, Temp_object_Variable2) == 0x000140, "Member 'BPPrjBase_C_GetSFX::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, Temp_object_Variable3) == 0x000148, "Member 'BPPrjBase_C_GetSFX::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, Temp_object_Variable4) == 0x000150, "Member 'BPPrjBase_C_GetSFX::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetRandomSound_Sound) == 0x000158, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetRandomSound_Sound' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, Temp_byte_Variable) == 0x000160, "Member 'BPPrjBase_C_GetSFX::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetRandomSound_Sound1) == 0x000168, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetRandomSound_Sound1' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetRandomSound_Sound2) == 0x000170, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetRandomSound_Sound2' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetRandomSound_Sound3) == 0x000178, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetRandomSound_Sound3' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetRandomSound_Sound4) == 0x000180, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetRandomSound_Sound4' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetRandomSound_Sound5) == 0x000188, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetRandomSound_Sound5' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetRandomSound_Sound6) == 0x000190, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetRandomSound_Sound6' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetRandomSound_Sound7) == 0x000198, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetRandomSound_Sound7' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetRandomSound_Sound8) == 0x0001A0, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetRandomSound_Sound8' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetRandomSound_Sound9) == 0x0001A8, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetRandomSound_Sound9' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, K2Node_Select_Default) == 0x0001B0, "Member 'BPPrjBase_C_GetSFX::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetRandomSound_Sound10) == 0x0001B8, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetRandomSound_Sound10' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetRandomSound_Sound11) == 0x0001C0, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetRandomSound_Sound11' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetRandomSound_Sound12) == 0x0001C8, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetRandomSound_Sound12' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetRandomSound_Sound13) == 0x0001D0, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetRandomSound_Sound13' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetRandomSound_Sound14) == 0x0001D8, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetRandomSound_Sound14' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetRandomSound_Sound15) == 0x0001E0, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetRandomSound_Sound15' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetRandomSound_Sound16) == 0x0001E8, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetRandomSound_Sound16' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetRandomSound_Sound17) == 0x0001F0, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetRandomSound_Sound17' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetRandomSound_Sound18) == 0x0001F8, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetRandomSound_Sound18' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetSFX, CallFunc_GetRandomSound_Sound19) == 0x000200, "Member 'BPPrjBase_C_GetSFX::CallFunc_GetRandomSound_Sound19' has a wrong offset!");

// Function BPPrjBase.BPPrjBase_C.GetRandomSound
// 0x0040 (0x0040 - 0x0000)
struct BPPrjBase_C_GetRandomSound final
{
public:
	TArray<class USoundBase*>                     In;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class USoundBase*                             Sound;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CallFunc_Array_Get_Item1;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPPrjBase_C_GetRandomSound) == 0x000008, "Wrong alignment on BPPrjBase_C_GetRandomSound");
static_assert(sizeof(BPPrjBase_C_GetRandomSound) == 0x000040, "Wrong size on BPPrjBase_C_GetRandomSound");
static_assert(offsetof(BPPrjBase_C_GetRandomSound, In) == 0x000000, "Member 'BPPrjBase_C_GetRandomSound::In' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetRandomSound, Sound) == 0x000010, "Member 'BPPrjBase_C_GetRandomSound::Sound' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetRandomSound, CallFunc_Array_Get_Item) == 0x000018, "Member 'BPPrjBase_C_GetRandomSound::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetRandomSound, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BPPrjBase_C_GetRandomSound::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetRandomSound, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BPPrjBase_C_GetRandomSound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetRandomSound, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'BPPrjBase_C_GetRandomSound::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetRandomSound, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'BPPrjBase_C_GetRandomSound::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetRandomSound, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000030, "Member 'BPPrjBase_C_GetRandomSound::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetRandomSound, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'BPPrjBase_C_GetRandomSound::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_GetRandomSound, CallFunc_Array_Get_Item1) == 0x000038, "Member 'BPPrjBase_C_GetRandomSound::CallFunc_Array_Get_Item1' has a wrong offset!");

// Function BPPrjBase.BPPrjBase_C.CheckAlarmPlunger
// 0x0080 (0x0080 - 0x0000)
struct BPPrjBase_C_CheckAlarmPlunger final
{
public:
	class AActor*                                 _hitActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _hitPos;                                           // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_Base_C*                         K2Node_DynamicCast_AsBP_NPC_Base;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_NPC_Plunger_C*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_NPC_Plunger_C*                      CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetOwningCharacter_RetCharacter;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPPrjBase_C_CheckAlarmPlunger) == 0x000008, "Wrong alignment on BPPrjBase_C_CheckAlarmPlunger");
static_assert(sizeof(BPPrjBase_C_CheckAlarmPlunger) == 0x000080, "Wrong size on BPPrjBase_C_CheckAlarmPlunger");
static_assert(offsetof(BPPrjBase_C_CheckAlarmPlunger, _hitActor) == 0x000000, "Member 'BPPrjBase_C_CheckAlarmPlunger::_hitActor' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_CheckAlarmPlunger, _hitPos) == 0x000008, "Member 'BPPrjBase_C_CheckAlarmPlunger::_hitPos' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_CheckAlarmPlunger, K2Node_DynamicCast_AsBP_NPC_Base) == 0x000018, "Member 'BPPrjBase_C_CheckAlarmPlunger::K2Node_DynamicCast_AsBP_NPC_Base' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_CheckAlarmPlunger, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPPrjBase_C_CheckAlarmPlunger::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_CheckAlarmPlunger, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BPPrjBase_C_CheckAlarmPlunger::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_CheckAlarmPlunger, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BPPrjBase_C_CheckAlarmPlunger::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_CheckAlarmPlunger, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'BPPrjBase_C_CheckAlarmPlunger::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_CheckAlarmPlunger, CallFunc_Array_Get_Item) == 0x000040, "Member 'BPPrjBase_C_CheckAlarmPlunger::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_CheckAlarmPlunger, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BPPrjBase_C_CheckAlarmPlunger::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_CheckAlarmPlunger, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BPPrjBase_C_CheckAlarmPlunger::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_CheckAlarmPlunger, CallFunc_GetOwningCharacter_RetCharacter) == 0x000050, "Member 'BPPrjBase_C_CheckAlarmPlunger::CallFunc_GetOwningCharacter_RetCharacter' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_CheckAlarmPlunger, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'BPPrjBase_C_CheckAlarmPlunger::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_CheckAlarmPlunger, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BPPrjBase_C_CheckAlarmPlunger::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_CheckAlarmPlunger, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000068, "Member 'BPPrjBase_C_CheckAlarmPlunger::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_CheckAlarmPlunger, CallFunc_VSize_ReturnValue) == 0x000074, "Member 'BPPrjBase_C_CheckAlarmPlunger::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_CheckAlarmPlunger, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000078, "Member 'BPPrjBase_C_CheckAlarmPlunger::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BPPrjBase.BPPrjBase_C.SpawnDecal
// 0x00B8 (0x00B8 - 0x0000)
struct BPPrjBase_C_SpawnDecal final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                Location;                                          // 0x0088(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0094(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UDecalComponent*                        Decal;                                             // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Temp;                                              // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     decalMat;                                          // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPPrjBase_C_SpawnDecal) == 0x000008, "Wrong alignment on BPPrjBase_C_SpawnDecal");
static_assert(sizeof(BPPrjBase_C_SpawnDecal) == 0x0000B8, "Wrong size on BPPrjBase_C_SpawnDecal");
static_assert(offsetof(BPPrjBase_C_SpawnDecal, Hit) == 0x000000, "Member 'BPPrjBase_C_SpawnDecal::Hit' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_SpawnDecal, Location) == 0x000088, "Member 'BPPrjBase_C_SpawnDecal::Location' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_SpawnDecal, Rotation) == 0x000094, "Member 'BPPrjBase_C_SpawnDecal::Rotation' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_SpawnDecal, Decal) == 0x0000A0, "Member 'BPPrjBase_C_SpawnDecal::Decal' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_SpawnDecal, Temp) == 0x0000A8, "Member 'BPPrjBase_C_SpawnDecal::Temp' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_SpawnDecal, decalMat) == 0x0000B0, "Member 'BPPrjBase_C_SpawnDecal::decalMat' has a wrong offset!");

// Function BPPrjBase.BPPrjBase_C.IsMC
// 0x0030 (0x0030 - 0x0000)
struct BPPrjBase_C_IsMC final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    K2Node_DynamicCast_AsBP_Character_Base;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterPVP_Base_C*                K2Node_DynamicCast_AsBP_Character_PVP_Base;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPPrjBase_C_IsMC) == 0x000008, "Wrong alignment on BPPrjBase_C_IsMC");
static_assert(sizeof(BPPrjBase_C_IsMC) == 0x000030, "Wrong size on BPPrjBase_C_IsMC");
static_assert(offsetof(BPPrjBase_C_IsMC, Actor) == 0x000000, "Member 'BPPrjBase_C_IsMC::Actor' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_IsMC, Result) == 0x000008, "Member 'BPPrjBase_C_IsMC::Result' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_IsMC, K2Node_DynamicCast_AsBP_Character_Base) == 0x000010, "Member 'BPPrjBase_C_IsMC::K2Node_DynamicCast_AsBP_Character_Base' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_IsMC, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPPrjBase_C_IsMC::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_IsMC, K2Node_DynamicCast_AsBP_Character_PVP_Base) == 0x000020, "Member 'BPPrjBase_C_IsMC::K2Node_DynamicCast_AsBP_Character_PVP_Base' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_IsMC, K2Node_DynamicCast_bSuccess1) == 0x000028, "Member 'BPPrjBase_C_IsMC::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BPPrjBase_C_IsMC, CallFunc_BooleanOR_ReturnValue) == 0x000029, "Member 'BPPrjBase_C_IsMC::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}


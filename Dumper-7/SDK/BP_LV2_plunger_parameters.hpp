#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LV2_plunger

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Lv2_DifficultStruct_structs.hpp"


namespace SDK::Params
{

// Function BP_LV2_plunger.BP_LV2_plunger_C.ExecuteUbergraph_BP_LV2_plunger
// 0x0240 (0x0240 - 0x0000)
struct BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue1;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance1;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_ComponentBoundEvent_Pawn;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Lv2_HiddenGia_C*                    K2Node_DynamicCast_AsBP_Lv_2_Hidden_Gia;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LV2_plunger_C*                      K2Node_DynamicCast_AsBP_LV2_Plunger;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Lv2_Gia_C*                          K2Node_DynamicCast_AsBP_Lv_2_Gia;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_TargetActor;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Lv2_Gia_C*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0098(0x0010)(ZeroConstructor, ReferenceParm)
	class AActor*                                 K2Node_CustomEvent_TargetActor;                    // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Lv2_Gia_C*                          CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue2;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance2;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent1;   // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor1;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp1;             // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex1;        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0100(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x01A8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue3;             // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance3;          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLv2_DifficultStruct                   CallFunc_GetDifficultConfig_NewParam;              // 0x01E8(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_222[0x6];                                      // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_Lv2SpecialNPC_C*                K2Node_DynamicCast_AsAnim_BP_Lv_2Special_NPC;      // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger) == 0x000008, "Wrong alignment on BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger");
static_assert(sizeof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger) == 0x000240, "Wrong size on BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, EntryPoint) == 0x000000, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, CallFunc_GetGameInstance_ReturnValue1) == 0x000010, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::CallFunc_GetGameInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_DynamicCast_AsMer_2Game_Instance) == 0x000018, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_DynamicCast_AsMer_2Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_DynamicCast_AsMer_2Game_Instance1) == 0x000028, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_DynamicCast_AsMer_2Game_Instance1' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000031, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000032, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_Event_DeltaSeconds) == 0x000034, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_ComponentBoundEvent_Pawn) == 0x000038, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_ComponentBoundEvent_Pawn' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_DynamicCast_AsBP_Lv_2_Hidden_Gia) == 0x000040, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_DynamicCast_AsBP_Lv_2_Hidden_Gia' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_DynamicCast_AsBP_LV2_Plunger) == 0x000050, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_DynamicCast_AsBP_LV2_Plunger' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_DynamicCast_bSuccess3) == 0x000058, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00005C, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_DynamicCast_AsBP_Lv_2_Gia) == 0x000068, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_DynamicCast_AsBP_Lv_2_Gia' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_DynamicCast_bSuccess4) == 0x000070, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_Event_TargetActor) == 0x000078, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_Event_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000080, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x00008C, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, CallFunc_GetAllActorsOfClass_OutActors) == 0x000098, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_CustomEvent_TargetActor) == 0x0000A8, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_CustomEvent_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_CustomEvent_Montage) == 0x0000B0, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_CustomEvent_Montage' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, CallFunc_RandomFloat_ReturnValue) == 0x0000C0, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C4, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, CallFunc_GetGameInstance_ReturnValue2) == 0x0000C8, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::CallFunc_GetGameInstance_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_DynamicCast_AsMer_2Game_Instance2) == 0x0000D0, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_DynamicCast_AsMer_2Game_Instance2' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_DynamicCast_bSuccess5) == 0x0000D8, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x0000D9, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_ComponentBoundEvent_OverlappedComponent1) == 0x0000E0, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_ComponentBoundEvent_OverlappedComponent1' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_ComponentBoundEvent_OtherActor1) == 0x0000E8, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_ComponentBoundEvent_OtherActor1' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_ComponentBoundEvent_OtherComp1) == 0x0000F0, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_ComponentBoundEvent_OtherComp1' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_ComponentBoundEvent_OtherBodyIndex1) == 0x0000F8, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_ComponentBoundEvent_OtherBodyIndex1' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_ComponentBoundEvent_bFromSweep) == 0x0000FC, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_ComponentBoundEvent_SweepResult) == 0x000100, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000188, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_ComponentBoundEvent_OtherActor) == 0x000190, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_ComponentBoundEvent_OtherComp) == 0x000198, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0001A0, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_Event_Damage) == 0x0001A4, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_Event_DamageType) == 0x0001A8, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_Event_InstigatedBy) == 0x0001B0, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_Event_DamageCauser) == 0x0001B8, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x0001C0, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x0001CC, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, CallFunc_GetGameInstance_ReturnValue3) == 0x0001D0, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::CallFunc_GetGameInstance_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_DynamicCast_AsMer_2Game_Instance3) == 0x0001D8, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_DynamicCast_AsMer_2Game_Instance3' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_DynamicCast_bSuccess6) == 0x0001E0, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, CallFunc_GetDifficultConfig_NewParam) == 0x0001E8, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::CallFunc_GetDifficultConfig_NewParam' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000220, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, CallFunc_BooleanAND_ReturnValue) == 0x000221, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, CallFunc_GetAnimInstance_ReturnValue) == 0x000228, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_DynamicCast_AsAnim_BP_Lv_2Special_NPC) == 0x000230, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_DynamicCast_AsAnim_BP_Lv_2Special_NPC' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger, K2Node_DynamicCast_bSuccess7) == 0x000238, "Member 'BP_LV2_plunger_C_ExecuteUbergraph_BP_LV2_plunger::K2Node_DynamicCast_bSuccess7' has a wrong offset!");

// Function BP_LV2_plunger.BP_LV2_plunger_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_LV2_plunger_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LV2_plunger_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on BP_LV2_plunger_C_ReceiveAnyDamage");
static_assert(sizeof(BP_LV2_plunger_C_ReceiveAnyDamage) == 0x000020, "Wrong size on BP_LV2_plunger_C_ReceiveAnyDamage");
static_assert(offsetof(BP_LV2_plunger_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'BP_LV2_plunger_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'BP_LV2_plunger_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'BP_LV2_plunger_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'BP_LV2_plunger_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function BP_LV2_plunger.BP_LV2_plunger_C.BndEvt__Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_LV2_plunger.BP_LV2_plunger_C.BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_LV2_plunger_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_LV2_plunger.BP_LV2_plunger_C.MovetoPlayMtg
// 0x0010 (0x0010 - 0x0000)
struct BP_LV2_plunger_C_MovetoPlayMtg final
{
public:
	class AActor*                                 TargetActor_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Montage;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LV2_plunger_C_MovetoPlayMtg) == 0x000008, "Wrong alignment on BP_LV2_plunger_C_MovetoPlayMtg");
static_assert(sizeof(BP_LV2_plunger_C_MovetoPlayMtg) == 0x000010, "Wrong size on BP_LV2_plunger_C_MovetoPlayMtg");
static_assert(offsetof(BP_LV2_plunger_C_MovetoPlayMtg, TargetActor_0) == 0x000000, "Member 'BP_LV2_plunger_C_MovetoPlayMtg::TargetActor_0' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_MovetoPlayMtg, Montage) == 0x000008, "Member 'BP_LV2_plunger_C_MovetoPlayMtg::Montage' has a wrong offset!");

// Function BP_LV2_plunger.BP_LV2_plunger_C.BndEvt__PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_LV2_plunger_C_BndEvt__PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LV2_plunger_C_BndEvt__PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_LV2_plunger_C_BndEvt__PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature");
static_assert(sizeof(BP_LV2_plunger_C_BndEvt__PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature) == 0x000008, "Wrong size on BP_LV2_plunger_C_BndEvt__PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature");
static_assert(offsetof(BP_LV2_plunger_C_BndEvt__PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature, Pawn) == 0x000000, "Member 'BP_LV2_plunger_C_BndEvt__PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature::Pawn' has a wrong offset!");

// Function BP_LV2_plunger.BP_LV2_plunger_C.FindEnemie
// 0x0008 (0x0008 - 0x0000)
struct BP_LV2_plunger_C_FindEnemie final
{
public:
	class AActor*                                 TargetActor_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LV2_plunger_C_FindEnemie) == 0x000008, "Wrong alignment on BP_LV2_plunger_C_FindEnemie");
static_assert(sizeof(BP_LV2_plunger_C_FindEnemie) == 0x000008, "Wrong size on BP_LV2_plunger_C_FindEnemie");
static_assert(offsetof(BP_LV2_plunger_C_FindEnemie, TargetActor_0) == 0x000000, "Member 'BP_LV2_plunger_C_FindEnemie::TargetActor_0' has a wrong offset!");

// Function BP_LV2_plunger.BP_LV2_plunger_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_LV2_plunger_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LV2_plunger_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_LV2_plunger_C_ReceiveTick");
static_assert(sizeof(BP_LV2_plunger_C_ReceiveTick) == 0x000004, "Wrong size on BP_LV2_plunger_C_ReceiveTick");
static_assert(offsetof(BP_LV2_plunger_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_LV2_plunger_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_LV2_plunger.BP_LV2_plunger_C.Attack
// 0x00D0 (0x00D0 - 0x0000)
struct BP_LV2_plunger_C_Attack final
{
public:
	bool                                          UseControllerRotation;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Delay;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Lv2_NPCBase_C*                      K2Node_DynamicCast_AsBP_Lv_2_NPCBase;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Lv2_characterBase_C*                K2Node_DynamicCast_AsBP_Lv_2_Character_Base;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LV2_plunger_C_Attack) == 0x000008, "Wrong alignment on BP_LV2_plunger_C_Attack");
static_assert(sizeof(BP_LV2_plunger_C_Attack) == 0x0000D0, "Wrong size on BP_LV2_plunger_C_Attack");
static_assert(offsetof(BP_LV2_plunger_C_Attack, UseControllerRotation) == 0x000000, "Member 'BP_LV2_plunger_C_Attack::UseControllerRotation' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, Delay) == 0x000004, "Member 'BP_LV2_plunger_C_Attack::Delay' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'BP_LV2_plunger_C_Attack::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00000C, "Member 'BP_LV2_plunger_C_Attack::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, Temp_int_Variable) == 0x000010, "Member 'BP_LV2_plunger_C_Attack::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, Temp_int_Variable1) == 0x000014, "Member 'BP_LV2_plunger_C_Attack::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_LV2_plunger_C_Attack::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BP_LV2_plunger_C_Attack::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_LV2_plunger_C_Attack::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'BP_LV2_plunger_C_Attack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_Subtract_IntInt_ReturnValue1) == 0x00002C, "Member 'BP_LV2_plunger_C_Attack::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_LV2_plunger_C_Attack::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_Subtract_IntInt_ReturnValue2) == 0x000034, "Member 'BP_LV2_plunger_C_Attack::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_LV2_plunger_C_Attack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, K2Node_DynamicCast_AsBP_Lv_2_NPCBase) == 0x000040, "Member 'BP_LV2_plunger_C_Attack::K2Node_DynamicCast_AsBP_Lv_2_NPCBase' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_LV2_plunger_C_Attack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, K2Node_DynamicCast_AsBP_Lv_2_Character_Base) == 0x000050, "Member 'BP_LV2_plunger_C_Attack::K2Node_DynamicCast_AsBP_Lv_2_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, K2Node_DynamicCast_bSuccess1) == 0x000058, "Member 'BP_LV2_plunger_C_Attack::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_GetSocketLocation_ReturnValue) == 0x00005C, "Member 'BP_LV2_plunger_C_Attack::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_FindLookAtRotation_ReturnValue) == 0x000068, "Member 'BP_LV2_plunger_C_Attack::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x000074, "Member 'BP_LV2_plunger_C_Attack::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_BreakRotator_Roll) == 0x000080, "Member 'BP_LV2_plunger_C_Attack::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_BreakRotator_Pitch) == 0x000084, "Member 'BP_LV2_plunger_C_Attack::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_BreakRotator_Yaw) == 0x000088, "Member 'BP_LV2_plunger_C_Attack::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_Add_FloatFloat_ReturnValue) == 0x00008C, "Member 'BP_LV2_plunger_C_Attack::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_IsValid_ReturnValue1) == 0x000090, "Member 'BP_LV2_plunger_C_Attack::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000094, "Member 'BP_LV2_plunger_C_Attack::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_MakeRotator_ReturnValue) == 0x000098, "Member 'BP_LV2_plunger_C_Attack::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_GetForwardVector_ReturnValue) == 0x0000A4, "Member 'BP_LV2_plunger_C_Attack::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B0, "Member 'BP_LV2_plunger_C_Attack::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_Multiply_VectorInt_ReturnValue) == 0x0000B4, "Member 'BP_LV2_plunger_C_Attack::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_BooleanAND_ReturnValue1) == 0x0000C0, "Member 'BP_LV2_plunger_C_Attack::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_LV2_plunger_C_Attack, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C4, "Member 'BP_LV2_plunger_C_Attack::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

}


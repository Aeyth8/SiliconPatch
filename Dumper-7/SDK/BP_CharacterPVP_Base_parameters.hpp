#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterPVP_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Enum_ControllerType_structs.hpp"
#include "InputCore_structs.hpp"
#include "SiliconRising_structs.hpp"


namespace SDK::Params
{

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.ExecuteUbergraph_BP_CharacterPVP_Base
// 0x1F10 (0x1F10 - 0x0000)
struct BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key4;                      // 0x0008(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key5;                      // 0x0028(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0040(0x0018)(HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable1;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1; // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue1;                // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue2;                // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue1;           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable1;                             // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue2;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue3;           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0108(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue3;                // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue4;           // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue5;           // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue4;                // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue5;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable1;                              // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue6;           // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue6;                // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B2[0x6];                                      // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable2;                              // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable3;                              // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue7;           // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable4;                              // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue7;                // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable5;                              // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue8;           // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue8;                // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FB[0x5];                                      // 0x01FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable6;                              // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable7;                              // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue9;           // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable8;                              // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable9;                              // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue10;          // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable10;                             // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue9;                // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable11;                             // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue10;               // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable12;                             // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable3;                               // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable13;                             // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable14;                             // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue11;          // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable15;                             // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable4;                               // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable16;                             // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue12;          // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable17;                             // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable18;                             // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue11;               // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemTypes                                    Temp_byte_Variable;                                // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable2; // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x02BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue3;                  // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue2;                  // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue1;                  // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x02DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayInEditor_ReturnValue;               // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PVP_Center_Prop_C*>          CallFunc_GetAllActorsOfClass_OutActors;            // 0x0300(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_PVP_Center_Prop_C*                  CallFunc_Array_Get_Item;                           // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x031D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable5;                               // 0x031E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31F[0x1];                                      // 0x031F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key1;                         // 0x0320(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key2;                         // 0x0338(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Value5;                         // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue13;          // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_352[0x6];                                      // 0x0352(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key3;                         // 0x0358(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key4;                         // 0x0370(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key5;                         // 0x0388(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key6;                         // 0x03A0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key7;                         // 0x03B8(0x0018)(HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x03D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue14;          // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue15;          // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E2[0x6];                                      // 0x03E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable1;                             // 0x03E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue16;          // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PVP_BGM_C*>                  CallFunc_GetAllActorsOfClass_OutActors1;           // 0x0400(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          Temp_bool_Variable6;                               // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PVP_BGM_C*                          CallFunc_Array_Get_Item1;                          // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0420(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0434(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue17;          // 0x0435(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_436[0x2];                                      // 0x0436(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_DeltaSeconds;                   // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CharacterPVP_Base_C*>        CallFunc_GetAllActorsOfClass_OutActors2;           // 0x0440(0x0010)(ZeroConstructor, ReferenceParm)
	struct FKey                                   K2Node_InputKeyEvent_Key8;                         // 0x0450(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_FindTargetToShoot_Target;                 // 0x0470(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0478(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_485[0x3];                                      // 0x0485(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0488(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0494(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x04A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue18;          // 0x04C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C5[0x3];                                      // 0x04C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x04C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D5[0x3];                                      // 0x04D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key9;                         // 0x04D8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x04F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x04F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Value4;                         // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F9[0x3];                                      // 0x04F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue1;          // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue2;          // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_504[0x4];                                      // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x0511(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_512[0x2];                                      // 0x0512(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue3;          // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue1;         // 0x0518(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll2;                       // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch2;                      // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw2;                        // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue1;                 // 0x0530(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue1;         // 0x053C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53D[0x3];                                      // 0x053D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameModePVP_Base_C*                 K2Node_DynamicCast_AsBP_Game_Mode_PVP_Base;        // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key10;                        // 0x0558(0x0018)(HasGetValueTypeHash)
	TArray<class ABP_PVP_Drone_C*>                CallFunc_GetAllActorsOfClass_OutActors3;           // 0x0570(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0584(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue19;          // 0x0585(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x0586(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0587(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable3; // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_589[0x3];                                      // 0x0589(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue4;          // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_591[0x7];                                      // 0x0591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key11;                        // 0x0598(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue6;                 // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x05B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x05B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B3[0x5];                                      // 0x05B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue1;       // 0x05C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x05C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C4[0x4];                                      // 0x05C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue1;              // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue5;          // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue2;       // 0x05D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue3;       // 0x05D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x05D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D7[0x1];                                      // 0x05D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue2;              // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E1[0x3];                                      // 0x05E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemTypes                                    K2Node_CustomEvent_WeaponType;                     // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsRight2;                       // 0x05E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EA[0x6];                                      // 0x05EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key12;                        // 0x05F0(0x0018)(HasGetValueTypeHash)
	class UClass*                                 K2Node_Select2_Default;                            // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsRightHand2;                   // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0611(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue1;                // 0x0612(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsRightHand1;                   // 0x0613(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsRightHand;                    // 0x0614(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0615(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue20;          // 0x0616(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_617[0x1];                                      // 0x0617(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key13;                        // 0x0618(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_631[0xF];                                      // 0x0631(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0640(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_671[0x7];                                      // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1; // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPWeaponBase_C*                        K2Node_DynamicCast_AsBPWeapon_Base;                // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_699[0x7];                                      // 0x0699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue1;         // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A9[0x7];                                      // 0x06A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPWeaponBase_C*                        K2Node_DynamicCast_AsBPWeapon_Base1;               // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue9;                     // 0x06B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6BA[0x6];                                      // 0x06BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key14;                        // 0x06C0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue10;                    // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D9[0x7];                                      // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable2;                             // 0x06E0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key15;                        // 0x06F8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsDevelopmentMode_ReturnValue21;          // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_711[0xF];                                      // 0x0711(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue1;               // 0x0720(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2; // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue11;                    // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_759[0x7];                                      // 0x0759(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue2;         // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPWeaponBase_C*                        K2Node_DynamicCast_AsBPWeapon_Base2;               // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_771[0x7];                                      // 0x0771(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue3; // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue3;         // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPWeaponBase_C*                        K2Node_DynamicCast_AsBPWeapon_Base3;               // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue12;                    // 0x0791(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue13;                    // 0x0792(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue14;                    // 0x0793(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_794[0x4];                                      // 0x0794(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHapticFeedbackEffect_Base*             K2Node_CustomEvent_HapticEffect;                   // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EControllerHand                               K2Node_CustomEvent_Hand;                           // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A1[0x3];                                      // 0x07A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Scale;                          // 0x07A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Loop;                           // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A9[0x7];                                      // 0x07A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue1;               // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C1[0x7];                                      // 0x07C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterPVP_Base_C*                K2Node_CustomEvent_Killer;                         // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x07D0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable3;                             // 0x07E8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key1;                      // 0x0800(0x0018)(HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81C[0x4];                                      // 0x081C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterPVP_Base_C*                K2Node_CustomEvent_Causer;                         // 0x0820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Health;                         // 0x0828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x082C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_831[0x3];                                      // 0x0831(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue7;                 // 0x0839(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83A[0x6];                                      // 0x083A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue1;                 // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameModePVP_Base_C*                 K2Node_DynamicCast_AsBP_Game_Mode_PVP_Base1;       // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_851[0x7];                                      // 0x0851(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PVP_StartPosition_C*                CallFunc_GetStartTransform_Target;                 // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue2;               // 0x0860(0x0030)(IsPlainOldData, NoDestructor)
	class AController*                            CallFunc_GetController_ReturnValue2;               // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller1;           // 0x0898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A1[0x3];                                      // 0x08A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x08A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue15;                    // 0x08B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue16;                    // 0x08B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable7;                               // 0x08B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue8;                 // 0x08B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B4[0x4];                                      // 0x08B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key16;                        // 0x08B8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsHeadMountedDisplayEnabled_ReturnValue;  // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D1[0x7];                                      // 0x08D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x08D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0960(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0968(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0970(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0978(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_984[0x4];                                      // 0x0984(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0988(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_Value3;                         // 0x0A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A11[0x3];                                      // 0x0A11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select3_Default;                            // 0x0A14(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_BoneName;                       // 0x0A20(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x0A30(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal;                      // 0x0A3C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_HitDamage;                      // 0x0A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4C[0x4];                                      // 0x0A4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0A50(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0AD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD9[0x7];                                      // 0x0AD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select4_Default;                            // 0x0AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnParticle_ReturnValue;                // 0x0AE8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x0AF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AF4[0x4];                                      // 0x0AF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterPVP_Base_C*                CallFunc_Array_Get_Item2;                          // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0B00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x0B04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0B08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0B09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue9;                 // 0x0B0A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B0B[0x5];                                      // 0x0B0B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue1;           // 0x0B18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue2;           // 0x0B20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue10;                // 0x0B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B29[0x3];                                      // 0x0B29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBoneIndex_ReturnValue;                 // 0x0B2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x0B31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue11;                // 0x0B32(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue12;                // 0x0B33(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x0B34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0B38(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0B44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x0B48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B49[0x7];                                      // 0x0B49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key2;                      // 0x0B50(0x0018)(HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue3;               // 0x0B68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller2;           // 0x0B70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0B78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B79[0x7];                                      // 0x0B79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue1;                // 0x0B80(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue4; // 0x0BB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterPVP_Spectator_C*           CallFunc_FinishSpawningActor_ReturnValue4;         // 0x0BB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsRight1;                       // 0x0BC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_value2;                         // 0x0BC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BC2[0x2];                                      // 0x0BC2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x0BC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0BC8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD4[0x4];                                      // 0x0BD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult1;   // 0x0BD8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x0C61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHeadMountedDisplayEnabled_ReturnValue1; // 0x0C62(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsRight;                        // 0x0C63(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsDestroy;                      // 0x0C64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue17;                    // 0x0C65(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue18;                    // 0x0C66(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x0C67(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue19;                    // 0x0C68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue20;                    // 0x0C69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x0C6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue13;                // 0x0C6B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0C6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C6D[0x3];                                      // 0x0C6D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable4;                             // 0x0C70(0x0018)(HasGetValueTypeHash)
	uint8                                         Pad_C88[0x8];                                      // 0x0C88(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_Head1;                          // 0x0C90(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             K2Node_CustomEvent_LeftHand1;                      // 0x0CC0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             K2Node_CustomEvent_RightHand1;                     // 0x0CF0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             K2Node_CustomEvent_Head;                           // 0x0D20(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             K2Node_CustomEvent_LeftHand;                       // 0x0D50(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             K2Node_CustomEvent_RightHand;                      // 0x0D80(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0DB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue1;                    // 0x0DB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB2[0xE];                                      // 0x0DB2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0DC0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue1;      // 0x0DF0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue2;      // 0x0E20(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0E50(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult1;     // 0x0ED8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult2;     // 0x0F60(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult3;     // 0x0FE8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult4;     // 0x1070(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue1;         // 0x10F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10F9[0x7];                                     // 0x10F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult5;     // 0x1100(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_Value1;                         // 0x1188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue2;         // 0x1189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_118A[0x2];                                     // 0x118A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DamageReceived;                       // 0x118C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x1190(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Origin;                               // 0x1198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A4[0x4];                                     // 0x11A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x11A8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x1230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x1238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Weapon;                         // 0x1240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaTime;                      // 0x1248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue2;             // 0x124C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_124D[0x3];                                     // 0x124D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x1250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue3;             // 0x1254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1255[0x3];                                     // 0x1255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x1258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue14;                // 0x125C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x125D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue15;                // 0x125E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue21;                    // 0x125F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Value;                          // 0x1260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue3;         // 0x1261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsStopFire;                     // 0x1262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1263[0x5];                                     // 0x1263(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CharacterPVP_Base_C*>        CallFunc_GetAllActorsOfClass_OutActors4;           // 0x1268(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_CharacterPVP_Base_C*                CallFunc_Array_Get_Item3;                          // 0x1278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x1280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x1284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1285[0x3];                                     // 0x1285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x1288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsReset;                        // 0x1294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1295[0x3];                                     // 0x1295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x1298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x129C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x12A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x12A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x12B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x12BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x12C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x12CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x12D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x12D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x12E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12EC[0x4];                                     // 0x12EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult2;   // 0x12F0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult3;   // 0x1378(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x1400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1401[0x3];                                     // 0x1401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x1404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x1408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1409[0x3];                                     // 0x1409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x140C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Show2;                          // 0x1410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1411[0xF];                                     // 0x1411(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_MakeStruct_Vector4;                         // 0x1420(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x1430(0x04E0)()
	bool                                          CallFunc_IsLocallyControlled_ReturnValue4;         // 0x1910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x1911(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1912[0x6];                                     // 0x1912(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable5;                             // 0x1918(0x0018)(HasGetValueTypeHash)
	struct FTransform                             K2Node_CustomEvent_Target;                         // 0x1930(0x0030)(IsPlainOldData, NoDestructor)
	struct FKey                                   K2Node_InputActionEvent_Key6;                      // 0x1960(0x0018)(HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult1;     // 0x1978(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue1;        // 0x1A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Show1;                          // 0x1A01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Show;                           // 0x1A02(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue5;         // 0x1A03(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue22;                    // 0x1A04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue23;                    // 0x1A05(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue6;         // 0x1A06(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsShow;                         // 0x1A07(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable2;                // 0x1A08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue16;                // 0x1A09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A0A[0x2];                                     // 0x1A0A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue2;         // 0x1A0C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll3;                       // 0x1A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch3;                      // 0x1A1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw3;                        // 0x1A20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue2;                 // 0x1A24(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue3;         // 0x1A30(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll4;                       // 0x1A3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch4;                      // 0x1A40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw4;                        // 0x1A44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue3;                 // 0x1A48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent__dt1;                           // 0x1A54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent__dt;                            // 0x1A58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A5C[0x4];                                     // 0x1A5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue4;               // 0x1A60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue7;         // 0x1A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A69[0x7];                                     // 0x1A69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller3;           // 0x1A70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x1A78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHeadMountedDisplayEnabled_ReturnValue2; // 0x1A79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue17;                // 0x1A7A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Slow_;                          // 0x1A7B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A7C[0x4];                                     // 0x1A7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key7;                      // 0x1A80(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue24;                    // 0x1A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue25;                    // 0x1A99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable2;                      // 0x1A9A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9B[0x5];                                     // 0x1A9B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key17;                        // 0x1AA0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue26;                    // 0x1AB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue27;                    // 0x1AB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue28;                    // 0x1ABA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1ABB[0x1];                                     // 0x1ABB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x1ABC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAimPos_Pos;                            // 0x1AC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue29;                    // 0x1ACC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue30;                    // 0x1ACD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1ACE[0x2];                                     // 0x1ACE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue3;              // 0x1AD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue1;         // 0x1AD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AD9[0x3];                                     // 0x1AD9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x1ADC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x1AE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x1AE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AE2[0xE];                                     // 0x1AE2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue3;               // 0x1AF0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable3;                // 0x1B20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable3;                      // 0x1B21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue31;                    // 0x1B22(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue32;                    // 0x1B23(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue33;                    // 0x1B24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue34;                    // 0x1B25(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue35;                    // 0x1B26(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B27[0x1];                                     // 0x1B27(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue4;              // 0x1B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue2;         // 0x1B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B31[0x3];                                     // 0x1B31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x1B34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue2;            // 0x1B38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue5;                  // 0x1B39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue36;                    // 0x1B3A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue37;                    // 0x1B3B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B3C[0x4];                                     // 0x1B3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue3;      // 0x1B40(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location1;                 // 0x1B70(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation1;                 // 0x1B7C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale1;                    // 0x1B88(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B94[0xC];                                     // 0x1B94(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue4;      // 0x1BA0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location2;                 // 0x1BD0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation2;                 // 0x1BDC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale2;                    // 0x1BE8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BF4[0xC];                                     // 0x1BF4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue5;      // 0x1C00(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue8;         // 0x1C30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C31[0x3];                                     // 0x1C31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location3;                 // 0x1C34(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation3;                 // 0x1C40(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale3;                    // 0x1C4C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x1C58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x1C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C61[0x3];                                     // 0x1C61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x1C64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable4;                // 0x1C68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue38;                    // 0x1C69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHeadMountedDisplayEnabled_ReturnValue3; // 0x1C6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue18;                // 0x1C6B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue19;                // 0x1C6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C6D[0x3];                                     // 0x1C6D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x1C70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UIKAnimInstance*                        K2Node_DynamicCast_AsIKAnim_Instance;              // 0x1C78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x1C80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue39;                    // 0x1C81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C82[0x6];                                     // 0x1C82(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key3;                      // 0x1C88(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x1CA0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x1CAC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x1CB8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult1;      // 0x1D40(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            CallFunc_GetController_ReturnValue5;               // 0x1DC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue40;                    // 0x1DD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable4;                      // 0x1DD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue9;         // 0x1DD2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPointWeapon_Value;                      // 0x1DD3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPointWeapon_Value1;                     // 0x1DD4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD5[0x3];                                     // 0x1DD5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue2;                 // 0x1DD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameModePVP_Base_C*                 K2Node_DynamicCast_AsBP_Game_Mode_PVP_Base2;       // 0x1DE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x1DE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DE9[0x7];                                     // 0x1DE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x1DF0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue5; // 0x1DF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDeathUI_C*                             K2Node_DynamicCast_AsDeath_UI;                     // 0x1E00(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess12;                     // 0x1E08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E09[0x7];                                     // 0x1E09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue5;         // 0x1E10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPDefaultHand_C*                       K2Node_DynamicCast_AsBPDefault_Hand;               // 0x1E18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess13;                     // 0x1E20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E21[0x7];                                     // 0x1E21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue6; // 0x1E28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_NewController;                        // 0x1E30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue6;         // 0x1E38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPRightHand_C*                         K2Node_DynamicCast_AsBPRight_Hand;                 // 0x1E40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess14;                     // 0x1E48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E49[0x7];                                     // 0x1E49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue6;               // 0x1E50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller4;           // 0x1E58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess15;                     // 0x1E60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x1E61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E62[0x6];                                     // 0x1E62(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x1E68(0x0018)()
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x1E80(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsPlayInEditor_ReturnValue1;              // 0x1F08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base) == 0x000010, "Wrong alignment on BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base");
static_assert(sizeof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base) == 0x001F10, "Wrong size on BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, EntryPoint) == 0x000000, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue) == 0x000004, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputActionEvent_Key4) == 0x000008, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputActionEvent_Key4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputActionEvent_Key5) == 0x000028, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputActionEvent_Key5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputKeyEvent_Key) == 0x000040, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_object_Variable) == 0x000058, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_object_Variable1) == 0x000060, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_HasAuthority_ReturnValue) == 0x000068, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000069, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_Variable) == 0x000074, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1) == 0x000075, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_HasAuthority_ReturnValue1) == 0x000076, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_HasAuthority_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_HasAuthority_ReturnValue2) == 0x000077, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_HasAuthority_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000078, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue1) == 0x00007C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_struct_Variable) == 0x000080, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_struct_Variable1) == 0x00008C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue2) == 0x000098, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_Variable1) == 0x000099, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000A0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue3) == 0x0000A8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetTransform_ReturnValue) == 0x0000B0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakTransform_Location) == 0x0000E0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakTransform_Rotation) == 0x0000EC, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakTransform_Scale) == 0x0000F8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000108, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000190, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_HasAuthority_ReturnValue3) == 0x000191, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_HasAuthority_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue4) == 0x000192, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue5) == 0x000193, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_HasAuthority_ReturnValue4) == 0x000194, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_HasAuthority_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_class_Variable) == 0x000198, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_HasAuthority_ReturnValue5) == 0x0001A0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_HasAuthority_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_class_Variable1) == 0x0001A8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_class_Variable1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue6) == 0x0001B0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_HasAuthority_ReturnValue6) == 0x0001B1, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_HasAuthority_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_class_Variable2) == 0x0001B8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_class_Variable2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_int_Loop_Counter_Variable1) == 0x0001C0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Add_IntInt_ReturnValue1) == 0x0001C4, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_int_Array_Index_Variable1) == 0x0001C8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_class_Variable3) == 0x0001D0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_class_Variable3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue7) == 0x0001D8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_class_Variable4) == 0x0001E0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_class_Variable4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_HasAuthority_ReturnValue7) == 0x0001E8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_HasAuthority_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_class_Variable5) == 0x0001F0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_class_Variable5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue8) == 0x0001F8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_HasAuthority_ReturnValue8) == 0x0001F9, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_HasAuthority_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_Variable2) == 0x0001FA, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_class_Variable6) == 0x000200, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_class_Variable6' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Not_PreBool_ReturnValue) == 0x000208, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_class_Variable7) == 0x000210, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_class_Variable7' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue9) == 0x000218, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_class_Variable8) == 0x000220, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_class_Variable8' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_class_Variable9) == 0x000228, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_class_Variable9' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue10) == 0x000230, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_class_Variable10) == 0x000238, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_class_Variable10' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_HasAuthority_ReturnValue9) == 0x000240, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_HasAuthority_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_class_Variable11) == 0x000248, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_class_Variable11' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_HasAuthority_ReturnValue10) == 0x000250, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_HasAuthority_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_class_Variable12) == 0x000258, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_class_Variable12' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_Variable3) == 0x000260, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_class_Variable13) == 0x000268, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_class_Variable13' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Not_PreBool_ReturnValue1) == 0x000270, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_class_Variable14) == 0x000278, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_class_Variable14' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue11) == 0x000280, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_class_Variable15) == 0x000288, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_class_Variable15' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_Variable4) == 0x000290, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Not_PreBool_ReturnValue2) == 0x000291, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_class_Variable16) == 0x000298, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_class_Variable16' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue12) == 0x0002A0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_class_Variable17) == 0x0002A8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_class_Variable17' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_class_Variable18) == 0x0002B0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_class_Variable18' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_HasAuthority_ReturnValue11) == 0x0002B8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_HasAuthority_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_byte_Variable) == 0x0002B9, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable2) == 0x0002BA, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_IsClosed_Variable) == 0x0002BB, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_int_Array_Index_Variable2) == 0x0002BC, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_Has_Been_Initd_Variable) == 0x0002C0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputAxisEvent_AxisValue3) == 0x0002C4, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputAxisEvent_AxisValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputAxisEvent_AxisValue2) == 0x0002C8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputAxisEvent_AxisValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0002CC, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x0002D0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputAxisEvent_AxisValue1) == 0x0002D4, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputAxisEvent_AxisValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputAxisEvent_AxisValue) == 0x0002D8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetActorForwardVector_ReturnValue) == 0x0002DC, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetActorRightVector_ReturnValue) == 0x0002E8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_int_Loop_Counter_Variable2) == 0x0002F4, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Add_IntInt_ReturnValue2) == 0x0002F8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsPlayInEditor_ReturnValue) == 0x0002FC, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsPlayInEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetAllActorsOfClass_OutActors) == 0x000300, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Array_Get_Item) == 0x000310, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Array_Length_ReturnValue) == 0x000318, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_RandomBool_ReturnValue) == 0x00031C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Less_IntInt_ReturnValue) == 0x00031D, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_Variable5) == 0x00031E, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputKeyEvent_Key1) == 0x000320, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputKeyEvent_Key1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputKeyEvent_Key2) == 0x000338, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputKeyEvent_Key2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Value5) == 0x000350, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Value5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue13) == 0x000351, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputKeyEvent_Key3) == 0x000358, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputKeyEvent_Key3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputKeyEvent_Key4) == 0x000370, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputKeyEvent_Key4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputKeyEvent_Key5) == 0x000388, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputKeyEvent_Key5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputKeyEvent_Key6) == 0x0003A0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputKeyEvent_Key6' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputKeyEvent_Key7) == 0x0003B8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputKeyEvent_Key7' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_string_Variable) == 0x0003D0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue14) == 0x0003E0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue15) == 0x0003E1, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_string_Variable1) == 0x0003E8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_string_Variable1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue16) == 0x0003F8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetAllActorsOfClass_OutActors1) == 0x000400, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetAllActorsOfClass_OutActors1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_Variable6) == 0x000410, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_Variable6' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Array_Get_Item1) == 0x000418, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_Select_Default) == 0x000420, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Array_Length_ReturnValue1) == 0x000430, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Less_IntInt_ReturnValue1) == 0x000434, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue17) == 0x000435, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_DeltaSeconds) == 0x000438, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetAllActorsOfClass_OutActors2) == 0x000440, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetAllActorsOfClass_OutActors2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputKeyEvent_Key8) == 0x000450, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputKeyEvent_Key8' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Array_Length_ReturnValue2) == 0x000468, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_FindTargetToShoot_Target) == 0x000470, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_FindTargetToShoot_Target' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000478, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue) == 0x000484, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000488, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_FindLookAtRotation_ReturnValue) == 0x000494, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0004A0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakRotator_Roll) == 0x0004AC, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakRotator_Pitch) == 0x0004B0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakRotator_Yaw) == 0x0004B4, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakRotator_Roll1) == 0x0004B8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakRotator_Pitch1) == 0x0004BC, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakRotator_Yaw1) == 0x0004C0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue18) == 0x0004C4, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_MakeRotator_ReturnValue) == 0x0004C8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0004D4, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputKeyEvent_Key9) == 0x0004D8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputKeyEvent_Key9' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue1) == 0x0004F0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue2) == 0x0004F1, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue3) == 0x0004F2, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0004F3, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_RandomFloatInRange_ReturnValue) == 0x0004F4, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Value4) == 0x0004F8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Value4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_RandomFloatInRange_ReturnValue1) == 0x0004FC, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_RandomFloatInRange_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_RandomFloatInRange_ReturnValue2) == 0x000500, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_RandomFloatInRange_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetController_ReturnValue) == 0x000508, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue4) == 0x000510, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Not_PreBool_ReturnValue3) == 0x000511, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_RandomFloatInRange_ReturnValue3) == 0x000514, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_RandomFloatInRange_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_GetActorRotation_ReturnValue1) == 0x000518, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_GetActorRotation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakRotator_Roll2) == 0x000524, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakRotator_Roll2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakRotator_Pitch2) == 0x000528, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakRotator_Pitch2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakRotator_Yaw2) == 0x00052C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakRotator_Yaw2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_MakeRotator_ReturnValue1) == 0x000530, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_MakeRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_SetActorRotation_ReturnValue1) == 0x00053C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_SetActorRotation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetGameMode_ReturnValue) == 0x000540, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_AsBP_Game_Mode_PVP_Base) == 0x000548, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_AsBP_Game_Mode_PVP_Base' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_bSuccess) == 0x000550, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputKeyEvent_Key10) == 0x000558, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputKeyEvent_Key10' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetAllActorsOfClass_OutActors3) == 0x000570, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetAllActorsOfClass_OutActors3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Array_Length_ReturnValue3) == 0x000580, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Greater_IntInt_ReturnValue) == 0x000584, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue19) == 0x000585, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Not_PreBool_ReturnValue4) == 0x000586, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000587, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable3) == 0x000588, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_RandomFloatInRange_ReturnValue4) == 0x00058C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_RandomFloatInRange_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Not_PreBool_ReturnValue5) == 0x000590, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputKeyEvent_Key11) == 0x000598, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputKeyEvent_Key11' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Not_PreBool_ReturnValue6) == 0x0005B0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Not_PreBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BooleanAND_ReturnValue) == 0x0005B1, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BooleanAND_ReturnValue1) == 0x0005B2, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetObjectClass_ReturnValue) == 0x0005B8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0005C0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0005C1, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_EqualEqual_ClassClass_ReturnValue1) == 0x0005C2, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_EqualEqual_ClassClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BooleanOR_ReturnValue) == 0x0005C3, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetObjectClass_ReturnValue1) == 0x0005C8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetObjectClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_RandomFloatInRange_ReturnValue5) == 0x0005D0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_RandomFloatInRange_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_EqualEqual_ClassClass_ReturnValue2) == 0x0005D4, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_EqualEqual_ClassClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_EqualEqual_ClassClass_ReturnValue3) == 0x0005D5, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_EqualEqual_ClassClass_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BooleanOR_ReturnValue1) == 0x0005D6, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetObjectClass_ReturnValue2) == 0x0005D8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetObjectClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x0005E0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_Select1_Default) == 0x0005E4, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_WeaponType) == 0x0005E8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_WeaponType' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_IsRight2) == 0x0005E9, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_IsRight2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputKeyEvent_Key12) == 0x0005F0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputKeyEvent_Key12' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_Select2_Default) == 0x000608, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_IsRightHand2) == 0x000610, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_IsRightHand2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValidClass_ReturnValue) == 0x000611, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValidClass_ReturnValue1) == 0x000612, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValidClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_IsRightHand1) == 0x000613, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_IsRightHand1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_IsRightHand) == 0x000614, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_IsRightHand' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue5) == 0x000615, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue20) == 0x000616, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputKeyEvent_Key13) == 0x000618, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputKeyEvent_Key13' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue6) == 0x000630, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_MakeTransform_ReturnValue) == 0x000640, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue7) == 0x000670, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000678, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_FinishSpawningActor_ReturnValue) == 0x000680, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1) == 0x000688, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_AsBPWeapon_Base) == 0x000690, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_AsBPWeapon_Base' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_bSuccess1) == 0x000698, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_FinishSpawningActor_ReturnValue1) == 0x0006A0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_FinishSpawningActor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue8) == 0x0006A8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_AsBPWeapon_Base1) == 0x0006B0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_AsBPWeapon_Base1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_bSuccess2) == 0x0006B8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue9) == 0x0006B9, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputKeyEvent_Key14) == 0x0006C0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputKeyEvent_Key14' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue10) == 0x0006D8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_struct_Variable2) == 0x0006E0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputKeyEvent_Key15) == 0x0006F8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputKeyEvent_Key15' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsDevelopmentMode_ReturnValue21) == 0x000710, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsDevelopmentMode_ReturnValue21' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_MakeTransform_ReturnValue1) == 0x000720, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_MakeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2) == 0x000750, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue11) == 0x000758, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_FinishSpawningActor_ReturnValue2) == 0x000760, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_FinishSpawningActor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_AsBPWeapon_Base2) == 0x000768, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_AsBPWeapon_Base2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_bSuccess3) == 0x000770, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue3) == 0x000778, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_FinishSpawningActor_ReturnValue3) == 0x000780, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_FinishSpawningActor_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_AsBPWeapon_Base3) == 0x000788, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_AsBPWeapon_Base3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_bSuccess4) == 0x000790, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue12) == 0x000791, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue13) == 0x000792, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue14) == 0x000793, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_HapticEffect) == 0x000798, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_HapticEffect' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Hand) == 0x0007A0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Hand' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Scale) == 0x0007A4, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Scale' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Loop) == 0x0007A8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Loop' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetController_ReturnValue1) == 0x0007B0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_AsPlayer_Controller) == 0x0007B8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_bSuccess5) == 0x0007C0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Killer) == 0x0007C8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Killer' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputActionEvent_Key) == 0x0007D0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_struct_Variable3) == 0x0007E8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputActionEvent_Key1) == 0x000800, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputActionEvent_Key1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Damage) == 0x000818, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Causer) == 0x000820, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Causer' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Health) == 0x000828, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Health' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00082C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000830, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Add_FloatFloat_ReturnValue) == 0x000834, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Less_FloatFloat_ReturnValue) == 0x000838, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Not_PreBool_ReturnValue7) == 0x000839, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Not_PreBool_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetGameMode_ReturnValue1) == 0x000840, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetGameMode_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_AsBP_Game_Mode_PVP_Base1) == 0x000848, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_AsBP_Game_Mode_PVP_Base1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_bSuccess6) == 0x000850, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetStartTransform_Target) == 0x000858, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetStartTransform_Target' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_MakeTransform_ReturnValue2) == 0x000860, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_MakeTransform_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetController_ReturnValue2) == 0x000890, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_AsPlayer_Controller1) == 0x000898, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_AsPlayer_Controller1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_bSuccess7) == 0x0008A0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Rotation) == 0x0008A4, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue15) == 0x0008B0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue16) == 0x0008B1, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_Variable7) == 0x0008B2, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_Variable7' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Not_PreBool_ReturnValue8) == 0x0008B3, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Not_PreBool_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputKeyEvent_Key16) == 0x0008B8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputKeyEvent_Key16' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsHeadMountedDisplayEnabled_ReturnValue) == 0x0008D0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsHeadMountedDisplayEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0008D8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_ComponentBoundEvent_HitComponent) == 0x000960, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_ComponentBoundEvent_OtherActor) == 0x000968, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_ComponentBoundEvent_OtherComp) == 0x000970, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000978, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_ComponentBoundEvent_Hit) == 0x000988, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Value3) == 0x000A10, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Value3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_Select3_Default) == 0x000A14, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_BoneName) == 0x000A20, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_HitLocation) == 0x000A30, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_HitNormal) == 0x000A3C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_HitDamage) == 0x000A48, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_HitDamage' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000A50, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Contains_ReturnValue) == 0x000AD8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_Select4_Default) == 0x000AE0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_SpawnParticle_ReturnValue) == 0x000AE8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_SpawnParticle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_int_Array_Index_Variable3) == 0x000AF0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Array_Get_Item2) == 0x000AF8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Array_Add_ReturnValue) == 0x000B00, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Array_Add_ReturnValue1) == 0x000B04, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000B08, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000B09, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Not_PreBool_ReturnValue9) == 0x000B0A, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Not_PreBool_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Conv_StringToName_ReturnValue) == 0x000B10, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Conv_StringToName_ReturnValue1) == 0x000B18, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Conv_StringToName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Conv_StringToName_ReturnValue2) == 0x000B20, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Conv_StringToName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Not_PreBool_ReturnValue10) == 0x000B28, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Not_PreBool_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetBoneIndex_ReturnValue) == 0x000B2C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetBoneIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BooleanAND_ReturnValue2) == 0x000B30, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Greater_IntInt_ReturnValue1) == 0x000B31, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Not_PreBool_ReturnValue11) == 0x000B32, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Not_PreBool_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Not_PreBool_ReturnValue12) == 0x000B33, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Not_PreBool_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x000B34, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000B38, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000B44, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Less_FloatFloat_ReturnValue1) == 0x000B48, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputActionEvent_Key2) == 0x000B50, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputActionEvent_Key2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetController_ReturnValue3) == 0x000B68, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetController_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_AsPlayer_Controller2) == 0x000B70, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_AsPlayer_Controller2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_bSuccess8) == 0x000B78, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetTransform_ReturnValue1) == 0x000B80, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue4) == 0x000BB0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_FinishSpawningActor_ReturnValue4) == 0x000BB8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_FinishSpawningActor_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_IsRight1) == 0x000BC0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_IsRight1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_value2) == 0x000BC1, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_value2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x000BC4, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_MakeVector_ReturnValue) == 0x000BC8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_SetRelativeLocation_SweepHitResult1) == 0x000BD8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_SetRelativeLocation_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_SwitchEnum_CmpSuccess) == 0x000C60, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_SwitchEnum1_CmpSuccess) == 0x000C61, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsHeadMountedDisplayEnabled_ReturnValue1) == 0x000C62, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsHeadMountedDisplayEnabled_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_IsRight) == 0x000C63, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_IsRight' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_IsDestroy) == 0x000C64, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_IsDestroy' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue17) == 0x000C65, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue18) == 0x000C66, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_Has_Been_Initd_Variable1) == 0x000C67, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue19) == 0x000C68, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue20) == 0x000C69, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_IsClosed_Variable1) == 0x000C6A, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Not_PreBool_ReturnValue13) == 0x000C6B, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Not_PreBool_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsLocallyControlled_ReturnValue) == 0x000C6C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_struct_Variable4) == 0x000C70, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Head1) == 0x000C90, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Head1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_LeftHand1) == 0x000CC0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_LeftHand1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_RightHand1) == 0x000CF0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_RightHand1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Head) == 0x000D20, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Head' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_LeftHand) == 0x000D50, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_LeftHand' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_RightHand) == 0x000D80, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_RightHand' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsServer_ReturnValue) == 0x000DB0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsServer_ReturnValue1) == 0x000DB1, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000DC0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_GetComponentToWorld_ReturnValue1) == 0x000DF0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_GetComponentToWorld_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_GetComponentToWorld_ReturnValue2) == 0x000E20, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_GetComponentToWorld_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000E50, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_SetWorldTransform_SweepHitResult1) == 0x000ED8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_SetWorldTransform_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_SetWorldTransform_SweepHitResult2) == 0x000F60, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_SetWorldTransform_SweepHitResult2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_SetWorldTransform_SweepHitResult3) == 0x000FE8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_SetWorldTransform_SweepHitResult3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_SetWorldTransform_SweepHitResult4) == 0x001070, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_SetWorldTransform_SweepHitResult4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsLocallyControlled_ReturnValue1) == 0x0010F8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsLocallyControlled_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_SetWorldTransform_SweepHitResult5) == 0x001100, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_SetWorldTransform_SweepHitResult5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Value1) == 0x001188, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Value1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsLocallyControlled_ReturnValue2) == 0x001189, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsLocallyControlled_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_Event_DamageReceived) == 0x00118C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_Event_DamageReceived' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_Event_DamageType) == 0x001190, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_Event_Origin) == 0x001198, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_Event_Origin' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_Event_HitInfo) == 0x0011A8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_Event_InstigatedBy) == 0x001230, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_Event_DamageCauser) == 0x001238, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Weapon) == 0x001240, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Weapon' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_DeltaTime) == 0x001248, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Less_FloatFloat_ReturnValue2) == 0x00124C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Less_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Add_FloatFloat_ReturnValue1) == 0x001250, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Less_FloatFloat_ReturnValue3) == 0x001254, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Less_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Add_FloatFloat_ReturnValue2) == 0x001258, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Not_PreBool_ReturnValue14) == 0x00125C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Not_PreBool_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00125D, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Not_PreBool_ReturnValue15) == 0x00125E, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Not_PreBool_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue21) == 0x00125F, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue21' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Value) == 0x001260, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsLocallyControlled_ReturnValue3) == 0x001261, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsLocallyControlled_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_IsStopFire) == 0x001262, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_IsStopFire' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetAllActorsOfClass_OutActors4) == 0x001268, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetAllActorsOfClass_OutActors4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Array_Get_Item3) == 0x001278, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Array_Length_ReturnValue4) == 0x001280, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Less_IntInt_ReturnValue2) == 0x001284, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetForwardVector_ReturnValue) == 0x001288, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_IsReset) == 0x001294, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_IsReset' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakVector_X) == 0x001298, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakVector_Y) == 0x00129C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakVector_Z) == 0x0012A0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_MakeVector_ReturnValue1) == 0x0012A4, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Normal_ReturnValue) == 0x0012B0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x0012BC, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakVector_X1) == 0x0012C8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakVector_Y1) == 0x0012CC, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakVector_Z1) == 0x0012D0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Add_VectorVector_ReturnValue) == 0x0012D4, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_MakeVector_ReturnValue2) == 0x0012E0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_SetRelativeLocation_SweepHitResult2) == 0x0012F0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_SetRelativeLocation_SweepHitResult2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_SetRelativeLocation_SweepHitResult3) == 0x001378, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_SetRelativeLocation_SweepHitResult3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_AttachToComponent_ReturnValue) == 0x001400, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_int_Loop_Counter_Variable3) == 0x001404, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Less_IntInt_ReturnValue3) == 0x001408, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Add_IntInt_ReturnValue3) == 0x00140C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Show2) == 0x001410, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Show2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_MakeStruct_Vector4) == 0x001420, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_MakeStruct_Vector4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_MakeStruct_PostProcessSettings) == 0x001430, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsLocallyControlled_ReturnValue4) == 0x001910, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsLocallyControlled_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BooleanAND_ReturnValue3) == 0x001911, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_struct_Variable5) == 0x001918, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_struct_Variable5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Target) == 0x001930, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputActionEvent_Key6) == 0x001960, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputActionEvent_Key6' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_SetActorTransform_SweepHitResult1) == 0x001978, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_SetActorTransform_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_SetActorTransform_ReturnValue1) == 0x001A00, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_SetActorTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Show1) == 0x001A01, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Show1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Show) == 0x001A02, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Show' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsLocallyControlled_ReturnValue5) == 0x001A03, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsLocallyControlled_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue22) == 0x001A04, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue22' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue23) == 0x001A05, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue23' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsLocallyControlled_ReturnValue6) == 0x001A06, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsLocallyControlled_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_IsShow) == 0x001A07, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_IsShow' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_Has_Been_Initd_Variable2) == 0x001A08, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_Has_Been_Initd_Variable2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Not_PreBool_ReturnValue16) == 0x001A09, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Not_PreBool_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_GetActorRotation_ReturnValue2) == 0x001A0C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_GetActorRotation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakRotator_Roll3) == 0x001A18, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakRotator_Roll3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakRotator_Pitch3) == 0x001A1C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakRotator_Pitch3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakRotator_Yaw3) == 0x001A20, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakRotator_Yaw3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_MakeRotator_ReturnValue2) == 0x001A24, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_MakeRotator_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_GetActorRotation_ReturnValue3) == 0x001A30, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_GetActorRotation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakRotator_Roll4) == 0x001A3C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakRotator_Roll4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakRotator_Pitch4) == 0x001A40, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakRotator_Pitch4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakRotator_Yaw4) == 0x001A44, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakRotator_Yaw4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_MakeRotator_ReturnValue3) == 0x001A48, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_MakeRotator_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent__dt1) == 0x001A54, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent__dt1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent__dt) == 0x001A58, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent__dt' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetController_ReturnValue4) == 0x001A60, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetController_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsLocallyControlled_ReturnValue7) == 0x001A68, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsLocallyControlled_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_AsPlayer_Controller3) == 0x001A70, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_AsPlayer_Controller3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_bSuccess9) == 0x001A78, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsHeadMountedDisplayEnabled_ReturnValue2) == 0x001A79, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsHeadMountedDisplayEnabled_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Not_PreBool_ReturnValue17) == 0x001A7A, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Not_PreBool_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_CustomEvent_Slow_) == 0x001A7B, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_CustomEvent_Slow_' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputActionEvent_Key7) == 0x001A80, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputActionEvent_Key7' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue24) == 0x001A98, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue24' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue25) == 0x001A99, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue25' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_IsClosed_Variable2) == 0x001A9A, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_IsClosed_Variable2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputKeyEvent_Key17) == 0x001AA0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputKeyEvent_Key17' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue26) == 0x001AB8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue26' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue27) == 0x001AB9, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue27' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue28) == 0x001ABA, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue28' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_Event_DeltaSeconds) == 0x001ABC, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetAimPos_Pos) == 0x001AC0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetAimPos_Pos' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue29) == 0x001ACC, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue29' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue30) == 0x001ACD, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue30' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetObjectClass_ReturnValue3) == 0x001AD0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetObjectClass_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_NotEqual_ClassClass_ReturnValue1) == 0x001AD8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_NotEqual_ClassClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Add_IntInt_ReturnValue4) == 0x001ADC, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x001AE0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BooleanAND_ReturnValue4) == 0x001AE1, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_MakeTransform_ReturnValue3) == 0x001AF0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_MakeTransform_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_Has_Been_Initd_Variable3) == 0x001B20, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_Has_Been_Initd_Variable3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_IsClosed_Variable3) == 0x001B21, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_IsClosed_Variable3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue31) == 0x001B22, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue31' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue32) == 0x001B23, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue32' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue33) == 0x001B24, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue33' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue34) == 0x001B25, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue34' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue35) == 0x001B26, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue35' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetObjectClass_ReturnValue4) == 0x001B28, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetObjectClass_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_NotEqual_ClassClass_ReturnValue2) == 0x001B30, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_NotEqual_ClassClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Add_IntInt_ReturnValue5) == 0x001B34, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_LessEqual_IntInt_ReturnValue2) == 0x001B38, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_LessEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BooleanAND_ReturnValue5) == 0x001B39, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BooleanAND_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue36) == 0x001B3A, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue36' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue37) == 0x001B3B, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue37' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_GetComponentToWorld_ReturnValue3) == 0x001B40, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_GetComponentToWorld_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakTransform_Location1) == 0x001B70, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakTransform_Location1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakTransform_Rotation1) == 0x001B7C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakTransform_Rotation1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakTransform_Scale1) == 0x001B88, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakTransform_Scale1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_GetComponentToWorld_ReturnValue4) == 0x001BA0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_GetComponentToWorld_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakTransform_Location2) == 0x001BD0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakTransform_Location2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakTransform_Rotation2) == 0x001BDC, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakTransform_Rotation2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakTransform_Scale2) == 0x001BE8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakTransform_Scale2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_GetComponentToWorld_ReturnValue5) == 0x001C00, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_GetComponentToWorld_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsLocallyControlled_ReturnValue8) == 0x001C30, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsLocallyControlled_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakTransform_Location3) == 0x001C34, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakTransform_Location3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakTransform_Rotation3) == 0x001C40, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakTransform_Rotation3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BreakTransform_Scale3) == 0x001C4C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BreakTransform_Scale3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x001C58, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x001C60, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x001C64, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_Has_Been_Initd_Variable4) == 0x001C68, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_Has_Been_Initd_Variable4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue38) == 0x001C69, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue38' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsHeadMountedDisplayEnabled_ReturnValue3) == 0x001C6A, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsHeadMountedDisplayEnabled_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Not_PreBool_ReturnValue18) == 0x001C6B, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Not_PreBool_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Not_PreBool_ReturnValue19) == 0x001C6C, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Not_PreBool_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetAnimInstance_ReturnValue) == 0x001C70, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_AsIKAnim_Instance) == 0x001C78, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_AsIKAnim_Instance' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_bSuccess10) == 0x001C80, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue39) == 0x001C81, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue39' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_InputActionEvent_Key3) == 0x001C88, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_InputActionEvent_Key3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x001CA0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetSocketLocation_ReturnValue) == 0x001CAC, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x001CB8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_SetWorldLocation_SweepHitResult1) == 0x001D40, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_SetWorldLocation_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetController_ReturnValue5) == 0x001DC8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetController_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsValid_ReturnValue40) == 0x001DD0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsValid_ReturnValue40' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, Temp_bool_IsClosed_Variable4) == 0x001DD1, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::Temp_bool_IsClosed_Variable4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsLocallyControlled_ReturnValue9) == 0x001DD2, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsLocallyControlled_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsPointWeapon_Value) == 0x001DD3, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsPointWeapon_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsPointWeapon_Value1) == 0x001DD4, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsPointWeapon_Value1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetGameMode_ReturnValue2) == 0x001DD8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetGameMode_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_AsBP_Game_Mode_PVP_Base2) == 0x001DE0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_AsBP_Game_Mode_PVP_Base2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_bSuccess11) == 0x001DE8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetUserWidgetObject_ReturnValue) == 0x001DF0, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue5) == 0x001DF8, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_AsDeath_UI) == 0x001E00, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_AsDeath_UI' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_bSuccess12) == 0x001E08, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_bSuccess12' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_FinishSpawningActor_ReturnValue5) == 0x001E10, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_FinishSpawningActor_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_AsBPDefault_Hand) == 0x001E18, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_AsBPDefault_Hand' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_bSuccess13) == 0x001E20, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_bSuccess13' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue6) == 0x001E28, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_Event_NewController) == 0x001E30, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_FinishSpawningActor_ReturnValue6) == 0x001E38, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_FinishSpawningActor_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_AsBPRight_Hand) == 0x001E40, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_AsBPRight_Hand' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_bSuccess14) == 0x001E48, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_bSuccess14' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_GetController_ReturnValue6) == 0x001E50, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_GetController_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_AsPlayer_Controller4) == 0x001E58, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_AsPlayer_Controller4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, K2Node_DynamicCast_bSuccess15) == 0x001E60, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::K2Node_DynamicCast_bSuccess15' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsLocalPlayerController_ReturnValue) == 0x001E61, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_Conv_FloatToText_ReturnValue) == 0x001E68, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x001E80, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base, CallFunc_IsPlayInEditor_ReturnValue1) == 0x001F08, "Member 'BP_CharacterPVP_Base_C_ExecuteUbergraph_BP_CharacterPVP_Base::CallFunc_IsPlayInEditor_ReturnValue1' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterPVP_Base_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_ReceivePossessed) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_ReceivePossessed");
static_assert(sizeof(BP_CharacterPVP_Base_C_ReceivePossessed) == 0x000008, "Wrong size on BP_CharacterPVP_Base_C_ReceivePossessed");
static_assert(offsetof(BP_CharacterPVP_Base_C_ReceivePossessed, NewController) == 0x000000, "Member 'BP_CharacterPVP_Base_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_CharacterPVP_Base_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_CharacterPVP_Base_C_ReceiveTick");
static_assert(sizeof(BP_CharacterPVP_Base_C_ReceiveTick) == 0x000004, "Wrong size on BP_CharacterPVP_Base_C_ReceiveTick");
static_assert(offsetof(BP_CharacterPVP_Base_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_CharacterPVP_Base_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.MulticastSlowdown
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterPVP_Base_C_MulticastSlowdown final
{
public:
	bool                                          Slow_;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_MulticastSlowdown) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_MulticastSlowdown");
static_assert(sizeof(BP_CharacterPVP_Base_C_MulticastSlowdown) == 0x000001, "Wrong size on BP_CharacterPVP_Base_C_MulticastSlowdown");
static_assert(offsetof(BP_CharacterPVP_Base_C_MulticastSlowdown, Slow_) == 0x000000, "Member 'BP_CharacterPVP_Base_C_MulticastSlowdown::Slow_' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.OnCameraFadeOut
// 0x0004 (0x0004 - 0x0000)
struct BP_CharacterPVP_Base_C_OnCameraFadeOut final
{
public:
	float                                         _Dt;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_OnCameraFadeOut) == 0x000004, "Wrong alignment on BP_CharacterPVP_Base_C_OnCameraFadeOut");
static_assert(sizeof(BP_CharacterPVP_Base_C_OnCameraFadeOut) == 0x000004, "Wrong size on BP_CharacterPVP_Base_C_OnCameraFadeOut");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnCameraFadeOut, _Dt) == 0x000000, "Member 'BP_CharacterPVP_Base_C_OnCameraFadeOut::_Dt' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.OnCameraFadeIn
// 0x0004 (0x0004 - 0x0000)
struct BP_CharacterPVP_Base_C_OnCameraFadeIn final
{
public:
	float                                         _Dt;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_OnCameraFadeIn) == 0x000004, "Wrong alignment on BP_CharacterPVP_Base_C_OnCameraFadeIn");
static_assert(sizeof(BP_CharacterPVP_Base_C_OnCameraFadeIn) == 0x000004, "Wrong size on BP_CharacterPVP_Base_C_OnCameraFadeIn");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnCameraFadeIn, _Dt) == 0x000000, "Member 'BP_CharacterPVP_Base_C_OnCameraFadeIn::_Dt' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.OnShowInvin
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterPVP_Base_C_OnShowInvin final
{
public:
	bool                                          IsShow;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_OnShowInvin) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_OnShowInvin");
static_assert(sizeof(BP_CharacterPVP_Base_C_OnShowInvin) == 0x000001, "Wrong size on BP_CharacterPVP_Base_C_OnShowInvin");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnShowInvin, IsShow) == 0x000000, "Member 'BP_CharacterPVP_Base_C_OnShowInvin::IsShow' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.OnShowMeshBroadcast
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterPVP_Base_C_OnShowMeshBroadcast final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_OnShowMeshBroadcast) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_OnShowMeshBroadcast");
static_assert(sizeof(BP_CharacterPVP_Base_C_OnShowMeshBroadcast) == 0x000001, "Wrong size on BP_CharacterPVP_Base_C_OnShowMeshBroadcast");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnShowMeshBroadcast, Show) == 0x000000, "Member 'BP_CharacterPVP_Base_C_OnShowMeshBroadcast::Show' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.OnShowMesh
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterPVP_Base_C_OnShowMesh final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_OnShowMesh) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_OnShowMesh");
static_assert(sizeof(BP_CharacterPVP_Base_C_OnShowMesh) == 0x000001, "Wrong size on BP_CharacterPVP_Base_C_OnShowMesh");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnShowMesh, Show) == 0x000000, "Member 'BP_CharacterPVP_Base_C_OnShowMesh::Show' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.OnTeleportMe
// 0x0030 (0x0030 - 0x0000)
struct BP_CharacterPVP_Base_C_OnTeleportMe final
{
public:
	struct FTransform                             Target;                                            // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_OnTeleportMe) == 0x000010, "Wrong alignment on BP_CharacterPVP_Base_C_OnTeleportMe");
static_assert(sizeof(BP_CharacterPVP_Base_C_OnTeleportMe) == 0x000030, "Wrong size on BP_CharacterPVP_Base_C_OnTeleportMe");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnTeleportMe, Target) == 0x000000, "Member 'BP_CharacterPVP_Base_C_OnTeleportMe::Target' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.ShowDeadPostprocess
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterPVP_Base_C_ShowDeadPostprocess final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_ShowDeadPostprocess) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_ShowDeadPostprocess");
static_assert(sizeof(BP_CharacterPVP_Base_C_ShowDeadPostprocess) == 0x000001, "Wrong size on BP_CharacterPVP_Base_C_ShowDeadPostprocess");
static_assert(offsetof(BP_CharacterPVP_Base_C_ShowDeadPostprocess, Show) == 0x000000, "Member 'BP_CharacterPVP_Base_C_ShowDeadPostprocess::Show' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.OnDeathCamera
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterPVP_Base_C_OnDeathCamera final
{
public:
	bool                                          IsReset;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_OnDeathCamera) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_OnDeathCamera");
static_assert(sizeof(BP_CharacterPVP_Base_C_OnDeathCamera) == 0x000001, "Wrong size on BP_CharacterPVP_Base_C_OnDeathCamera");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnDeathCamera, IsReset) == 0x000000, "Member 'BP_CharacterPVP_Base_C_OnDeathCamera::IsReset' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.StopAIShoot
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterPVP_Base_C_StopAIShoot final
{
public:
	bool                                          IsStopFire_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_StopAIShoot) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_StopAIShoot");
static_assert(sizeof(BP_CharacterPVP_Base_C_StopAIShoot) == 0x000001, "Wrong size on BP_CharacterPVP_Base_C_StopAIShoot");
static_assert(offsetof(BP_CharacterPVP_Base_C_StopAIShoot, IsStopFire_0) == 0x000000, "Member 'BP_CharacterPVP_Base_C_StopAIShoot::IsStopFire_0' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.SetRenderCustomDepth
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterPVP_Base_C_SetRenderCustomDepth final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_SetRenderCustomDepth) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_SetRenderCustomDepth");
static_assert(sizeof(BP_CharacterPVP_Base_C_SetRenderCustomDepth) == 0x000001, "Wrong size on BP_CharacterPVP_Base_C_SetRenderCustomDepth");
static_assert(offsetof(BP_CharacterPVP_Base_C_SetRenderCustomDepth, Value) == 0x000000, "Member 'BP_CharacterPVP_Base_C_SetRenderCustomDepth::Value' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.UpdateHP
// 0x0004 (0x0004 - 0x0000)
struct BP_CharacterPVP_Base_C_UpdateHP final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_UpdateHP) == 0x000004, "Wrong alignment on BP_CharacterPVP_Base_C_UpdateHP");
static_assert(sizeof(BP_CharacterPVP_Base_C_UpdateHP) == 0x000004, "Wrong size on BP_CharacterPVP_Base_C_UpdateHP");
static_assert(offsetof(BP_CharacterPVP_Base_C_UpdateHP, DeltaTime) == 0x000000, "Member 'BP_CharacterPVP_Base_C_UpdateHP::DeltaTime' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.DestroyPickWeapon
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterPVP_Base_C_DestroyPickWeapon final
{
public:
	class AActor*                                 Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_DestroyPickWeapon) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_DestroyPickWeapon");
static_assert(sizeof(BP_CharacterPVP_Base_C_DestroyPickWeapon) == 0x000008, "Wrong size on BP_CharacterPVP_Base_C_DestroyPickWeapon");
static_assert(offsetof(BP_CharacterPVP_Base_C_DestroyPickWeapon, Weapon) == 0x000000, "Member 'BP_CharacterPVP_Base_C_DestroyPickWeapon::Weapon' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.ReceiveRadialDamage
// 0x00B8 (0x00B8 - 0x0000)
struct BP_CharacterPVP_Base_C_ReceiveRadialDamage final
{
public:
	float                                         DamageReceived;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Origin;                                            // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitInfo;                                           // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_ReceiveRadialDamage) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_ReceiveRadialDamage");
static_assert(sizeof(BP_CharacterPVP_Base_C_ReceiveRadialDamage) == 0x0000B8, "Wrong size on BP_CharacterPVP_Base_C_ReceiveRadialDamage");
static_assert(offsetof(BP_CharacterPVP_Base_C_ReceiveRadialDamage, DamageReceived) == 0x000000, "Member 'BP_CharacterPVP_Base_C_ReceiveRadialDamage::DamageReceived' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ReceiveRadialDamage, DamageType) == 0x000008, "Member 'BP_CharacterPVP_Base_C_ReceiveRadialDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ReceiveRadialDamage, Origin) == 0x000010, "Member 'BP_CharacterPVP_Base_C_ReceiveRadialDamage::Origin' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ReceiveRadialDamage, HitInfo) == 0x000020, "Member 'BP_CharacterPVP_Base_C_ReceiveRadialDamage::HitInfo' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ReceiveRadialDamage, InstigatedBy) == 0x0000A8, "Member 'BP_CharacterPVP_Base_C_ReceiveRadialDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_ReceiveRadialDamage, DamageCauser) == 0x0000B0, "Member 'BP_CharacterPVP_Base_C_ReceiveRadialDamage::DamageCauser' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.SetHMDStatus
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterPVP_Base_C_SetHMDStatus final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_SetHMDStatus) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_SetHMDStatus");
static_assert(sizeof(BP_CharacterPVP_Base_C_SetHMDStatus) == 0x000001, "Wrong size on BP_CharacterPVP_Base_C_SetHMDStatus");
static_assert(offsetof(BP_CharacterPVP_Base_C_SetHMDStatus, Value) == 0x000000, "Member 'BP_CharacterPVP_Base_C_SetHMDStatus::Value' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.UpdateToClient
// 0x0090 (0x0090 - 0x0000)
struct BP_CharacterPVP_Base_C_UpdateToClient final
{
public:
	struct FTransform                             head;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             LeftHand_0;                                        // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             RightHand_0;                                       // 0x0060(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_UpdateToClient) == 0x000010, "Wrong alignment on BP_CharacterPVP_Base_C_UpdateToClient");
static_assert(sizeof(BP_CharacterPVP_Base_C_UpdateToClient) == 0x000090, "Wrong size on BP_CharacterPVP_Base_C_UpdateToClient");
static_assert(offsetof(BP_CharacterPVP_Base_C_UpdateToClient, head) == 0x000000, "Member 'BP_CharacterPVP_Base_C_UpdateToClient::head' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_UpdateToClient, LeftHand_0) == 0x000030, "Member 'BP_CharacterPVP_Base_C_UpdateToClient::LeftHand_0' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_UpdateToClient, RightHand_0) == 0x000060, "Member 'BP_CharacterPVP_Base_C_UpdateToClient::RightHand_0' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.UpdateToServer
// 0x0090 (0x0090 - 0x0000)
struct BP_CharacterPVP_Base_C_UpdateToServer final
{
public:
	struct FTransform                             head;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             LeftHand_0;                                        // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             RightHand_0;                                       // 0x0060(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_UpdateToServer) == 0x000010, "Wrong alignment on BP_CharacterPVP_Base_C_UpdateToServer");
static_assert(sizeof(BP_CharacterPVP_Base_C_UpdateToServer) == 0x000090, "Wrong size on BP_CharacterPVP_Base_C_UpdateToServer");
static_assert(offsetof(BP_CharacterPVP_Base_C_UpdateToServer, head) == 0x000000, "Member 'BP_CharacterPVP_Base_C_UpdateToServer::head' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_UpdateToServer, LeftHand_0) == 0x000030, "Member 'BP_CharacterPVP_Base_C_UpdateToServer::LeftHand_0' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_UpdateToServer, RightHand_0) == 0x000060, "Member 'BP_CharacterPVP_Base_C_UpdateToServer::RightHand_0' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.DropCharWeapon
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterPVP_Base_C_DropCharWeapon final
{
public:
	bool                                          IsRight;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsDestroy;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_DropCharWeapon) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_DropCharWeapon");
static_assert(sizeof(BP_CharacterPVP_Base_C_DropCharWeapon) == 0x000002, "Wrong size on BP_CharacterPVP_Base_C_DropCharWeapon");
static_assert(offsetof(BP_CharacterPVP_Base_C_DropCharWeapon, IsRight) == 0x000000, "Member 'BP_CharacterPVP_Base_C_DropCharWeapon::IsRight' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_DropCharWeapon, IsDestroy) == 0x000001, "Member 'BP_CharacterPVP_Base_C_DropCharWeapon::IsDestroy' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.SetMotionControllerEnable
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterPVP_Base_C_SetMotionControllerEnable final
{
public:
	bool                                          IsRight;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Value;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_SetMotionControllerEnable) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_SetMotionControllerEnable");
static_assert(sizeof(BP_CharacterPVP_Base_C_SetMotionControllerEnable) == 0x000002, "Wrong size on BP_CharacterPVP_Base_C_SetMotionControllerEnable");
static_assert(offsetof(BP_CharacterPVP_Base_C_SetMotionControllerEnable, IsRight) == 0x000000, "Member 'BP_CharacterPVP_Base_C_SetMotionControllerEnable::IsRight' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_SetMotionControllerEnable, Value) == 0x000001, "Member 'BP_CharacterPVP_Base_C_SetMotionControllerEnable::Value' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.OnHitReaction
// 0x0030 (0x0030 - 0x0000)
struct BP_CharacterPVP_Base_C_OnHitReaction final
{
public:
	class FString                                 BoneName_0;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal_0;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HitDamage_0;                                       // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_OnHitReaction) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_OnHitReaction");
static_assert(sizeof(BP_CharacterPVP_Base_C_OnHitReaction) == 0x000030, "Wrong size on BP_CharacterPVP_Base_C_OnHitReaction");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnHitReaction, BoneName_0) == 0x000000, "Member 'BP_CharacterPVP_Base_C_OnHitReaction::BoneName_0' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnHitReaction, HitLocation) == 0x000010, "Member 'BP_CharacterPVP_Base_C_OnHitReaction::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnHitReaction, HitNormal_0) == 0x00001C, "Member 'BP_CharacterPVP_Base_C_OnHitReaction::HitNormal_0' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnHitReaction, HitDamage_0) == 0x000028, "Member 'BP_CharacterPVP_Base_C_OnHitReaction::HitDamage_0' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.OnCrouch
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterPVP_Base_C_OnCrouch final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_OnCrouch) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_OnCrouch");
static_assert(sizeof(BP_CharacterPVP_Base_C_OnCrouch) == 0x000001, "Wrong size on BP_CharacterPVP_Base_C_OnCrouch");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnCrouch, Value) == 0x000000, "Member 'BP_CharacterPVP_Base_C_OnCrouch::Value' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.BndEvt__IKMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_CharacterPVP_Base_C_BndEvt__IKMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0028(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_CharacterPVP_Base_C_BndEvt__IKMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_BndEvt__IKMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_CharacterPVP_Base_C_BndEvt__IKMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_CharacterPVP_Base_C_BndEvt__IKMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_CharacterPVP_Base_C_BndEvt__IKMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_CharacterPVP_Base_C_BndEvt__IKMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_BndEvt__IKMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_CharacterPVP_Base_C_BndEvt__IKMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_BndEvt__IKMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_CharacterPVP_Base_C_BndEvt__IKMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_BndEvt__IKMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_CharacterPVP_Base_C_BndEvt__IKMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_BndEvt__IKMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, Hit) == 0x000028, "Member 'BP_CharacterPVP_Base_C_BndEvt__IKMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.ResetControllerRotation
// 0x000C (0x000C - 0x0000)
struct BP_CharacterPVP_Base_C_ResetControllerRotation final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_ResetControllerRotation) == 0x000004, "Wrong alignment on BP_CharacterPVP_Base_C_ResetControllerRotation");
static_assert(sizeof(BP_CharacterPVP_Base_C_ResetControllerRotation) == 0x00000C, "Wrong size on BP_CharacterPVP_Base_C_ResetControllerRotation");
static_assert(offsetof(BP_CharacterPVP_Base_C_ResetControllerRotation, Rotation) == 0x000000, "Member 'BP_CharacterPVP_Base_C_ResetControllerRotation::Rotation' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.HealMe
// 0x0004 (0x0004 - 0x0000)
struct BP_CharacterPVP_Base_C_HealMe final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_HealMe) == 0x000004, "Wrong alignment on BP_CharacterPVP_Base_C_HealMe");
static_assert(sizeof(BP_CharacterPVP_Base_C_HealMe) == 0x000004, "Wrong size on BP_CharacterPVP_Base_C_HealMe");
static_assert(offsetof(BP_CharacterPVP_Base_C_HealMe, Health) == 0x000000, "Member 'BP_CharacterPVP_Base_C_HealMe::Health' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.DamageMe
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterPVP_Base_C_DamageMe final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterPVP_Base_C*                Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_DamageMe) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_DamageMe");
static_assert(sizeof(BP_CharacterPVP_Base_C_DamageMe) == 0x000010, "Wrong size on BP_CharacterPVP_Base_C_DamageMe");
static_assert(offsetof(BP_CharacterPVP_Base_C_DamageMe, Damage) == 0x000000, "Member 'BP_CharacterPVP_Base_C_DamageMe::Damage' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_DamageMe, Causer) == 0x000008, "Member 'BP_CharacterPVP_Base_C_DamageMe::Causer' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.OnDead
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterPVP_Base_C_OnDead final
{
public:
	class ABP_CharacterPVP_Base_C*                Killer_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_OnDead) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_OnDead");
static_assert(sizeof(BP_CharacterPVP_Base_C_OnDead) == 0x000008, "Wrong size on BP_CharacterPVP_Base_C_OnDead");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnDead, Killer_0) == 0x000000, "Member 'BP_CharacterPVP_Base_C_OnDead::Killer_0' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.OnHapticEffect
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_OnHapticEffect final
{
public:
	class UHapticFeedbackEffect_Base*             HapticEffect;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EControllerHand                               hand;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Scale;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Loop;                                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_OnHapticEffect) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_OnHapticEffect");
static_assert(sizeof(BP_CharacterPVP_Base_C_OnHapticEffect) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_OnHapticEffect");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnHapticEffect, HapticEffect) == 0x000000, "Member 'BP_CharacterPVP_Base_C_OnHapticEffect::HapticEffect' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnHapticEffect, hand) == 0x000008, "Member 'BP_CharacterPVP_Base_C_OnHapticEffect::hand' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnHapticEffect, Scale) == 0x00000C, "Member 'BP_CharacterPVP_Base_C_OnHapticEffect::Scale' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnHapticEffect, Loop) == 0x000010, "Member 'BP_CharacterPVP_Base_C_OnHapticEffect::Loop' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.Reload
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterPVP_Base_C_Reload final
{
public:
	bool                                          IsRightHand;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_Reload) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_Reload");
static_assert(sizeof(BP_CharacterPVP_Base_C_Reload) == 0x000001, "Wrong size on BP_CharacterPVP_Base_C_Reload");
static_assert(offsetof(BP_CharacterPVP_Base_C_Reload, IsRightHand) == 0x000000, "Member 'BP_CharacterPVP_Base_C_Reload::IsRightHand' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.ReleaseTrigger
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterPVP_Base_C_ReleaseTrigger final
{
public:
	bool                                          IsRightHand;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_ReleaseTrigger) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_ReleaseTrigger");
static_assert(sizeof(BP_CharacterPVP_Base_C_ReleaseTrigger) == 0x000001, "Wrong size on BP_CharacterPVP_Base_C_ReleaseTrigger");
static_assert(offsetof(BP_CharacterPVP_Base_C_ReleaseTrigger, IsRightHand) == 0x000000, "Member 'BP_CharacterPVP_Base_C_ReleaseTrigger::IsRightHand' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.PullTrigger
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterPVP_Base_C_PullTrigger final
{
public:
	bool                                          IsRightHand;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_PullTrigger) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_PullTrigger");
static_assert(sizeof(BP_CharacterPVP_Base_C_PullTrigger) == 0x000001, "Wrong size on BP_CharacterPVP_Base_C_PullTrigger");
static_assert(offsetof(BP_CharacterPVP_Base_C_PullTrigger, IsRightHand) == 0x000000, "Member 'BP_CharacterPVP_Base_C_PullTrigger::IsRightHand' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.SpawnWeapon
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterPVP_Base_C_SpawnWeapon final
{
public:
	EItemTypes                                    WeaponType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRight;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_SpawnWeapon) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_SpawnWeapon");
static_assert(sizeof(BP_CharacterPVP_Base_C_SpawnWeapon) == 0x000002, "Wrong size on BP_CharacterPVP_Base_C_SpawnWeapon");
static_assert(offsetof(BP_CharacterPVP_Base_C_SpawnWeapon, WeaponType) == 0x000000, "Member 'BP_CharacterPVP_Base_C_SpawnWeapon::WeaponType' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_SpawnWeapon, IsRight) == 0x000001, "Member 'BP_CharacterPVP_Base_C_SpawnWeapon::IsRight' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.SetAnimCrouch
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterPVP_Base_C_SetAnimCrouch final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_SetAnimCrouch) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_SetAnimCrouch");
static_assert(sizeof(BP_CharacterPVP_Base_C_SetAnimCrouch) == 0x000001, "Wrong size on BP_CharacterPVP_Base_C_SetAnimCrouch");
static_assert(offsetof(BP_CharacterPVP_Base_C_SetAnimCrouch, Value) == 0x000000, "Member 'BP_CharacterPVP_Base_C_SetAnimCrouch::Value' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.AIControlTick
// 0x0004 (0x0004 - 0x0000)
struct BP_CharacterPVP_Base_C_AIControlTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_AIControlTick) == 0x000004, "Wrong alignment on BP_CharacterPVP_Base_C_AIControlTick");
static_assert(sizeof(BP_CharacterPVP_Base_C_AIControlTick) == 0x000004, "Wrong size on BP_CharacterPVP_Base_C_AIControlTick");
static_assert(offsetof(BP_CharacterPVP_Base_C_AIControlTick, DeltaSeconds) == 0x000000, "Member 'BP_CharacterPVP_Base_C_AIControlTick::DeltaSeconds' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.SetUndead
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterPVP_Base_C_SetUndead final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_SetUndead) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_SetUndead");
static_assert(sizeof(BP_CharacterPVP_Base_C_SetUndead) == 0x000001, "Wrong size on BP_CharacterPVP_Base_C_SetUndead");
static_assert(offsetof(BP_CharacterPVP_Base_C_SetUndead, Value) == 0x000000, "Member 'BP_CharacterPVP_Base_C_SetUndead::Value' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192
// 0x0004 (0x0004 - 0x0000)
struct BP_CharacterPVP_Base_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192) == 0x000004, "Wrong alignment on BP_CharacterPVP_Base_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192) == 0x000004, "Wrong size on BP_CharacterPVP_Base_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192, AxisValue) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192::AxisValue' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181
// 0x0004 (0x0004 - 0x0000)
struct BP_CharacterPVP_Base_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181) == 0x000004, "Wrong alignment on BP_CharacterPVP_Base_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181) == 0x000004, "Wrong size on BP_CharacterPVP_Base_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181, AxisValue) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181::AxisValue' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_172
// 0x0004 (0x0004 - 0x0000)
struct BP_CharacterPVP_Base_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_172 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_172) == 0x000004, "Wrong alignment on BP_CharacterPVP_Base_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_172");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_172) == 0x000004, "Wrong size on BP_CharacterPVP_Base_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_172");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_172, AxisValue) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_172::AxisValue' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_157
// 0x0004 (0x0004 - 0x0000)
struct BP_CharacterPVP_Base_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_157 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_157) == 0x000004, "Wrong alignment on BP_CharacterPVP_Base_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_157");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_157) == 0x000004, "Wrong size on BP_CharacterPVP_Base_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_157");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_157, AxisValue) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_157::AxisValue' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_Reload_L_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_Reload_L_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_Reload_L_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_Reload_L_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_Reload_L_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_Reload_L_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_Reload_L_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_Reload_L_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_Fire_L_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_Fire_L_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_Fire_L_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_Fire_L_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_Fire_L_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_Fire_L_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_Fire_L_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_Fire_L_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_Fire_L_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_Fire_L_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_Fire_L_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_Fire_L_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_Fire_L_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_Fire_L_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_Fire_L_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_Fire_L_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_Fire_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_Fire_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_Fire_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_Fire_K2Node_InputActionEvent_3");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_Fire_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_Fire_K2Node_InputActionEvent_3");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_Fire_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_Fire_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_Fire_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_Fire_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_Fire_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_Fire_K2Node_InputActionEvent_4");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_Fire_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_Fire_K2Node_InputActionEvent_4");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_Fire_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_Fire_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_Reload_K2Node_InputActionEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_Reload_K2Node_InputActionEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_Reload_K2Node_InputActionEvent_5) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_Reload_K2Node_InputActionEvent_5");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_Reload_K2Node_InputActionEvent_5) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_Reload_K2Node_InputActionEvent_5");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_Reload_K2Node_InputActionEvent_5, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_Reload_K2Node_InputActionEvent_5::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_LeftAlt_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_LeftAlt_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_LeftAlt_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_LeftAlt_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_LeftAlt_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_LeftAlt_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_LeftAlt_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_LeftAlt_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_Nine_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_Nine_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_Nine_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_Nine_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_Nine_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_Nine_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_Nine_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_Nine_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_M_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_M_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_M_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_M_K2Node_InputKeyEvent_2");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_M_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_M_K2Node_InputKeyEvent_2");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_M_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_M_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_Eight_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_Eight_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_Eight_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_Eight_K2Node_InputKeyEvent_3");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_Eight_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_Eight_K2Node_InputKeyEvent_3");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_Eight_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_Eight_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_Seven_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_Seven_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_Seven_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_Seven_K2Node_InputKeyEvent_4");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_Seven_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_Seven_K2Node_InputKeyEvent_4");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_Seven_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_Seven_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_Six_K2Node_InputKeyEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_Six_K2Node_InputKeyEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_Six_K2Node_InputKeyEvent_5) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_Six_K2Node_InputKeyEvent_5");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_Six_K2Node_InputKeyEvent_5) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_Six_K2Node_InputKeyEvent_5");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_Six_K2Node_InputKeyEvent_5, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_Six_K2Node_InputKeyEvent_5::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_Five_K2Node_InputKeyEvent_6
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_Five_K2Node_InputKeyEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_Five_K2Node_InputKeyEvent_6) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_Five_K2Node_InputKeyEvent_6");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_Five_K2Node_InputKeyEvent_6) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_Five_K2Node_InputKeyEvent_6");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_Five_K2Node_InputKeyEvent_6, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_Five_K2Node_InputKeyEvent_6::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_Four_K2Node_InputKeyEvent_7
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_Four_K2Node_InputKeyEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_Four_K2Node_InputKeyEvent_7) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_Four_K2Node_InputKeyEvent_7");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_Four_K2Node_InputKeyEvent_7) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_Four_K2Node_InputKeyEvent_7");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_Four_K2Node_InputKeyEvent_7, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_Four_K2Node_InputKeyEvent_7::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_U_K2Node_InputKeyEvent_8
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_U_K2Node_InputKeyEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_U_K2Node_InputKeyEvent_8) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_U_K2Node_InputKeyEvent_8");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_U_K2Node_InputKeyEvent_8) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_U_K2Node_InputKeyEvent_8");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_U_K2Node_InputKeyEvent_8, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_U_K2Node_InputKeyEvent_8::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_Three_K2Node_InputKeyEvent_9
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_Three_K2Node_InputKeyEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_Three_K2Node_InputKeyEvent_9) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_Three_K2Node_InputKeyEvent_9");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_Three_K2Node_InputKeyEvent_9) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_Three_K2Node_InputKeyEvent_9");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_Three_K2Node_InputKeyEvent_9, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_Three_K2Node_InputKeyEvent_9::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_Two_K2Node_InputKeyEvent_10
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_Two_K2Node_InputKeyEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_Two_K2Node_InputKeyEvent_10) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_Two_K2Node_InputKeyEvent_10");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_Two_K2Node_InputKeyEvent_10) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_Two_K2Node_InputKeyEvent_10");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_Two_K2Node_InputKeyEvent_10, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_Two_K2Node_InputKeyEvent_10::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_One_K2Node_InputKeyEvent_11
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_One_K2Node_InputKeyEvent_11 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_One_K2Node_InputKeyEvent_11) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_One_K2Node_InputKeyEvent_11");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_One_K2Node_InputKeyEvent_11) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_One_K2Node_InputKeyEvent_11");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_One_K2Node_InputKeyEvent_11, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_One_K2Node_InputKeyEvent_11::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_I_K2Node_InputKeyEvent_12
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_I_K2Node_InputKeyEvent_12 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_I_K2Node_InputKeyEvent_12) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_I_K2Node_InputKeyEvent_12");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_I_K2Node_InputKeyEvent_12) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_I_K2Node_InputKeyEvent_12");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_I_K2Node_InputKeyEvent_12, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_I_K2Node_InputKeyEvent_12::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_K_K2Node_InputKeyEvent_13
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_K_K2Node_InputKeyEvent_13 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_K_K2Node_InputKeyEvent_13) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_K_K2Node_InputKeyEvent_13");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_K_K2Node_InputKeyEvent_13) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_K_K2Node_InputKeyEvent_13");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_K_K2Node_InputKeyEvent_13, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_K_K2Node_InputKeyEvent_13::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_Decimal_K2Node_InputKeyEvent_14
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_Decimal_K2Node_InputKeyEvent_14 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_Decimal_K2Node_InputKeyEvent_14) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_Decimal_K2Node_InputKeyEvent_14");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_Decimal_K2Node_InputKeyEvent_14) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_Decimal_K2Node_InputKeyEvent_14");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_Decimal_K2Node_InputKeyEvent_14, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_Decimal_K2Node_InputKeyEvent_14::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_LeftControl_K2Node_InputKeyEvent_15
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_15 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_15) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_15");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_15) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_15");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_15, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_15::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_LeftControl_K2Node_InputKeyEvent_16
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_16 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_16) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_16");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_16) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_16");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_16, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_16::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_Jump_K2Node_InputActionEvent_6
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_Jump_K2Node_InputActionEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_Jump_K2Node_InputActionEvent_6) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_Jump_K2Node_InputActionEvent_6");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_Jump_K2Node_InputActionEvent_6) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_Jump_K2Node_InputActionEvent_6");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_Jump_K2Node_InputActionEvent_6, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_Jump_K2Node_InputActionEvent_6::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_Jump_K2Node_InputActionEvent_7
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_Jump_K2Node_InputActionEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_Jump_K2Node_InputActionEvent_7) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_Jump_K2Node_InputActionEvent_7");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_Jump_K2Node_InputActionEvent_7) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_Jump_K2Node_InputActionEvent_7");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_Jump_K2Node_InputActionEvent_7, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_Jump_K2Node_InputActionEvent_7::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.InpActEvt_L_K2Node_InputKeyEvent_17
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_InpActEvt_L_K2Node_InputKeyEvent_17 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_InpActEvt_L_K2Node_InputKeyEvent_17) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_InpActEvt_L_K2Node_InputKeyEvent_17");
static_assert(sizeof(BP_CharacterPVP_Base_C_InpActEvt_L_K2Node_InputKeyEvent_17) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_InpActEvt_L_K2Node_InputKeyEvent_17");
static_assert(offsetof(BP_CharacterPVP_Base_C_InpActEvt_L_K2Node_InputKeyEvent_17, Key) == 0x000000, "Member 'BP_CharacterPVP_Base_C_InpActEvt_L_K2Node_InputKeyEvent_17::Key' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.UserConstructionScript
// 0x0070 (0x0070 - 0x0000)
struct BP_CharacterPVP_Base_C_UserConstructionScript final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_AddComponent_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_CharacterPVP_Base_C_UserConstructionScript");
static_assert(sizeof(BP_CharacterPVP_Base_C_UserConstructionScript) == 0x000070, "Wrong size on BP_CharacterPVP_Base_C_UserConstructionScript");
static_assert(offsetof(BP_CharacterPVP_Base_C_UserConstructionScript, Temp_struct_Variable) == 0x000000, "Member 'BP_CharacterPVP_Base_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_UserConstructionScript, Temp_int_Variable) == 0x000030, "Member 'BP_CharacterPVP_Base_C_UserConstructionScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000038, "Member 'BP_CharacterPVP_Base_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_CharacterPVP_Base_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000044, "Member 'BP_CharacterPVP_Base_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'BP_CharacterPVP_Base_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_UserConstructionScript, CallFunc_GetNumMaterials_ReturnValue) == 0x000050, "Member 'BP_CharacterPVP_Base_C_UserConstructionScript::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x000054, "Member 'BP_CharacterPVP_Base_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000058, "Member 'BP_CharacterPVP_Base_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000064, "Member 'BP_CharacterPVP_Base_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.GetAimPos
// 0x0168 (0x0168 - 0x0000)
struct BP_CharacterPVP_Base_C_GetAimPos final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_GetAIAimPos_Pos;                          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0060(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EB[0x1];                                       // 0x00EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_GetAimPos) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_GetAimPos");
static_assert(sizeof(BP_CharacterPVP_Base_C_GetAimPos) == 0x000168, "Wrong size on BP_CharacterPVP_Base_C_GetAimPos");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, Pos) == 0x000000, "Member 'BP_CharacterPVP_Base_C_GetAimPos::Pos' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, Temp_object_Variable) == 0x000010, "Member 'BP_CharacterPVP_Base_C_GetAimPos::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_GetAIAimPos_Pos) == 0x000020, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_GetAIAimPos_Pos' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00002C, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_GetForwardVector_ReturnValue) == 0x000038, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000044, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_LineTraceSingle_OutHit) == 0x000060, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_LineTraceSingle_ReturnValue) == 0x0000E8, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_BreakHitResult_bBlockingHit) == 0x0000E9, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000EA, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_BreakHitResult_Time) == 0x0000EC, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_BreakHitResult_Distance) == 0x0000F0, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_BreakHitResult_Location) == 0x0000F4, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_BreakHitResult_ImpactPoint) == 0x000100, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_BreakHitResult_Normal) == 0x00010C, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_BreakHitResult_ImpactNormal) == 0x000118, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_BreakHitResult_PhysMat) == 0x000128, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_BreakHitResult_HitActor) == 0x000130, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_BreakHitResult_HitComponent) == 0x000138, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_BreakHitResult_HitBoneName) == 0x000140, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_BreakHitResult_HitItem) == 0x000148, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_BreakHitResult_FaceIndex) == 0x00014C, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_BreakHitResult_TraceStart) == 0x000150, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAimPos, CallFunc_BreakHitResult_TraceEnd) == 0x00015C, "Member 'BP_CharacterPVP_Base_C_GetAimPos::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.OnRep_RightWeapon
// 0x00F0 (0x00F0 - 0x0000)
struct BP_CharacterPVP_Base_C_OnRep_RightWeapon final
{
public:
	struct FRotator                               Temp_struct_Variable;                              // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable1;                             // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable2;                             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable3;                             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable4;                             // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable5;                             // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_ControllerType                           Temp_byte_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_ControllerType                           CallFunc_GetControllerType_ControllerType;         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Select_Default;                             // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0060(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_OnRep_RightWeapon) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_OnRep_RightWeapon");
static_assert(sizeof(BP_CharacterPVP_Base_C_OnRep_RightWeapon) == 0x0000F0, "Wrong size on BP_CharacterPVP_Base_C_OnRep_RightWeapon");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_RightWeapon, Temp_struct_Variable) == 0x000000, "Member 'BP_CharacterPVP_Base_C_OnRep_RightWeapon::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_RightWeapon, Temp_struct_Variable1) == 0x00000C, "Member 'BP_CharacterPVP_Base_C_OnRep_RightWeapon::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_RightWeapon, Temp_struct_Variable2) == 0x000018, "Member 'BP_CharacterPVP_Base_C_OnRep_RightWeapon::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_RightWeapon, Temp_struct_Variable3) == 0x000024, "Member 'BP_CharacterPVP_Base_C_OnRep_RightWeapon::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_RightWeapon, Temp_struct_Variable4) == 0x000030, "Member 'BP_CharacterPVP_Base_C_OnRep_RightWeapon::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_RightWeapon, Temp_struct_Variable5) == 0x00003C, "Member 'BP_CharacterPVP_Base_C_OnRep_RightWeapon::Temp_struct_Variable5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_RightWeapon, Temp_byte_Variable) == 0x000048, "Member 'BP_CharacterPVP_Base_C_OnRep_RightWeapon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_RightWeapon, CallFunc_GetControllerType_ControllerType) == 0x000049, "Member 'BP_CharacterPVP_Base_C_OnRep_RightWeapon::CallFunc_GetControllerType_ControllerType' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_RightWeapon, K2Node_Select_Default) == 0x00004C, "Member 'BP_CharacterPVP_Base_C_OnRep_RightWeapon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_RightWeapon, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_CharacterPVP_Base_C_OnRep_RightWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_RightWeapon, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000060, "Member 'BP_CharacterPVP_Base_C_OnRep_RightWeapon::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_RightWeapon, CallFunc_IsValid_ReturnValue1) == 0x0000E8, "Member 'BP_CharacterPVP_Base_C_OnRep_RightWeapon::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.OnRep_LeftWeapon
// 0x00F0 (0x00F0 - 0x0000)
struct BP_CharacterPVP_Base_C_OnRep_LeftWeapon final
{
public:
	Enum_ControllerType                           Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable;                              // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable1;                             // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable2;                             // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable3;                             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable4;                             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable5;                             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_ControllerType                           CallFunc_GetControllerType_ControllerType;         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Select_Default;                             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0060(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_OnRep_LeftWeapon) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_OnRep_LeftWeapon");
static_assert(sizeof(BP_CharacterPVP_Base_C_OnRep_LeftWeapon) == 0x0000F0, "Wrong size on BP_CharacterPVP_Base_C_OnRep_LeftWeapon");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_LeftWeapon, Temp_byte_Variable) == 0x000000, "Member 'BP_CharacterPVP_Base_C_OnRep_LeftWeapon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_LeftWeapon, Temp_struct_Variable) == 0x000004, "Member 'BP_CharacterPVP_Base_C_OnRep_LeftWeapon::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_LeftWeapon, Temp_struct_Variable1) == 0x000010, "Member 'BP_CharacterPVP_Base_C_OnRep_LeftWeapon::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_LeftWeapon, Temp_struct_Variable2) == 0x00001C, "Member 'BP_CharacterPVP_Base_C_OnRep_LeftWeapon::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_LeftWeapon, Temp_struct_Variable3) == 0x000028, "Member 'BP_CharacterPVP_Base_C_OnRep_LeftWeapon::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_LeftWeapon, Temp_struct_Variable4) == 0x000034, "Member 'BP_CharacterPVP_Base_C_OnRep_LeftWeapon::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_LeftWeapon, Temp_struct_Variable5) == 0x000040, "Member 'BP_CharacterPVP_Base_C_OnRep_LeftWeapon::Temp_struct_Variable5' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_LeftWeapon, CallFunc_GetControllerType_ControllerType) == 0x00004C, "Member 'BP_CharacterPVP_Base_C_OnRep_LeftWeapon::CallFunc_GetControllerType_ControllerType' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_LeftWeapon, K2Node_Select_Default) == 0x000050, "Member 'BP_CharacterPVP_Base_C_OnRep_LeftWeapon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_LeftWeapon, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000060, "Member 'BP_CharacterPVP_Base_C_OnRep_LeftWeapon::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_LeftWeapon, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'BP_CharacterPVP_Base_C_OnRep_LeftWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.FindTargetToShoot
// 0x0348 (0x0348 - 0x0000)
struct BP_CharacterPVP_Base_C_FindTargetToShoot final
{
public:
	class USceneComponent*                        Target;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterPVP_Base_C*                TargetChar;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_FindTargetToShoot_Target;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PVP_Drone_C*>                CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_PVP_Drone_C*                        CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0098(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<class ABP_PVP_Center_Prop_C*>          CallFunc_GetAllActorsOfClass_OutActors1;           // 0x00A8(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_PVP_Center_Prop_C*                  CallFunc_Array_Get_Item1;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X2;                           // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue2;     // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue2;       // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue1;                      // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_LineTraceMulti_OutHits;                   // 0x01A8(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMulti_ReturnValue;               // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRightVector_ReturnValue1;              // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item2;                          // 0x01D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25B[0x1];                                      // 0x025B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          K2Node_DynamicCast_AsBox_Collision;                // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PVP_Center_Prop_C*                  K2Node_DynamicCast_AsBP_PVP_Center_Prop;           // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x02FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterPVP_Base_C*                CallFunc_Array_Get_Item3;                          // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D[0x3];                                      // 0x031D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue3;         // 0x0320(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue4;         // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Distance_Between_Locations_Distance;      // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Distance_Between_Locations_Distance1;     // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_FindTargetToShoot) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_FindTargetToShoot");
static_assert(sizeof(BP_CharacterPVP_Base_C_FindTargetToShoot) == 0x000348, "Wrong size on BP_CharacterPVP_Base_C_FindTargetToShoot");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, Target) == 0x000000, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::Target' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, TargetChar) == 0x000008, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::TargetChar' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, Temp_int_Loop_Counter_Variable1) == 0x000024, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000028, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Add_IntInt_ReturnValue1) == 0x00002C, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_FindTargetToShoot_Target) == 0x000030, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_FindTargetToShoot_Target' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, Temp_bool_Variable) == 0x000038, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Greater_IntInt_ReturnValue) == 0x00005C, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, Temp_int_Array_Index_Variable1) == 0x00006C, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakVector_X) == 0x000070, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakVector_Y) == 0x000074, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakVector_Z) == 0x000078, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_MakeVector_ReturnValue) == 0x00007C, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000088, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, K2Node_SwitchString_CmpSuccess) == 0x000094, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, Temp_object_Variable) == 0x000098, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_GetAllActorsOfClass_OutActors1) == 0x0000A8, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_GetAllActorsOfClass_OutActors1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Array_Get_Item1) == 0x0000B8, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, K2Node_SwitchInteger_CmpSuccess) == 0x0000C0, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000C4, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x0000D0, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakVector_X1) == 0x0000DC, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakVector_Y1) == 0x0000E0, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakVector_Z1) == 0x0000E4, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakVector_X2) == 0x0000E8, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakVector_Y2) == 0x0000EC, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakVector_Z2) == 0x0000F0, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_MakeVector_ReturnValue1) == 0x0000F4, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_MakeVector_ReturnValue2) == 0x000100, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00010C, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Normal_ReturnValue) == 0x000118, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000124, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_GetRightVector_ReturnValue) == 0x000130, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, K2Node_Select_Default) == 0x00013C, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000148, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Add_VectorVector_ReturnValue) == 0x000154, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x000160, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_K2_GetComponentLocation_ReturnValue2) == 0x00016C, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_K2_GetComponentLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000178, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Subtract_VectorVector_ReturnValue2) == 0x000184, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Subtract_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Add_VectorVector_ReturnValue1) == 0x000190, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Normal_ReturnValue1) == 0x00019C, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Normal_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_LineTraceMulti_OutHits) == 0x0001A8, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_LineTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_LineTraceMulti_ReturnValue) == 0x0001B8, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_LineTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_GetRightVector_ReturnValue1) == 0x0001BC, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_GetRightVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Dot_VectorVector_ReturnValue) == 0x0001C8, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Array_Get_Item2) == 0x0001D0, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000258, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakHitResult_bBlockingHit) == 0x000259, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakHitResult_bInitialOverlap) == 0x00025A, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakHitResult_Time) == 0x00025C, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakHitResult_Distance) == 0x000260, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakHitResult_Location) == 0x000264, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakHitResult_ImpactPoint) == 0x000270, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakHitResult_Normal) == 0x00027C, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakHitResult_ImpactNormal) == 0x000288, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakHitResult_PhysMat) == 0x000298, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakHitResult_HitActor) == 0x0002A0, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakHitResult_HitComponent) == 0x0002A8, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakHitResult_HitBoneName) == 0x0002B0, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakHitResult_HitItem) == 0x0002B8, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakHitResult_FaceIndex) == 0x0002BC, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakHitResult_TraceStart) == 0x0002C0, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BreakHitResult_TraceEnd) == 0x0002CC, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, K2Node_DynamicCast_AsBox_Collision) == 0x0002D8, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::K2Node_DynamicCast_AsBox_Collision' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, K2Node_DynamicCast_bSuccess) == 0x0002E0, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, K2Node_DynamicCast_AsBP_PVP_Center_Prop) == 0x0002E8, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::K2Node_DynamicCast_AsBP_PVP_Center_Prop' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, K2Node_DynamicCast_bSuccess1) == 0x0002F0, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Array_Length_ReturnValue1) == 0x0002F4, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Array_Length_ReturnValue2) == 0x0002F8, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Less_IntInt_ReturnValue) == 0x0002FC, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Greater_IntInt_ReturnValue1) == 0x0002FD, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_BooleanAND_ReturnValue) == 0x0002FE, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_IsValid_ReturnValue) == 0x0002FF, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000300, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_IsValid_ReturnValue1) == 0x00030C, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Array_Get_Item3) == 0x000310, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Array_Length_ReturnValue3) == 0x000318, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Less_IntInt_ReturnValue1) == 0x00031C, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_K2_GetActorLocation_ReturnValue3) == 0x000320, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_K2_GetActorLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_K2_GetActorLocation_ReturnValue4) == 0x00032C, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_K2_GetActorLocation_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Distance_Between_Locations_Distance) == 0x000338, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Distance_Between_Locations_Distance' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Distance_Between_Locations_Distance1) == 0x00033C, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Distance_Between_Locations_Distance1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_FindTargetToShoot, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x000340, "Member 'BP_CharacterPVP_Base_C_FindTargetToShoot::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.GetAIAimPos
// 0x00A0 (0x00A0 - 0x0000)
struct BP_CharacterPVP_Base_C_GetAIAimPos final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_FindTargetToShoot_Target;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Distance_Between_Locations_Distance;      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_GetAIAimPos) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_GetAIAimPos");
static_assert(sizeof(BP_CharacterPVP_Base_C_GetAIAimPos) == 0x0000A0, "Wrong size on BP_CharacterPVP_Base_C_GetAIAimPos");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, Pos) == 0x000000, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::Pos' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_RandomFloatInRange_ReturnValue) == 0x00000C, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000014, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_GetObjectClass_ReturnValue) == 0x000020, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_RandomUnitVector_ReturnValue) == 0x000028, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000034, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000038, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_FindTargetToShoot_Target) == 0x000048, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_FindTargetToShoot_Target' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x000050, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_IsValid_ReturnValue1) == 0x00005C, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_Distance_Between_Locations_Distance) == 0x000060, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_Distance_Between_Locations_Distance' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000078, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_BreakVector_X) == 0x00007C, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_BreakVector_Y) == 0x000080, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_BreakVector_Z) == 0x000084, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000088, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_Add_FloatFloat_ReturnValue) == 0x00008C, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetAIAimPos, CallFunc_MakeVector_ReturnValue) == 0x000090, "Member 'BP_CharacterPVP_Base_C_GetAIAimPos::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.UpdateHandUI
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterPVP_Base_C_UpdateHandUI final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_UpdateHandUI) == 0x000004, "Wrong alignment on BP_CharacterPVP_Base_C_UpdateHandUI");
static_assert(sizeof(BP_CharacterPVP_Base_C_UpdateHandUI) == 0x000008, "Wrong size on BP_CharacterPVP_Base_C_UpdateHandUI");
static_assert(offsetof(BP_CharacterPVP_Base_C_UpdateHandUI, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_CharacterPVP_Base_C_UpdateHandUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_UpdateHandUI, CallFunc_IsValid_ReturnValue1) == 0x000001, "Member 'BP_CharacterPVP_Base_C_UpdateHandUI::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_UpdateHandUI, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_CharacterPVP_Base_C_UpdateHandUI::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.OnRep_IsLeftMControllerEnable
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterPVP_Base_C_OnRep_IsLeftMControllerEnable final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_OnRep_IsLeftMControllerEnable) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_OnRep_IsLeftMControllerEnable");
static_assert(sizeof(BP_CharacterPVP_Base_C_OnRep_IsLeftMControllerEnable) == 0x000002, "Wrong size on BP_CharacterPVP_Base_C_OnRep_IsLeftMControllerEnable");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_IsLeftMControllerEnable, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_CharacterPVP_Base_C_OnRep_IsLeftMControllerEnable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_IsLeftMControllerEnable, CallFunc_IsValid_ReturnValue1) == 0x000001, "Member 'BP_CharacterPVP_Base_C_OnRep_IsLeftMControllerEnable::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.OnRep_IsRightMControllerEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterPVP_Base_C_OnRep_IsRightMControllerEnable final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_OnRep_IsRightMControllerEnable) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_OnRep_IsRightMControllerEnable");
static_assert(sizeof(BP_CharacterPVP_Base_C_OnRep_IsRightMControllerEnable) == 0x000001, "Wrong size on BP_CharacterPVP_Base_C_OnRep_IsRightMControllerEnable");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_IsRightMControllerEnable, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_CharacterPVP_Base_C_OnRep_IsRightMControllerEnable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.HitFunction
// 0x0180 (0x0180 - 0x0000)
struct BP_CharacterPVP_Base_C_HitFunction final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         RadialDamage;                                      // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterPVP_Base_C*                Causer;                                            // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3[0x1];                                       // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerProjectile_C*                    K2Node_DynamicCast_AsPlayer_Projectile;            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPDefaultHand_C*                       K2Node_DynamicCast_AsBPDefault_Hand;               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDamageFromBone_Damage;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterPVP_Base_C*                K2Node_DynamicCast_AsBP_Character_PVP_Base;        // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterPVP_Base_C*                K2Node_DynamicCast_AsBP_Character_PVP_Base1;       // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue1;           // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_HitFunction) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_HitFunction");
static_assert(sizeof(BP_CharacterPVP_Base_C_HitFunction) == 0x000180, "Wrong size on BP_CharacterPVP_Base_C_HitFunction");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, Object) == 0x000000, "Member 'BP_CharacterPVP_Base_C_HitFunction::Object' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, Hit) == 0x000008, "Member 'BP_CharacterPVP_Base_C_HitFunction::Hit' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, RadialDamage) == 0x000090, "Member 'BP_CharacterPVP_Base_C_HitFunction::RadialDamage' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, Causer) == 0x000098, "Member 'BP_CharacterPVP_Base_C_HitFunction::Causer' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_BreakHitResult_bBlockingHit) == 0x0000A1, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000A2, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_BreakHitResult_Time) == 0x0000A4, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_BreakHitResult_Distance) == 0x0000A8, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_BreakHitResult_Location) == 0x0000AC, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B8, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_BreakHitResult_Normal) == 0x0000C4, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_BreakHitResult_ImpactNormal) == 0x0000D0, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_BreakHitResult_PhysMat) == 0x0000E0, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_BreakHitResult_HitActor) == 0x0000E8, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_BreakHitResult_HitComponent) == 0x0000F0, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_BreakHitResult_HitBoneName) == 0x0000F8, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_BreakHitResult_HitItem) == 0x000100, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_BreakHitResult_FaceIndex) == 0x000104, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_BreakHitResult_TraceStart) == 0x000108, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_BreakHitResult_TraceEnd) == 0x000114, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_Conv_NameToString_ReturnValue) == 0x000120, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, K2Node_DynamicCast_AsPlayer_Projectile) == 0x000130, "Member 'BP_CharacterPVP_Base_C_HitFunction::K2Node_DynamicCast_AsPlayer_Projectile' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'BP_CharacterPVP_Base_C_HitFunction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_GetOwner_ReturnValue) == 0x000140, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, K2Node_DynamicCast_AsBPDefault_Hand) == 0x000148, "Member 'BP_CharacterPVP_Base_C_HitFunction::K2Node_DynamicCast_AsBPDefault_Hand' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, K2Node_DynamicCast_bSuccess1) == 0x000150, "Member 'BP_CharacterPVP_Base_C_HitFunction::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_GetDamageFromBone_Damage) == 0x000154, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_GetDamageFromBone_Damage' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_GetOwner_ReturnValue1) == 0x000158, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, K2Node_DynamicCast_AsBP_Character_PVP_Base) == 0x000160, "Member 'BP_CharacterPVP_Base_C_HitFunction::K2Node_DynamicCast_AsBP_Character_PVP_Base' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, K2Node_DynamicCast_bSuccess2) == 0x000168, "Member 'BP_CharacterPVP_Base_C_HitFunction::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, K2Node_DynamicCast_AsBP_Character_PVP_Base1) == 0x000170, "Member 'BP_CharacterPVP_Base_C_HitFunction::K2Node_DynamicCast_AsBP_Character_PVP_Base1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, K2Node_DynamicCast_bSuccess3) == 0x000178, "Member 'BP_CharacterPVP_Base_C_HitFunction::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000179, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_HitFunction, CallFunc_EqualEqual_StrStr_ReturnValue1) == 0x00017A, "Member 'BP_CharacterPVP_Base_C_HitFunction::CallFunc_EqualEqual_StrStr_ReturnValue1' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.GetDamageFromBone
// 0x0038 (0x0038 - 0x0000)
struct BP_CharacterPVP_Base_C_GetDamageFromBone final
{
public:
	class FName                                   BoneName_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseDamage;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue1;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue2;                    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue3;                    // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterPVP_Base_C_GetDamageFromBone) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_GetDamageFromBone");
static_assert(sizeof(BP_CharacterPVP_Base_C_GetDamageFromBone) == 0x000038, "Wrong size on BP_CharacterPVP_Base_C_GetDamageFromBone");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetDamageFromBone, BoneName_0) == 0x000000, "Member 'BP_CharacterPVP_Base_C_GetDamageFromBone::BoneName_0' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetDamageFromBone, BaseDamage) == 0x000008, "Member 'BP_CharacterPVP_Base_C_GetDamageFromBone::BaseDamage' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetDamageFromBone, Damage) == 0x00000C, "Member 'BP_CharacterPVP_Base_C_GetDamageFromBone::Damage' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetDamageFromBone, CallFunc_Conv_NameToString_ReturnValue) == 0x000010, "Member 'BP_CharacterPVP_Base_C_GetDamageFromBone::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetDamageFromBone, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_CharacterPVP_Base_C_GetDamageFromBone::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetDamageFromBone, CallFunc_Contains_ReturnValue) == 0x000024, "Member 'BP_CharacterPVP_Base_C_GetDamageFromBone::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetDamageFromBone, CallFunc_Contains_ReturnValue1) == 0x000025, "Member 'BP_CharacterPVP_Base_C_GetDamageFromBone::CallFunc_Contains_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetDamageFromBone, CallFunc_Contains_ReturnValue2) == 0x000026, "Member 'BP_CharacterPVP_Base_C_GetDamageFromBone::CallFunc_Contains_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetDamageFromBone, CallFunc_Contains_ReturnValue3) == 0x000027, "Member 'BP_CharacterPVP_Base_C_GetDamageFromBone::CallFunc_Contains_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetDamageFromBone, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'BP_CharacterPVP_Base_C_GetDamageFromBone::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetDamageFromBone, CallFunc_BooleanOR_ReturnValue1) == 0x000029, "Member 'BP_CharacterPVP_Base_C_GetDamageFromBone::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetDamageFromBone, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x00002C, "Member 'BP_CharacterPVP_Base_C_GetDamageFromBone::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_GetDamageFromBone, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000030, "Member 'BP_CharacterPVP_Base_C_GetDamageFromBone::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.CheckPointWeapon
// 0x0168 (0x0168 - 0x0000)
struct BP_CharacterPVP_Base_C_CheckPointWeapon final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB[0x1];                                       // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPWeaponBase_C*                        K2Node_DynamicCast_AsBPWeapon_Base;                // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_CheckPointWeapon) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_CheckPointWeapon");
static_assert(sizeof(BP_CharacterPVP_Base_C_CheckPointWeapon) == 0x000168, "Wrong size on BP_CharacterPVP_Base_C_CheckPointWeapon");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, Temp_bool_Variable) == 0x000000, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, K2Node_Select_Default) == 0x000008, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_GetForwardVector_ReturnValue) == 0x000010, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00001C, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000028, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_Add_VectorVector_ReturnValue) == 0x000034, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, K2Node_MakeArray_Array) == 0x000040, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_LineTraceSingle_OutHit) == 0x000050, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_LineTraceSingle_ReturnValue) == 0x0000D8, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_BreakHitResult_bBlockingHit) == 0x0000D9, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000DA, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_BreakHitResult_Time) == 0x0000DC, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_BreakHitResult_Distance) == 0x0000E0, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_BreakHitResult_Location) == 0x0000E4, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_BreakHitResult_ImpactPoint) == 0x0000F0, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_BreakHitResult_Normal) == 0x0000FC, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_BreakHitResult_ImpactNormal) == 0x000108, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_BreakHitResult_PhysMat) == 0x000118, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_BreakHitResult_HitActor) == 0x000120, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_BreakHitResult_HitComponent) == 0x000128, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_BreakHitResult_HitBoneName) == 0x000130, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_BreakHitResult_HitItem) == 0x000138, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_BreakHitResult_FaceIndex) == 0x00013C, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_BreakHitResult_TraceStart) == 0x000140, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, CallFunc_BreakHitResult_TraceEnd) == 0x00014C, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, K2Node_DynamicCast_AsBPWeapon_Base) == 0x000158, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::K2Node_DynamicCast_AsBPWeapon_Base' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_CheckPointWeapon, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'BP_CharacterPVP_Base_C_CheckPointWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.IsPointWeapon
// 0x0006 (0x0006 - 0x0000)
struct BP_CharacterPVP_Base_C_IsPointWeapon final
{
public:
	bool                                          RightHand_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Value;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue1;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_IsPointWeapon) == 0x000001, "Wrong alignment on BP_CharacterPVP_Base_C_IsPointWeapon");
static_assert(sizeof(BP_CharacterPVP_Base_C_IsPointWeapon) == 0x000006, "Wrong size on BP_CharacterPVP_Base_C_IsPointWeapon");
static_assert(offsetof(BP_CharacterPVP_Base_C_IsPointWeapon, RightHand_0) == 0x000000, "Member 'BP_CharacterPVP_Base_C_IsPointWeapon::RightHand_0' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_IsPointWeapon, Value) == 0x000001, "Member 'BP_CharacterPVP_Base_C_IsPointWeapon::Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_IsPointWeapon, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_CharacterPVP_Base_C_IsPointWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_IsPointWeapon, CallFunc_IsValid_ReturnValue1) == 0x000003, "Member 'BP_CharacterPVP_Base_C_IsPointWeapon::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_IsPointWeapon, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000004, "Member 'BP_CharacterPVP_Base_C_IsPointWeapon::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_IsPointWeapon, CallFunc_NotEqual_ByteByte_ReturnValue1) == 0x000005, "Member 'BP_CharacterPVP_Base_C_IsPointWeapon::CallFunc_NotEqual_ByteByte_ReturnValue1' has a wrong offset!");

// Function BP_CharacterPVP_Base.BP_CharacterPVP_Base_C.OnRep_IsGameStart
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterPVP_Base_C_OnRep_IsGameStart final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterPVP_Base_C_OnRep_IsGameStart) == 0x000008, "Wrong alignment on BP_CharacterPVP_Base_C_OnRep_IsGameStart");
static_assert(sizeof(BP_CharacterPVP_Base_C_OnRep_IsGameStart) == 0x000018, "Wrong size on BP_CharacterPVP_Base_C_OnRep_IsGameStart");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_IsGameStart, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_CharacterPVP_Base_C_OnRep_IsGameStart::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_IsGameStart, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BP_CharacterPVP_Base_C_OnRep_IsGameStart::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterPVP_Base_C_OnRep_IsGameStart, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_CharacterPVP_Base_C_OnRep_IsGameStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


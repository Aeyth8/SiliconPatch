#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_Follow

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTTask_Follow.BTTask_Follow_C.ExecuteUbergraph_BTTask_Follow
// 0x00C0 (0x00C0 - 0x0000)
struct BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Lv3_BaseCar_C*                      K2Node_DynamicCast_AsBP_Lv_3_Base_Car;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue1;          // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Distance_Between_Locations_Distance;      // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue1;      // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue3;          // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue1;                         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue4;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow) == 0x000008, "Wrong alignment on BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow");
static_assert(sizeof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow) == 0x0000C0, "Wrong size on BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, EntryPoint) == 0x000000, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, K2Node_Event_OwnerController) == 0x000008, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, K2Node_DynamicCast_AsBP_Lv_3_Base_Car) == 0x000018, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::K2Node_DynamicCast_AsBP_Lv_3_Base_Car' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000024, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_FindLookAtRotation_ReturnValue) == 0x00003C, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000048, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_BreakRotator_Roll) == 0x000054, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_BreakRotator_Pitch) == 0x000058, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_BreakRotator_Yaw) == 0x00005C, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_FindLookAtRotation_ReturnValue1) == 0x000060, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_FindLookAtRotation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_Distance_Between_Locations_Distance) == 0x00006C, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_Distance_Between_Locations_Distance' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_NormalizedDeltaRotator_ReturnValue1) == 0x000070, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_NormalizedDeltaRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00007C, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_BreakRotator_Roll1) == 0x000080, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_BreakRotator_Pitch1) == 0x000084, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_BreakRotator_Yaw1) == 0x000088, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_Abs_ReturnValue) == 0x00008C, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x000090, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x000091, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_Greater_FloatFloat_ReturnValue3) == 0x000092, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_Greater_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_BooleanAND_ReturnValue) == 0x000093, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_SelectInt_ReturnValue) == 0x000094, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_Not_PreBool_ReturnValue) == 0x000098, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_Abs_ReturnValue1) == 0x00009C, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_Abs_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_BooleanAND_ReturnValue1) == 0x0000A0, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000A4, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_FClamp_ReturnValue) == 0x0000A8, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000AC, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000B0, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0000B4, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow, CallFunc_Greater_FloatFloat_ReturnValue4) == 0x0000B8, "Member 'BTTask_Follow_C_ExecuteUbergraph_BTTask_Follow::CallFunc_Greater_FloatFloat_ReturnValue4' has a wrong offset!");

// Function BTTask_Follow.BTTask_Follow_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTTask_Follow_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_Follow_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTTask_Follow_C_ReceiveExecuteAI");
static_assert(sizeof(BTTask_Follow_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTTask_Follow_C_ReceiveExecuteAI");
static_assert(offsetof(BTTask_Follow_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTTask_Follow_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_Follow_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTTask_Follow_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}


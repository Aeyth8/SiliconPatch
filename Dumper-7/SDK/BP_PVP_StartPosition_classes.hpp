#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PVP_StartPosition

#include "Basic.hpp"

#include "SiliconRising_structs.hpp"
#include "Struct_DroneSpawnConfig_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PVP_StartPosition.BP_PVP_StartPosition_C
// 0x0068 (0x03C0 - 0x0358)
class ABP_PVP_StartPosition_C final : public APlayerStart
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0358(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 AKM;                                               // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SCar;                                              // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 AWM;                                               // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        WeaponSpawn;                                       // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTokenThisPosition;                               // 0x0380(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_DroneSpawnConfig>       WeaponSpawnConfig;                                 // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FStruct_DroneSpawnConfig>       WeaponSpawnConfigSorted;                           // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class ABPWeaponBase_C*                        Weapon;                                            // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FStruct_DroneSpawnConfig>       WeaponSpawnConfigTemp;                             // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_PVP_StartPosition(int32 EntryPoint);
	void OnClearWeapon();
	void OnSpawnWeapon();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void GetWeaponType(EItemTypes* WeaponType);
	void SortConfigArray();
	void SpawnWeapon(class UClass* Class_0, const struct FTransform& SpawnTransform);
	void OnRep_IsTokenThisPosition();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PVP_StartPosition_C">();
	}
	static class ABP_PVP_StartPosition_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PVP_StartPosition_C>();
	}
};
static_assert(alignof(ABP_PVP_StartPosition_C) == 0x000008, "Wrong alignment on ABP_PVP_StartPosition_C");
static_assert(sizeof(ABP_PVP_StartPosition_C) == 0x0003C0, "Wrong size on ABP_PVP_StartPosition_C");
static_assert(offsetof(ABP_PVP_StartPosition_C, UberGraphFrame) == 0x000358, "Member 'ABP_PVP_StartPosition_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PVP_StartPosition_C, AKM) == 0x000360, "Member 'ABP_PVP_StartPosition_C::AKM' has a wrong offset!");
static_assert(offsetof(ABP_PVP_StartPosition_C, SCar) == 0x000368, "Member 'ABP_PVP_StartPosition_C::SCar' has a wrong offset!");
static_assert(offsetof(ABP_PVP_StartPosition_C, AWM) == 0x000370, "Member 'ABP_PVP_StartPosition_C::AWM' has a wrong offset!");
static_assert(offsetof(ABP_PVP_StartPosition_C, WeaponSpawn) == 0x000378, "Member 'ABP_PVP_StartPosition_C::WeaponSpawn' has a wrong offset!");
static_assert(offsetof(ABP_PVP_StartPosition_C, IsTokenThisPosition) == 0x000380, "Member 'ABP_PVP_StartPosition_C::IsTokenThisPosition' has a wrong offset!");
static_assert(offsetof(ABP_PVP_StartPosition_C, WeaponSpawnConfig) == 0x000388, "Member 'ABP_PVP_StartPosition_C::WeaponSpawnConfig' has a wrong offset!");
static_assert(offsetof(ABP_PVP_StartPosition_C, WeaponSpawnConfigSorted) == 0x000398, "Member 'ABP_PVP_StartPosition_C::WeaponSpawnConfigSorted' has a wrong offset!");
static_assert(offsetof(ABP_PVP_StartPosition_C, Weapon) == 0x0003A8, "Member 'ABP_PVP_StartPosition_C::Weapon' has a wrong offset!");
static_assert(offsetof(ABP_PVP_StartPosition_C, WeaponSpawnConfigTemp) == 0x0003B0, "Member 'ABP_PVP_StartPosition_C::WeaponSpawnConfigTemp' has a wrong offset!");

}


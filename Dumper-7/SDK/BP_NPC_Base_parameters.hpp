#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Struct_BasicBehavior_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_NPC_Base.BP_NPC_Base_C.ExecuteUbergraph_BP_NPC_Base
// 0x05F0 (0x05F0 - 0x0000)
struct BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_APE_C*                          K2Node_DynamicCast_AsBP_NPC_APE;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Damage;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_CustomEvent_PlayerController7;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AICover_C*                          K2Node_DynamicCast_AsBP_AICover;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_HitSuccess;                     // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_DeadlyBulletSettings_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_DeadlyBulletSettings_C*             CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F[0x1];                                       // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0080(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectile_RPG_PVE_C*                  K2Node_DynamicCast_AsProjectile_RPG_PVE;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProjectile_Grenade_PVE_C*              K2Node_DynamicCast_AsProjectile_Grenade_PVE;       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerProjectile_C*                    K2Node_DynamicCast_AsPlayer_Projectile;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_APE_C*                          K2Node_DynamicCast_AsBP_NPC_APE1;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AllureDamageBox_C*                  K2Node_DynamicCast_AsBP_Allure_Damage_Box;         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Damge;                          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_CustomEvent_PlayerController6;              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation6;                   // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal6;                     // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_CustomEvent_PlayerController5;              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation5;                   // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal5;                     // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_CustomEvent_PlayerController4;              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation4;                   // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal4;                     // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPWeaponBase_C*                        K2Node_CustomEvent_Weapon1;                        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_TargetPos;                      // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SpecialCount;                   // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPWeaponBase_C*                        K2Node_CustomEvent_Weapon;                         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Rep_PerformRangedAttack_IsAttack;         // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_HitLocation3;                   // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal3;                     // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_CustomEvent_PlayerController3;              // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0200(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28A[0x2];                                      // 0x028A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBoneIndex_ReturnValue;                 // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x031D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31E[0x2];                                      // 0x031E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerControllerFromObject_PlayerController; // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerProjectile_C*                    K2Node_DynamicCast_AsPlayer_Projectile1;           // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue1;                // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0332(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_333[0x1];                                      // 0x0333(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDamageFromBone_Damage;                 // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance;           // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue3;         // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_lsGameINP1__flag;                         // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue2;                // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A[0x6];                                      // 0x035A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    K2Node_DynamicCast_AsBP_Character_Base;            // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x3];                                      // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x037C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAimDirection_Direction;                // 0x0388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue2;        // 0x0394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x03A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_HitLocation2;                   // 0x03B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal2;                     // 0x03C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_CustomEvent_PlayerController2;              // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x03E0(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x03F8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit1;             // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap1;          // 0x0482(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_483[0x1];                                      // 0x0483(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time1;                     // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance1;                 // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location1;                 // 0x048C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint1;              // 0x0498(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal1;                   // 0x04A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal1;             // 0x04B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat1;                  // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor1;                 // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent1;             // 0x04D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName1;              // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem1;                  // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex1;                // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart1;               // 0x04E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd1;                 // 0x04F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_502[0x2];                                      // 0x0502(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_HitLocation1;                   // 0x0504(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal1;                     // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C[0x4];                                      // 0x051C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_CustomEvent_PlayerController1;              // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x0528(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal;                      // 0x0534(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_CustomEvent_PlayerController;               // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue1;             // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance1;          // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_DeadlyBulletSettings_C*>     CallFunc_GetAllActorsOfClass_OutActors1;           // 0x0560(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_DeadlyBulletSettings_C*             CallFunc_Array_Get_Item1;                          // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57C[0x4];                                      // 0x057C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0580(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_589[0x3];                                      // 0x0589(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_RequireGenerateItem_ActorReturn;          // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_599[0x3];                                      // 0x0599(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue1;             // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue1;                // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C9[0x7];                                      // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State1;             // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess12;                     // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D9[0x7];                                      // 0x05D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerControllerFromObject_PlayerController1; // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base) == 0x000008, "Wrong alignment on BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base");
static_assert(sizeof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base) == 0x0005F0, "Wrong size on BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, EntryPoint) == 0x000000, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_AsBP_NPC_APE) == 0x000008, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_AsBP_NPC_APE' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_Damage) == 0x000014, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_DamageCauser) == 0x000018, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_PlayerController7) == 0x000020, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_PlayerController7' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_AsBP_AICover) == 0x000028, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_AsBP_AICover' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_HitSuccess) == 0x000032, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_HitSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000033, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_Event_DeltaSeconds) == 0x000038, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00003C, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_HasAuthority_ReturnValue) == 0x000048, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Not_PreBool_ReturnValue1) == 0x000049, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Not_PreBool_ReturnValue2) == 0x00004A, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_GetAllActorsOfClass_OutActors) == 0x000050, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00006C, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_IsValid_ReturnValue) == 0x00006D, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_IsValid_ReturnValue1) == 0x00006E, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_GetController_ReturnValue) == 0x000070, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_IsValid_ReturnValue2) == 0x000078, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_Event_Damage) == 0x00007C, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_Event_DamageType) == 0x000080, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_Event_InstigatedBy) == 0x000088, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_Event_DamageCauser) == 0x000090, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_AsProjectile_RPG_PVE) == 0x000098, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_AsProjectile_RPG_PVE' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_bSuccess2) == 0x0000A0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_AsProjectile_Grenade_PVE) == 0x0000A8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_AsProjectile_Grenade_PVE' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_bSuccess3) == 0x0000B0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_AsPlayer_Projectile) == 0x0000B8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_AsPlayer_Projectile' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_bSuccess4) == 0x0000C0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BooleanOR_ReturnValue) == 0x0000C1, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_AsBP_NPC_APE1) == 0x0000C8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_AsBP_NPC_APE1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_bSuccess5) == 0x0000D0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_AsBP_Allure_Damage_Box) == 0x0000D8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_AsBP_Allure_Damage_Box' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_bSuccess6) == 0x0000E0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000E4, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakVector_X) == 0x0000F0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakVector_Y) == 0x0000F4, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakVector_Z) == 0x0000F8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000FC, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_IsValid_ReturnValue3) == 0x000100, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_MakeVector_ReturnValue) == 0x000104, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000110, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_Damge) == 0x000114, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_Damge' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Not_PreBool_ReturnValue3) == 0x000118, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x00011C, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_PlayerController6) == 0x000120, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_PlayerController6' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_HitLocation6) == 0x000128, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_HitLocation6' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_HitNormal6) == 0x000134, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_HitNormal6' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_PlayerController5) == 0x000140, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_PlayerController5' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_HitLocation5) == 0x000148, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_HitLocation5' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_HitNormal5) == 0x000154, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_HitNormal5' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_PlayerController4) == 0x000160, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_PlayerController4' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_HitLocation4) == 0x000168, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_HitLocation4' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_HitNormal4) == 0x000174, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_HitNormal4' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_Weapon1) == 0x000180, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_Weapon1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_TargetPos) == 0x000188, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_TargetPos' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_SpecialCount) == 0x000194, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_SpecialCount' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_GetAnimInstance_ReturnValue) == 0x000198, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Greater_IntInt_ReturnValue) == 0x0001A0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_Weapon) == 0x0001A8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_Weapon' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Rep_PerformRangedAttack_IsAttack) == 0x0001B0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Rep_PerformRangedAttack_IsAttack' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_HitLocation3) == 0x0001B4, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_HitLocation3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_HitNormal3) == 0x0001C0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_HitNormal3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_PlayerController3) == 0x0001D0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_PlayerController3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_ComponentBoundEvent_HitComponent) == 0x0001D8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_ComponentBoundEvent_OtherActor) == 0x0001E0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_ComponentBoundEvent_OtherComp) == 0x0001E8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_ComponentBoundEvent_NormalImpulse) == 0x0001F0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_ComponentBoundEvent_Hit) == 0x000200, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_bBlockingHit) == 0x000288, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_bInitialOverlap) == 0x000289, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_Time) == 0x00028C, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_Distance) == 0x000290, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_Location) == 0x000294, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_ImpactPoint) == 0x0002A0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_Normal) == 0x0002AC, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_ImpactNormal) == 0x0002B8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_PhysMat) == 0x0002C8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_HitActor) == 0x0002D0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_HitComponent) == 0x0002D8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_HitBoneName) == 0x0002E0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_HitItem) == 0x0002E8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_FaceIndex) == 0x0002EC, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_TraceStart) == 0x0002F0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_TraceEnd) == 0x0002FC, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_IsValid_ReturnValue4) == 0x000308, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_GetBoneIndex_ReturnValue) == 0x00030C, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_GetBoneIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000310, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00031C, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BooleanAND_ReturnValue) == 0x00031D, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_GetPlayerControllerFromObject_PlayerController) == 0x000320, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_GetPlayerControllerFromObject_PlayerController' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_AsPlayer_Projectile1) == 0x000328, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_AsPlayer_Projectile1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_bSuccess7) == 0x000330, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_HasAuthority_ReturnValue1) == 0x000331, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_HasAuthority_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, Temp_bool_Has_Been_Initd_Variable) == 0x000332, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_GetDamageFromBone_Damage) == 0x000334, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_GetDamageFromBone_Damage' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x000338, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_GetGameInstance_ReturnValue) == 0x000340, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_AsMer_2Game_Instance) == 0x000348, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_AsMer_2Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_bSuccess8) == 0x000350, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Subtract_FloatFloat_ReturnValue3) == 0x000354, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Subtract_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_lsGameINP1__flag) == 0x000358, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_lsGameINP1__flag' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_HasAuthority_ReturnValue2) == 0x000359, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_HasAuthority_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_GetPlayerPawn_ReturnValue) == 0x000360, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_IsValid_ReturnValue5) == 0x000368, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_AsBP_Character_Base) == 0x000370, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_AsBP_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_bSuccess9) == 0x000378, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00037C, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_GetAimDirection_Direction) == 0x000388, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_GetAimDirection_Direction' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Multiply_VectorFloat_ReturnValue2) == 0x000394, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Multiply_VectorFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Add_FloatFloat_ReturnValue) == 0x0003A0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Add_VectorVector_ReturnValue) == 0x0003A4, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Not_PreBool_ReturnValue4) == 0x0003B0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_HitLocation2) == 0x0003B4, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_HitLocation2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_HitNormal2) == 0x0003C0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_HitNormal2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_PlayerController2) == 0x0003D0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_PlayerController2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BooleanAND_ReturnValue1) == 0x0003D8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, Temp_object_Variable) == 0x0003E0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0003F0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_LineTraceSingle_OutHit) == 0x0003F8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_LineTraceSingle_ReturnValue) == 0x000480, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_bBlockingHit1) == 0x000481, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_bBlockingHit1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_bInitialOverlap1) == 0x000482, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_bInitialOverlap1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_Time1) == 0x000484, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_Time1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_Distance1) == 0x000488, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_Distance1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_Location1) == 0x00048C, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_Location1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_ImpactPoint1) == 0x000498, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_ImpactPoint1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_Normal1) == 0x0004A4, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_Normal1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_ImpactNormal1) == 0x0004B0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_ImpactNormal1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_PhysMat1) == 0x0004C0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_PhysMat1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_HitActor1) == 0x0004C8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_HitActor1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_HitComponent1) == 0x0004D0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_HitComponent1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_HitBoneName1) == 0x0004D8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_HitBoneName1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_HitItem1) == 0x0004E0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_HitItem1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_FaceIndex1) == 0x0004E4, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_FaceIndex1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_TraceStart1) == 0x0004E8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_TraceStart1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BreakHitResult_TraceEnd1) == 0x0004F4, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BreakHitResult_TraceEnd1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000500, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_BooleanAND_ReturnValue2) == 0x000501, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_HitLocation1) == 0x000504, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_HitLocation1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_HitNormal1) == 0x000510, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_HitNormal1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_PlayerController1) == 0x000520, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_PlayerController1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_HitLocation) == 0x000528, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_HitNormal) == 0x000534, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_CustomEvent_PlayerController) == 0x000540, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_CustomEvent_PlayerController' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_GetGameInstance_ReturnValue1) == 0x000548, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_GetGameInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_AsMer_2Game_Instance1) == 0x000550, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_AsMer_2Game_Instance1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_bSuccess10) == 0x000558, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_GetAllActorsOfClass_OutActors1) == 0x000560, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_GetAllActorsOfClass_OutActors1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Array_Get_Item1) == 0x000570, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Array_Length_ReturnValue1) == 0x000578, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, Temp_name_Variable) == 0x000580, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x000588, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Array_Add_ReturnValue) == 0x00058C, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_RequireGenerateItem_ActorReturn) == 0x000590, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_RequireGenerateItem_ActorReturn' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, Temp_bool_IsClosed_Variable) == 0x000598, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00059C, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_IsValid_ReturnValue6) == 0x0005A0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_GetAnimInstance_ReturnValue1) == 0x0005A8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_GetAnimInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_GetGameState_ReturnValue) == 0x0005B0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_GetGameState_ReturnValue1) == 0x0005B8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_GetGameState_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_AsMer_2Game_State) == 0x0005C0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_bSuccess11) == 0x0005C8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_AsMer_2Game_State1) == 0x0005D0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_AsMer_2Game_State1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, K2Node_DynamicCast_bSuccess12) == 0x0005D8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::K2Node_DynamicCast_bSuccess12' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_GetPlayerControllerFromObject_PlayerController1) == 0x0005E0, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_GetPlayerControllerFromObject_PlayerController1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base, CallFunc_Not_PreBool_ReturnValue5) == 0x0005E8, "Member 'BP_NPC_Base_C_ExecuteUbergraph_BP_NPC_Base::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.OnHitOtherDead
// 0x0020 (0x0020 - 0x0000)
struct BP_NPC_Base_C_OnHitOtherDead final
{
public:
	struct FVector                                HitLocation_0;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal_0;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Base_C_OnHitOtherDead) == 0x000008, "Wrong alignment on BP_NPC_Base_C_OnHitOtherDead");
static_assert(sizeof(BP_NPC_Base_C_OnHitOtherDead) == 0x000020, "Wrong size on BP_NPC_Base_C_OnHitOtherDead");
static_assert(offsetof(BP_NPC_Base_C_OnHitOtherDead, HitLocation_0) == 0x000000, "Member 'BP_NPC_Base_C_OnHitOtherDead::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_OnHitOtherDead, HitNormal_0) == 0x00000C, "Member 'BP_NPC_Base_C_OnHitOtherDead::HitNormal_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_OnHitOtherDead, PlayerController) == 0x000018, "Member 'BP_NPC_Base_C_OnHitOtherDead::PlayerController' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.CallOnHitOtherDead
// 0x0020 (0x0020 - 0x0000)
struct BP_NPC_Base_C_CallOnHitOtherDead final
{
public:
	struct FVector                                HitLocation_0;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal_0;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Base_C_CallOnHitOtherDead) == 0x000008, "Wrong alignment on BP_NPC_Base_C_CallOnHitOtherDead");
static_assert(sizeof(BP_NPC_Base_C_CallOnHitOtherDead) == 0x000020, "Wrong size on BP_NPC_Base_C_CallOnHitOtherDead");
static_assert(offsetof(BP_NPC_Base_C_CallOnHitOtherDead, HitLocation_0) == 0x000000, "Member 'BP_NPC_Base_C_CallOnHitOtherDead::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_CallOnHitOtherDead, HitNormal_0) == 0x00000C, "Member 'BP_NPC_Base_C_CallOnHitOtherDead::HitNormal_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_CallOnHitOtherDead, PlayerController) == 0x000018, "Member 'BP_NPC_Base_C_CallOnHitOtherDead::PlayerController' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.CallOnHitHeadDead
// 0x0020 (0x0020 - 0x0000)
struct BP_NPC_Base_C_CallOnHitHeadDead final
{
public:
	struct FVector                                HitLocation_0;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal_0;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Base_C_CallOnHitHeadDead) == 0x000008, "Wrong alignment on BP_NPC_Base_C_CallOnHitHeadDead");
static_assert(sizeof(BP_NPC_Base_C_CallOnHitHeadDead) == 0x000020, "Wrong size on BP_NPC_Base_C_CallOnHitHeadDead");
static_assert(offsetof(BP_NPC_Base_C_CallOnHitHeadDead, HitLocation_0) == 0x000000, "Member 'BP_NPC_Base_C_CallOnHitHeadDead::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_CallOnHitHeadDead, HitNormal_0) == 0x00000C, "Member 'BP_NPC_Base_C_CallOnHitHeadDead::HitNormal_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_CallOnHitHeadDead, PlayerController) == 0x000018, "Member 'BP_NPC_Base_C_CallOnHitHeadDead::PlayerController' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_NPC_Base_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0028(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_NPC_Base_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_Base_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_NPC_Base_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_NPC_Base_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_NPC_Base_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_NPC_Base_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_NPC_Base_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_NPC_Base_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_NPC_Base_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, Hit) == 0x000028, "Member 'BP_NPC_Base_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.OnHitHeadDead
// 0x0020 (0x0020 - 0x0000)
struct BP_NPC_Base_C_OnHitHeadDead final
{
public:
	struct FVector                                HitLocation_0;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal_0;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Base_C_OnHitHeadDead) == 0x000008, "Wrong alignment on BP_NPC_Base_C_OnHitHeadDead");
static_assert(sizeof(BP_NPC_Base_C_OnHitHeadDead) == 0x000020, "Wrong size on BP_NPC_Base_C_OnHitHeadDead");
static_assert(offsetof(BP_NPC_Base_C_OnHitHeadDead, HitLocation_0) == 0x000000, "Member 'BP_NPC_Base_C_OnHitHeadDead::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_OnHitHeadDead, HitNormal_0) == 0x00000C, "Member 'BP_NPC_Base_C_OnHitHeadDead::HitNormal_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_OnHitHeadDead, PlayerController) == 0x000018, "Member 'BP_NPC_Base_C_OnHitHeadDead::PlayerController' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.OnPerformAttackRanged
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_Base_C_OnPerformAttackRanged final
{
public:
	class ABPWeaponBase_C*                        Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Base_C_OnPerformAttackRanged) == 0x000008, "Wrong alignment on BP_NPC_Base_C_OnPerformAttackRanged");
static_assert(sizeof(BP_NPC_Base_C_OnPerformAttackRanged) == 0x000008, "Wrong size on BP_NPC_Base_C_OnPerformAttackRanged");
static_assert(offsetof(BP_NPC_Base_C_OnPerformAttackRanged, Weapon) == 0x000000, "Member 'BP_NPC_Base_C_OnPerformAttackRanged::Weapon' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.OnServerAttackRanged
// 0x0018 (0x0018 - 0x0000)
struct BP_NPC_Base_C_OnServerAttackRanged final
{
public:
	class ABPWeaponBase_C*                        Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetPos;                                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpecialCount;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Base_C_OnServerAttackRanged) == 0x000008, "Wrong alignment on BP_NPC_Base_C_OnServerAttackRanged");
static_assert(sizeof(BP_NPC_Base_C_OnServerAttackRanged) == 0x000018, "Wrong size on BP_NPC_Base_C_OnServerAttackRanged");
static_assert(offsetof(BP_NPC_Base_C_OnServerAttackRanged, Weapon) == 0x000000, "Member 'BP_NPC_Base_C_OnServerAttackRanged::Weapon' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_OnServerAttackRanged, TargetPos) == 0x000008, "Member 'BP_NPC_Base_C_OnServerAttackRanged::TargetPos' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_OnServerAttackRanged, SpecialCount) == 0x000014, "Member 'BP_NPC_Base_C_OnServerAttackRanged::SpecialCount' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.OnHitOther
// 0x0020 (0x0020 - 0x0000)
struct BP_NPC_Base_C_OnHitOther final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation_0;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal_0;                                       // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Base_C_OnHitOther) == 0x000008, "Wrong alignment on BP_NPC_Base_C_OnHitOther");
static_assert(sizeof(BP_NPC_Base_C_OnHitOther) == 0x000020, "Wrong size on BP_NPC_Base_C_OnHitOther");
static_assert(offsetof(BP_NPC_Base_C_OnHitOther, PlayerController) == 0x000000, "Member 'BP_NPC_Base_C_OnHitOther::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_OnHitOther, HitLocation_0) == 0x000008, "Member 'BP_NPC_Base_C_OnHitOther::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_OnHitOther, HitNormal_0) == 0x000014, "Member 'BP_NPC_Base_C_OnHitOther::HitNormal_0' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.OnHitBody
// 0x0020 (0x0020 - 0x0000)
struct BP_NPC_Base_C_OnHitBody final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation_0;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal_0;                                       // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Base_C_OnHitBody) == 0x000008, "Wrong alignment on BP_NPC_Base_C_OnHitBody");
static_assert(sizeof(BP_NPC_Base_C_OnHitBody) == 0x000020, "Wrong size on BP_NPC_Base_C_OnHitBody");
static_assert(offsetof(BP_NPC_Base_C_OnHitBody, PlayerController) == 0x000000, "Member 'BP_NPC_Base_C_OnHitBody::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_OnHitBody, HitLocation_0) == 0x000008, "Member 'BP_NPC_Base_C_OnHitBody::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_OnHitBody, HitNormal_0) == 0x000014, "Member 'BP_NPC_Base_C_OnHitBody::HitNormal_0' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.OnHitHead
// 0x0020 (0x0020 - 0x0000)
struct BP_NPC_Base_C_OnHitHead final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation_0;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal_0;                                       // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Base_C_OnHitHead) == 0x000008, "Wrong alignment on BP_NPC_Base_C_OnHitHead");
static_assert(sizeof(BP_NPC_Base_C_OnHitHead) == 0x000020, "Wrong size on BP_NPC_Base_C_OnHitHead");
static_assert(offsetof(BP_NPC_Base_C_OnHitHead, PlayerController) == 0x000000, "Member 'BP_NPC_Base_C_OnHitHead::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_OnHitHead, HitLocation_0) == 0x000008, "Member 'BP_NPC_Base_C_OnHitHead::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_OnHitHead, HitNormal_0) == 0x000014, "Member 'BP_NPC_Base_C_OnHitHead::HitNormal_0' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.CheatDamge
// 0x0004 (0x0004 - 0x0000)
struct BP_NPC_Base_C_CheatDamge final
{
public:
	float                                         Damge;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Base_C_CheatDamge) == 0x000004, "Wrong alignment on BP_NPC_Base_C_CheatDamge");
static_assert(sizeof(BP_NPC_Base_C_CheatDamge) == 0x000004, "Wrong size on BP_NPC_Base_C_CheatDamge");
static_assert(offsetof(BP_NPC_Base_C_CheatDamge, Damge) == 0x000000, "Member 'BP_NPC_Base_C_CheatDamge::Damge' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_NPC_Base_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Base_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_NPC_Base_C_ReceiveTick");
static_assert(sizeof(BP_NPC_Base_C_ReceiveTick) == 0x000004, "Wrong size on BP_NPC_Base_C_ReceiveTick");
static_assert(offsetof(BP_NPC_Base_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_NPC_Base_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.OnDeath
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_Base_C_OnDeath final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Base_C_OnDeath) == 0x000008, "Wrong alignment on BP_NPC_Base_C_OnDeath");
static_assert(sizeof(BP_NPC_Base_C_OnDeath) == 0x000008, "Wrong size on BP_NPC_Base_C_OnDeath");
static_assert(offsetof(BP_NPC_Base_C_OnDeath, PlayerController) == 0x000000, "Member 'BP_NPC_Base_C_OnDeath::PlayerController' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.OnDamaged
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_Base_C_OnDamaged final
{
public:
	float                                         Damage_0;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Base_C_OnDamaged) == 0x000008, "Wrong alignment on BP_NPC_Base_C_OnDamaged");
static_assert(sizeof(BP_NPC_Base_C_OnDamaged) == 0x000010, "Wrong size on BP_NPC_Base_C_OnDamaged");
static_assert(offsetof(BP_NPC_Base_C_OnDamaged, Damage_0) == 0x000000, "Member 'BP_NPC_Base_C_OnDamaged::Damage_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_OnDamaged, DamageCauser) == 0x000008, "Member 'BP_NPC_Base_C_OnDamaged::DamageCauser' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.OnMeleeAttack
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_Base_C_OnMeleeAttack final
{
public:
	bool                                          HitSuccess;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_Base_C_OnMeleeAttack) == 0x000001, "Wrong alignment on BP_NPC_Base_C_OnMeleeAttack");
static_assert(sizeof(BP_NPC_Base_C_OnMeleeAttack) == 0x000001, "Wrong size on BP_NPC_Base_C_OnMeleeAttack");
static_assert(offsetof(BP_NPC_Base_C_OnMeleeAttack, HitSuccess) == 0x000000, "Member 'BP_NPC_Base_C_OnMeleeAttack::HitSuccess' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_NPC_Base_C_ReceiveAnyDamage final
{
public:
	float                                         Damage_0;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Base_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on BP_NPC_Base_C_ReceiveAnyDamage");
static_assert(sizeof(BP_NPC_Base_C_ReceiveAnyDamage) == 0x000020, "Wrong size on BP_NPC_Base_C_ReceiveAnyDamage");
static_assert(offsetof(BP_NPC_Base_C_ReceiveAnyDamage, Damage_0) == 0x000000, "Member 'BP_NPC_Base_C_ReceiveAnyDamage::Damage_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'BP_NPC_Base_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'BP_NPC_Base_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'BP_NPC_Base_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.UserConstructionScript
// 0x000C (0x000C - 0x0000)
struct BP_NPC_Base_C_UserConstructionScript final
{
public:
	float                                         CallFunc_GetComponentTickInterval_ReturnValue;     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_Base_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_NPC_Base_C_UserConstructionScript");
static_assert(sizeof(BP_NPC_Base_C_UserConstructionScript) == 0x00000C, "Wrong size on BP_NPC_Base_C_UserConstructionScript");
static_assert(offsetof(BP_NPC_Base_C_UserConstructionScript, CallFunc_GetComponentTickInterval_ReturnValue) == 0x000000, "Member 'BP_NPC_Base_C_UserConstructionScript::CallFunc_GetComponentTickInterval_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_NPC_Base_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000008, "Member 'BP_NPC_Base_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.PerformMeleeAttack
// 0x0108 (0x0108 - 0x0000)
struct BP_NPC_Base_C_PerformMeleeAttack final
{
public:
	bool                                          Hit;                                               // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_BasicBehavior                  CallFunc_GetCurrentBehaviorConfig_Config;          // 0x0020(0x00B0)(HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x00D0(0x0010)(ZeroConstructor, ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item1;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_Base_C_PerformMeleeAttack) == 0x000008, "Wrong alignment on BP_NPC_Base_C_PerformMeleeAttack");
static_assert(sizeof(BP_NPC_Base_C_PerformMeleeAttack) == 0x000108, "Wrong size on BP_NPC_Base_C_PerformMeleeAttack");
static_assert(offsetof(BP_NPC_Base_C_PerformMeleeAttack, Hit) == 0x000000, "Member 'BP_NPC_Base_C_PerformMeleeAttack::Hit' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformMeleeAttack, Temp_bool_True_if_break_was_hit_Variable) == 0x000001, "Member 'BP_NPC_Base_C_PerformMeleeAttack::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformMeleeAttack, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_NPC_Base_C_PerformMeleeAttack::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformMeleeAttack, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_NPC_Base_C_PerformMeleeAttack::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformMeleeAttack, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_NPC_Base_C_PerformMeleeAttack::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformMeleeAttack, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_NPC_Base_C_PerformMeleeAttack::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformMeleeAttack, Temp_int_Array_Index_Variable1) == 0x000010, "Member 'BP_NPC_Base_C_PerformMeleeAttack::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformMeleeAttack, Temp_int_Loop_Counter_Variable1) == 0x000014, "Member 'BP_NPC_Base_C_PerformMeleeAttack::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformMeleeAttack, CallFunc_Add_IntInt_ReturnValue1) == 0x000018, "Member 'BP_NPC_Base_C_PerformMeleeAttack::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformMeleeAttack, CallFunc_GetCurrentBehaviorConfig_Config) == 0x000020, "Member 'BP_NPC_Base_C_PerformMeleeAttack::CallFunc_GetCurrentBehaviorConfig_Config' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformMeleeAttack, CallFunc_GetOverlappingActors_OverlappingActors) == 0x0000D0, "Member 'BP_NPC_Base_C_PerformMeleeAttack::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformMeleeAttack, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BP_NPC_Base_C_PerformMeleeAttack::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformMeleeAttack, CallFunc_Array_Get_Item1) == 0x0000E8, "Member 'BP_NPC_Base_C_PerformMeleeAttack::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformMeleeAttack, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BP_NPC_Base_C_PerformMeleeAttack::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformMeleeAttack, CallFunc_ApplyDamage_ReturnValue) == 0x0000F4, "Member 'BP_NPC_Base_C_PerformMeleeAttack::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformMeleeAttack, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_NPC_Base_C_PerformMeleeAttack::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformMeleeAttack, CallFunc_ActorHasTag_ReturnValue) == 0x0000F9, "Member 'BP_NPC_Base_C_PerformMeleeAttack::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformMeleeAttack, CallFunc_Array_Length_ReturnValue1) == 0x0000FC, "Member 'BP_NPC_Base_C_PerformMeleeAttack::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformMeleeAttack, CallFunc_Less_IntInt_ReturnValue1) == 0x000100, "Member 'BP_NPC_Base_C_PerformMeleeAttack::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformMeleeAttack, CallFunc_BooleanAND_ReturnValue) == 0x000101, "Member 'BP_NPC_Base_C_PerformMeleeAttack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.PerformRangedAttack
// 0x0020 (0x0020 - 0x0000)
struct BP_NPC_Base_C_PerformRangedAttack final
{
public:
	class ABPWeaponBase_C*                        Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAttack;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPWeaponBase_C*                        WPN;                                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAllowDeadlyBullet;                               // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_Base_C_PerformRangedAttack) == 0x000008, "Wrong alignment on BP_NPC_Base_C_PerformRangedAttack");
static_assert(sizeof(BP_NPC_Base_C_PerformRangedAttack) == 0x000020, "Wrong size on BP_NPC_Base_C_PerformRangedAttack");
static_assert(offsetof(BP_NPC_Base_C_PerformRangedAttack, Weapon) == 0x000000, "Member 'BP_NPC_Base_C_PerformRangedAttack::Weapon' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformRangedAttack, IsAttack) == 0x000008, "Member 'BP_NPC_Base_C_PerformRangedAttack::IsAttack' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformRangedAttack, WPN) == 0x000010, "Member 'BP_NPC_Base_C_PerformRangedAttack::WPN' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_PerformRangedAttack, IsAllowDeadlyBullet) == 0x000018, "Member 'BP_NPC_Base_C_PerformRangedAttack::IsAllowDeadlyBullet' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.OnRep_Health
// 0x0004 (0x0004 - 0x0000)
struct BP_NPC_Base_C_OnRep_Health final
{
public:
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Base_C_OnRep_Health) == 0x000004, "Wrong alignment on BP_NPC_Base_C_OnRep_Health");
static_assert(sizeof(BP_NPC_Base_C_OnRep_Health) == 0x000004, "Wrong size on BP_NPC_Base_C_OnRep_Health");
static_assert(offsetof(BP_NPC_Base_C_OnRep_Health, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_NPC_Base_C_OnRep_Health::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.SetWeaponByClass
// 0x0060 (0x0060 - 0x0000)
struct BP_NPC_Base_C_SetWeaponByClass final
{
public:
	class UClass*                                 Type;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPWeaponBase_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_Base_C_SetWeaponByClass) == 0x000010, "Wrong alignment on BP_NPC_Base_C_SetWeaponByClass");
static_assert(sizeof(BP_NPC_Base_C_SetWeaponByClass) == 0x000060, "Wrong size on BP_NPC_Base_C_SetWeaponByClass");
static_assert(offsetof(BP_NPC_Base_C_SetWeaponByClass, Type) == 0x000000, "Member 'BP_NPC_Base_C_SetWeaponByClass::Type' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_SetWeaponByClass, CallFunc_IsValidClass_ReturnValue) == 0x000008, "Member 'BP_NPC_Base_C_SetWeaponByClass::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_SetWeaponByClass, CallFunc_HasAuthority_ReturnValue) == 0x000009, "Member 'BP_NPC_Base_C_SetWeaponByClass::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_SetWeaponByClass, CallFunc_GetSocketTransform_ReturnValue) == 0x000010, "Member 'BP_NPC_Base_C_SetWeaponByClass::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_SetWeaponByClass, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'BP_NPC_Base_C_SetWeaponByClass::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_SetWeaponByClass, CallFunc_FinishSpawningActor_ReturnValue) == 0x000048, "Member 'BP_NPC_Base_C_SetWeaponByClass::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_SetWeaponByClass, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_NPC_Base_C_SetWeaponByClass::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.GetTargetPoint
// 0x0148 (0x0148 - 0x0000)
struct BP_NPC_Base_C_GetTargetPoint final
{
public:
	bool                                          IsSpecial;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsForceHead;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ResultVec2D;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpinePoint;                                        // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HeadPoint;                                         // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetCurrentAttackTarget_TargetRef;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_Secret_C*                       K2Node_DynamicCast_AsBP_NPC_Secret;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue1;           // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBoxComponent*>                  CallFunc_GetComponentsByClass_ReturnValue;         // 0x0068(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue1;                       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue2;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue1;             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetCurrentAttackTarget_TargetRef1;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue3;                       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue2;     // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue4;                       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue1;        // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue1;                // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCurrentAttackTarget_TargetRef2;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBoxComponent*>                  CallFunc_GetComponentsByClass_ReturnValue1;        // 0x0120(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue2;                // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Base_C_GetTargetPoint) == 0x000008, "Wrong alignment on BP_NPC_Base_C_GetTargetPoint");
static_assert(sizeof(BP_NPC_Base_C_GetTargetPoint) == 0x000148, "Wrong size on BP_NPC_Base_C_GetTargetPoint");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, IsSpecial) == 0x000000, "Member 'BP_NPC_Base_C_GetTargetPoint::IsSpecial' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, IsForceHead) == 0x000001, "Member 'BP_NPC_Base_C_GetTargetPoint::IsForceHead' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, ReturnValue) == 0x000004, "Member 'BP_NPC_Base_C_GetTargetPoint::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, ResultVec2D) == 0x000010, "Member 'BP_NPC_Base_C_GetTargetPoint::ResultVec2D' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, SpinePoint) == 0x000018, "Member 'BP_NPC_Base_C_GetTargetPoint::SpinePoint' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, HeadPoint) == 0x000024, "Member 'BP_NPC_Base_C_GetTargetPoint::HeadPoint' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_GetCurrentAttackTarget_TargetRef) == 0x000030, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_GetCurrentAttackTarget_TargetRef' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_VSize_ReturnValue) == 0x000038, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, K2Node_DynamicCast_AsBP_NPC_Secret) == 0x000040, "Member 'BP_NPC_Base_C_GetTargetPoint::K2Node_DynamicCast_AsBP_NPC_Secret' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_NPC_Base_C_GetTargetPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000049, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_GetSocketLocation_ReturnValue) == 0x00004C, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_GetSocketLocation_ReturnValue1) == 0x000058, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_GetSocketLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_ActorHasTag_ReturnValue) == 0x000064, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_GetComponentsByClass_ReturnValue) == 0x000068, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'BP_NPC_Base_C_GetTargetPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_VSize_ReturnValue1) == 0x000084, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_VSize_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_VSize_ReturnValue2) == 0x00008C, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_VSize_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, Temp_int_Array_Index_Variable) == 0x000090, "Member 'BP_NPC_Base_C_GetTargetPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x0000A0, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_ComponentHasTag_ReturnValue) == 0x0000A1, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000A4, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x0000B0, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_ComponentHasTag_ReturnValue1) == 0x0000BC, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_ComponentHasTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, Temp_bool_True_if_break_was_hit_Variable) == 0x0000BD, "Member 'BP_NPC_Base_C_GetTargetPoint::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_Not_PreBool_ReturnValue) == 0x0000BE, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_BooleanAND_ReturnValue) == 0x0000BF, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_GetCurrentAttackTarget_TargetRef1) == 0x0000C0, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_GetCurrentAttackTarget_TargetRef1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000C8, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_VSize_ReturnValue3) == 0x0000D0, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_VSize_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_K2_GetComponentLocation_ReturnValue2) == 0x0000D4, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_K2_GetComponentLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000E0, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_VSize_ReturnValue4) == 0x0000E4, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_VSize_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_LessEqual_FloatFloat_ReturnValue1) == 0x0000E8, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_LessEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_SelectVector_ReturnValue) == 0x0000EC, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_SelectVector_ReturnValue1) == 0x0000F8, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_SelectVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_GetCurrentAttackTarget_TargetRef2) == 0x000108, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_GetCurrentAttackTarget_TargetRef2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000110, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_GetComponentsByClass_ReturnValue1) == 0x000120, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_GetComponentsByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_Array_Length_ReturnValue1) == 0x000130, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_Greater_IntInt_ReturnValue) == 0x000134, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetTargetPoint, CallFunc_SelectVector_ReturnValue2) == 0x000138, "Member 'BP_NPC_Base_C_GetTargetPoint::CallFunc_SelectVector_ReturnValue2' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.GetDamageFromBone
// 0x0060 (0x0060 - 0x0000)
struct BP_NPC_Base_C_GetDamageFromBone final
{
public:
	class FName                                   BoneName_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseDamage;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PlayerController;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation_0;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal_0;                                       // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage_0;                                          // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BD;                                                // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue2;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue3;                    // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Base_C_GetDamageFromBone) == 0x000008, "Wrong alignment on BP_NPC_Base_C_GetDamageFromBone");
static_assert(sizeof(BP_NPC_Base_C_GetDamageFromBone) == 0x000060, "Wrong size on BP_NPC_Base_C_GetDamageFromBone");
static_assert(offsetof(BP_NPC_Base_C_GetDamageFromBone, BoneName_0) == 0x000000, "Member 'BP_NPC_Base_C_GetDamageFromBone::BoneName_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetDamageFromBone, BaseDamage) == 0x000008, "Member 'BP_NPC_Base_C_GetDamageFromBone::BaseDamage' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetDamageFromBone, PlayerController) == 0x000010, "Member 'BP_NPC_Base_C_GetDamageFromBone::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetDamageFromBone, HitLocation_0) == 0x000018, "Member 'BP_NPC_Base_C_GetDamageFromBone::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetDamageFromBone, HitNormal_0) == 0x000024, "Member 'BP_NPC_Base_C_GetDamageFromBone::HitNormal_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetDamageFromBone, Damage_0) == 0x000030, "Member 'BP_NPC_Base_C_GetDamageFromBone::Damage_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetDamageFromBone, BD) == 0x000034, "Member 'BP_NPC_Base_C_GetDamageFromBone::BD' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetDamageFromBone, CallFunc_Conv_NameToString_ReturnValue) == 0x000038, "Member 'BP_NPC_Base_C_GetDamageFromBone::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetDamageFromBone, CallFunc_Contains_ReturnValue) == 0x000048, "Member 'BP_NPC_Base_C_GetDamageFromBone::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetDamageFromBone, CallFunc_Contains_ReturnValue1) == 0x000049, "Member 'BP_NPC_Base_C_GetDamageFromBone::CallFunc_Contains_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetDamageFromBone, CallFunc_Contains_ReturnValue2) == 0x00004A, "Member 'BP_NPC_Base_C_GetDamageFromBone::CallFunc_Contains_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetDamageFromBone, CallFunc_Contains_ReturnValue3) == 0x00004B, "Member 'BP_NPC_Base_C_GetDamageFromBone::CallFunc_Contains_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetDamageFromBone, CallFunc_BooleanOR_ReturnValue) == 0x00004C, "Member 'BP_NPC_Base_C_GetDamageFromBone::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetDamageFromBone, CallFunc_BooleanOR_ReturnValue1) == 0x00004D, "Member 'BP_NPC_Base_C_GetDamageFromBone::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetDamageFromBone, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_NPC_Base_C_GetDamageFromBone::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetDamageFromBone, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000054, "Member 'BP_NPC_Base_C_GetDamageFromBone::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetDamageFromBone, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000058, "Member 'BP_NPC_Base_C_GetDamageFromBone::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.Rep_PerformRangedAttack
// 0x0058 (0x0058 - 0x0000)
struct BP_NPC_Base_C_Rep_PerformRangedAttack final
{
public:
	class ABPWeaponBase_C*                        Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAttack;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPWeaponBase_C*                        WPN;                                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAllowDeadlyBullet;                               // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetPoint_ReturnValue;               // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetPoint_ReturnValue1;              // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAllowDeadlyBullet_Result;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47[0x1];                                       // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCurrentAttackTarget_TargetRef;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_Base_C_Rep_PerformRangedAttack) == 0x000008, "Wrong alignment on BP_NPC_Base_C_Rep_PerformRangedAttack");
static_assert(sizeof(BP_NPC_Base_C_Rep_PerformRangedAttack) == 0x000058, "Wrong size on BP_NPC_Base_C_Rep_PerformRangedAttack");
static_assert(offsetof(BP_NPC_Base_C_Rep_PerformRangedAttack, Weapon) == 0x000000, "Member 'BP_NPC_Base_C_Rep_PerformRangedAttack::Weapon' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_Rep_PerformRangedAttack, IsAttack) == 0x000008, "Member 'BP_NPC_Base_C_Rep_PerformRangedAttack::IsAttack' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_Rep_PerformRangedAttack, WPN) == 0x000010, "Member 'BP_NPC_Base_C_Rep_PerformRangedAttack::WPN' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_Rep_PerformRangedAttack, IsAllowDeadlyBullet) == 0x000018, "Member 'BP_NPC_Base_C_Rep_PerformRangedAttack::IsAllowDeadlyBullet' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_Rep_PerformRangedAttack, CallFunc_VSize_ReturnValue) == 0x00001C, "Member 'BP_NPC_Base_C_Rep_PerformRangedAttack::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_Rep_PerformRangedAttack, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_NPC_Base_C_Rep_PerformRangedAttack::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_Rep_PerformRangedAttack, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_NPC_Base_C_Rep_PerformRangedAttack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_Rep_PerformRangedAttack, CallFunc_IsValid_ReturnValue1) == 0x000022, "Member 'BP_NPC_Base_C_Rep_PerformRangedAttack::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_Rep_PerformRangedAttack, CallFunc_IsValid_ReturnValue2) == 0x000023, "Member 'BP_NPC_Base_C_Rep_PerformRangedAttack::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_Rep_PerformRangedAttack, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'BP_NPC_Base_C_Rep_PerformRangedAttack::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_Rep_PerformRangedAttack, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000028, "Member 'BP_NPC_Base_C_Rep_PerformRangedAttack::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_Rep_PerformRangedAttack, CallFunc_GetTargetPoint_ReturnValue) == 0x00002C, "Member 'BP_NPC_Base_C_Rep_PerformRangedAttack::CallFunc_GetTargetPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_Rep_PerformRangedAttack, CallFunc_GetTargetPoint_ReturnValue1) == 0x000038, "Member 'BP_NPC_Base_C_Rep_PerformRangedAttack::CallFunc_GetTargetPoint_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_Rep_PerformRangedAttack, CallFunc_IsAllowDeadlyBullet_Result) == 0x000044, "Member 'BP_NPC_Base_C_Rep_PerformRangedAttack::CallFunc_IsAllowDeadlyBullet_Result' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_Rep_PerformRangedAttack, CallFunc_IsValid_ReturnValue3) == 0x000045, "Member 'BP_NPC_Base_C_Rep_PerformRangedAttack::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_Rep_PerformRangedAttack, CallFunc_IsValid_ReturnValue4) == 0x000046, "Member 'BP_NPC_Base_C_Rep_PerformRangedAttack::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_Rep_PerformRangedAttack, CallFunc_GetCurrentAttackTarget_TargetRef) == 0x000048, "Member 'BP_NPC_Base_C_Rep_PerformRangedAttack::CallFunc_GetCurrentAttackTarget_TargetRef' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_Rep_PerformRangedAttack, CallFunc_IsValid_ReturnValue5) == 0x000050, "Member 'BP_NPC_Base_C_Rep_PerformRangedAttack::CallFunc_IsValid_ReturnValue5' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.SetFocusCheckIn
// 0x0004 (0x0004 - 0x0000)
struct BP_NPC_Base_C_SetFocusCheckIn final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Base_C_SetFocusCheckIn) == 0x000004, "Wrong alignment on BP_NPC_Base_C_SetFocusCheckIn");
static_assert(sizeof(BP_NPC_Base_C_SetFocusCheckIn) == 0x000004, "Wrong size on BP_NPC_Base_C_SetFocusCheckIn");
static_assert(offsetof(BP_NPC_Base_C_SetFocusCheckIn, Time) == 0x000000, "Member 'BP_NPC_Base_C_SetFocusCheckIn::Time' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.SetHidePause
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_Base_C_SetHidePause final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_Base_C_SetHidePause) == 0x000001, "Wrong alignment on BP_NPC_Base_C_SetHidePause");
static_assert(sizeof(BP_NPC_Base_C_SetHidePause) == 0x000001, "Wrong size on BP_NPC_Base_C_SetHidePause");
static_assert(offsetof(BP_NPC_Base_C_SetHidePause, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_NPC_Base_C_SetHidePause::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.FindPathToLocation
// 0x0080 (0x0080 - 0x0000)
struct BP_NPC_Base_C_FindPathToLocation final
{
public:
	struct FVector                                StartLocation;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Waypoint;                                          // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor)
	float                                         NewLocalVar_0;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                tmp_start;                                         // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                tmp;                                               // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue;     // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue1;    // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNavigationPath*                        CallFunc_FindPathToLocationSynchronously_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_Base_C_FindPathToLocation) == 0x000008, "Wrong alignment on BP_NPC_Base_C_FindPathToLocation");
static_assert(sizeof(BP_NPC_Base_C_FindPathToLocation) == 0x000080, "Wrong size on BP_NPC_Base_C_FindPathToLocation");
static_assert(offsetof(BP_NPC_Base_C_FindPathToLocation, StartLocation) == 0x000000, "Member 'BP_NPC_Base_C_FindPathToLocation::StartLocation' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_FindPathToLocation, TargetLocation) == 0x00000C, "Member 'BP_NPC_Base_C_FindPathToLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_FindPathToLocation, Waypoint) == 0x000018, "Member 'BP_NPC_Base_C_FindPathToLocation::Waypoint' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_FindPathToLocation, NewLocalVar_0) == 0x000028, "Member 'BP_NPC_Base_C_FindPathToLocation::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_FindPathToLocation, tmp_start) == 0x00002C, "Member 'BP_NPC_Base_C_FindPathToLocation::tmp_start' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_FindPathToLocation, tmp) == 0x000038, "Member 'BP_NPC_Base_C_FindPathToLocation::tmp' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_FindPathToLocation, CallFunc_MakeVector_ReturnValue) == 0x000044, "Member 'BP_NPC_Base_C_FindPathToLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_FindPathToLocation, CallFunc_RandomPointInBoundingBox_ReturnValue) == 0x000050, "Member 'BP_NPC_Base_C_FindPathToLocation::CallFunc_RandomPointInBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_FindPathToLocation, CallFunc_RandomPointInBoundingBox_ReturnValue1) == 0x00005C, "Member 'BP_NPC_Base_C_FindPathToLocation::CallFunc_RandomPointInBoundingBox_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_FindPathToLocation, CallFunc_FindPathToLocationSynchronously_ReturnValue) == 0x000068, "Member 'BP_NPC_Base_C_FindPathToLocation::CallFunc_FindPathToLocationSynchronously_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_FindPathToLocation, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_NPC_Base_C_FindPathToLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_FindPathToLocation, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BP_NPC_Base_C_FindPathToLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_FindPathToLocation, CallFunc_Greater_IntInt_ReturnValue) == 0x000078, "Member 'BP_NPC_Base_C_FindPathToLocation::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_NPC_Base.BP_NPC_Base_C.GetPlayerControllerFromObject
// 0x00A0 (0x00A0 - 0x0000)
struct BP_NPC_Base_C_GetPlayerControllerFromObject final
{
public:
	class AActor*                                 In;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      tmp;                                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPDefaultHand_C*                       K2Node_DynamicCast_AsBPDefault_Hand;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    K2Node_DynamicCast_AsBP_Character_Base;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    K2Node_DynamicCast_AsBP_Character_Base1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue1;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller2;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_Base_C_GetPlayerControllerFromObject) == 0x000008, "Wrong alignment on BP_NPC_Base_C_GetPlayerControllerFromObject");
static_assert(sizeof(BP_NPC_Base_C_GetPlayerControllerFromObject) == 0x0000A0, "Wrong size on BP_NPC_Base_C_GetPlayerControllerFromObject");
static_assert(offsetof(BP_NPC_Base_C_GetPlayerControllerFromObject, In) == 0x000000, "Member 'BP_NPC_Base_C_GetPlayerControllerFromObject::In' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetPlayerControllerFromObject, PlayerController) == 0x000008, "Member 'BP_NPC_Base_C_GetPlayerControllerFromObject::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetPlayerControllerFromObject, tmp) == 0x000010, "Member 'BP_NPC_Base_C_GetPlayerControllerFromObject::tmp' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetPlayerControllerFromObject, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_NPC_Base_C_GetPlayerControllerFromObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetPlayerControllerFromObject, K2Node_DynamicCast_AsPlayer_Controller) == 0x000020, "Member 'BP_NPC_Base_C_GetPlayerControllerFromObject::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetPlayerControllerFromObject, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_NPC_Base_C_GetPlayerControllerFromObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetPlayerControllerFromObject, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'BP_NPC_Base_C_GetPlayerControllerFromObject::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetPlayerControllerFromObject, K2Node_DynamicCast_AsBPDefault_Hand) == 0x000038, "Member 'BP_NPC_Base_C_GetPlayerControllerFromObject::K2Node_DynamicCast_AsBPDefault_Hand' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetPlayerControllerFromObject, K2Node_DynamicCast_bSuccess1) == 0x000040, "Member 'BP_NPC_Base_C_GetPlayerControllerFromObject::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetPlayerControllerFromObject, K2Node_DynamicCast_AsBP_Character_Base) == 0x000048, "Member 'BP_NPC_Base_C_GetPlayerControllerFromObject::K2Node_DynamicCast_AsBP_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetPlayerControllerFromObject, K2Node_DynamicCast_bSuccess2) == 0x000050, "Member 'BP_NPC_Base_C_GetPlayerControllerFromObject::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetPlayerControllerFromObject, CallFunc_GetController_ReturnValue) == 0x000058, "Member 'BP_NPC_Base_C_GetPlayerControllerFromObject::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetPlayerControllerFromObject, CallFunc_GetOwner_ReturnValue1) == 0x000060, "Member 'BP_NPC_Base_C_GetPlayerControllerFromObject::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetPlayerControllerFromObject, K2Node_DynamicCast_AsPlayer_Controller1) == 0x000068, "Member 'BP_NPC_Base_C_GetPlayerControllerFromObject::K2Node_DynamicCast_AsPlayer_Controller1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetPlayerControllerFromObject, K2Node_DynamicCast_bSuccess3) == 0x000070, "Member 'BP_NPC_Base_C_GetPlayerControllerFromObject::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetPlayerControllerFromObject, K2Node_DynamicCast_AsBP_Character_Base1) == 0x000078, "Member 'BP_NPC_Base_C_GetPlayerControllerFromObject::K2Node_DynamicCast_AsBP_Character_Base1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetPlayerControllerFromObject, K2Node_DynamicCast_bSuccess4) == 0x000080, "Member 'BP_NPC_Base_C_GetPlayerControllerFromObject::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetPlayerControllerFromObject, CallFunc_GetController_ReturnValue1) == 0x000088, "Member 'BP_NPC_Base_C_GetPlayerControllerFromObject::CallFunc_GetController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetPlayerControllerFromObject, K2Node_DynamicCast_AsPlayer_Controller2) == 0x000090, "Member 'BP_NPC_Base_C_GetPlayerControllerFromObject::K2Node_DynamicCast_AsPlayer_Controller2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Base_C_GetPlayerControllerFromObject, K2Node_DynamicCast_bSuccess5) == 0x000098, "Member 'BP_NPC_Base_C_GetPlayerControllerFromObject::K2Node_DynamicCast_bSuccess5' has a wrong offset!");

}


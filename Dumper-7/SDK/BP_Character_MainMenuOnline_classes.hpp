#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Character_MainMenuOnline

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Enum_ControllerType_structs.hpp"
#include "SiliconRising_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Character_MainMenuOnline.BP_Character_MainMenuOnline_C
// 0x0160 (0x08A0 - 0x0740)
class ABP_Character_MainMenuOnline_C final : public ACharacter
{
public:
	uint8                                         Pad_738[0x8];                                      // 0x0738(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0740(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Laser_Left;                                        // 0x0748(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LaserPoint_Left;                                   // 0x0750(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Index_Controller_Left;                             // 0x0758(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Index_Controller;                                  // 0x0760(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        RighHandPoint;                                     // 0x0768(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x0770(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0778(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UVRNotificationsComponent*              VRNotifications;                                   // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cosmos_Controller_Left;                            // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cosmos_Controller;                                 // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UApplicationLifecycleComponent*         ApplicationLifecycle;                              // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Oculus_Rift_S_Left;                                // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Oculus_Rift_S;                                     // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ModelRootLeft;                                     // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   VivePreControllerMeshLeft;                         // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WMR_ControllerMeshLeft;                            // 0x07C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   OculusControllerMeshLeft;                          // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WMR_Controller;                                    // 0x07D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   OculusControllerMesh;                              // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   VivePreControllerMesh;                             // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ModelRootRight;                                    // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       SpectatorUI;                                       // 0x07F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetInteractionComponent*            LeftHandInteraction;                               // 0x07F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        RootLeft;                                          // 0x0800(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetInteractionComponent*            RightHandInteraction;                              // 0x0808(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        RootRight;                                         // 0x0810(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LaserPoint;                                        // 0x0818(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Laser;                                             // 0x0820(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMotionControllerComponent*             MotionControllerLeft;                              // 0x0828(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMotionControllerComponent*             MotionControllerRight;                             // 0x0830(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Camera;                                            // 0x0838(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        VRRoot;                                            // 0x0840(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABPDefaultHand_C*                       LeftHand;                                          // 0x0848(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPDefaultHand_C*                       RightHand;                                         // 0x0850(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWpn_Pistol_MainMenu_C*                 RightWeapon;                                       // 0x0858(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWpn_Pistol_MainMenu_C*                 LeftWeapon;                                        // 0x0860(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStoryBoard;                                      // 0x0868(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPress;                                           // 0x0869(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86A[0x2];                                      // 0x086A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SkipTime;                                          // 0x086C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AStoryBoard_C*                          StoryBoard;                                        // 0x0870(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdjustHandRotViveCosmos;                           // 0x0878(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdjustHandRotOC;                                   // 0x087C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdjustHandRotWMR;                                  // 0x0880(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdjustHandRotSteam;                                // 0x0884(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdjustHandRot;                                     // 0x0888(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_ControllerType                           SDKType;                                           // 0x088C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSetSpectatorUI;                                  // 0x088D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88E[0x2];                                      // 0x088E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AdjustHandRotOC_RiftS;                             // 0x0890(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DominantHandLeft;                                  // 0x0894(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Character_MainMenuOnline(int32 EntryPoint);
	void CustomEvent_9();
	void HideDebugLine();
	void InpAxisEvt_LookUp_K2Node_InputAxisEvent_172(float AxisValue);
	void InpAxisEvt_Turn_K2Node_InputAxisEvent_157(float AxisValue);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void InpActEvt_G_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void OnSuccess_8B5CFFE64CEC91F3CFF9C9A7D7264036();
	void OnFailure_8B5CFFE64CEC91F3CFF9C9A7D7264036();
	void InpActEvt_D_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_Down_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InpActEvt_Up_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void InpActEvt_Right_K2Node_InputKeyEvent_4(const struct FKey& Key);
	void InpActEvt_Left_K2Node_InputKeyEvent_5(const struct FKey& Key);
	void OnSuccess_37D7BBC74DB5F35DCFCAD5B08813AB0F();
	void OnFailure_37D7BBC74DB5F35DCFCAD5B08813AB0F();
	void InpActEvt_F_K2Node_InputKeyEvent_6(const struct FKey& Key);
	void OnSuccess_91B05A4C4B70091FAA4C7F852448777A(const TArray<struct FBlueprintSessionResult>& Results);
	void OnFailure_91B05A4C4B70091FAA4C7F852448777A(const TArray<struct FBlueprintSessionResult>& Results);
	void InpActEvt_S_K2Node_InputKeyEvent_7(const struct FKey& Key);
	void InpActEvt_C_K2Node_InputKeyEvent_8(const struct FKey& Key);
	void OnSuccess_5CFF348D4E9510C2087C319BD17F076C();
	void OnFailure_5CFF348D4E9510C2087C319BD17F076C();
	void InpActEvt_Z_K2Node_InputKeyEvent_9(const struct FKey& Key);
	void InpActEvt_Fire_L_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_Fire_L_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_Fire_K2Node_InputActionEvent_2(const struct FKey& Key);
	void InpActEvt_Fire_K2Node_InputActionEvent_3(const struct FKey& Key);
	void UserConstructionScript();
	void UpdateLaser(class UWidgetInteractionComponent* WidgetInteraction, float Sickness, class USceneComponent* Laser_0, class USceneComponent* LaserPoint_0);
	void SetSpectatorUI(bool IsShow, bool IsGameOver);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Character_MainMenuOnline_C">();
	}
	static class ABP_Character_MainMenuOnline_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Character_MainMenuOnline_C>();
	}
};
static_assert(alignof(ABP_Character_MainMenuOnline_C) == 0x000010, "Wrong alignment on ABP_Character_MainMenuOnline_C");
static_assert(sizeof(ABP_Character_MainMenuOnline_C) == 0x0008A0, "Wrong size on ABP_Character_MainMenuOnline_C");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, UberGraphFrame) == 0x000740, "Member 'ABP_Character_MainMenuOnline_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, Laser_Left) == 0x000748, "Member 'ABP_Character_MainMenuOnline_C::Laser_Left' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, LaserPoint_Left) == 0x000750, "Member 'ABP_Character_MainMenuOnline_C::LaserPoint_Left' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, Index_Controller_Left) == 0x000758, "Member 'ABP_Character_MainMenuOnline_C::Index_Controller_Left' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, Index_Controller) == 0x000760, "Member 'ABP_Character_MainMenuOnline_C::Index_Controller' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, RighHandPoint) == 0x000768, "Member 'ABP_Character_MainMenuOnline_C::RighHandPoint' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, Widget) == 0x000770, "Member 'ABP_Character_MainMenuOnline_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, Scene) == 0x000778, "Member 'ABP_Character_MainMenuOnline_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, VRNotifications) == 0x000780, "Member 'ABP_Character_MainMenuOnline_C::VRNotifications' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, Cosmos_Controller_Left) == 0x000788, "Member 'ABP_Character_MainMenuOnline_C::Cosmos_Controller_Left' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, Cosmos_Controller) == 0x000790, "Member 'ABP_Character_MainMenuOnline_C::Cosmos_Controller' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, ApplicationLifecycle) == 0x000798, "Member 'ABP_Character_MainMenuOnline_C::ApplicationLifecycle' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, Oculus_Rift_S_Left) == 0x0007A0, "Member 'ABP_Character_MainMenuOnline_C::Oculus_Rift_S_Left' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, Oculus_Rift_S) == 0x0007A8, "Member 'ABP_Character_MainMenuOnline_C::Oculus_Rift_S' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, ModelRootLeft) == 0x0007B0, "Member 'ABP_Character_MainMenuOnline_C::ModelRootLeft' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, VivePreControllerMeshLeft) == 0x0007B8, "Member 'ABP_Character_MainMenuOnline_C::VivePreControllerMeshLeft' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, WMR_ControllerMeshLeft) == 0x0007C0, "Member 'ABP_Character_MainMenuOnline_C::WMR_ControllerMeshLeft' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, OculusControllerMeshLeft) == 0x0007C8, "Member 'ABP_Character_MainMenuOnline_C::OculusControllerMeshLeft' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, WMR_Controller) == 0x0007D0, "Member 'ABP_Character_MainMenuOnline_C::WMR_Controller' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, OculusControllerMesh) == 0x0007D8, "Member 'ABP_Character_MainMenuOnline_C::OculusControllerMesh' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, VivePreControllerMesh) == 0x0007E0, "Member 'ABP_Character_MainMenuOnline_C::VivePreControllerMesh' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, ModelRootRight) == 0x0007E8, "Member 'ABP_Character_MainMenuOnline_C::ModelRootRight' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, SpectatorUI) == 0x0007F0, "Member 'ABP_Character_MainMenuOnline_C::SpectatorUI' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, LeftHandInteraction) == 0x0007F8, "Member 'ABP_Character_MainMenuOnline_C::LeftHandInteraction' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, RootLeft) == 0x000800, "Member 'ABP_Character_MainMenuOnline_C::RootLeft' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, RightHandInteraction) == 0x000808, "Member 'ABP_Character_MainMenuOnline_C::RightHandInteraction' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, RootRight) == 0x000810, "Member 'ABP_Character_MainMenuOnline_C::RootRight' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, LaserPoint) == 0x000818, "Member 'ABP_Character_MainMenuOnline_C::LaserPoint' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, Laser) == 0x000820, "Member 'ABP_Character_MainMenuOnline_C::Laser' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, MotionControllerLeft) == 0x000828, "Member 'ABP_Character_MainMenuOnline_C::MotionControllerLeft' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, MotionControllerRight) == 0x000830, "Member 'ABP_Character_MainMenuOnline_C::MotionControllerRight' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, Camera) == 0x000838, "Member 'ABP_Character_MainMenuOnline_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, VRRoot) == 0x000840, "Member 'ABP_Character_MainMenuOnline_C::VRRoot' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, LeftHand) == 0x000848, "Member 'ABP_Character_MainMenuOnline_C::LeftHand' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, RightHand) == 0x000850, "Member 'ABP_Character_MainMenuOnline_C::RightHand' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, RightWeapon) == 0x000858, "Member 'ABP_Character_MainMenuOnline_C::RightWeapon' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, LeftWeapon) == 0x000860, "Member 'ABP_Character_MainMenuOnline_C::LeftWeapon' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, IsStoryBoard) == 0x000868, "Member 'ABP_Character_MainMenuOnline_C::IsStoryBoard' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, IsPress) == 0x000869, "Member 'ABP_Character_MainMenuOnline_C::IsPress' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, SkipTime) == 0x00086C, "Member 'ABP_Character_MainMenuOnline_C::SkipTime' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, StoryBoard) == 0x000870, "Member 'ABP_Character_MainMenuOnline_C::StoryBoard' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, AdjustHandRotViveCosmos) == 0x000878, "Member 'ABP_Character_MainMenuOnline_C::AdjustHandRotViveCosmos' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, AdjustHandRotOC) == 0x00087C, "Member 'ABP_Character_MainMenuOnline_C::AdjustHandRotOC' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, AdjustHandRotWMR) == 0x000880, "Member 'ABP_Character_MainMenuOnline_C::AdjustHandRotWMR' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, AdjustHandRotSteam) == 0x000884, "Member 'ABP_Character_MainMenuOnline_C::AdjustHandRotSteam' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, AdjustHandRot) == 0x000888, "Member 'ABP_Character_MainMenuOnline_C::AdjustHandRot' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, SDKType) == 0x00088C, "Member 'ABP_Character_MainMenuOnline_C::SDKType' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, IsSetSpectatorUI) == 0x00088D, "Member 'ABP_Character_MainMenuOnline_C::IsSetSpectatorUI' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, AdjustHandRotOC_RiftS) == 0x000890, "Member 'ABP_Character_MainMenuOnline_C::AdjustHandRotOC_RiftS' has a wrong offset!");
static_assert(offsetof(ABP_Character_MainMenuOnline_C, DominantHandLeft) == 0x000894, "Member 'ABP_Character_MainMenuOnline_C::DominantHandLeft' has a wrong offset!");

}


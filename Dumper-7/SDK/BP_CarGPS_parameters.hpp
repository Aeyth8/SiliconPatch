#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CarGPS

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_CarGPS.BP_CarGPS_C.ExecuteUbergraph_BP_CarGPS
// 0x0098 (0x0098 - 0x0000)
struct BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPlayerCarLoc_NewParam;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVehicle_MC_C*                          K2Node_DynamicCast_AsVehicle_MC;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Distance_Between_Actors_Distance;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0080(0x0018)()
};
static_assert(alignof(BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS) == 0x000008, "Wrong alignment on BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS");
static_assert(sizeof(BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS) == 0x000098, "Wrong size on BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS");
static_assert(offsetof(BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS, EntryPoint) == 0x000000, "Member 'BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS, K2Node_Event_MyGeometry) == 0x000004, "Member 'BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS, CallFunc_GetPlayerCarLoc_NewParam) == 0x000040, "Member 'BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS::CallFunc_GetPlayerCarLoc_NewParam' has a wrong offset!");
static_assert(offsetof(BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS, CallFunc_BreakVector2D_X) == 0x000048, "Member 'BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS, CallFunc_BreakVector2D_Y) == 0x00004C, "Member 'BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000058, "Member 'BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS, K2Node_DynamicCast_AsVehicle_MC) == 0x000060, "Member 'BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS::K2Node_DynamicCast_AsVehicle_MC' has a wrong offset!");
static_assert(offsetof(BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS, CallFunc_MakeVector2D_ReturnValue) == 0x00006C, "Member 'BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS, CallFunc_IsValid_ReturnValue1) == 0x000074, "Member 'BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS, CallFunc_Distance_Between_Actors_Distance) == 0x000078, "Member 'BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS::CallFunc_Distance_Between_Actors_Distance' has a wrong offset!");
static_assert(offsetof(BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS, CallFunc_Conv_FloatToText_ReturnValue) == 0x000080, "Member 'BP_CarGPS_C_ExecuteUbergraph_BP_CarGPS::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function BP_CarGPS.BP_CarGPS_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_CarGPS_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarGPS_C_Tick) == 0x000004, "Wrong alignment on BP_CarGPS_C_Tick");
static_assert(sizeof(BP_CarGPS_C_Tick) == 0x00003C, "Wrong size on BP_CarGPS_C_Tick");
static_assert(offsetof(BP_CarGPS_C_Tick, MyGeometry) == 0x000000, "Member 'BP_CarGPS_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_CarGPS_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_CarGPS_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_CarGPS.BP_CarGPS_C.InitHUD
// 0x0010 (0x0010 - 0x0000)
struct BP_CarGPS_C_InitHUD final
{
public:
	class ABP_Lv3_BaseCar_C*                      PlayerCar;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Lv3_BaseCar_C*                      Prison;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarGPS_C_InitHUD) == 0x000008, "Wrong alignment on BP_CarGPS_C_InitHUD");
static_assert(sizeof(BP_CarGPS_C_InitHUD) == 0x000010, "Wrong size on BP_CarGPS_C_InitHUD");
static_assert(offsetof(BP_CarGPS_C_InitHUD, PlayerCar) == 0x000000, "Member 'BP_CarGPS_C_InitHUD::PlayerCar' has a wrong offset!");
static_assert(offsetof(BP_CarGPS_C_InitHUD, Prison) == 0x000008, "Member 'BP_CarGPS_C_InitHUD::Prison' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RecoilData

#include "Basic.hpp"


namespace SDK
{

// UserDefinedStruct RecoilData.RecoilData
// 0x0034 (0x0034 - 0x0000)
struct FRecoilData final
{
public:
	float                                         RecoveryInterpSpeed_31_1D25320D4741C98EB27032BE08FDCFA3; // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PitchMin_18_5B06B15344A39D49E79BD082C8FA4C2F;      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PitchMax_19_13B92A854CF48121B2ABC79E60C3EC16;      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxTotalPitch_20_68D644A147F8EE29BC852BA4CC841431; // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxTotalPitchVariance_21_6E979F0640D66CC3B5CB72B94C0B50BB; // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YawMin_17_A47129DE4341BF09507C0D845E293152;        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YawMax_23_F7AD78DF423A3A21888A1FB1A46D65DF;        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxTotalYaw_25_D9A68C6641918CA4B7CAE2BD8A332EE0;   // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RollMin_39_1F38517B4FFF51D01DBFA2BEE40E66F3;       // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RollMax_40_B729518445E186F996D9429BEDED5E3A;       // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxTotalRoll_41_AEDF554D405ED879C756EBA832C3B729;  // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XPush_28_7A290D3841E70ED5CF160AAD59A93C04;         // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxTotalXPushSize_32_1EDF9A2C40E8EBF6E8B3D6BEC0E018CE; // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FRecoilData) == 0x000004, "Wrong alignment on FRecoilData");
static_assert(sizeof(FRecoilData) == 0x000034, "Wrong size on FRecoilData");
static_assert(offsetof(FRecoilData, RecoveryInterpSpeed_31_1D25320D4741C98EB27032BE08FDCFA3) == 0x000000, "Member 'FRecoilData::RecoveryInterpSpeed_31_1D25320D4741C98EB27032BE08FDCFA3' has a wrong offset!");
static_assert(offsetof(FRecoilData, PitchMin_18_5B06B15344A39D49E79BD082C8FA4C2F) == 0x000004, "Member 'FRecoilData::PitchMin_18_5B06B15344A39D49E79BD082C8FA4C2F' has a wrong offset!");
static_assert(offsetof(FRecoilData, PitchMax_19_13B92A854CF48121B2ABC79E60C3EC16) == 0x000008, "Member 'FRecoilData::PitchMax_19_13B92A854CF48121B2ABC79E60C3EC16' has a wrong offset!");
static_assert(offsetof(FRecoilData, MaxTotalPitch_20_68D644A147F8EE29BC852BA4CC841431) == 0x00000C, "Member 'FRecoilData::MaxTotalPitch_20_68D644A147F8EE29BC852BA4CC841431' has a wrong offset!");
static_assert(offsetof(FRecoilData, MaxTotalPitchVariance_21_6E979F0640D66CC3B5CB72B94C0B50BB) == 0x000010, "Member 'FRecoilData::MaxTotalPitchVariance_21_6E979F0640D66CC3B5CB72B94C0B50BB' has a wrong offset!");
static_assert(offsetof(FRecoilData, YawMin_17_A47129DE4341BF09507C0D845E293152) == 0x000014, "Member 'FRecoilData::YawMin_17_A47129DE4341BF09507C0D845E293152' has a wrong offset!");
static_assert(offsetof(FRecoilData, YawMax_23_F7AD78DF423A3A21888A1FB1A46D65DF) == 0x000018, "Member 'FRecoilData::YawMax_23_F7AD78DF423A3A21888A1FB1A46D65DF' has a wrong offset!");
static_assert(offsetof(FRecoilData, MaxTotalYaw_25_D9A68C6641918CA4B7CAE2BD8A332EE0) == 0x00001C, "Member 'FRecoilData::MaxTotalYaw_25_D9A68C6641918CA4B7CAE2BD8A332EE0' has a wrong offset!");
static_assert(offsetof(FRecoilData, RollMin_39_1F38517B4FFF51D01DBFA2BEE40E66F3) == 0x000020, "Member 'FRecoilData::RollMin_39_1F38517B4FFF51D01DBFA2BEE40E66F3' has a wrong offset!");
static_assert(offsetof(FRecoilData, RollMax_40_B729518445E186F996D9429BEDED5E3A) == 0x000024, "Member 'FRecoilData::RollMax_40_B729518445E186F996D9429BEDED5E3A' has a wrong offset!");
static_assert(offsetof(FRecoilData, MaxTotalRoll_41_AEDF554D405ED879C756EBA832C3B729) == 0x000028, "Member 'FRecoilData::MaxTotalRoll_41_AEDF554D405ED879C756EBA832C3B729' has a wrong offset!");
static_assert(offsetof(FRecoilData, XPush_28_7A290D3841E70ED5CF160AAD59A93C04) == 0x00002C, "Member 'FRecoilData::XPush_28_7A290D3841E70ED5CF160AAD59A93C04' has a wrong offset!");
static_assert(offsetof(FRecoilData, MaxTotalXPushSize_32_1EDF9A2C40E8EBF6E8B3D6BEC0E018CE) == 0x000030, "Member 'FRecoilData::MaxTotalXPushSize_32_1EDF9A2C40E8EBF6E8B3D6BEC0E018CE' has a wrong offset!");

}


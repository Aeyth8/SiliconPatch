#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Wpn_RPG_PVE

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Wpn_RPG_PVE.Wpn_RPG_PVE_C.ExecuteUbergraph_Wpn_RPG_PVE
// 0x0158 (0x0158 - 0x0000)
struct Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0048(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D3[0x1];                                       // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE) == 0x000008, "Wrong alignment on Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE");
static_assert(sizeof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE) == 0x000158, "Wrong size on Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, EntryPoint) == 0x000000, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::EntryPoint' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, Temp_object_Variable) == 0x000008, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_GetRightVector_ReturnValue) == 0x000018, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000024, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_Add_VectorVector_ReturnValue) == 0x00003C, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_LineTraceSingle_OutHit) == 0x000048, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_LineTraceSingle_ReturnValue) == 0x0000D0, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_BreakHitResult_bBlockingHit) == 0x0000D1, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000D2, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_BreakHitResult_Time) == 0x0000D4, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_BreakHitResult_Distance) == 0x0000D8, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_BreakHitResult_Location) == 0x0000DC, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_BreakHitResult_ImpactPoint) == 0x0000E8, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_BreakHitResult_Normal) == 0x0000F4, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_BreakHitResult_ImpactNormal) == 0x000100, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_BreakHitResult_PhysMat) == 0x000110, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_BreakHitResult_HitActor) == 0x000118, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_BreakHitResult_HitComponent) == 0x000120, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_BreakHitResult_HitBoneName) == 0x000128, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_BreakHitResult_HitItem) == 0x000130, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_BreakHitResult_FaceIndex) == 0x000134, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_BreakHitResult_TraceStart) == 0x000138, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, CallFunc_BreakHitResult_TraceEnd) == 0x000144, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE, K2Node_Event_DeltaSeconds) == 0x000150, "Member 'Wpn_RPG_PVE_C_ExecuteUbergraph_Wpn_RPG_PVE::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function Wpn_RPG_PVE.Wpn_RPG_PVE_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Wpn_RPG_PVE_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Wpn_RPG_PVE_C_ReceiveTick) == 0x000004, "Wrong alignment on Wpn_RPG_PVE_C_ReceiveTick");
static_assert(sizeof(Wpn_RPG_PVE_C_ReceiveTick) == 0x000004, "Wrong size on Wpn_RPG_PVE_C_ReceiveTick");
static_assert(offsetof(Wpn_RPG_PVE_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Wpn_RPG_PVE_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Wpn_RPG_PVE.Wpn_RPG_PVE_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct Wpn_RPG_PVE_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Wpn_RPG_PVE_C_UserConstructionScript) == 0x000001, "Wrong alignment on Wpn_RPG_PVE_C_UserConstructionScript");
static_assert(sizeof(Wpn_RPG_PVE_C_UserConstructionScript) == 0x000001, "Wrong size on Wpn_RPG_PVE_C_UserConstructionScript");
static_assert(offsetof(Wpn_RPG_PVE_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000000, "Member 'Wpn_RPG_PVE_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

}


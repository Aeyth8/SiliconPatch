#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LV2_plunger

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Lv2_NPCBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LV2_plunger.BP_LV2_plunger_C
// 0x0020 (0x08A0 - 0x0880)
class ABP_LV2_plunger_C final : public ABP_Lv2_NPCBase_C
{
public:
	uint8                                         Pad_875[0x3];                                      // 0x0875(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_LV2_plunger_C;                   // 0x0878(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Sphere;                                            // 0x0880(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         CrouchDelay;                                       // 0x0888(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanCrouch;                                         // 0x088C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88D[0x3];                                      // 0x088D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         XOffest;                                           // 0x0890(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         YOffest;                                           // 0x0894(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpecialAnimIndex;                                  // 0x0898(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_LV2_plunger(int32 EntryPoint);
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void BndEvt__Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void MovetoPlayMtg(class AActor* TargetActor_0, class UAnimMontage* Montage);
	void BndEvt__PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature(class APawn* Pawn);
	void FindEnemie(class AActor* TargetActor_0);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void Attack(bool UseControllerRotation, float* Delay);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LV2_plunger_C">();
	}
	static class ABP_LV2_plunger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LV2_plunger_C>();
	}
};
static_assert(alignof(ABP_LV2_plunger_C) == 0x000010, "Wrong alignment on ABP_LV2_plunger_C");
static_assert(sizeof(ABP_LV2_plunger_C) == 0x0008A0, "Wrong size on ABP_LV2_plunger_C");
static_assert(offsetof(ABP_LV2_plunger_C, UberGraphFrame_BP_LV2_plunger_C) == 0x000878, "Member 'ABP_LV2_plunger_C::UberGraphFrame_BP_LV2_plunger_C' has a wrong offset!");
static_assert(offsetof(ABP_LV2_plunger_C, Sphere) == 0x000880, "Member 'ABP_LV2_plunger_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_LV2_plunger_C, CrouchDelay) == 0x000888, "Member 'ABP_LV2_plunger_C::CrouchDelay' has a wrong offset!");
static_assert(offsetof(ABP_LV2_plunger_C, CanCrouch) == 0x00088C, "Member 'ABP_LV2_plunger_C::CanCrouch' has a wrong offset!");
static_assert(offsetof(ABP_LV2_plunger_C, XOffest) == 0x000890, "Member 'ABP_LV2_plunger_C::XOffest' has a wrong offset!");
static_assert(offsetof(ABP_LV2_plunger_C, YOffest) == 0x000894, "Member 'ABP_LV2_plunger_C::YOffest' has a wrong offset!");
static_assert(offsetof(ABP_LV2_plunger_C, SpecialAnimIndex) == 0x000898, "Member 'ABP_LV2_plunger_C::SpecialAnimIndex' has a wrong offset!");

}


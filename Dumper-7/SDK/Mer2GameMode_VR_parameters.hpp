#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mer2GameMode_VR

#include "Basic.hpp"


namespace SDK::Params
{

// Function Mer2GameMode_VR.Mer2GameMode_VR_C.ExecuteUbergraph_Mer2GameMode_VR
// 0x0048 (0x0048 - 0x0000)
struct Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_NewPlayer;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMer2PlayerController_C*                K2Node_DynamicCast_AsMer_2Player_Controller;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GenerateUniqueID_Result;                  // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR) == 0x000008, "Wrong alignment on Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR");
static_assert(sizeof(Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR) == 0x000048, "Wrong size on Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR");
static_assert(offsetof(Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR, EntryPoint) == 0x000000, "Member 'Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR::EntryPoint' has a wrong offset!");
static_assert(offsetof(Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR, K2Node_Event_NewPlayer) == 0x000008, "Member 'Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR::K2Node_Event_NewPlayer' has a wrong offset!");
static_assert(offsetof(Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR, K2Node_DynamicCast_AsMer_2Player_Controller) == 0x000018, "Member 'Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR::K2Node_DynamicCast_AsMer_2Player_Controller' has a wrong offset!");
static_assert(offsetof(Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR, K2Node_DynamicCast_AsMer_2Game_Instance) == 0x000028, "Member 'Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR::K2Node_DynamicCast_AsMer_2Game_Instance' has a wrong offset!");
static_assert(offsetof(Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR, CallFunc_GenerateUniqueID_Result) == 0x000038, "Member 'Mer2GameMode_VR_C_ExecuteUbergraph_Mer2GameMode_VR::CallFunc_GenerateUniqueID_Result' has a wrong offset!");

// Function Mer2GameMode_VR.Mer2GameMode_VR_C.K2_PostLogin
// 0x0008 (0x0008 - 0x0000)
struct Mer2GameMode_VR_C_K2_PostLogin final
{
public:
	class APlayerController*                      NewPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameMode_VR_C_K2_PostLogin) == 0x000008, "Wrong alignment on Mer2GameMode_VR_C_K2_PostLogin");
static_assert(sizeof(Mer2GameMode_VR_C_K2_PostLogin) == 0x000008, "Wrong size on Mer2GameMode_VR_C_K2_PostLogin");
static_assert(offsetof(Mer2GameMode_VR_C_K2_PostLogin, NewPlayer) == 0x000000, "Member 'Mer2GameMode_VR_C_K2_PostLogin::NewPlayer' has a wrong offset!");

// Function Mer2GameMode_VR.Mer2GameMode_VR_C.ChoosePlayerStart
// 0x0060 (0x0060 - 0x0000)
struct Mer2GameMode_VR_C_ChoosePlayerStart final
{
public:
	class AController*                            Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors1;           // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStart*                           CallFunc_Array_Get_Item1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mer2GameMode_VR_C_ChoosePlayerStart) == 0x000008, "Wrong alignment on Mer2GameMode_VR_C_ChoosePlayerStart");
static_assert(sizeof(Mer2GameMode_VR_C_ChoosePlayerStart) == 0x000060, "Wrong size on Mer2GameMode_VR_C_ChoosePlayerStart");
static_assert(offsetof(Mer2GameMode_VR_C_ChoosePlayerStart, Player) == 0x000000, "Member 'Mer2GameMode_VR_C_ChoosePlayerStart::Player' has a wrong offset!");
static_assert(offsetof(Mer2GameMode_VR_C_ChoosePlayerStart, ReturnValue) == 0x000008, "Member 'Mer2GameMode_VR_C_ChoosePlayerStart::ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameMode_VR_C_ChoosePlayerStart, Target) == 0x000010, "Member 'Mer2GameMode_VR_C_ChoosePlayerStart::Target' has a wrong offset!");
static_assert(offsetof(Mer2GameMode_VR_C_ChoosePlayerStart, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Mer2GameMode_VR_C_ChoosePlayerStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameMode_VR_C_ChoosePlayerStart, Temp_int_Variable) == 0x00001C, "Member 'Mer2GameMode_VR_C_ChoosePlayerStart::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Mer2GameMode_VR_C_ChoosePlayerStart, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'Mer2GameMode_VR_C_ChoosePlayerStart::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(Mer2GameMode_VR_C_ChoosePlayerStart, CallFunc_Array_Get_Item) == 0x000030, "Member 'Mer2GameMode_VR_C_ChoosePlayerStart::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Mer2GameMode_VR_C_ChoosePlayerStart, CallFunc_GetAllActorsOfClass_OutActors1) == 0x000038, "Member 'Mer2GameMode_VR_C_ChoosePlayerStart::CallFunc_GetAllActorsOfClass_OutActors1' has a wrong offset!");
static_assert(offsetof(Mer2GameMode_VR_C_ChoosePlayerStart, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'Mer2GameMode_VR_C_ChoosePlayerStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameMode_VR_C_ChoosePlayerStart, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00004C, "Member 'Mer2GameMode_VR_C_ChoosePlayerStart::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameMode_VR_C_ChoosePlayerStart, CallFunc_Percent_IntInt_ReturnValue) == 0x000050, "Member 'Mer2GameMode_VR_C_ChoosePlayerStart::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mer2GameMode_VR_C_ChoosePlayerStart, CallFunc_Array_Get_Item1) == 0x000058, "Member 'Mer2GameMode_VR_C_ChoosePlayerStart::CallFunc_Array_Get_Item1' has a wrong offset!");

}


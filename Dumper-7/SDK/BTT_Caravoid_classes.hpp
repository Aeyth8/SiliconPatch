#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_Caravoid

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_Caravoid.BTT_CarAvoid_C
// 0x0080 (0x0120 - 0x00A0)
class UBTT_CarAvoid_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 SteerAngle;                                        // 0x00A8(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 RightTrace;                                        // 0x00D0(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 FrontTrace;                                        // 0x00F8(0x0028)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_BTT_CarAvoid(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void Trace(class UArrowComponent* Arrow, float Distance, const struct FVector& Dir, const struct FVector& HalfSize, bool* Result, float* CurXRel, float* CurYRel);
	void GetLRoffset(int32 Result, float Steering);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_CarAvoid_C">();
	}
	static class UBTT_CarAvoid_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_CarAvoid_C>();
	}
};
static_assert(alignof(UBTT_CarAvoid_C) == 0x000008, "Wrong alignment on UBTT_CarAvoid_C");
static_assert(sizeof(UBTT_CarAvoid_C) == 0x000120, "Wrong size on UBTT_CarAvoid_C");
static_assert(offsetof(UBTT_CarAvoid_C, UberGraphFrame) == 0x0000A0, "Member 'UBTT_CarAvoid_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_CarAvoid_C, SteerAngle) == 0x0000A8, "Member 'UBTT_CarAvoid_C::SteerAngle' has a wrong offset!");
static_assert(offsetof(UBTT_CarAvoid_C, RightTrace) == 0x0000D0, "Member 'UBTT_CarAvoid_C::RightTrace' has a wrong offset!");
static_assert(offsetof(UBTT_CarAvoid_C, FrontTrace) == 0x0000F8, "Member 'UBTT_CarAvoid_C::FrontTrace' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC_APE

#include "Basic.hpp"

#include "BP_NPC_APE_classes.hpp"
#include "BP_NPC_APE_parameters.hpp"


namespace SDK
{

// Function BP_NPC_APE.BP_NPC_APE_C.ExecuteUbergraph_BP_NPC_APE
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::ExecuteUbergraph_BP_NPC_APE(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "ExecuteUbergraph_BP_NPC_APE");

	Params::BP_NPC_APE_C_ExecuteUbergraph_BP_NPC_APE Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::CustomEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "CustomEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.CheckMeleeDistance
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::CheckMeleeDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "CheckMeleeDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnAddScore
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EnumScoreType                           scoreType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::OnAddScore(EnumScoreType scoreType, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnAddScore");

	Params::BP_NPC_APE_C_OnAddScore Parms{};

	Parms.scoreType = scoreType;
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnAllPlayMissileCharge
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::OnAllPlayMissileCharge(class USoundBase* Sound_0, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnAllPlayMissileCharge");

	Params::BP_NPC_APE_C_OnAllPlayMissileCharge Parms{};

	Parms.Sound_0 = Sound_0;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnServerPlayMissileCharge
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::OnServerPlayMissileCharge(class USoundBase* Sound_0, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnServerPlayMissileCharge");

	Params::BP_NPC_APE_C_OnServerPlayMissileCharge Parms{};

	Parms.Sound_0 = Sound_0;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.ShowUpShoot
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Shoot                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_APE_C::ShowUpShoot(bool Shoot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "ShowUpShoot");

	Params::BP_NPC_APE_C_ShowUpShoot Parms{};

	Parms.Shoot = Shoot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.PlaySoundAt
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       SoundBase                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::PlaySoundAt(class USoundBase* SoundBase, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "PlaySoundAt");

	Params::BP_NPC_APE_C_PlaySoundAt Parms{};

	Parms.SoundBase = SoundBase;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnPlaySoundAtLocation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::OnPlaySoundAtLocation(class USoundBase* Sound_0, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnPlaySoundAtLocation");

	Params::BP_NPC_APE_C_OnPlaySoundAtLocation Parms{};

	Parms.Sound_0 = Sound_0;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnSetAnimRandomDirection
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::OnSetAnimRandomDirection(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnSetAnimRandomDirection");

	Params::BP_NPC_APE_C_OnSetAnimRandomDirection Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnHitOtherDead
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   HitLocation_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::OnHitOtherDead(const struct FVector& HitLocation_0, const struct FVector& HitNormal_0, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnHitOtherDead");

	Params::BP_NPC_APE_C_OnHitOtherDead Parms{};

	Parms.HitLocation_0 = std::move(HitLocation_0);
	Parms.HitNormal_0 = std::move(HitNormal_0);
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnSetAnimRandomMove
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_APE_C::OnSetAnimRandomMove(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnSetAnimRandomMove");

	Params::BP_NPC_APE_C_OnSetAnimRandomMove Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnKeepDistance
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::OnKeepDistance(const struct FVector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnKeepDistance");

	Params::BP_NPC_APE_C_OnKeepDistance Parms{};

	Parms.TargetLocation = std::move(TargetLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnStartRandomMove
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::OnStartRandomMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnStartRandomMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.BndEvt__PowerCenter_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_NPC_APE_C::BndEvt__PowerCenter_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "BndEvt__PowerCenter_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::BP_NPC_APE_C_BndEvt__PowerCenter_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnMachineGunLoopEnd
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::OnMachineGunLoopEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnMachineGunLoopEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.BndEvt__BackCoverL_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_NPC_APE_C::BndEvt__BackCoverL_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "BndEvt__BackCoverL_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");

	Params::BP_NPC_APE_C_BndEvt__BackCoverL_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.BndEvt__BackCoverR_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_NPC_APE_C::BndEvt__BackCoverR_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "BndEvt__BackCoverR_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::BP_NPC_APE_C_BndEvt__BackCoverR_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnDashAttack
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::OnDashAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnDashAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnSetMachineGunState
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_NPC_APE_MachineGunStatus              Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::OnSetMachineGunState(E_NPC_APE_MachineGunStatus Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnSetMachineGunState");

	Params::BP_NPC_APE_C_OnSetMachineGunState Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnSetRelaxing
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_APE_C::OnSetRelaxing(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnSetRelaxing");

	Params::BP_NPC_APE_C_OnSetRelaxing Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnNeedLaunch
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_APE_C::OnNeedLaunch(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnNeedLaunch");

	Params::BP_NPC_APE_C_OnNeedLaunch Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnPrepareDash
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_APE_C::OnPrepareDash(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnPrepareDash");

	Params::BP_NPC_APE_C_OnPrepareDash Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnMissileLaunch
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::OnMissileLaunch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnMissileLaunch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.DashPrepareEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::DashPrepareEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "DashPrepareEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.ResetDoOnceOnDash
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::ResetDoOnceOnDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "ResetDoOnceOnDash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnEndDashJump
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::OnEndDashJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnEndDashJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnStartDashJump
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::OnStartDashJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnStartDashJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.DashMainLoop
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::DashMainLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "DashMainLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.SetupDashAttack
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::SetupDashAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "SetupDashAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.StopMachineGunAndMissile
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::StopMachineGunAndMissile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "StopMachineGunAndMissile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnMissileAlert
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsStart                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_APE_C::OnMissileAlert(bool IsStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnMissileAlert");

	Params::BP_NPC_APE_C_OnMissileAlert Parms{};

	Parms.IsStart = IsStart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnSetShootMissileFalse
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::OnSetShootMissileFalse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnSetShootMissileFalse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnSetShootMissileTrue
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::OnSetShootMissileTrue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnSetShootMissileTrue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.SetupMissileTimer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MissisileInterval                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MissilePrepareTime                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::SetupMissileTimer(float MissisileInterval, float MissilePrepareTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "SetupMissileTimer");

	Params::BP_NPC_APE_C_SetupMissileTimer Parms{};

	Parms.MissisileInterval = MissisileInterval;
	Parms.MissilePrepareTime = MissilePrepareTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnMissilePrepareEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::OnMissilePrepareEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnMissilePrepareEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnMissileLoop
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::OnMissileLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnMissileLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnCompleted_394F91C04EB3AA6F59B779A7B97A664B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::OnCompleted_394F91C04EB3AA6F59B779A7B97A664B(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnCompleted_394F91C04EB3AA6F59B779A7B97A664B");

	Params::BP_NPC_APE_C_OnCompleted_394F91C04EB3AA6F59B779A7B97A664B Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnBlendOut_394F91C04EB3AA6F59B779A7B97A664B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::OnBlendOut_394F91C04EB3AA6F59B779A7B97A664B(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnBlendOut_394F91C04EB3AA6F59B779A7B97A664B");

	Params::BP_NPC_APE_C_OnBlendOut_394F91C04EB3AA6F59B779A7B97A664B Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnInterrupted_394F91C04EB3AA6F59B779A7B97A664B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::OnInterrupted_394F91C04EB3AA6F59B779A7B97A664B(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnInterrupted_394F91C04EB3AA6F59B779A7B97A664B");

	Params::BP_NPC_APE_C_OnInterrupted_394F91C04EB3AA6F59B779A7B97A664B Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnNotifyBegin_394F91C04EB3AA6F59B779A7B97A664B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::OnNotifyBegin_394F91C04EB3AA6F59B779A7B97A664B(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnNotifyBegin_394F91C04EB3AA6F59B779A7B97A664B");

	Params::BP_NPC_APE_C_OnNotifyBegin_394F91C04EB3AA6F59B779A7B97A664B Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnNotifyEnd_394F91C04EB3AA6F59B779A7B97A664B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::OnNotifyEnd_394F91C04EB3AA6F59B779A7B97A664B(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnNotifyEnd_394F91C04EB3AA6F59B779A7B97A664B");

	Params::BP_NPC_APE_C_OnNotifyEnd_394F91C04EB3AA6F59B779A7B97A664B Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnSuccess_1E52BC3F47440C73D89B02B0FE61E38F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::OnSuccess_1E52BC3F47440C73D89B02B0FE61E38F(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnSuccess_1E52BC3F47440C73D89B02B0FE61E38F");

	Params::BP_NPC_APE_C_OnSuccess_1E52BC3F47440C73D89B02B0FE61E38F Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnFail_1E52BC3F47440C73D89B02B0FE61E38F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::OnFail_1E52BC3F47440C73D89B02B0FE61E38F(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnFail_1E52BC3F47440C73D89B02B0FE61E38F");

	Params::BP_NPC_APE_C_OnFail_1E52BC3F47440C73D89B02B0FE61E38F Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnSuccess_0F45F1B74BDC9B5B9A9DA0BC19DB6696
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::OnSuccess_0F45F1B74BDC9B5B9A9DA0BC19DB6696(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnSuccess_0F45F1B74BDC9B5B9A9DA0BC19DB6696");

	Params::BP_NPC_APE_C_OnSuccess_0F45F1B74BDC9B5B9A9DA0BC19DB6696 Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnFail_0F45F1B74BDC9B5B9A9DA0BC19DB6696
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::OnFail_0F45F1B74BDC9B5B9A9DA0BC19DB6696(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnFail_0F45F1B74BDC9B5B9A9DA0BC19DB6696");

	Params::BP_NPC_APE_C_OnFail_0F45F1B74BDC9B5B9A9DA0BC19DB6696 Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.HeadGlow__UpdateFunc
// (BlueprintEvent)

void ABP_NPC_APE_C::HeadGlow__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "HeadGlow__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.HeadGlow__FinishedFunc
// (BlueprintEvent)

void ABP_NPC_APE_C::HeadGlow__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "HeadGlow__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.Timeline_4__UpdateFunc
// (BlueprintEvent)

void ABP_NPC_APE_C::Timeline_4__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "Timeline_4__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.Timeline_4__FinishedFunc
// (BlueprintEvent)

void ABP_NPC_APE_C::Timeline_4__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "Timeline_4__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.Timeline_3__UpdateFunc
// (BlueprintEvent)

void ABP_NPC_APE_C::Timeline_3__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "Timeline_3__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.Timeline_3__FinishedFunc
// (BlueprintEvent)

void ABP_NPC_APE_C::Timeline_3__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "Timeline_3__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.Timeline_2__UpdateFunc
// (BlueprintEvent)

void ABP_NPC_APE_C::Timeline_2__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "Timeline_2__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.Timeline_2__FinishedFunc
// (BlueprintEvent)

void ABP_NPC_APE_C::Timeline_2__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "Timeline_2__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.Timeline_1__UpdateFunc
// (BlueprintEvent)

void ABP_NPC_APE_C::Timeline_1__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "Timeline_1__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.Timeline_1__FinishedFunc
// (BlueprintEvent)

void ABP_NPC_APE_C::Timeline_1__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "Timeline_1__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.DashJumpTimeLine__UpdateFunc
// (BlueprintEvent)

void ABP_NPC_APE_C::DashJumpTimeLine__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "DashJumpTimeLine__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.DashJumpTimeLine__FinishedFunc
// (BlueprintEvent)

void ABP_NPC_APE_C::DashJumpTimeLine__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "DashJumpTimeLine__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.GetDistanceFromTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::GetDistanceFromTarget(float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "GetDistanceFromTarget");

	Params::BP_NPC_APE_C_GetDistanceFromTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BP_NPC_APE.BP_NPC_APE_C.FaceToTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsNoLerp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::FaceToTarget(bool IsNoLerp, const struct FVector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "FaceToTarget");

	Params::BP_NPC_APE_C_FaceToTarget Parms{};

	Parms.IsNoLerp = IsNoLerp;
	Parms.TargetLocation = std::move(TargetLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.IsMoving
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsMoving_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_APE_C::IsMoving(bool* IsMoving_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "IsMoving");

	Params::BP_NPC_APE_C_IsMoving Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsMoving_0 != nullptr)
		*IsMoving_0 = Parms.IsMoving_0;
}


// Function BP_NPC_APE.BP_NPC_APE_C.CheckAttackStage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  Stage                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::CheckAttackStage(int32* Stage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "CheckAttackStage");

	Params::BP_NPC_APE_C_CheckAttackStage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Stage != nullptr)
		*Stage = Parms.Stage;
}


// Function BP_NPC_APE.BP_NPC_APE_C.ShootMissile
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_APE_C::ShootMissile(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "ShootMissile");

	Params::BP_NPC_APE_C_ShootMissile Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_NPC_APE.BP_NPC_APE_C.CheckTimeHandle
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::CheckTimeHandle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "CheckTimeHandle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.GetMissileTimeSettings
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  Interval                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  Prepare                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::GetMissileTimeSettings(float* Interval, float* Prepare)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "GetMissileTimeSettings");

	Params::BP_NPC_APE_C_GetMissileTimeSettings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Interval != nullptr)
		*Interval = Parms.Interval;

	if (Prepare != nullptr)
		*Prepare = Parms.Prepare;
}


// Function BP_NPC_APE.BP_NPC_APE_C.GetPlayerHead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UBoxComponent**                   HeadCollision                                          (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::GetPlayerHead(bool* Found, class UBoxComponent** HeadCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "GetPlayerHead");

	Params::BP_NPC_APE_C_GetPlayerHead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (HeadCollision != nullptr)
		*HeadCollision = Parms.HeadCollision;
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnRep_MachineGun
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::OnRep_MachineGun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnRep_MachineGun");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.PrepareSpawnMissile
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::PrepareSpawnMissile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "PrepareSpawnMissile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.GetRandomLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   MinDistance                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxDistance                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsRight                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::GetRandomLocation(float MinDistance, float MaxDistance, bool* IsRight, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "GetRandomLocation");

	Params::BP_NPC_APE_C_GetRandomLocation Parms{};

	Parms.MinDistance = MinDistance;
	Parms.MaxDistance = MaxDistance;

	UObject::ProcessEvent(Func, &Parms);

	if (IsRight != nullptr)
		*IsRight = Parms.IsRight;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_NPC_APE.BP_NPC_APE_C.GetRandomBoneList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FName>*                    BoneList                                               (Parm, OutParm, ZeroConstructor)

void ABP_NPC_APE_C::GetRandomBoneList(TArray<class FName>* BoneList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "GetRandomBoneList");

	Params::BP_NPC_APE_C_GetRandomBoneList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BoneList != nullptr)
		*BoneList = std::move(Parms.BoneList);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnHitHeadDead
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   HitLocation_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::OnHitHeadDead(const struct FVector& HitLocation_0, const struct FVector& HitNormal_0, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnHitHeadDead");

	Params::BP_NPC_APE_C_OnHitHeadDead Parms{};

	Parms.HitLocation_0 = std::move(HitLocation_0);
	Parms.HitNormal_0 = std::move(HitNormal_0);
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnHitHead
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::OnHitHead(class APlayerController* PlayerController, const struct FVector& HitLocation_0, const struct FVector& HitNormal_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnHitHead");

	Params::BP_NPC_APE_C_OnHitHead Parms{};

	Parms.PlayerController = PlayerController;
	Parms.HitLocation_0 = std::move(HitLocation_0);
	Parms.HitNormal_0 = std::move(HitNormal_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.OnDeath
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::OnDeath(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "OnDeath");

	Params::BP_NPC_APE_C_OnDeath Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "ReceiveTick");

	Params::BP_NPC_APE_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.ReceiveAnyDamage
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UDamageType*                DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_APE_C::ReceiveAnyDamage(float Damage_0, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "ReceiveAnyDamage");

	Params::BP_NPC_APE_C_ReceiveAnyDamage Parms{};

	Parms.Damage_0 = Damage_0;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_APE.BP_NPC_APE_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_NPC_APE_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_APE.BP_NPC_APE_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_APE_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_APE_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Mer2_lv2_Character_PC

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Lv2_characterBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Mer2_lv2_Character_PC.BP_Mer2_lv2_Character_PC_C
// 0x0040 (0x0E80 - 0x0E40)
class ABP_Mer2_lv2_Character_PC_C final : public ABP_Lv2_characterBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Mer2_lv2_Character_PC_C;         // 0x0E40(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraComponent*                       Camera;                                            // 0x0E48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm;                                         // 0x0E50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPCModeHud_C*                           PCModeWidget;                                      // 0x0E58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTPP;                                             // 0x0E60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E61[0x7];                                      // 0x0E61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimBP_TPP_C*                          TPPAnim;                                           // 0x0E68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            PCModeCheat;                                       // 0x0E70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Mer2_lv2_Character_PC(int32 EntryPoint);
	void InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void InpActEvt_Reload_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_Reload_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_B_K2Node_InputKeyEvent_4(const struct FKey& Key);
	void InpActEvt_P_K2Node_InputKeyEvent_5(const struct FKey& Key);
	void InpActEvt_LeftShift_K2Node_InputKeyEvent_6(const struct FKey& Key);
	void InpActEvt_LeftShift_K2Node_InputKeyEvent_7(const struct FKey& Key);
	void InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_8(const struct FKey& Key);
	void InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_9(const struct FKey& Key);
	void InpActEvt_Backslash_K2Node_InputKeyEvent_10(const struct FKey& Key);
	void SkipWaves();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void GetAimPos(struct FVector* AimPos);
	void UserConstructionScript();
	void GetCameraTargetPoint(struct FVector* Location);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Mer2_lv2_Character_PC_C">();
	}
	static class ABP_Mer2_lv2_Character_PC_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Mer2_lv2_Character_PC_C>();
	}
};
static_assert(alignof(ABP_Mer2_lv2_Character_PC_C) == 0x000010, "Wrong alignment on ABP_Mer2_lv2_Character_PC_C");
static_assert(sizeof(ABP_Mer2_lv2_Character_PC_C) == 0x000E80, "Wrong size on ABP_Mer2_lv2_Character_PC_C");
static_assert(offsetof(ABP_Mer2_lv2_Character_PC_C, UberGraphFrame_BP_Mer2_lv2_Character_PC_C) == 0x000E40, "Member 'ABP_Mer2_lv2_Character_PC_C::UberGraphFrame_BP_Mer2_lv2_Character_PC_C' has a wrong offset!");
static_assert(offsetof(ABP_Mer2_lv2_Character_PC_C, Camera) == 0x000E48, "Member 'ABP_Mer2_lv2_Character_PC_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_Mer2_lv2_Character_PC_C, SpringArm) == 0x000E50, "Member 'ABP_Mer2_lv2_Character_PC_C::SpringArm' has a wrong offset!");
static_assert(offsetof(ABP_Mer2_lv2_Character_PC_C, PCModeWidget) == 0x000E58, "Member 'ABP_Mer2_lv2_Character_PC_C::PCModeWidget' has a wrong offset!");
static_assert(offsetof(ABP_Mer2_lv2_Character_PC_C, IsTPP) == 0x000E60, "Member 'ABP_Mer2_lv2_Character_PC_C::IsTPP' has a wrong offset!");
static_assert(offsetof(ABP_Mer2_lv2_Character_PC_C, TPPAnim) == 0x000E68, "Member 'ABP_Mer2_lv2_Character_PC_C::TPPAnim' has a wrong offset!");
static_assert(offsetof(ABP_Mer2_lv2_Character_PC_C, PCModeCheat) == 0x000E70, "Member 'ABP_Mer2_lv2_Character_PC_C::PCModeCheat' has a wrong offset!");

}


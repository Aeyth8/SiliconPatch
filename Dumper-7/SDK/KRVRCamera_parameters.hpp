#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KRVRCamera

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function KRVRCamera.KRVRCamera_C.ExecuteUbergraph_KRVRCamera
// 0x0190 (0x0190 - 0x0000)
struct KRVRCamera_C_ExecuteUbergraph_KRVRCamera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_NewParam1;                      // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0040(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_NewParam;                       // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult1;     // 0x0100(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(KRVRCamera_C_ExecuteUbergraph_KRVRCamera) == 0x000010, "Wrong alignment on KRVRCamera_C_ExecuteUbergraph_KRVRCamera");
static_assert(sizeof(KRVRCamera_C_ExecuteUbergraph_KRVRCamera) == 0x000190, "Wrong size on KRVRCamera_C_ExecuteUbergraph_KRVRCamera");
static_assert(offsetof(KRVRCamera_C_ExecuteUbergraph_KRVRCamera, EntryPoint) == 0x000000, "Member 'KRVRCamera_C_ExecuteUbergraph_KRVRCamera::EntryPoint' has a wrong offset!");
static_assert(offsetof(KRVRCamera_C_ExecuteUbergraph_KRVRCamera, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'KRVRCamera_C_ExecuteUbergraph_KRVRCamera::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(KRVRCamera_C_ExecuteUbergraph_KRVRCamera, K2Node_CustomEvent_NewParam1) == 0x000010, "Member 'KRVRCamera_C_ExecuteUbergraph_KRVRCamera::K2Node_CustomEvent_NewParam1' has a wrong offset!");
static_assert(offsetof(KRVRCamera_C_ExecuteUbergraph_KRVRCamera, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000040, "Member 'KRVRCamera_C_ExecuteUbergraph_KRVRCamera::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(KRVRCamera_C_ExecuteUbergraph_KRVRCamera, K2Node_CustomEvent_NewParam) == 0x0000D0, "Member 'KRVRCamera_C_ExecuteUbergraph_KRVRCamera::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(KRVRCamera_C_ExecuteUbergraph_KRVRCamera, CallFunc_K2_SetWorldTransform_SweepHitResult1) == 0x000100, "Member 'KRVRCamera_C_ExecuteUbergraph_KRVRCamera::CallFunc_K2_SetWorldTransform_SweepHitResult1' has a wrong offset!");

// Function KRVRCamera.KRVRCamera_C.ReplicateToServer
// 0x0030 (0x0030 - 0x0000)
struct KRVRCamera_C_ReplicateToServer final
{
public:
	struct FTransform                             NewParam;                                          // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KRVRCamera_C_ReplicateToServer) == 0x000010, "Wrong alignment on KRVRCamera_C_ReplicateToServer");
static_assert(sizeof(KRVRCamera_C_ReplicateToServer) == 0x000030, "Wrong size on KRVRCamera_C_ReplicateToServer");
static_assert(offsetof(KRVRCamera_C_ReplicateToServer, NewParam) == 0x000000, "Member 'KRVRCamera_C_ReplicateToServer::NewParam' has a wrong offset!");

// Function KRVRCamera.KRVRCamera_C.ReplicateToClient
// 0x0030 (0x0030 - 0x0000)
struct KRVRCamera_C_ReplicateToClient final
{
public:
	struct FTransform                             NewParam;                                          // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KRVRCamera_C_ReplicateToClient) == 0x000010, "Wrong alignment on KRVRCamera_C_ReplicateToClient");
static_assert(sizeof(KRVRCamera_C_ReplicateToClient) == 0x000030, "Wrong size on KRVRCamera_C_ReplicateToClient");
static_assert(offsetof(KRVRCamera_C_ReplicateToClient, NewParam) == 0x000000, "Member 'KRVRCamera_C_ReplicateToClient::NewParam' has a wrong offset!");

// Function KRVRCamera.KRVRCamera_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct KRVRCamera_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KRVRCamera_C_ReceiveTick) == 0x000004, "Wrong alignment on KRVRCamera_C_ReceiveTick");
static_assert(sizeof(KRVRCamera_C_ReceiveTick) == 0x000004, "Wrong size on KRVRCamera_C_ReceiveTick");
static_assert(offsetof(KRVRCamera_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'KRVRCamera_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}


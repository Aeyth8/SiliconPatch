#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPDefaultHand

#include "Basic.hpp"

#include "SiliconRising_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Enum_ControllerType_structs.hpp"
#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPDefaultHand.BPDefaultHand_C.ExecuteUbergraph_BPDefaultHand
// 0x0890 (0x0890 - 0x0000)
struct BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_ControllerType                           Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EControllerHand                               Temp_byte_Variable1;                               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EControllerHand                               Temp_byte_Variable2;                               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0068(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EItemTypes                                    K2Node_CustomEvent_WeaponType2;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0xF];                                       // 0x00F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	Enum_ControllerType                           Temp_byte_Variable3;                               // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult1;  // 0x0138(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_Show1;                          // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Show;                           // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C3[0x1];                                      // 0x01C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_offset;                         // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterHandAnimInstance*             K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance; // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterHandAnimInstance*             K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance1; // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterHandAnimInstance*             K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance2; // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimBP_newHand_C*                      K2Node_DynamicCast_AsAnim_BP_New_Hand;             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimBP_newHand_C*                      K2Node_DynamicCast_AsAnim_BP_New_Hand1;            // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimBP_newHand_C*                      K2Node_DynamicCast_AsAnim_BP_New_Hand2;            // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_FrontEnd;                       // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_UpDown;                         // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_ControllerType                           CallFunc_GetControllerType_ControllerType;         // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23B[0x5];                                      // 0x023B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_LocationOffset1;                // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_RotatorOffset1;                 // 0x026C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_ControllerType                           K2Node_CustomEvent_SDKType2;                       // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsLocal;                        // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27A[0x2];                                      // 0x027A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_LocationOffset;                 // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_RotatorOffset;                  // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_ControllerType                           K2Node_CustomEvent_SDKType1;                       // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_295[0x3];                                      // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue1; // 0x0298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x02A8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0330(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_ControllerType                           K2Node_CustomEvent_SDKType;                        // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x03C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x03D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x03E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0404(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421[0x3];                                      // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_441[0x3];                                      // 0x0441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0444(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue1; // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsNormal;                       // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsPull;                         // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemTypes                                    K2Node_CustomEvent_WeaponType1;                    // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47A[0x2];                                      // 0x047A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x047C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x048C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue1;             // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select2_Default;                            // 0x04A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterHandAnimInstance*             K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance3; // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x04B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsCarry;                        // 0x04BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemTypes                                    K2Node_CustomEvent_ClipType;                       // 0x04BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enter;                          // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BD[0x3];                                      // 0x04BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue2;             // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Attach;                         // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPDefaultHand_C*                       K2Node_CustomEvent_OtherHand;                      // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemTypes                                    K2Node_CustomEvent_WeaponType;                     // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D9[0x7];                                      // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterHandAnimInstance*             K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance4; // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x04F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue1;      // 0x0520(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location1;                 // 0x0550(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation1;                 // 0x055C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale1;                    // 0x0568(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0574(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_581[0xF];                                      // 0x0581(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0590(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult2;  // 0x05C8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue1;          // 0x0650(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location2;                 // 0x0680(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation2;                 // 0x068C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale2;                    // 0x0698(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x06A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x06AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue1;    // 0x06B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x06BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x06C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x06CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult1;   // 0x06D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue1;        // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_761[0x7];                                      // 0x0761(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue3;             // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterHandAnimInstance*             K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance5; // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_779[0x7];                                      // 0x0779(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWpn_Clip_C*                            K2Node_CustomEvent_ParentClip;                     // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue4;             // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterHandAnimInstance*             K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance6; // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x0798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_799[0x7];                                      // 0x0799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue5;             // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue2; // 0x07A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UCharacterHandAnimInstance*             K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance7; // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess12;                     // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C1[0x7];                                      // 0x07C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x07C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D9[0x7];                                      // 0x07D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue6;             // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue2;        // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E9[0x7];                                      // 0x07E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterHandAnimInstance*             K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance8; // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess13;                     // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F9[0x7];                                      // 0x07F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0800(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_808[0x8];                                      // 0x0808(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue1;        // 0x0810(0x0030)(IsPlainOldData, NoDestructor)
	class FName                                   K2Node_Select3_Default;                            // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0848(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue3;        // 0x0858(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0859(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85A[0x2];                                      // 0x085A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x085C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x0860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EControllerHand                               K2Node_Select4_Default;                            // 0x0864(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_865[0x3];                                      // 0x0865(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue3;                  // 0x0868(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EControllerHand                               K2Node_Select5_Default;                            // 0x0874(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_875[0x3];                                      // 0x0875(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue5;         // 0x0878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue6;         // 0x087C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue1;                 // 0x0880(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand) == 0x000010, "Wrong alignment on BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand");
static_assert(sizeof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand) == 0x000890, "Wrong size on BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, EntryPoint) == 0x000000, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, Temp_byte_Variable) == 0x000004, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, Temp_bool_Variable) == 0x000005, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, Temp_bool_Variable1) == 0x000006, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, Temp_bool_Variable2) == 0x000007, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, Temp_bool_Variable3) == 0x000008, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, Temp_byte_Variable1) == 0x000009, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, Temp_byte_Variable2) == 0x00000A, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, Temp_bool_Has_Been_Initd_Variable) == 0x00000B, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_BreakTransform_Location) == 0x000040, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000068, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_WeaponType2) == 0x0000F0, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_WeaponType2' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, Temp_byte_Variable3) == 0x000130, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_K2_SetRelativeTransform_SweepHitResult1) == 0x000138, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_K2_SetRelativeTransform_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_Show1) == 0x0001C0, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_Show1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_Show) == 0x0001C1, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_Show' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x0001C2, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_offset) == 0x0001C4, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_offset' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_GetAnimInstance_ReturnValue) == 0x0001C8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance) == 0x0001D0, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_bSuccess) == 0x0001D8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance1) == 0x0001E0, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_bSuccess1) == 0x0001E8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance2) == 0x0001F0, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance2' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_bSuccess2) == 0x0001F8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_AsAnim_BP_New_Hand) == 0x000200, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_AsAnim_BP_New_Hand' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_bSuccess3) == 0x000208, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_AsAnim_BP_New_Hand1) == 0x000210, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_AsAnim_BP_New_Hand1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_bSuccess4) == 0x000218, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_AsAnim_BP_New_Hand2) == 0x000220, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_AsAnim_BP_New_Hand2' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_bSuccess5) == 0x000228, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_Event_DeltaSeconds) == 0x00022C, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_FrontEnd) == 0x000230, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_FrontEnd' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_UpDown) == 0x000234, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_UpDown' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, Temp_bool_Has_Been_Initd_Variable1) == 0x000238, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, Temp_bool_IsClosed_Variable) == 0x000239, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_GetControllerType_ControllerType) == 0x00023A, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_GetControllerType_ControllerType' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000240, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_Concat_StrStr_ReturnValue) == 0x000250, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_LocationOffset1) == 0x000260, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_LocationOffset1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_RotatorOffset1) == 0x00026C, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_RotatorOffset1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_SDKType2) == 0x000278, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_SDKType2' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_IsLocal) == 0x000279, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_IsLocal' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_LocationOffset) == 0x00027C, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_LocationOffset' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_RotatorOffset) == 0x000288, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_RotatorOffset' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_SDKType1) == 0x000294, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_SDKType1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue1) == 0x000298, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0002A8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000330, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_SDKType) == 0x0003B8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_SDKType' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_GetOwner_ReturnValue) == 0x0003C0, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_GetDisplayName_ReturnValue) == 0x0003C8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_Concat_StrStr_ReturnValue1) == 0x0003D8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_Concat_StrStr_ReturnValue2) == 0x0003E8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_BreakRotator_Roll) == 0x0003F8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_BreakRotator_Pitch) == 0x0003FC, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_BreakRotator_Yaw) == 0x000400, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_Select_Default) == 0x000404, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_GetOwner_ReturnValue1) == 0x000410, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_AsCharacter) == 0x000418, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_bSuccess6) == 0x000420, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_Select1_Default) == 0x000424, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_GetController_ReturnValue) == 0x000428, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000430, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_AsPlayer_Controller) == 0x000438, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_bSuccess7) == 0x000440, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_MakeRotator_ReturnValue) == 0x000444, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000450, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000458, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_CreateDynamicMaterialInstance_ReturnValue1) == 0x000460, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_CreateDynamicMaterialInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_IsNormal) == 0x000468, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_IsNormal' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_BreakVector_X) == 0x00046C, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_BreakVector_Y) == 0x000470, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_BreakVector_Z) == 0x000474, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_IsPull) == 0x000478, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_IsPull' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_WeaponType1) == 0x000479, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_WeaponType1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_MakeVector_ReturnValue) == 0x00047C, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000488, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_MakeVector_ReturnValue1) == 0x00048C, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_GetAnimInstance_ReturnValue1) == 0x000498, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_GetAnimInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_Select2_Default) == 0x0004A0, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance3) == 0x0004B0, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance3' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_bSuccess8) == 0x0004B8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x0004B9, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_IsCarry) == 0x0004BA, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_IsCarry' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_ClipType) == 0x0004BB, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_ClipType' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_Enter) == 0x0004BC, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_Enter' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_GetAnimInstance_ReturnValue2) == 0x0004C0, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_GetAnimInstance_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_Attach) == 0x0004C8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_Attach' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_OtherHand) == 0x0004D0, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_OtherHand' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_WeaponType) == 0x0004D8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_WeaponType' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance4) == 0x0004E0, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance4' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_bSuccess9) == 0x0004E8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_GetSocketTransform_ReturnValue) == 0x0004F0, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_K2_GetComponentToWorld_ReturnValue1) == 0x000520, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_K2_GetComponentToWorld_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_BreakTransform_Location1) == 0x000550, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_BreakTransform_Location1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_BreakTransform_Rotation1) == 0x00055C, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_BreakTransform_Rotation1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_BreakTransform_Scale1) == 0x000568, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_BreakTransform_Scale1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_InverseTransformLocation_ReturnValue) == 0x000574, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, Temp_bool_IsClosed_Variable1) == 0x000580, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_GetRelativeTransform_ReturnValue) == 0x000590, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0005C0, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_K2_SetRelativeTransform_SweepHitResult2) == 0x0005C8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_K2_SetRelativeTransform_SweepHitResult2' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_GetSocketTransform_ReturnValue1) == 0x000650, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_GetSocketTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_BreakTransform_Location2) == 0x000680, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_BreakTransform_Location2' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_BreakTransform_Rotation2) == 0x00068C, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_BreakTransform_Rotation2' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_BreakTransform_Scale2) == 0x000698, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_BreakTransform_Scale2' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_BreakVector_X1) == 0x0006A4, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_BreakVector_Y1) == 0x0006A8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_BreakVector_Z1) == 0x0006AC, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_InverseTransformLocation_ReturnValue1) == 0x0006B0, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_InverseTransformLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x0006BC, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0006C0, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_MakeVector_ReturnValue2) == 0x0006CC, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_K2_SetRelativeLocation_SweepHitResult1) == 0x0006D8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_K2_SetRelativeLocation_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_K2_AttachToComponent_ReturnValue1) == 0x000760, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_K2_AttachToComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_GetAnimInstance_ReturnValue3) == 0x000768, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_GetAnimInstance_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance5) == 0x000770, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance5' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_bSuccess10) == 0x000778, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_CustomEvent_ParentClip) == 0x000780, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_CustomEvent_ParentClip' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_GetAnimInstance_ReturnValue4) == 0x000788, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_GetAnimInstance_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance6) == 0x000790, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance6' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_bSuccess11) == 0x000798, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_GetAnimInstance_ReturnValue5) == 0x0007A0, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_GetAnimInstance_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue2) == 0x0007A8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance7) == 0x0007B8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance7' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_bSuccess12) == 0x0007C0, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_bSuccess12' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_Concat_StrStr_ReturnValue3) == 0x0007C8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0007D8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_GetAnimInstance_ReturnValue6) == 0x0007E0, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_GetAnimInstance_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_K2_AttachToComponent_ReturnValue2) == 0x0007E8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_K2_AttachToComponent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance8) == 0x0007F0, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance8' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_DynamicCast_bSuccess13) == 0x0007F8, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_DynamicCast_bSuccess13' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000800, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_GetRelativeTransform_ReturnValue1) == 0x000810, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_GetRelativeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_Select3_Default) == 0x000840, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_Conv_NameToString_ReturnValue) == 0x000848, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_K2_AttachToComponent_ReturnValue3) == 0x000858, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_K2_AttachToComponent_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000859, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x00085C, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x000860, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_Select4_Default) == 0x000864, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_MakeVector_ReturnValue3) == 0x000868, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_MakeVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, K2Node_Select5_Default) == 0x000874, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::K2Node_Select5_Default' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_Multiply_FloatFloat_ReturnValue5) == 0x000878, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_Multiply_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_Multiply_FloatFloat_ReturnValue6) == 0x00087C, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_Multiply_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand, CallFunc_MakeRotator_ReturnValue1) == 0x000880, "Member 'BPDefaultHand_C_ExecuteUbergraph_BPDefaultHand::CallFunc_MakeRotator_ReturnValue1' has a wrong offset!");

// Function BPDefaultHand.BPDefaultHand_C.PushHand
// 0x0008 (0x0008 - 0x0000)
struct BPDefaultHand_C_PushHand final
{
public:
	class AWpn_Clip_C*                            ParentClip;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPDefaultHand_C_PushHand) == 0x000008, "Wrong alignment on BPDefaultHand_C_PushHand");
static_assert(sizeof(BPDefaultHand_C_PushHand) == 0x000008, "Wrong size on BPDefaultHand_C_PushHand");
static_assert(offsetof(BPDefaultHand_C_PushHand, ParentClip) == 0x000000, "Member 'BPDefaultHand_C_PushHand::ParentClip' has a wrong offset!");

// Function BPDefaultHand.BPDefaultHand_C.AttachBothHand
// 0x0018 (0x0018 - 0x0000)
struct BPDefaultHand_C_AttachBothHand final
{
public:
	bool                                          Attach;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPDefaultHand_C*                       OtherHand_0;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemTypes                                    WeaponType_0;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPDefaultHand_C_AttachBothHand) == 0x000008, "Wrong alignment on BPDefaultHand_C_AttachBothHand");
static_assert(sizeof(BPDefaultHand_C_AttachBothHand) == 0x000018, "Wrong size on BPDefaultHand_C_AttachBothHand");
static_assert(offsetof(BPDefaultHand_C_AttachBothHand, Attach) == 0x000000, "Member 'BPDefaultHand_C_AttachBothHand::Attach' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_AttachBothHand, OtherHand_0) == 0x000008, "Member 'BPDefaultHand_C_AttachBothHand::OtherHand_0' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_AttachBothHand, WeaponType_0) == 0x000010, "Member 'BPDefaultHand_C_AttachBothHand::WeaponType_0' has a wrong offset!");

// Function BPDefaultHand.BPDefaultHand_C.EnterBothHand
// 0x0001 (0x0001 - 0x0000)
struct BPDefaultHand_C_EnterBothHand final
{
public:
	bool                                          Enter;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPDefaultHand_C_EnterBothHand) == 0x000001, "Wrong alignment on BPDefaultHand_C_EnterBothHand");
static_assert(sizeof(BPDefaultHand_C_EnterBothHand) == 0x000001, "Wrong size on BPDefaultHand_C_EnterBothHand");
static_assert(offsetof(BPDefaultHand_C_EnterBothHand, Enter) == 0x000000, "Member 'BPDefaultHand_C_EnterBothHand::Enter' has a wrong offset!");

// Function BPDefaultHand.BPDefaultHand_C.SetCarryClip
// 0x0002 (0x0002 - 0x0000)
struct BPDefaultHand_C_SetCarryClip final
{
public:
	bool                                          IsCarry;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemTypes                                    ClipType;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPDefaultHand_C_SetCarryClip) == 0x000001, "Wrong alignment on BPDefaultHand_C_SetCarryClip");
static_assert(sizeof(BPDefaultHand_C_SetCarryClip) == 0x000002, "Wrong size on BPDefaultHand_C_SetCarryClip");
static_assert(offsetof(BPDefaultHand_C_SetCarryClip, IsCarry) == 0x000000, "Member 'BPDefaultHand_C_SetCarryClip::IsCarry' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_SetCarryClip, ClipType) == 0x000001, "Member 'BPDefaultHand_C_SetCarryClip::ClipType' has a wrong offset!");

// Function BPDefaultHand.BPDefaultHand_C.SetPullBolt
// 0x0002 (0x0002 - 0x0000)
struct BPDefaultHand_C_SetPullBolt final
{
public:
	bool                                          IsPull;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemTypes                                    WeaponType_0;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPDefaultHand_C_SetPullBolt) == 0x000001, "Wrong alignment on BPDefaultHand_C_SetPullBolt");
static_assert(sizeof(BPDefaultHand_C_SetPullBolt) == 0x000002, "Wrong size on BPDefaultHand_C_SetPullBolt");
static_assert(offsetof(BPDefaultHand_C_SetPullBolt, IsPull) == 0x000000, "Member 'BPDefaultHand_C_SetPullBolt::IsPull' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_SetPullBolt, WeaponType_0) == 0x000001, "Member 'BPDefaultHand_C_SetPullBolt::WeaponType_0' has a wrong offset!");

// Function BPDefaultHand.BPDefaultHand_C.ReverseHand
// 0x0001 (0x0001 - 0x0000)
struct BPDefaultHand_C_ReverseHand final
{
public:
	bool                                          IsNormal;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPDefaultHand_C_ReverseHand) == 0x000001, "Wrong alignment on BPDefaultHand_C_ReverseHand");
static_assert(sizeof(BPDefaultHand_C_ReverseHand) == 0x000001, "Wrong size on BPDefaultHand_C_ReverseHand");
static_assert(offsetof(BPDefaultHand_C_ReverseHand, IsNormal) == 0x000000, "Member 'BPDefaultHand_C_ReverseHand::IsNormal' has a wrong offset!");

// Function BPDefaultHand.BPDefaultHand_C.SetControllerType
// 0x0001 (0x0001 - 0x0000)
struct BPDefaultHand_C_SetControllerType final
{
public:
	Enum_ControllerType                           SDKType_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPDefaultHand_C_SetControllerType) == 0x000001, "Wrong alignment on BPDefaultHand_C_SetControllerType");
static_assert(sizeof(BPDefaultHand_C_SetControllerType) == 0x000001, "Wrong size on BPDefaultHand_C_SetControllerType");
static_assert(offsetof(BPDefaultHand_C_SetControllerType, SDKType_0) == 0x000000, "Member 'BPDefaultHand_C_SetControllerType::SDKType_0' has a wrong offset!");

// Function BPDefaultHand.BPDefaultHand_C.ControllerInitMulticast
// 0x001C (0x001C - 0x0000)
struct BPDefaultHand_C_ControllerInitMulticast final
{
public:
	struct FVector                                LocationOffset;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RotatorOffset;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_ControllerType                           SDKType_0;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPDefaultHand_C_ControllerInitMulticast) == 0x000004, "Wrong alignment on BPDefaultHand_C_ControllerInitMulticast");
static_assert(sizeof(BPDefaultHand_C_ControllerInitMulticast) == 0x00001C, "Wrong size on BPDefaultHand_C_ControllerInitMulticast");
static_assert(offsetof(BPDefaultHand_C_ControllerInitMulticast, LocationOffset) == 0x000000, "Member 'BPDefaultHand_C_ControllerInitMulticast::LocationOffset' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ControllerInitMulticast, RotatorOffset) == 0x00000C, "Member 'BPDefaultHand_C_ControllerInitMulticast::RotatorOffset' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ControllerInitMulticast, SDKType_0) == 0x000018, "Member 'BPDefaultHand_C_ControllerInitMulticast::SDKType_0' has a wrong offset!");

// Function BPDefaultHand.BPDefaultHand_C.CheckController
// 0x0001 (0x0001 - 0x0000)
struct BPDefaultHand_C_CheckController final
{
public:
	bool                                          IsLocal;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPDefaultHand_C_CheckController) == 0x000001, "Wrong alignment on BPDefaultHand_C_CheckController");
static_assert(sizeof(BPDefaultHand_C_CheckController) == 0x000001, "Wrong size on BPDefaultHand_C_CheckController");
static_assert(offsetof(BPDefaultHand_C_CheckController, IsLocal) == 0x000000, "Member 'BPDefaultHand_C_CheckController::IsLocal' has a wrong offset!");

// Function BPDefaultHand.BPDefaultHand_C.ControllerInit
// 0x001C (0x001C - 0x0000)
struct BPDefaultHand_C_ControllerInit final
{
public:
	struct FVector                                LocationOffset;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RotatorOffset;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_ControllerType                           SDKType_0;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPDefaultHand_C_ControllerInit) == 0x000004, "Wrong alignment on BPDefaultHand_C_ControllerInit");
static_assert(sizeof(BPDefaultHand_C_ControllerInit) == 0x00001C, "Wrong size on BPDefaultHand_C_ControllerInit");
static_assert(offsetof(BPDefaultHand_C_ControllerInit, LocationOffset) == 0x000000, "Member 'BPDefaultHand_C_ControllerInit::LocationOffset' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ControllerInit, RotatorOffset) == 0x00000C, "Member 'BPDefaultHand_C_ControllerInit::RotatorOffset' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_ControllerInit, SDKType_0) == 0x000018, "Member 'BPDefaultHand_C_ControllerInit::SDKType_0' has a wrong offset!");

// Function BPDefaultHand.BPDefaultHand_C.AdjustHandLocation
// 0x0008 (0x0008 - 0x0000)
struct BPDefaultHand_C_AdjustHandLocation final
{
public:
	float                                         FrontEnd;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UpDown;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPDefaultHand_C_AdjustHandLocation) == 0x000004, "Wrong alignment on BPDefaultHand_C_AdjustHandLocation");
static_assert(sizeof(BPDefaultHand_C_AdjustHandLocation) == 0x000008, "Wrong size on BPDefaultHand_C_AdjustHandLocation");
static_assert(offsetof(BPDefaultHand_C_AdjustHandLocation, FrontEnd) == 0x000000, "Member 'BPDefaultHand_C_AdjustHandLocation::FrontEnd' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_AdjustHandLocation, UpDown) == 0x000004, "Member 'BPDefaultHand_C_AdjustHandLocation::UpDown' has a wrong offset!");

// Function BPDefaultHand.BPDefaultHand_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BPDefaultHand_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPDefaultHand_C_ReceiveTick) == 0x000004, "Wrong alignment on BPDefaultHand_C_ReceiveTick");
static_assert(sizeof(BPDefaultHand_C_ReceiveTick) == 0x000004, "Wrong size on BPDefaultHand_C_ReceiveTick");
static_assert(offsetof(BPDefaultHand_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BPDefaultHand_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BPDefaultHand.BPDefaultHand_C.AdjustHandRotation
// 0x0004 (0x0004 - 0x0000)
struct BPDefaultHand_C_AdjustHandRotation final
{
public:
	float                                         Offset;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPDefaultHand_C_AdjustHandRotation) == 0x000004, "Wrong alignment on BPDefaultHand_C_AdjustHandRotation");
static_assert(sizeof(BPDefaultHand_C_AdjustHandRotation) == 0x000004, "Wrong size on BPDefaultHand_C_AdjustHandRotation");
static_assert(offsetof(BPDefaultHand_C_AdjustHandRotation, Offset) == 0x000000, "Member 'BPDefaultHand_C_AdjustHandRotation::Offset' has a wrong offset!");

// Function BPDefaultHand.BPDefaultHand_C.ShowOnlyTeleport
// 0x0001 (0x0001 - 0x0000)
struct BPDefaultHand_C_ShowOnlyTeleport final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPDefaultHand_C_ShowOnlyTeleport) == 0x000001, "Wrong alignment on BPDefaultHand_C_ShowOnlyTeleport");
static_assert(sizeof(BPDefaultHand_C_ShowOnlyTeleport) == 0x000001, "Wrong size on BPDefaultHand_C_ShowOnlyTeleport");
static_assert(offsetof(BPDefaultHand_C_ShowOnlyTeleport, Show) == 0x000000, "Member 'BPDefaultHand_C_ShowOnlyTeleport::Show' has a wrong offset!");

// Function BPDefaultHand.BPDefaultHand_C.ShowAllTips
// 0x0001 (0x0001 - 0x0000)
struct BPDefaultHand_C_ShowAllTips final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPDefaultHand_C_ShowAllTips) == 0x000001, "Wrong alignment on BPDefaultHand_C_ShowAllTips");
static_assert(sizeof(BPDefaultHand_C_ShowAllTips) == 0x000001, "Wrong size on BPDefaultHand_C_ShowAllTips");
static_assert(offsetof(BPDefaultHand_C_ShowAllTips, Show) == 0x000000, "Member 'BPDefaultHand_C_ShowAllTips::Show' has a wrong offset!");

// Function BPDefaultHand.BPDefaultHand_C.UpdateHandType
// 0x0001 (0x0001 - 0x0000)
struct BPDefaultHand_C_UpdateHandType final
{
public:
	EItemTypes                                    WeaponType_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPDefaultHand_C_UpdateHandType) == 0x000001, "Wrong alignment on BPDefaultHand_C_UpdateHandType");
static_assert(sizeof(BPDefaultHand_C_UpdateHandType) == 0x000001, "Wrong size on BPDefaultHand_C_UpdateHandType");
static_assert(offsetof(BPDefaultHand_C_UpdateHandType, WeaponType_0) == 0x000000, "Member 'BPDefaultHand_C_UpdateHandType::WeaponType_0' has a wrong offset!");

// Function BPDefaultHand.BPDefaultHand_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct BPDefaultHand_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPDefaultHand_C_UserConstructionScript) == 0x000001, "Wrong alignment on BPDefaultHand_C_UserConstructionScript");
static_assert(sizeof(BPDefaultHand_C_UserConstructionScript) == 0x000001, "Wrong size on BPDefaultHand_C_UserConstructionScript");
static_assert(offsetof(BPDefaultHand_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000000, "Member 'BPDefaultHand_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BPDefaultHand.BPDefaultHand_C.RegisterWithOwerPawn
// 0x0020 (0x0020 - 0x0000)
struct BPDefaultHand_C_RegisterWithOwerPawn final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    K2Node_DynamicCast_AsBP_Character_Base;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPDefaultHand_C_RegisterWithOwerPawn) == 0x000008, "Wrong alignment on BPDefaultHand_C_RegisterWithOwerPawn");
static_assert(sizeof(BPDefaultHand_C_RegisterWithOwerPawn) == 0x000020, "Wrong size on BPDefaultHand_C_RegisterWithOwerPawn");
static_assert(offsetof(BPDefaultHand_C_RegisterWithOwerPawn, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BPDefaultHand_C_RegisterWithOwerPawn::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_RegisterWithOwerPawn, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'BPDefaultHand_C_RegisterWithOwerPawn::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_RegisterWithOwerPawn, K2Node_DynamicCast_AsBP_Character_Base) == 0x000010, "Member 'BPDefaultHand_C_RegisterWithOwerPawn::K2Node_DynamicCast_AsBP_Character_Base' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_RegisterWithOwerPawn, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPDefaultHand_C_RegisterWithOwerPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPDefaultHand.BPDefaultHand_C.UpdateUI
// 0x0014 (0x0014 - 0x0000)
struct BPDefaultHand_C_UpdateUI final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPDefaultHand_C_UpdateUI) == 0x000004, "Wrong alignment on BPDefaultHand_C_UpdateUI");
static_assert(sizeof(BPDefaultHand_C_UpdateUI) == 0x000014, "Wrong size on BPDefaultHand_C_UpdateUI");
static_assert(offsetof(BPDefaultHand_C_UpdateUI, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BPDefaultHand_C_UpdateUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_UpdateUI, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'BPDefaultHand_C_UpdateUI::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_UpdateUI, CallFunc_IsValid_ReturnValue1) == 0x000008, "Member 'BPDefaultHand_C_UpdateUI::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_UpdateUI, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x00000C, "Member 'BPDefaultHand_C_UpdateUI::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPDefaultHand_C_UpdateUI, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'BPDefaultHand_C_UpdateUI::CallFunc_FClamp_ReturnValue' has a wrong offset!");

}


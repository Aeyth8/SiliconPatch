#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IndicationTip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_IndicationTip.BP_IndicationTip_C
// 0x0050 (0x0378 - 0x0328)
class ABP_IndicationTip_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_OffScreenFill;                                  // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_OffScreenChevron;                               // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        OffScreen_Reminder_ScaleOffset;                    // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        OffScreen_Reminder_RotOffset;                      // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   OffscreenUI;                                       // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        OffScreen_Reminder_UI;                             // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          NewVar_0;                                          // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x3];                                      // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TargetMarker;                                      // 0x036C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_IndicationTip(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_IndicationTip_C">();
	}
	static class ABP_IndicationTip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_IndicationTip_C>();
	}
};
static_assert(alignof(ABP_IndicationTip_C) == 0x000008, "Wrong alignment on ABP_IndicationTip_C");
static_assert(sizeof(ABP_IndicationTip_C) == 0x000378, "Wrong size on ABP_IndicationTip_C");
static_assert(offsetof(ABP_IndicationTip_C, UberGraphFrame) == 0x000328, "Member 'ABP_IndicationTip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_IndicationTip_C, SM_OffScreenFill) == 0x000330, "Member 'ABP_IndicationTip_C::SM_OffScreenFill' has a wrong offset!");
static_assert(offsetof(ABP_IndicationTip_C, SM_OffScreenChevron) == 0x000338, "Member 'ABP_IndicationTip_C::SM_OffScreenChevron' has a wrong offset!");
static_assert(offsetof(ABP_IndicationTip_C, OffScreen_Reminder_ScaleOffset) == 0x000340, "Member 'ABP_IndicationTip_C::OffScreen_Reminder_ScaleOffset' has a wrong offset!");
static_assert(offsetof(ABP_IndicationTip_C, OffScreen_Reminder_RotOffset) == 0x000348, "Member 'ABP_IndicationTip_C::OffScreen_Reminder_RotOffset' has a wrong offset!");
static_assert(offsetof(ABP_IndicationTip_C, OffscreenUI) == 0x000350, "Member 'ABP_IndicationTip_C::OffscreenUI' has a wrong offset!");
static_assert(offsetof(ABP_IndicationTip_C, OffScreen_Reminder_UI) == 0x000358, "Member 'ABP_IndicationTip_C::OffScreen_Reminder_UI' has a wrong offset!");
static_assert(offsetof(ABP_IndicationTip_C, DefaultSceneRoot) == 0x000360, "Member 'ABP_IndicationTip_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_IndicationTip_C, NewVar_0) == 0x000368, "Member 'ABP_IndicationTip_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ABP_IndicationTip_C, TargetMarker) == 0x00036C, "Member 'ABP_IndicationTip_C::TargetMarker' has a wrong offset!");

}


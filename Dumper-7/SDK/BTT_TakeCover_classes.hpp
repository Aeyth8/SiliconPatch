#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_TakeCover

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_TakeCover.BTT_TakeCover_C
// 0x0058 (0x00F8 - 0x00A0)
class UBTT_TakeCover_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class APawn*                                  PawnRef;                                           // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndPoint;                                          // 0x00B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                startPoint;                                        // 0x00C4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBlackboardKeySelector                 IsTokenCover;                                      // 0x00D0(0x0028)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_BTT_TakeCover(int32 EntryPoint);
	void ReceiveExecute(class AActor* OwnerActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_TakeCover_C">();
	}
	static class UBTT_TakeCover_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_TakeCover_C>();
	}
};
static_assert(alignof(UBTT_TakeCover_C) == 0x000008, "Wrong alignment on UBTT_TakeCover_C");
static_assert(sizeof(UBTT_TakeCover_C) == 0x0000F8, "Wrong size on UBTT_TakeCover_C");
static_assert(offsetof(UBTT_TakeCover_C, UberGraphFrame) == 0x0000A0, "Member 'UBTT_TakeCover_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_TakeCover_C, PawnRef) == 0x0000A8, "Member 'UBTT_TakeCover_C::PawnRef' has a wrong offset!");
static_assert(offsetof(UBTT_TakeCover_C, Actor) == 0x0000B0, "Member 'UBTT_TakeCover_C::Actor' has a wrong offset!");
static_assert(offsetof(UBTT_TakeCover_C, EndPoint) == 0x0000B8, "Member 'UBTT_TakeCover_C::EndPoint' has a wrong offset!");
static_assert(offsetof(UBTT_TakeCover_C, startPoint) == 0x0000C4, "Member 'UBTT_TakeCover_C::startPoint' has a wrong offset!");
static_assert(offsetof(UBTT_TakeCover_C, IsTokenCover) == 0x0000D0, "Member 'UBTT_TakeCover_C::IsTokenCover' has a wrong offset!");

}


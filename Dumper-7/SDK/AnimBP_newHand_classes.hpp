#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_newHand

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "SiliconRising_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_newHand.AnimBP_newHand_C
// 0x0D70 (0x10C8 - 0x0358)
class UAnimBP_newHand_C final : public UAnimInstance
{
public:
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_1621F6D84BCE1530A3D57A89A59CB320; // 0x0368(0x0040)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_C31790DF4A6CE16C8E1F259DF92ADDEA; // 0x03A8(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1A62D3594E4FF1A92601579D8D3AADDE; // 0x03F0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_02927E244C1BBDCE09A536BA2D00F53E; // 0x0438(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7D3419CA449ABA0B5C1A228631832689; // 0x04D8(0x0040)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_EDD8F94B4632AC3AA4444D8A8605369F; // 0x0518(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_423530A441D1743B5251CDA0528642F4; // 0x05B8(0x0040)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_976377E440FF5E0ED7FECE99E80A57DA; // 0x05F8(0x00E0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_0671FD804F7131049057C2925462ED10; // 0x06D8(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_88ACE07445C8EABFE65A6BB9CDBDEA56; // 0x0720(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_FED704844DC0FCB3375B3E8799CB446B; // 0x0768(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_F3184B1549AC36187DE69CBBFE4122EF; // 0x0808(0x0040)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_36FDA90C412D28621319A1828F28EAAB; // 0x0848(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_72E06AF34AB31C46C12B3F96C56659AC; // 0x08E8(0x0040)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_860999AE4A0878D6B19B1486325BD2BE; // 0x0928(0x00E0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2A2D136E4C7F337F2A38C9975B467181; // 0x0A08(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6F24E3B54834CB528D13C3B402749260; // 0x0A50(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2C6DBE3242500BAA44ADD3978E4CA1F0; // 0x0A98(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_C834691D41E8E746B50073B4D69DFE08; // 0x0B38(0x0040)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_44073A54479C68456EF1E188ADE33E1D; // 0x0B78(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_D4BB7E664F8CB88F50F4DB9CEE26780C; // 0x0C18(0x0040)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_E28A0D124187D7E8C96D5AA863180BB2; // 0x0C58(0x00E0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_839850CF423A862643FFE98563E31BAB; // 0x0D38(0x00D8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_972920224EF5738FD48937B35DFDB77F; // 0x0E10(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_78FEF185492FD7C24E3E0BAA1CC40DAC; // 0x0E58(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_EB5C13214DFC1E25892F2C9C881B12FE; // 0x0EA0(0x00A0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_8493A3C6422AEDB1442CFAA70EA390BD; // 0x0F40(0x00E0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_E8DDC8F049D8D697FFA3D780B05C1BFB; // 0x1020(0x00A0)()
	EItemTypes                                    WeaponType;                                        // 0x10C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHold;                                            // 0x10C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EItemTypes                                    NewVar_0;                                          // 0x10C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AnimBP_newHand(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_newHand_C">();
	}
	static class UAnimBP_newHand_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_newHand_C>();
	}
};
static_assert(alignof(UAnimBP_newHand_C) == 0x000008, "Wrong alignment on UAnimBP_newHand_C");
static_assert(sizeof(UAnimBP_newHand_C) == 0x0010C8, "Wrong size on UAnimBP_newHand_C");
static_assert(offsetof(UAnimBP_newHand_C, UberGraphFrame) == 0x000360, "Member 'UAnimBP_newHand_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_Root_1621F6D84BCE1530A3D57A89A59CB320) == 0x000368, "Member 'UAnimBP_newHand_C::AnimGraphNode_Root_1621F6D84BCE1530A3D57A89A59CB320' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_TransitionResult_C31790DF4A6CE16C8E1F259DF92ADDEA) == 0x0003A8, "Member 'UAnimBP_newHand_C::AnimGraphNode_TransitionResult_C31790DF4A6CE16C8E1F259DF92ADDEA' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_TransitionResult_1A62D3594E4FF1A92601579D8D3AADDE) == 0x0003F0, "Member 'UAnimBP_newHand_C::AnimGraphNode_TransitionResult_1A62D3594E4FF1A92601579D8D3AADDE' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_SequencePlayer_02927E244C1BBDCE09A536BA2D00F53E) == 0x000438, "Member 'UAnimBP_newHand_C::AnimGraphNode_SequencePlayer_02927E244C1BBDCE09A536BA2D00F53E' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_StateResult_7D3419CA449ABA0B5C1A228631832689) == 0x0004D8, "Member 'UAnimBP_newHand_C::AnimGraphNode_StateResult_7D3419CA449ABA0B5C1A228631832689' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_SequencePlayer_EDD8F94B4632AC3AA4444D8A8605369F) == 0x000518, "Member 'UAnimBP_newHand_C::AnimGraphNode_SequencePlayer_EDD8F94B4632AC3AA4444D8A8605369F' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_StateResult_423530A441D1743B5251CDA0528642F4) == 0x0005B8, "Member 'UAnimBP_newHand_C::AnimGraphNode_StateResult_423530A441D1743B5251CDA0528642F4' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_StateMachine_976377E440FF5E0ED7FECE99E80A57DA) == 0x0005F8, "Member 'UAnimBP_newHand_C::AnimGraphNode_StateMachine_976377E440FF5E0ED7FECE99E80A57DA' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_TransitionResult_0671FD804F7131049057C2925462ED10) == 0x0006D8, "Member 'UAnimBP_newHand_C::AnimGraphNode_TransitionResult_0671FD804F7131049057C2925462ED10' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_TransitionResult_88ACE07445C8EABFE65A6BB9CDBDEA56) == 0x000720, "Member 'UAnimBP_newHand_C::AnimGraphNode_TransitionResult_88ACE07445C8EABFE65A6BB9CDBDEA56' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_SequencePlayer_FED704844DC0FCB3375B3E8799CB446B) == 0x000768, "Member 'UAnimBP_newHand_C::AnimGraphNode_SequencePlayer_FED704844DC0FCB3375B3E8799CB446B' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_StateResult_F3184B1549AC36187DE69CBBFE4122EF) == 0x000808, "Member 'UAnimBP_newHand_C::AnimGraphNode_StateResult_F3184B1549AC36187DE69CBBFE4122EF' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_SequencePlayer_36FDA90C412D28621319A1828F28EAAB) == 0x000848, "Member 'UAnimBP_newHand_C::AnimGraphNode_SequencePlayer_36FDA90C412D28621319A1828F28EAAB' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_StateResult_72E06AF34AB31C46C12B3F96C56659AC) == 0x0008E8, "Member 'UAnimBP_newHand_C::AnimGraphNode_StateResult_72E06AF34AB31C46C12B3F96C56659AC' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_StateMachine_860999AE4A0878D6B19B1486325BD2BE) == 0x000928, "Member 'UAnimBP_newHand_C::AnimGraphNode_StateMachine_860999AE4A0878D6B19B1486325BD2BE' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_TransitionResult_2A2D136E4C7F337F2A38C9975B467181) == 0x000A08, "Member 'UAnimBP_newHand_C::AnimGraphNode_TransitionResult_2A2D136E4C7F337F2A38C9975B467181' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_TransitionResult_6F24E3B54834CB528D13C3B402749260) == 0x000A50, "Member 'UAnimBP_newHand_C::AnimGraphNode_TransitionResult_6F24E3B54834CB528D13C3B402749260' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_SequencePlayer_2C6DBE3242500BAA44ADD3978E4CA1F0) == 0x000A98, "Member 'UAnimBP_newHand_C::AnimGraphNode_SequencePlayer_2C6DBE3242500BAA44ADD3978E4CA1F0' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_StateResult_C834691D41E8E746B50073B4D69DFE08) == 0x000B38, "Member 'UAnimBP_newHand_C::AnimGraphNode_StateResult_C834691D41E8E746B50073B4D69DFE08' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_SequencePlayer_44073A54479C68456EF1E188ADE33E1D) == 0x000B78, "Member 'UAnimBP_newHand_C::AnimGraphNode_SequencePlayer_44073A54479C68456EF1E188ADE33E1D' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_StateResult_D4BB7E664F8CB88F50F4DB9CEE26780C) == 0x000C18, "Member 'UAnimBP_newHand_C::AnimGraphNode_StateResult_D4BB7E664F8CB88F50F4DB9CEE26780C' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_StateMachine_E28A0D124187D7E8C96D5AA863180BB2) == 0x000C58, "Member 'UAnimBP_newHand_C::AnimGraphNode_StateMachine_E28A0D124187D7E8C96D5AA863180BB2' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_SaveCachedPose_839850CF423A862643FFE98563E31BAB) == 0x000D38, "Member 'UAnimBP_newHand_C::AnimGraphNode_SaveCachedPose_839850CF423A862643FFE98563E31BAB' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_UseCachedPose_972920224EF5738FD48937B35DFDB77F) == 0x000E10, "Member 'UAnimBP_newHand_C::AnimGraphNode_UseCachedPose_972920224EF5738FD48937B35DFDB77F' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_UseCachedPose_78FEF185492FD7C24E3E0BAA1CC40DAC) == 0x000E58, "Member 'UAnimBP_newHand_C::AnimGraphNode_UseCachedPose_78FEF185492FD7C24E3E0BAA1CC40DAC' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_SequencePlayer_EB5C13214DFC1E25892F2C9C881B12FE) == 0x000EA0, "Member 'UAnimBP_newHand_C::AnimGraphNode_SequencePlayer_EB5C13214DFC1E25892F2C9C881B12FE' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_BlendListByEnum_8493A3C6422AEDB1442CFAA70EA390BD) == 0x000F40, "Member 'UAnimBP_newHand_C::AnimGraphNode_BlendListByEnum_8493A3C6422AEDB1442CFAA70EA390BD' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, AnimGraphNode_SequencePlayer_E8DDC8F049D8D697FFA3D780B05C1BFB) == 0x001020, "Member 'UAnimBP_newHand_C::AnimGraphNode_SequencePlayer_E8DDC8F049D8D697FFA3D780B05C1BFB' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, WeaponType) == 0x0010C0, "Member 'UAnimBP_newHand_C::WeaponType' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, IsHold) == 0x0010C1, "Member 'UAnimBP_newHand_C::IsHold' has a wrong offset!");
static_assert(offsetof(UAnimBP_newHand_C, NewVar_0) == 0x0010C2, "Member 'UAnimBP_newHand_C::NewVar_0' has a wrong offset!");

}


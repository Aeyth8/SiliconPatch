#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PVP_WinnerShow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PVP_WinnerShow.BP_PVP_WinnerShow_C
// 0x0030 (0x0358 - 0x0328)
class ABP_PVP_WinnerShow_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      Capsule;                                           // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    WinnerShowGiaJason;                                // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    WinnerShowCarlGrant;                               // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnFinished;                                        // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_BP_PVP_WinnerShow(int32 EntryPoint);
	void CustomEvent();
	void CustomEvent_0();
	void ShowWinner(bool IsTeamA);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PVP_WinnerShow_C">();
	}
	static class ABP_PVP_WinnerShow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PVP_WinnerShow_C>();
	}
};
static_assert(alignof(ABP_PVP_WinnerShow_C) == 0x000008, "Wrong alignment on ABP_PVP_WinnerShow_C");
static_assert(sizeof(ABP_PVP_WinnerShow_C) == 0x000358, "Wrong size on ABP_PVP_WinnerShow_C");
static_assert(offsetof(ABP_PVP_WinnerShow_C, UberGraphFrame) == 0x000328, "Member 'ABP_PVP_WinnerShow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PVP_WinnerShow_C, Capsule) == 0x000330, "Member 'ABP_PVP_WinnerShow_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_PVP_WinnerShow_C, WinnerShowGiaJason) == 0x000338, "Member 'ABP_PVP_WinnerShow_C::WinnerShowGiaJason' has a wrong offset!");
static_assert(offsetof(ABP_PVP_WinnerShow_C, WinnerShowCarlGrant) == 0x000340, "Member 'ABP_PVP_WinnerShow_C::WinnerShowCarlGrant' has a wrong offset!");
static_assert(offsetof(ABP_PVP_WinnerShow_C, OnFinished) == 0x000348, "Member 'ABP_PVP_WinnerShow_C::OnFinished' has a wrong offset!");

}


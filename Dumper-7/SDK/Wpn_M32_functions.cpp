#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Wpn_M32

#include "Basic.hpp"

#include "Wpn_M32_classes.hpp"
#include "Wpn_M32_parameters.hpp"


namespace SDK
{

// Function Wpn_M32.WPN_M32_C.ExecuteUbergraph_Wpn_M32
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_M32_C::ExecuteUbergraph_Wpn_M32(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_M32_C", "ExecuteUbergraph_Wpn_M32");

	Params::WPN_M32_C_ExecuteUbergraph_Wpn_M32 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Wpn_M32.WPN_M32_C.Evt_ClipEmpty
// (BlueprintCallable, BlueprintEvent)

void AWPN_M32_C::Evt_ClipEmpty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_M32_C", "Evt_ClipEmpty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Wpn_M32.WPN_M32_C.Evt_StopFire
// (BlueprintCallable, BlueprintEvent)

void AWPN_M32_C::Evt_StopFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_M32_C", "Evt_StopFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Wpn_M32.WPN_M32_C.OnLineTriggerPull
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFromRightHand                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           hand                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_M32_C::OnLineTriggerPull(bool IsFromRightHand, class AActor* hand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_M32_C", "OnLineTriggerPull");

	Params::WPN_M32_C_OnLineTriggerPull Parms{};

	Parms.IsFromRightHand = IsFromRightHand;
	Parms.hand = hand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Wpn_M32.WPN_M32_C.Evt_Fire
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AWPN_M32_C::Evt_Fire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_M32_C", "Evt_Fire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Wpn_M32.WPN_M32_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWPN_M32_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_M32_C", "ReceiveTick");

	Params::WPN_M32_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Wpn_M32.WPN_M32_C.Evt_Reload
// (BlueprintCallable, BlueprintEvent)

void AWPN_M32_C::Evt_Reload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_M32_C", "Evt_Reload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Wpn_M32.WPN_M32_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AWPN_M32_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_M32_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Wpn_M32.WPN_M32_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AWPN_M32_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WPN_M32_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}


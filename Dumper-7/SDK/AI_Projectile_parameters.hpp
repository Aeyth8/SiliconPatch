#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AI_Projectile

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AI_Projectile.AI_Projectile_C.ExecuteUbergraph_AI_Projectile
// 0x0030 (0x0030 - 0x0000)
struct AI_Projectile_C_ExecuteUbergraph_AI_Projectile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Speed;                          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Speed;                                // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Projectile_C_ExecuteUbergraph_AI_Projectile) == 0x000008, "Wrong alignment on AI_Projectile_C_ExecuteUbergraph_AI_Projectile");
static_assert(sizeof(AI_Projectile_C_ExecuteUbergraph_AI_Projectile) == 0x000030, "Wrong size on AI_Projectile_C_ExecuteUbergraph_AI_Projectile");
static_assert(offsetof(AI_Projectile_C_ExecuteUbergraph_AI_Projectile, EntryPoint) == 0x000000, "Member 'AI_Projectile_C_ExecuteUbergraph_AI_Projectile::EntryPoint' has a wrong offset!");
static_assert(offsetof(AI_Projectile_C_ExecuteUbergraph_AI_Projectile, Temp_bool_Variable) == 0x000004, "Member 'AI_Projectile_C_ExecuteUbergraph_AI_Projectile::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AI_Projectile_C_ExecuteUbergraph_AI_Projectile, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'AI_Projectile_C_ExecuteUbergraph_AI_Projectile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Projectile_C_ExecuteUbergraph_AI_Projectile, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'AI_Projectile_C_ExecuteUbergraph_AI_Projectile::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(AI_Projectile_C_ExecuteUbergraph_AI_Projectile, K2Node_Select_Default) == 0x000010, "Member 'AI_Projectile_C_ExecuteUbergraph_AI_Projectile::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AI_Projectile_C_ExecuteUbergraph_AI_Projectile, K2Node_CustomEvent_Speed) == 0x000018, "Member 'AI_Projectile_C_ExecuteUbergraph_AI_Projectile::K2Node_CustomEvent_Speed' has a wrong offset!");
static_assert(offsetof(AI_Projectile_C_ExecuteUbergraph_AI_Projectile, K2Node_Event_Speed) == 0x000024, "Member 'AI_Projectile_C_ExecuteUbergraph_AI_Projectile::K2Node_Event_Speed' has a wrong offset!");

// Function AI_Projectile.AI_Projectile_C.Evt_InitSetting
// 0x000C (0x000C - 0x0000)
struct AI_Projectile_C_Evt_InitSetting final
{
public:
	struct FVector                                Speed;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Projectile_C_Evt_InitSetting) == 0x000004, "Wrong alignment on AI_Projectile_C_Evt_InitSetting");
static_assert(sizeof(AI_Projectile_C_Evt_InitSetting) == 0x00000C, "Wrong size on AI_Projectile_C_Evt_InitSetting");
static_assert(offsetof(AI_Projectile_C_Evt_InitSetting, Speed) == 0x000000, "Member 'AI_Projectile_C_Evt_InitSetting::Speed' has a wrong offset!");

// Function AI_Projectile.AI_Projectile_C.InitSetting
// 0x000C (0x000C - 0x0000)
struct AI_Projectile_C_InitSetting final
{
public:
	struct FVector                                Speed;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Projectile_C_InitSetting) == 0x000004, "Wrong alignment on AI_Projectile_C_InitSetting");
static_assert(sizeof(AI_Projectile_C_InitSetting) == 0x00000C, "Wrong size on AI_Projectile_C_InitSetting");
static_assert(offsetof(AI_Projectile_C_InitSetting, Speed) == 0x000000, "Member 'AI_Projectile_C_InitSetting::Speed' has a wrong offset!");

// Function AI_Projectile.AI_Projectile_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct AI_Projectile_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Projectile_C_ReceiveTick) == 0x000004, "Wrong alignment on AI_Projectile_C_ReceiveTick");
static_assert(sizeof(AI_Projectile_C_ReceiveTick) == 0x000004, "Wrong size on AI_Projectile_C_ReceiveTick");
static_assert(offsetof(AI_Projectile_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'AI_Projectile_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}


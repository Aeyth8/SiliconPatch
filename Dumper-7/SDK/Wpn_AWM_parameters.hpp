#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Wpn_AWM

#include "Basic.hpp"


namespace SDK::Params
{

// Function Wpn_AWM.WPN_AWM_C.ExecuteUbergraph_Wpn_AWM
// 0x0048 (0x0048 - 0x0000)
struct WPN_AWM_C_ExecuteUbergraph_Wpn_AWM final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsFromRightHand;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Hand;                                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponAnimInstance*                    K2Node_DynamicCast_AsWeapon_Anim_Instance;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_AWM_C_ExecuteUbergraph_Wpn_AWM) == 0x000008, "Wrong alignment on WPN_AWM_C_ExecuteUbergraph_Wpn_AWM");
static_assert(sizeof(WPN_AWM_C_ExecuteUbergraph_Wpn_AWM) == 0x000048, "Wrong size on WPN_AWM_C_ExecuteUbergraph_Wpn_AWM");
static_assert(offsetof(WPN_AWM_C_ExecuteUbergraph_Wpn_AWM, EntryPoint) == 0x000000, "Member 'WPN_AWM_C_ExecuteUbergraph_Wpn_AWM::EntryPoint' has a wrong offset!");
static_assert(offsetof(WPN_AWM_C_ExecuteUbergraph_Wpn_AWM, CallFunc_GetMaterial_ReturnValue) == 0x000008, "Member 'WPN_AWM_C_ExecuteUbergraph_Wpn_AWM::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_AWM_C_ExecuteUbergraph_Wpn_AWM, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'WPN_AWM_C_ExecuteUbergraph_Wpn_AWM::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_AWM_C_ExecuteUbergraph_Wpn_AWM, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'WPN_AWM_C_ExecuteUbergraph_Wpn_AWM::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(WPN_AWM_C_ExecuteUbergraph_Wpn_AWM, K2Node_Event_IsFromRightHand) == 0x00001C, "Member 'WPN_AWM_C_ExecuteUbergraph_Wpn_AWM::K2Node_Event_IsFromRightHand' has a wrong offset!");
static_assert(offsetof(WPN_AWM_C_ExecuteUbergraph_Wpn_AWM, K2Node_Event_Hand) == 0x000020, "Member 'WPN_AWM_C_ExecuteUbergraph_Wpn_AWM::K2Node_Event_Hand' has a wrong offset!");
static_assert(offsetof(WPN_AWM_C_ExecuteUbergraph_Wpn_AWM, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'WPN_AWM_C_ExecuteUbergraph_Wpn_AWM::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_AWM_C_ExecuteUbergraph_Wpn_AWM, K2Node_DynamicCast_AsWeapon_Anim_Instance) == 0x000030, "Member 'WPN_AWM_C_ExecuteUbergraph_Wpn_AWM::K2Node_DynamicCast_AsWeapon_Anim_Instance' has a wrong offset!");
static_assert(offsetof(WPN_AWM_C_ExecuteUbergraph_Wpn_AWM, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WPN_AWM_C_ExecuteUbergraph_Wpn_AWM::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WPN_AWM_C_ExecuteUbergraph_Wpn_AWM, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'WPN_AWM_C_ExecuteUbergraph_Wpn_AWM::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_AWM_C_ExecuteUbergraph_Wpn_AWM, CallFunc_IsValid_ReturnValue1) == 0x00003A, "Member 'WPN_AWM_C_ExecuteUbergraph_Wpn_AWM::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WPN_AWM_C_ExecuteUbergraph_Wpn_AWM, CallFunc_IsValid_ReturnValue2) == 0x00003B, "Member 'WPN_AWM_C_ExecuteUbergraph_Wpn_AWM::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WPN_AWM_C_ExecuteUbergraph_Wpn_AWM, CallFunc_IsValid_ReturnValue3) == 0x00003C, "Member 'WPN_AWM_C_ExecuteUbergraph_Wpn_AWM::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WPN_AWM_C_ExecuteUbergraph_Wpn_AWM, CallFunc_HasAuthority_ReturnValue) == 0x00003D, "Member 'WPN_AWM_C_ExecuteUbergraph_Wpn_AWM::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(WPN_AWM_C_ExecuteUbergraph_Wpn_AWM, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000040, "Member 'WPN_AWM_C_ExecuteUbergraph_Wpn_AWM::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");

// Function Wpn_AWM.WPN_AWM_C.OnLineTriggerPull
// 0x0010 (0x0010 - 0x0000)
struct WPN_AWM_C_OnLineTriggerPull final
{
public:
	bool                                          IsFromRightHand;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 hand;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_AWM_C_OnLineTriggerPull) == 0x000008, "Wrong alignment on WPN_AWM_C_OnLineTriggerPull");
static_assert(sizeof(WPN_AWM_C_OnLineTriggerPull) == 0x000010, "Wrong size on WPN_AWM_C_OnLineTriggerPull");
static_assert(offsetof(WPN_AWM_C_OnLineTriggerPull, IsFromRightHand) == 0x000000, "Member 'WPN_AWM_C_OnLineTriggerPull::IsFromRightHand' has a wrong offset!");
static_assert(offsetof(WPN_AWM_C_OnLineTriggerPull, hand) == 0x000008, "Member 'WPN_AWM_C_OnLineTriggerPull::hand' has a wrong offset!");

// Function Wpn_AWM.WPN_AWM_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct WPN_AWM_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WPN_AWM_C_ReceiveTick) == 0x000004, "Wrong alignment on WPN_AWM_C_ReceiveTick");
static_assert(sizeof(WPN_AWM_C_ReceiveTick) == 0x000004, "Wrong size on WPN_AWM_C_ReceiveTick");
static_assert(offsetof(WPN_AWM_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'WPN_AWM_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}


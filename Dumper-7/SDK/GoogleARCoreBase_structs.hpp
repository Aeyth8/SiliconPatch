#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GoogleARCoreBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum GoogleARCoreBase.EGoogleARCoreLineTraceChannel
// NumValues: 0x0008
enum class EGoogleARCoreLineTraceChannel : uint8
{
	None                                     = 0,
	FeaturePoint                             = 1,
	InfinitePlane                            = 2,
	PlaneUsingExtent                         = 4,
	PlaneUsingBoundaryPolygon                = 8,
	FeaturePointWithSurfaceNormal            = 16,
	AugmentedImage                           = 32,
	EGoogleARCoreLineTraceChannel_MAX        = 33,
};

// Enum GoogleARCoreBase.EGoogleARCoreTrackingState
// NumValues: 0x0004
enum class EGoogleARCoreTrackingState : uint8
{
	Tracking                                 = 0,
	NotTracking                              = 1,
	StoppedTracking                          = 2,
	EGoogleARCoreTrackingState_MAX           = 3,
};

// Enum GoogleARCoreBase.EGoogleARCoreFunctionStatus
// NumValues: 0x0009
enum class EGoogleARCoreFunctionStatus : uint8
{
	Success                                  = 0,
	Fatal                                    = 1,
	SessionPaused                            = 2,
	NotTracking                              = 3,
	ResourceExhausted                        = 4,
	NotAvailable                             = 5,
	InvalidType                              = 6,
	Unknown                                  = 7,
	EGoogleARCoreFunctionStatus_MAX          = 8,
};

// Enum GoogleARCoreBase.EGoogleARCoreInstallRequestResult
// NumValues: 0x0005
enum class EGoogleARCoreInstallRequestResult : uint8
{
	Installed                                = 0,
	DeviceNotCompatible                      = 1,
	UserDeclinedInstallation                 = 2,
	FatalError                               = 3,
	EGoogleARCoreInstallRequestResult_MAX    = 4,
};

// Enum GoogleARCoreBase.EGoogleARCoreInstallStatus
// NumValues: 0x0003
enum class EGoogleARCoreInstallStatus : uint8
{
	Installed                                = 0,
	Requrested                               = 1,
	EGoogleARCoreInstallStatus_MAX           = 2,
};

// Enum GoogleARCoreBase.EGoogleARCoreAvailability
// NumValues: 0x0008
enum class EGoogleARCoreAvailability : uint8
{
	UnknownError                             = 0,
	UnknownChecking                          = 1,
	UnknownTimedOut                          = 2,
	UnsupportedDeviceNotCapable              = 100,
	SupportedNotInstalled                    = 201,
	SupportedApkTooOld                       = 202,
	SupportedInstalled                       = 203,
	EGoogleARCoreAvailability_MAX            = 204,
};

// ScriptStruct GoogleARCoreBase.GoogleARCoreCameraConfig
// 0x0010 (0x0010 - 0x0000)
struct FGoogleARCoreCameraConfig final
{
public:
	struct FIntPoint                              CameraImageResolution;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntPoint                              CameraTextureResolution;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGoogleARCoreCameraConfig) == 0x000004, "Wrong alignment on FGoogleARCoreCameraConfig");
static_assert(sizeof(FGoogleARCoreCameraConfig) == 0x000010, "Wrong size on FGoogleARCoreCameraConfig");
static_assert(offsetof(FGoogleARCoreCameraConfig, CameraImageResolution) == 0x000000, "Member 'FGoogleARCoreCameraConfig::CameraImageResolution' has a wrong offset!");
static_assert(offsetof(FGoogleARCoreCameraConfig, CameraTextureResolution) == 0x000008, "Member 'FGoogleARCoreCameraConfig::CameraTextureResolution' has a wrong offset!");

// ScriptStruct GoogleARCoreBase.GoogleARCoreAugmentedImageDatabaseEntry
// 0x0018 (0x0018 - 0x0000)
struct FGoogleARCoreAugmentedImageDatabaseEntry final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             ImageAsset;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Width;                                             // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FGoogleARCoreAugmentedImageDatabaseEntry) == 0x000008, "Wrong alignment on FGoogleARCoreAugmentedImageDatabaseEntry");
static_assert(sizeof(FGoogleARCoreAugmentedImageDatabaseEntry) == 0x000018, "Wrong size on FGoogleARCoreAugmentedImageDatabaseEntry");
static_assert(offsetof(FGoogleARCoreAugmentedImageDatabaseEntry, Name) == 0x000000, "Member 'FGoogleARCoreAugmentedImageDatabaseEntry::Name' has a wrong offset!");
static_assert(offsetof(FGoogleARCoreAugmentedImageDatabaseEntry, ImageAsset) == 0x000008, "Member 'FGoogleARCoreAugmentedImageDatabaseEntry::ImageAsset' has a wrong offset!");
static_assert(offsetof(FGoogleARCoreAugmentedImageDatabaseEntry, Width) == 0x000010, "Member 'FGoogleARCoreAugmentedImageDatabaseEntry::Width' has a wrong offset!");

// ScriptStruct GoogleARCoreBase.GoogleARCoreLightEstimate
// 0x0014 (0x0014 - 0x0000)
struct FGoogleARCoreLightEstimate final
{
public:
	bool                                          bIsValid;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PixelIntensity;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                RGBScaleFactor;                                    // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGoogleARCoreLightEstimate) == 0x000004, "Wrong alignment on FGoogleARCoreLightEstimate");
static_assert(sizeof(FGoogleARCoreLightEstimate) == 0x000014, "Wrong size on FGoogleARCoreLightEstimate");
static_assert(offsetof(FGoogleARCoreLightEstimate, bIsValid) == 0x000000, "Member 'FGoogleARCoreLightEstimate::bIsValid' has a wrong offset!");
static_assert(offsetof(FGoogleARCoreLightEstimate, PixelIntensity) == 0x000004, "Member 'FGoogleARCoreLightEstimate::PixelIntensity' has a wrong offset!");
static_assert(offsetof(FGoogleARCoreLightEstimate, RGBScaleFactor) == 0x000008, "Member 'FGoogleARCoreLightEstimate::RGBScaleFactor' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Leaderboard

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AdvancedSessions_structs.hpp"
#include "buttonParent_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Leaderboard.LeaderBoard_C
// 0x00A8 (0x02B8 - 0x0210)
class ULeaderBoard_C final : public UbuttonParent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0210(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             GameHours;                                         // 0x0218(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             gameMunites;                                       // 0x0220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x0228(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             killNum;                                           // 0x0230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MEIMage;                                           // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPlayerInfo_C*                          PlayerInfo1;                                       // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPlayerInfo_C*                          PlayerInfo2;                                       // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPlayerInfo_C*                          PlayerInfo3;                                       // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPlayerInfo_C*                          PlayerInfo4;                                       // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPlayerInfo_C*                          PlayerInfo5;                                       // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPlayerInfo_C*                          PlayerInfo6;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPlayerInfo_C*                          PlayerInfo7;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPlayerInfo_C*                          PlayerInfo8;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPlayerInfo_C*                          PlayerInfo9;                                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Rate;                                              // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             topRank;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             topScore;                                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             XX;                                                // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UPlayerInfo_C*>                  ListInfo;                                          // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_LeaderBoard(int32 EntryPoint);
	void Construct();
	void setPlayerInfoArray(TArray<struct FLeaderBoardData>& Array);
	void setMeTopData(const struct FPlayerTopInfo& _data);
	void setMeImage();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LeaderBoard_C">();
	}
	static class ULeaderBoard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULeaderBoard_C>();
	}
};
static_assert(alignof(ULeaderBoard_C) == 0x000008, "Wrong alignment on ULeaderBoard_C");
static_assert(sizeof(ULeaderBoard_C) == 0x0002B8, "Wrong size on ULeaderBoard_C");
static_assert(offsetof(ULeaderBoard_C, UberGraphFrame) == 0x000210, "Member 'ULeaderBoard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ULeaderBoard_C, GameHours) == 0x000218, "Member 'ULeaderBoard_C::GameHours' has a wrong offset!");
static_assert(offsetof(ULeaderBoard_C, gameMunites) == 0x000220, "Member 'ULeaderBoard_C::gameMunites' has a wrong offset!");
static_assert(offsetof(ULeaderBoard_C, Image_0) == 0x000228, "Member 'ULeaderBoard_C::Image_0' has a wrong offset!");
static_assert(offsetof(ULeaderBoard_C, killNum) == 0x000230, "Member 'ULeaderBoard_C::killNum' has a wrong offset!");
static_assert(offsetof(ULeaderBoard_C, MEIMage) == 0x000238, "Member 'ULeaderBoard_C::MEIMage' has a wrong offset!");
static_assert(offsetof(ULeaderBoard_C, PlayerInfo1) == 0x000240, "Member 'ULeaderBoard_C::PlayerInfo1' has a wrong offset!");
static_assert(offsetof(ULeaderBoard_C, PlayerInfo2) == 0x000248, "Member 'ULeaderBoard_C::PlayerInfo2' has a wrong offset!");
static_assert(offsetof(ULeaderBoard_C, PlayerInfo3) == 0x000250, "Member 'ULeaderBoard_C::PlayerInfo3' has a wrong offset!");
static_assert(offsetof(ULeaderBoard_C, PlayerInfo4) == 0x000258, "Member 'ULeaderBoard_C::PlayerInfo4' has a wrong offset!");
static_assert(offsetof(ULeaderBoard_C, PlayerInfo5) == 0x000260, "Member 'ULeaderBoard_C::PlayerInfo5' has a wrong offset!");
static_assert(offsetof(ULeaderBoard_C, PlayerInfo6) == 0x000268, "Member 'ULeaderBoard_C::PlayerInfo6' has a wrong offset!");
static_assert(offsetof(ULeaderBoard_C, PlayerInfo7) == 0x000270, "Member 'ULeaderBoard_C::PlayerInfo7' has a wrong offset!");
static_assert(offsetof(ULeaderBoard_C, PlayerInfo8) == 0x000278, "Member 'ULeaderBoard_C::PlayerInfo8' has a wrong offset!");
static_assert(offsetof(ULeaderBoard_C, PlayerInfo9) == 0x000280, "Member 'ULeaderBoard_C::PlayerInfo9' has a wrong offset!");
static_assert(offsetof(ULeaderBoard_C, Rate) == 0x000288, "Member 'ULeaderBoard_C::Rate' has a wrong offset!");
static_assert(offsetof(ULeaderBoard_C, topRank) == 0x000290, "Member 'ULeaderBoard_C::topRank' has a wrong offset!");
static_assert(offsetof(ULeaderBoard_C, topScore) == 0x000298, "Member 'ULeaderBoard_C::topScore' has a wrong offset!");
static_assert(offsetof(ULeaderBoard_C, XX) == 0x0002A0, "Member 'ULeaderBoard_C::XX' has a wrong offset!");
static_assert(offsetof(ULeaderBoard_C, ListInfo) == 0x0002A8, "Member 'ULeaderBoard_C::ListInfo' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Wpn_Clip

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Wpn_Clip.Wpn_Clip_C.ExecuteUbergraph_Wpn_Clip
// 0x01C0 (0x01C0 - 0x0000)
struct Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable1;                                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsNow;                          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPWeaponBase_C*                        K2Node_DynamicCast_AsBPWeapon_Base;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponAnimInstance*                    K2Node_DynamicCast_AsWeapon_Anim_Instance;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x00B0(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0xC];                                      // 0x0144(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BulletBase_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue1; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPWeaponBase_C*                        K2Node_DynamicCast_AsBPWeapon_Base1;               // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x01AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue1;         // 0x01AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Value;                          // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select1_Default;                            // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip) == 0x000010, "Wrong alignment on Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip");
static_assert(sizeof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip) == 0x0001C0, "Wrong size on Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, EntryPoint) == 0x000000, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::EntryPoint' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_GetMaterial_ReturnValue) == 0x000008, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, Temp_int_Variable) == 0x000010, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, Temp_int_Variable1) == 0x000018, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_HasAuthority_ReturnValue) == 0x00001C, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, Temp_bool_Variable) == 0x00001D, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, Temp_float_Variable) == 0x000020, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, K2Node_Select_Default) == 0x000024, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, Temp_float_Variable1) == 0x000028, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000030, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, Temp_bool_Variable1) == 0x000038, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, K2Node_Event_DeltaSeconds) == 0x00003C, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, K2Node_CustomEvent_IsNow) == 0x000040, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::K2Node_CustomEvent_IsNow' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_IsValid_ReturnValue1) == 0x000041, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_IsValid_ReturnValue2) == 0x000042, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, K2Node_DynamicCast_AsBPWeapon_Base) == 0x000048, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::K2Node_DynamicCast_AsBPWeapon_Base' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_GetAnimInstance_ReturnValue) == 0x000058, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, K2Node_DynamicCast_AsWeapon_Anim_Instance) == 0x000060, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::K2Node_DynamicCast_AsWeapon_Anim_Instance' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, K2Node_DynamicCast_bSuccess1) == 0x000068, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00006C, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_Abs_ReturnValue) == 0x000078, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_IsValid_ReturnValue3) == 0x00007C, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000080, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000084, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, K2Node_ComponentBoundEvent_HitComponent) == 0x000088, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, K2Node_ComponentBoundEvent_OtherActor) == 0x000090, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, K2Node_ComponentBoundEvent_OtherComp) == 0x000098, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, K2Node_ComponentBoundEvent_NormalImpulse) == 0x0000A0, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, K2Node_ComponentBoundEvent_Hit) == 0x0000B0, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000138, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_GetTransform_ReturnValue) == 0x000150, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_IsValidClass_ReturnValue) == 0x000180, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000188, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_FinishSpawningActor_ReturnValue) == 0x000190, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_CreateDynamicMaterialInstance_ReturnValue1) == 0x000198, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_CreateDynamicMaterialInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, K2Node_DynamicCast_AsBPWeapon_Base1) == 0x0001A0, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::K2Node_DynamicCast_AsBPWeapon_Base1' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, K2Node_DynamicCast_bSuccess2) == 0x0001A8, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0001A9, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_IsValid_ReturnValue4) == 0x0001AA, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001AB, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x0001AC, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, Temp_bool_Has_Been_Initd_Variable) == 0x0001AD, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_IsValid_ReturnValue5) == 0x0001AE, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_GreaterEqual_IntInt_ReturnValue1) == 0x0001AF, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_GreaterEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, Temp_bool_IsClosed_Variable) == 0x0001B0, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_IsValid_ReturnValue6) == 0x0001B1, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, K2Node_CustomEvent_Value) == 0x0001B2, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, CallFunc_IsValid_ReturnValue7) == 0x0001B3, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip, K2Node_Select1_Default) == 0x0001B4, "Member 'Wpn_Clip_C_ExecuteUbergraph_Wpn_Clip::K2Node_Select1_Default' has a wrong offset!");

// Function Wpn_Clip.Wpn_Clip_C.HighlightBolt
// 0x0001 (0x0001 - 0x0000)
struct Wpn_Clip_C_HighlightBolt final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Wpn_Clip_C_HighlightBolt) == 0x000001, "Wrong alignment on Wpn_Clip_C_HighlightBolt");
static_assert(sizeof(Wpn_Clip_C_HighlightBolt) == 0x000001, "Wrong size on Wpn_Clip_C_HighlightBolt");
static_assert(offsetof(Wpn_Clip_C_HighlightBolt, Value) == 0x000000, "Member 'Wpn_Clip_C_HighlightBolt::Value' has a wrong offset!");

// Function Wpn_Clip.Wpn_Clip_C.BndEvt__ClipMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct Wpn_Clip_C_BndEvt__ClipMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0028(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Wpn_Clip_C_BndEvt__ClipMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on Wpn_Clip_C_BndEvt__ClipMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(Wpn_Clip_C_BndEvt__ClipMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on Wpn_Clip_C_BndEvt__ClipMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(Wpn_Clip_C_BndEvt__ClipMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'Wpn_Clip_C_BndEvt__ClipMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_BndEvt__ClipMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Wpn_Clip_C_BndEvt__ClipMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_BndEvt__ClipMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Wpn_Clip_C_BndEvt__ClipMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_BndEvt__ClipMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'Wpn_Clip_C_BndEvt__ClipMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Wpn_Clip_C_BndEvt__ClipMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, Hit) == 0x000028, "Member 'Wpn_Clip_C_BndEvt__ClipMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function Wpn_Clip.Wpn_Clip_C.DropDown
// 0x0001 (0x0001 - 0x0000)
struct Wpn_Clip_C_DropDown final
{
public:
	bool                                          IsNow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Wpn_Clip_C_DropDown) == 0x000001, "Wrong alignment on Wpn_Clip_C_DropDown");
static_assert(sizeof(Wpn_Clip_C_DropDown) == 0x000001, "Wrong size on Wpn_Clip_C_DropDown");
static_assert(offsetof(Wpn_Clip_C_DropDown, IsNow) == 0x000000, "Member 'Wpn_Clip_C_DropDown::IsNow' has a wrong offset!");

// Function Wpn_Clip.Wpn_Clip_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Wpn_Clip_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Wpn_Clip_C_ReceiveTick) == 0x000004, "Wrong alignment on Wpn_Clip_C_ReceiveTick");
static_assert(sizeof(Wpn_Clip_C_ReceiveTick) == 0x000004, "Wrong size on Wpn_Clip_C_ReceiveTick");
static_assert(offsetof(Wpn_Clip_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Wpn_Clip_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Wpn_Clip.Wpn_Clip_C.SetRenderCustomDepth
// 0x0001 (0x0001 - 0x0000)
struct Wpn_Clip_C_SetRenderCustomDepth final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Wpn_Clip_C_SetRenderCustomDepth) == 0x000001, "Wrong alignment on Wpn_Clip_C_SetRenderCustomDepth");
static_assert(sizeof(Wpn_Clip_C_SetRenderCustomDepth) == 0x000001, "Wrong size on Wpn_Clip_C_SetRenderCustomDepth");
static_assert(offsetof(Wpn_Clip_C_SetRenderCustomDepth, Value) == 0x000000, "Member 'Wpn_Clip_C_SetRenderCustomDepth::Value' has a wrong offset!");

}


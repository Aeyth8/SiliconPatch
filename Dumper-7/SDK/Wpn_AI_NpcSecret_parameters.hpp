#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Wpn_AI_NpcSecret

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Wpn_AI_NpcSecret.Wpn_AI_NpcSecret_C.ExecuteUbergraph_Wpn_AI_NpcSecret
// 0x0038 (0x0038 - 0x0000)
struct Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Event_Sound;                                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Location;                             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDrop;                               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsOnlyOne;                            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsReplace;                            // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret) == 0x000008, "Wrong alignment on Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret");
static_assert(sizeof(Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret) == 0x000038, "Wrong size on Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret");
static_assert(offsetof(Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret, EntryPoint) == 0x000000, "Member 'Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret::EntryPoint' has a wrong offset!");
static_assert(offsetof(Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret, CallFunc_RandomBool_ReturnValue) == 0x000004, "Member 'Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret, Temp_bool_Variable) == 0x000005, "Member 'Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret, Temp_object_Variable) == 0x000008, "Member 'Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret, Temp_object_Variable1) == 0x000010, "Member 'Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret, K2Node_Select_Default) == 0x000018, "Member 'Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret, K2Node_Event_Sound) == 0x000020, "Member 'Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret::K2Node_Event_Sound' has a wrong offset!");
static_assert(offsetof(Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret, K2Node_Event_Location) == 0x000028, "Member 'Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret, K2Node_Event_IsDrop) == 0x000034, "Member 'Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret::K2Node_Event_IsDrop' has a wrong offset!");
static_assert(offsetof(Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret, K2Node_Event_IsOnlyOne) == 0x000035, "Member 'Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret::K2Node_Event_IsOnlyOne' has a wrong offset!");
static_assert(offsetof(Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret, K2Node_Event_IsReplace) == 0x000036, "Member 'Wpn_AI_NpcSecret_C_ExecuteUbergraph_Wpn_AI_NpcSecret::K2Node_Event_IsReplace' has a wrong offset!");

// Function Wpn_AI_NpcSecret.Wpn_AI_NpcSecret_C.OnPlaySFX
// 0x0018 (0x0018 - 0x0000)
struct Wpn_AI_NpcSecret_C_OnPlaySFX final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDrop;                                            // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsOnlyOne;                                         // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsReplace;                                         // 0x0016(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Wpn_AI_NpcSecret_C_OnPlaySFX) == 0x000008, "Wrong alignment on Wpn_AI_NpcSecret_C_OnPlaySFX");
static_assert(sizeof(Wpn_AI_NpcSecret_C_OnPlaySFX) == 0x000018, "Wrong size on Wpn_AI_NpcSecret_C_OnPlaySFX");
static_assert(offsetof(Wpn_AI_NpcSecret_C_OnPlaySFX, Sound) == 0x000000, "Member 'Wpn_AI_NpcSecret_C_OnPlaySFX::Sound' has a wrong offset!");
static_assert(offsetof(Wpn_AI_NpcSecret_C_OnPlaySFX, Location) == 0x000008, "Member 'Wpn_AI_NpcSecret_C_OnPlaySFX::Location' has a wrong offset!");
static_assert(offsetof(Wpn_AI_NpcSecret_C_OnPlaySFX, IsDrop) == 0x000014, "Member 'Wpn_AI_NpcSecret_C_OnPlaySFX::IsDrop' has a wrong offset!");
static_assert(offsetof(Wpn_AI_NpcSecret_C_OnPlaySFX, IsOnlyOne) == 0x000015, "Member 'Wpn_AI_NpcSecret_C_OnPlaySFX::IsOnlyOne' has a wrong offset!");
static_assert(offsetof(Wpn_AI_NpcSecret_C_OnPlaySFX, IsReplace) == 0x000016, "Member 'Wpn_AI_NpcSecret_C_OnPlaySFX::IsReplace' has a wrong offset!");

}


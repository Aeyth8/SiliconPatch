#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPRightHand

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPRightHand.BPRightHand_C.Flip
// 0x0150 (0x0150 - 0x0000)
struct BPRightHand_C_Flip final
{
public:
	class USceneComponent*                        Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0018(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakVector_X;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x00C8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPRightHand_C_Flip) == 0x000008, "Wrong alignment on BPRightHand_C_Flip");
static_assert(sizeof(BPRightHand_C_Flip) == 0x000150, "Wrong size on BPRightHand_C_Flip");
static_assert(offsetof(BPRightHand_C_Flip, Widget) == 0x000000, "Member 'BPRightHand_C_Flip::Widget' has a wrong offset!");
static_assert(offsetof(BPRightHand_C_Flip, CallFunc_Add_VectorVector_ReturnValue) == 0x000008, "Member 'BPRightHand_C_Flip::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPRightHand_C_Flip, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000018, "Member 'BPRightHand_C_Flip::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BPRightHand_C_Flip, CallFunc_BreakVector_X) == 0x0000A0, "Member 'BPRightHand_C_Flip::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPRightHand_C_Flip, CallFunc_BreakVector_Y) == 0x0000A4, "Member 'BPRightHand_C_Flip::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPRightHand_C_Flip, CallFunc_BreakVector_Z) == 0x0000A8, "Member 'BPRightHand_C_Flip::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPRightHand_C_Flip, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000AC, "Member 'BPRightHand_C_Flip::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPRightHand_C_Flip, CallFunc_ComposeRotators_ReturnValue) == 0x0000B0, "Member 'BPRightHand_C_Flip::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPRightHand_C_Flip, CallFunc_MakeVector_ReturnValue) == 0x0000BC, "Member 'BPRightHand_C_Flip::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPRightHand_C_Flip, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0000C8, "Member 'BPRightHand_C_Flip::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JsonModule

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "JsonModule_structs.hpp"


namespace SDK
{

// Class JsonModule.JsonHelper
// 0x0000 (0x0028 - 0x0028)
class UJsonHelper final : public UBlueprintFunctionLibrary
{
public:
	static void AddJsonArrayValue(struct FJsonStruct& Json, const struct FJsonStruct& Value, bool* isSuccess);
	static void AddJsonObjectValue(const struct FJsonStruct& Json, const struct FJsonStruct& Value, bool* isSuccess, bool isRepleace);
	static void ChangeJsonArrayValue(struct FJsonStruct& Json, const struct FJsonStruct& from, const struct FJsonStruct& to, bool* isSuccess);
	static void ChangeJsonObjectValue(const struct FJsonStruct& Json, const class FString& Key, const struct FJsonStruct& Value, bool* isSuccess);
	static struct FJsonStruct CreateJsonArray();
	static struct FJsonStruct CreateJsonArrayByValue(const TArray<struct FJsonStruct>& Arrays);
	static struct FJsonStruct CreateJsonBoolValue(const class FString& Key, bool Value);
	static struct FJsonStruct CreateJsonNumberValue(const class FString& Key, float Value);
	static struct FJsonStruct CreateJsonObject();
	static struct FJsonStruct CreateJsonObjectByValue(const TArray<struct FJsonStruct>& Arrays);
	static struct FJsonStruct CreateJsonStringValue(const class FString& Key, const class FString& Value);
	static struct FJsonStruct FindJsonFromObject(const struct FJsonStruct& Json, const class FString& Key, EJsonType Type, bool* isFound);
	static TArray<struct FJsonStruct> GetAllValueFromJson(const struct FJsonStruct& Json);
	static class FString JsonObjectToKeyValuePairs(const struct FJsonStruct& Json);
	static EJsonType JsonType(const struct FJsonStruct& Json);
	static struct FJsonStruct ParseJson(const class FString& str);
	static void RemoveJsonArrayValueByValue(const struct FJsonStruct& Json, const struct FJsonStruct& Value, bool* isSuccess);
	static void RemoveJsonObjectValueByKey(const struct FJsonStruct& Json, const class FString& Key, bool* isSuccess);
	static struct FJsonStruct SetJsonKey(const struct FJsonStruct& Json, const class FString& Key);
	static class FString ToString(const struct FJsonStruct& Json);
	static class FString TryGetBaseValue(const struct FJsonStruct& Json);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JsonHelper">();
	}
	static class UJsonHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJsonHelper>();
	}
};
static_assert(alignof(UJsonHelper) == 0x000008, "Wrong alignment on UJsonHelper");
static_assert(sizeof(UJsonHelper) == 0x000028, "Wrong size on UJsonHelper");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mer2GameInstance

#include "Basic.hpp"

#include "Mer2GameInstance_classes.hpp"
#include "Mer2GameInstance_parameters.hpp"


namespace SDK
{

// Function Mer2GameInstance.Mer2GameInstance_C.ExecuteUbergraph_Mer2GameInstance
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::ExecuteUbergraph_Mer2GameInstance(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "ExecuteUbergraph_Mer2GameInstance");

	Params::Mer2GameInstance_C_ExecuteUbergraph_Mer2GameInstance Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameInstance.Mer2GameInstance_C.DestroySession
// (BlueprintCallable, BlueprintEvent)

void UMer2GameInstance_C::DestroySession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "DestroySession");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameInstance.Mer2GameInstance_C.ServerTravel
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    LevelName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UMer2GameInstance_C::ServerTravel(const class FString& LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "ServerTravel");

	Params::Mer2GameInstance_C_ServerTravel Parms{};

	Parms.LevelName = std::move(LevelName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameInstance.Mer2GameInstance_C.OnDestroySession
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UMer2GameInstance_C::OnDestroySession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "OnDestroySession");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameInstance.Mer2GameInstance_C.OnDeadTravel
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    MapName_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UMer2GameInstance_C::OnDeadTravel(const class FString& MapName_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "OnDeadTravel");

	Params::Mer2GameInstance_C_OnDeadTravel Parms{};

	Parms.MapName_0 = std::move(MapName_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameInstance.Mer2GameInstance_C.JoinSession
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FBlueprintSessionResult&   Session_0                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UMer2GameInstance_C::JoinSession(const struct FBlueprintSessionResult& Session_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "JoinSession");

	Params::Mer2GameInstance_C_JoinSession Parms{};

	Parms.Session_0 = std::move(Session_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameInstance.Mer2GameInstance_C.FindSession
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Filter                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UMer2GameInstance_C::FindSession(const class FString& Filter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "FindSession");

	Params::Mer2GameInstance_C_FindSession Parms{};

	Parms.Filter = std::move(Filter);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameInstance.Mer2GameInstance_C.CreateSession
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             MapName_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Filter                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UMer2GameInstance_C::CreateSession(class FName MapName_0, const class FString& Filter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "CreateSession");

	Params::Mer2GameInstance_C_CreateSession Parms{};

	Parms.MapName_0 = MapName_0;
	Parms.Filter = std::move(Filter);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameInstance.Mer2GameInstance_C.OnSuccess_71D495664CA468B47AD144903E62CF67
// (BlueprintCallable, BlueprintEvent)

void UMer2GameInstance_C::OnSuccess_71D495664CA468B47AD144903E62CF67()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "OnSuccess_71D495664CA468B47AD144903E62CF67");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameInstance.Mer2GameInstance_C.OnFailure_71D495664CA468B47AD144903E62CF67
// (BlueprintCallable, BlueprintEvent)

void UMer2GameInstance_C::OnFailure_71D495664CA468B47AD144903E62CF67()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "OnFailure_71D495664CA468B47AD144903E62CF67");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameInstance.Mer2GameInstance_C.OnSuccess_186A8A38480B0CDB4BDD3EBE78F57E38
// (BlueprintCallable, BlueprintEvent)

void UMer2GameInstance_C::OnSuccess_186A8A38480B0CDB4BDD3EBE78F57E38()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "OnSuccess_186A8A38480B0CDB4BDD3EBE78F57E38");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameInstance.Mer2GameInstance_C.OnFailure_186A8A38480B0CDB4BDD3EBE78F57E38
// (BlueprintCallable, BlueprintEvent)

void UMer2GameInstance_C::OnFailure_186A8A38480B0CDB4BDD3EBE78F57E38()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "OnFailure_186A8A38480B0CDB4BDD3EBE78F57E38");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameInstance.Mer2GameInstance_C.OnSuccess_B37144804BB00E9A5BC6F9B784641DA1
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FBlueprintSessionResult>&Results                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UMer2GameInstance_C::OnSuccess_B37144804BB00E9A5BC6F9B784641DA1(const TArray<struct FBlueprintSessionResult>& Results)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "OnSuccess_B37144804BB00E9A5BC6F9B784641DA1");

	Params::Mer2GameInstance_C_OnSuccess_B37144804BB00E9A5BC6F9B784641DA1 Parms{};

	Parms.Results = std::move(Results);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameInstance.Mer2GameInstance_C.OnFailure_B37144804BB00E9A5BC6F9B784641DA1
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FBlueprintSessionResult>&Results                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UMer2GameInstance_C::OnFailure_B37144804BB00E9A5BC6F9B784641DA1(const TArray<struct FBlueprintSessionResult>& Results)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "OnFailure_B37144804BB00E9A5BC6F9B784641DA1");

	Params::Mer2GameInstance_C_OnFailure_B37144804BB00E9A5BC6F9B784641DA1 Parms{};

	Parms.Results = std::move(Results);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameInstance.Mer2GameInstance_C.OnSuccess_E528ACA74FB71494490B019C5DDD2A0C
// (BlueprintCallable, BlueprintEvent)

void UMer2GameInstance_C::OnSuccess_E528ACA74FB71494490B019C5DDD2A0C()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "OnSuccess_E528ACA74FB71494490B019C5DDD2A0C");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameInstance.Mer2GameInstance_C.OnFailure_E528ACA74FB71494490B019C5DDD2A0C
// (BlueprintCallable, BlueprintEvent)

void UMer2GameInstance_C::OnFailure_E528ACA74FB71494490B019C5DDD2A0C()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "OnFailure_E528ACA74FB71494490B019C5DDD2A0C");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameInstance.Mer2GameInstance_C.OnSuccess_0BCD089B4D551E4D8C169BBA55CA2CA4
// (BlueprintCallable, BlueprintEvent)

void UMer2GameInstance_C::OnSuccess_0BCD089B4D551E4D8C169BBA55CA2CA4()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "OnSuccess_0BCD089B4D551E4D8C169BBA55CA2CA4");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameInstance.Mer2GameInstance_C.OnFailure_0BCD089B4D551E4D8C169BBA55CA2CA4
// (BlueprintCallable, BlueprintEvent)

void UMer2GameInstance_C::OnFailure_0BCD089B4D551E4D8C169BBA55CA2CA4()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "OnFailure_0BCD089B4D551E4D8C169BBA55CA2CA4");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameInstance.Mer2GameInstance_C.SavePlayerData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_CharacterBase_C*              Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::SavePlayerData(class ABP_CharacterBase_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "SavePlayerData");

	Params::Mer2GameInstance_C_SavePlayerData Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameInstance.Mer2GameInstance_C.LoadPlayerData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_CharacterBase_C*              Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMer2GameInstance_C::LoadPlayerData(class ABP_CharacterBase_C* Player, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "LoadPlayerData");

	Params::Mer2GameInstance_C_LoadPlayerData Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function Mer2GameInstance.Mer2GameInstance_C.lsPhoneDevice
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   outlsPhone                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMer2GameInstance_C::lsPhoneDevice(bool* outlsPhone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "lsPhoneDevice");

	Params::Mer2GameInstance_C_lsPhoneDevice Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (outlsPhone != nullptr)
		*outlsPhone = Parms.outlsPhone;
}


// Function Mer2GameInstance.Mer2GameInstance_C.lsAnroid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   blsAndroid                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMer2GameInstance_C::lsAnroid(bool* blsAndroid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "lsAnroid");

	Params::Mer2GameInstance_C_lsAnroid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (blsAndroid != nullptr)
		*blsAndroid = Parms.blsAndroid;
}


// Function Mer2GameInstance.Mer2GameInstance_C.AddBulletScore
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnumScoreType                           scoreType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::AddBulletScore(EnumScoreType scoreType, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "AddBulletScore");

	Params::Mer2GameInstance_C_AddBulletScore Parms{};

	Parms.scoreType = scoreType;
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameInstance.Mer2GameInstance_C.AddBulletShotNum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::AddBulletShotNum(int32 Num, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "AddBulletShotNum");

	Params::Mer2GameInstance_C_AddBulletShotNum Parms{};

	Parms.Num = Num;
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameInstance.Mer2GameInstance_C.GetHitRatio
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  Ratio                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::GetHitRatio(class APlayerController* PlayerController, float* Ratio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "GetHitRatio");

	Params::Mer2GameInstance_C_GetHitRatio Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);

	if (Ratio != nullptr)
		*Ratio = Parms.Ratio;
}


// Function Mer2GameInstance.Mer2GameInstance_C.GetBulletScore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Score                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::GetBulletScore(class APlayerController* PlayerController, int32* Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "GetBulletScore");

	Params::Mer2GameInstance_C_GetBulletScore Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);

	if (Score != nullptr)
		*Score = Parms.Score;
}


// Function Mer2GameInstance.Mer2GameInstance_C.AddPlayerHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::AddPlayerHit(int32 Num, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "AddPlayerHit");

	Params::Mer2GameInstance_C_AddPlayerHit Parms{};

	Parms.Num = Num;
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameInstance.Mer2GameInstance_C.GetTotalScore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPass                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32*                                  Score                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  CheckPoint                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::GetTotalScore(class APlayerController* PlayerController, bool IsPass, int32* Score, int32* CheckPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "GetTotalScore");

	Params::Mer2GameInstance_C_GetTotalScore Parms{};

	Parms.PlayerController = PlayerController;
	Parms.IsPass = IsPass;

	UObject::ProcessEvent(Func, &Parms);

	if (Score != nullptr)
		*Score = Parms.Score;

	if (CheckPoint != nullptr)
		*CheckPoint = Parms.CheckPoint;
}


// Function Mer2GameInstance.Mer2GameInstance_C.GetHeadShot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::GetHeadShot(class APlayerController* PlayerController, int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "GetHeadShot");

	Params::Mer2GameInstance_C_GetHeadShot Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function Mer2GameInstance.Mer2GameInstance_C.ClearScore
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::ClearScore(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "ClearScore");

	Params::Mer2GameInstance_C_ClearScore Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameInstance.Mer2GameInstance_C.BackToMM
// (Public, BlueprintCallable, BlueprintEvent)

void UMer2GameInstance_C::BackToMM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "BackToMM");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameInstance.Mer2GameInstance_C.lsGameINP1
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   _flag                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMer2GameInstance_C::lsGameINP1(bool* _flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "lsGameINP1");

	Params::Mer2GameInstance_C_lsGameINP1 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (_flag != nullptr)
		*_flag = Parms._flag;
}


// Function Mer2GameInstance.Mer2GameInstance_C.SetGameState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameState                              _state                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::SetGameState(EGameState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "SetGameState");

	Params::Mer2GameInstance_C_SetGameState Parms{};

	Parms._state = _state;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameInstance.Mer2GameInstance_C.GenerateUniqueID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString*                          Result                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UMer2GameInstance_C::GenerateUniqueID(class FString* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "GenerateUniqueID");

	Params::Mer2GameInstance_C_GenerateUniqueID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function Mer2GameInstance.Mer2GameInstance_C.SaveTutorail
// (Public, BlueprintCallable, BlueprintEvent)

void UMer2GameInstance_C::SaveTutorail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "SaveTutorail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameInstance.Mer2GameInstance_C.lsNoTutorial
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   lsSkipTutorail                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMer2GameInstance_C::lsNoTutorial(bool* lsSkipTutorail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "lsNoTutorial");

	Params::Mer2GameInstance_C_lsNoTutorial Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (lsSkipTutorail != nullptr)
		*lsSkipTutorail = Parms.lsSkipTutorail;
}


// Function Mer2GameInstance.Mer2GameInstance_C.GetBulletShot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::GetBulletShot(class APlayerController* PlayerController, int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "GetBulletShot");

	Params::Mer2GameInstance_C_GetBulletShot Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function Mer2GameInstance.Mer2GameInstance_C.GetBulletHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::GetBulletHit(class APlayerController* PlayerController, int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "GetBulletHit");

	Params::Mer2GameInstance_C_GetBulletHit Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function Mer2GameInstance.Mer2GameInstance_C.SetStartTIME
// (Public, BlueprintCallable, BlueprintEvent)

void UMer2GameInstance_C::SetStartTIME()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "SetStartTIME");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameInstance.Mer2GameInstance_C.GetKillNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::GetKillNum(class APlayerController* PlayerController, int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "GetKillNum");

	Params::Mer2GameInstance_C_GetKillNum Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function Mer2GameInstance.Mer2GameInstance_C.GetGameTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  _time                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::GetGameTime(int32* _time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "GetGameTime");

	Params::Mer2GameInstance_C_GetGameTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (_time != nullptr)
		*_time = Parms._time;
}


// Function Mer2GameInstance.Mer2GameInstance_C.FreshVariables
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::FreshVariables(class APlayerController* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "FreshVariables");

	Params::Mer2GameInstance_C_FreshVariables Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameInstance.Mer2GameInstance_C.SetDeadTime
// (Public, BlueprintCallable, BlueprintEvent)

void UMer2GameInstance_C::SetDeadTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "SetDeadTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameInstance.Mer2GameInstance_C.SetCurrentDifficulty
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnumDifficuty                           _difficulty                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::SetCurrentDifficulty(EnumDifficuty _difficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "SetCurrentDifficulty");

	Params::Mer2GameInstance_C_SetCurrentDifficulty Parms{};

	Parms._difficulty = _difficulty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameInstance.Mer2GameInstance_C.GetTimeScore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  _score                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::GetTimeScore(int32* _score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "GetTimeScore");

	Params::Mer2GameInstance_C_GetTimeScore Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (_score != nullptr)
		*_score = Parms._score;
}


// Function Mer2GameInstance.Mer2GameInstance_C.GetDodgoScore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  _score                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::GetDodgoScore(class APlayerController* PlayerController, int32* _score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "GetDodgoScore");

	Params::Mer2GameInstance_C_GetDodgoScore Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);

	if (_score != nullptr)
		*_score = Parms._score;
}


// Function Mer2GameInstance.Mer2GameInstance_C.SetCurrentSoundLevel
// (Public, BlueprintCallable, BlueprintEvent)

void UMer2GameInstance_C::SetCurrentSoundLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "SetCurrentSoundLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameInstance.Mer2GameInstance_C.GetCurrentDodgoScore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Is1P                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32*                                  _score                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::GetCurrentDodgoScore(bool Is1P, int32* _score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "GetCurrentDodgoScore");

	Params::Mer2GameInstance_C_GetCurrentDodgoScore Parms{};

	Parms.Is1P = Is1P;

	UObject::ProcessEvent(Func, &Parms);

	if (_score != nullptr)
		*_score = Parms._score;
}


// Function Mer2GameInstance.Mer2GameInstance_C.GetCurrentTimeScore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  _score                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::GetCurrentTimeScore(int32* _score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "GetCurrentTimeScore");

	Params::Mer2GameInstance_C_GetCurrentTimeScore Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (_score != nullptr)
		*_score = Parms._score;
}


// Function Mer2GameInstance.Mer2GameInstance_C.AddFrame
// (Public, BlueprintCallable, BlueprintEvent)

void UMer2GameInstance_C::AddFrame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "AddFrame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mer2GameInstance.Mer2GameInstance_C.UpdatePrintMsg
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnumScoreType                           scoreType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FscoreType&                ScoreConfig                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLocal                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMer2GameInstance_C::UpdatePrintMsg(EnumScoreType scoreType, const struct FscoreType& ScoreConfig, bool IsLocal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "UpdatePrintMsg");

	Params::Mer2GameInstance_C_UpdatePrintMsg Parms{};

	Parms.scoreType = scoreType;
	Parms.ScoreConfig = std::move(ScoreConfig);
	Parms.IsLocal = IsLocal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameInstance.Mer2GameInstance_C.AddLv2Score
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ELv2_ScoreType                          scoreType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::AddLv2Score(ELv2_ScoreType scoreType, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "AddLv2Score");

	Params::Mer2GameInstance_C_AddLv2Score Parms{};

	Parms.scoreType = scoreType;
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mer2GameInstance.Mer2GameInstance_C.GetLv1CurrentScoreType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FscoreType*                      scoreType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::GetLv1CurrentScoreType(struct FscoreType* scoreType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "GetLv1CurrentScoreType");

	Params::Mer2GameInstance_C_GetLv1CurrentScoreType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (scoreType != nullptr)
		*scoreType = std::move(Parms.scoreType);
}


// Function Mer2GameInstance.Mer2GameInstance_C.AddLv4Score
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ELv4_ScoreType                          Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMer2GameInstance_C::AddLv4Score(ELv4_ScoreType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mer2GameInstance_C", "AddLv4Score");

	Params::Mer2GameInstance_C_AddLv4Score Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}

}


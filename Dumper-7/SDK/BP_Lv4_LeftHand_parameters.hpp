#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lv4_LeftHand

#include "Basic.hpp"

#include "SiliconRising_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Lv4_LeftHand.BP_Lv4_LeftHand_C.ExecuteUbergraph_BP_Lv4_LeftHand
// 0x0120 (0x0120 - 0x0000)
struct BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemTypes                                    K2Node_Event_WeaponType;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimBP_newHand_Lv4_C*                  K2Node_DynamicCast_AsAnim_BP_New_Hand_Lv_4;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterHandAnimInstance*             K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue1;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsHold;                         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimBP_newHand_Lv4_C*                  K2Node_DynamicCast_AsAnim_BP_New_Hand_Lv_41;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimBP_newHand_Lv4_C*                  K2Node_DynamicCast_AsAnim_BP_New_Hand_Lv_42;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue2;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue1;      // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	class UAnimBP_newHand_Lv4_C*                  K2Node_DynamicCast_AsAnim_BP_New_Hand_Lv_43;       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ConvertTransformToRelative_ReturnValue;   // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand) == 0x000010, "Wrong alignment on BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand");
static_assert(sizeof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand) == 0x000120, "Wrong size on BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand");
static_assert(offsetof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand, EntryPoint) == 0x000000, "Member 'BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand, CallFunc_GetAnimInstance_ReturnValue) == 0x000040, "Member 'BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand, K2Node_Event_WeaponType) == 0x000048, "Member 'BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand::K2Node_Event_WeaponType' has a wrong offset!");
static_assert(offsetof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand, K2Node_DynamicCast_AsAnim_BP_New_Hand_Lv_4) == 0x000050, "Member 'BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand::K2Node_DynamicCast_AsAnim_BP_New_Hand_Lv_4' has a wrong offset!");
static_assert(offsetof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand, K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance) == 0x000060, "Member 'BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand::K2Node_DynamicCast_AsCharacter_Hand_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand, K2Node_DynamicCast_bSuccess1) == 0x000068, "Member 'BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand, K2Node_Event_DeltaSeconds) == 0x00006C, "Member 'BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand, CallFunc_GetAnimInstance_ReturnValue1) == 0x000070, "Member 'BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand::CallFunc_GetAnimInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand, K2Node_CustomEvent_IsHold) == 0x000078, "Member 'BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand::K2Node_CustomEvent_IsHold' has a wrong offset!");
static_assert(offsetof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand, K2Node_DynamicCast_AsAnim_BP_New_Hand_Lv_41) == 0x000080, "Member 'BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand::K2Node_DynamicCast_AsAnim_BP_New_Hand_Lv_41' has a wrong offset!");
static_assert(offsetof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand, K2Node_DynamicCast_bSuccess2) == 0x000088, "Member 'BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand, K2Node_DynamicCast_AsAnim_BP_New_Hand_Lv_42) == 0x000090, "Member 'BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand::K2Node_DynamicCast_AsAnim_BP_New_Hand_Lv_42' has a wrong offset!");
static_assert(offsetof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand, K2Node_DynamicCast_bSuccess3) == 0x000098, "Member 'BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand, CallFunc_GetAnimInstance_ReturnValue2) == 0x0000A0, "Member 'BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand::CallFunc_GetAnimInstance_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand, CallFunc_K2_GetComponentToWorld_ReturnValue1) == 0x0000B0, "Member 'BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand::CallFunc_K2_GetComponentToWorld_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand, K2Node_DynamicCast_AsAnim_BP_New_Hand_Lv_43) == 0x0000E0, "Member 'BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand::K2Node_DynamicCast_AsAnim_BP_New_Hand_Lv_43' has a wrong offset!");
static_assert(offsetof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand, K2Node_DynamicCast_bSuccess4) == 0x0000E8, "Member 'BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand, CallFunc_ConvertTransformToRelative_ReturnValue) == 0x0000F0, "Member 'BP_Lv4_LeftHand_C_ExecuteUbergraph_BP_Lv4_LeftHand::CallFunc_ConvertTransformToRelative_ReturnValue' has a wrong offset!");

// Function BP_Lv4_LeftHand.BP_Lv4_LeftHand_C.HoldDriveHand
// 0x0001 (0x0001 - 0x0000)
struct BP_Lv4_LeftHand_C_HoldDriveHand final
{
public:
	bool                                          IsHold;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lv4_LeftHand_C_HoldDriveHand) == 0x000001, "Wrong alignment on BP_Lv4_LeftHand_C_HoldDriveHand");
static_assert(sizeof(BP_Lv4_LeftHand_C_HoldDriveHand) == 0x000001, "Wrong size on BP_Lv4_LeftHand_C_HoldDriveHand");
static_assert(offsetof(BP_Lv4_LeftHand_C_HoldDriveHand, IsHold) == 0x000000, "Member 'BP_Lv4_LeftHand_C_HoldDriveHand::IsHold' has a wrong offset!");

// Function BP_Lv4_LeftHand.BP_Lv4_LeftHand_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Lv4_LeftHand_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv4_LeftHand_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Lv4_LeftHand_C_ReceiveTick");
static_assert(sizeof(BP_Lv4_LeftHand_C_ReceiveTick) == 0x000004, "Wrong size on BP_Lv4_LeftHand_C_ReceiveTick");
static_assert(offsetof(BP_Lv4_LeftHand_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Lv4_LeftHand_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Lv4_LeftHand.BP_Lv4_LeftHand_C.UpdateHandType
// 0x0001 (0x0001 - 0x0000)
struct BP_Lv4_LeftHand_C_UpdateHandType final
{
public:
	EItemTypes                                    WeaponType_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv4_LeftHand_C_UpdateHandType) == 0x000001, "Wrong alignment on BP_Lv4_LeftHand_C_UpdateHandType");
static_assert(sizeof(BP_Lv4_LeftHand_C_UpdateHandType) == 0x000001, "Wrong size on BP_Lv4_LeftHand_C_UpdateHandType");
static_assert(offsetof(BP_Lv4_LeftHand_C_UpdateHandType, WeaponType_0) == 0x000000, "Member 'BP_Lv4_LeftHand_C_UpdateHandType::WeaponType_0' has a wrong offset!");

}


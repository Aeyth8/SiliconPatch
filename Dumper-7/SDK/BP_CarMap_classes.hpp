#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CarMap

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_CarMap.BP_CarMap_C
// 0x0070 (0x0278 - 0x0208)
class UBP_CarMap_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0208(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       NewAnimation_1;                                    // 0x0210(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageHUD;                                          // 0x0218(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageHUD2;                                         // 0x0220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 mapGPS;                                            // 0x0228(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PlayerCar;                                         // 0x0230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PrisonGPS;                                         // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PrisonHUD;                                         // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ABP_Lv3_BaseCar_C*                      PlayerCarObj;                                      // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Lv3_BaseCar_C*                      PrisonObj;                                         // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PLayerCarLoc;                                      // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PrisonCarLoc;                                      // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHUD;                                             // 0x026C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DynamicM;                                          // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CarMap(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void SetHUDTarget(class ABP_Lv3_BaseCar_C* Player, class ABP_Lv3_BaseCar_C* Prison, float NewParam, bool DisplayHUD);
	void GetPlayerCarLoc(struct FVector2D* NewParam);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CarMap_C">();
	}
	static class UBP_CarMap_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CarMap_C>();
	}
};
static_assert(alignof(UBP_CarMap_C) == 0x000008, "Wrong alignment on UBP_CarMap_C");
static_assert(sizeof(UBP_CarMap_C) == 0x000278, "Wrong size on UBP_CarMap_C");
static_assert(offsetof(UBP_CarMap_C, UberGraphFrame) == 0x000208, "Member 'UBP_CarMap_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_CarMap_C, NewAnimation_1) == 0x000210, "Member 'UBP_CarMap_C::NewAnimation_1' has a wrong offset!");
static_assert(offsetof(UBP_CarMap_C, ImageHUD) == 0x000218, "Member 'UBP_CarMap_C::ImageHUD' has a wrong offset!");
static_assert(offsetof(UBP_CarMap_C, ImageHUD2) == 0x000220, "Member 'UBP_CarMap_C::ImageHUD2' has a wrong offset!");
static_assert(offsetof(UBP_CarMap_C, mapGPS) == 0x000228, "Member 'UBP_CarMap_C::mapGPS' has a wrong offset!");
static_assert(offsetof(UBP_CarMap_C, PlayerCar) == 0x000230, "Member 'UBP_CarMap_C::PlayerCar' has a wrong offset!");
static_assert(offsetof(UBP_CarMap_C, PrisonGPS) == 0x000238, "Member 'UBP_CarMap_C::PrisonGPS' has a wrong offset!");
static_assert(offsetof(UBP_CarMap_C, PrisonHUD) == 0x000240, "Member 'UBP_CarMap_C::PrisonHUD' has a wrong offset!");
static_assert(offsetof(UBP_CarMap_C, PlayerCarObj) == 0x000248, "Member 'UBP_CarMap_C::PlayerCarObj' has a wrong offset!");
static_assert(offsetof(UBP_CarMap_C, PrisonObj) == 0x000250, "Member 'UBP_CarMap_C::PrisonObj' has a wrong offset!");
static_assert(offsetof(UBP_CarMap_C, PLayerCarLoc) == 0x000258, "Member 'UBP_CarMap_C::PLayerCarLoc' has a wrong offset!");
static_assert(offsetof(UBP_CarMap_C, PrisonCarLoc) == 0x000260, "Member 'UBP_CarMap_C::PrisonCarLoc' has a wrong offset!");
static_assert(offsetof(UBP_CarMap_C, Distance) == 0x000268, "Member 'UBP_CarMap_C::Distance' has a wrong offset!");
static_assert(offsetof(UBP_CarMap_C, IsHUD) == 0x00026C, "Member 'UBP_CarMap_C::IsHUD' has a wrong offset!");
static_assert(offsetof(UBP_CarMap_C, DynamicM) == 0x000270, "Member 'UBP_CarMap_C::DynamicM' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PVP_LoaderServerConnection

#include "Basic.hpp"

#include "BP_PVP_LoaderServerConnection_classes.hpp"
#include "BP_PVP_LoaderServerConnection_parameters.hpp"


namespace SDK
{

// Function BP_PVP_LoaderServerConnection.BP_PVP_LoaderServerConnection_C.ExecuteUbergraph_BP_PVP_LoaderServerConnection
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PVP_LoaderServerConnection_C::ExecuteUbergraph_BP_PVP_LoaderServerConnection(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PVP_LoaderServerConnection_C", "ExecuteUbergraph_BP_PVP_LoaderServerConnection");

	Params::BP_PVP_LoaderServerConnection_C_ExecuteUbergraph_BP_PVP_LoaderServerConnection Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PVP_LoaderServerConnection.BP_PVP_LoaderServerConnection_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PVP_LoaderServerConnection_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PVP_LoaderServerConnection_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PVP_LoaderServerConnection.BP_PVP_LoaderServerConnection_C.Evt_OnConnected
// (Event, Public, BlueprintEvent)

void ABP_PVP_LoaderServerConnection_C::Evt_OnConnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PVP_LoaderServerConnection_C", "Evt_OnConnected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PVP_LoaderServerConnection.BP_PVP_LoaderServerConnection_C.Evt_ReceiveMessage
// (Event, Public, BlueprintEvent)
// Parameters:
// const struct FYYMsgData&                Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_PVP_LoaderServerConnection_C::Evt_ReceiveMessage(const struct FYYMsgData& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PVP_LoaderServerConnection_C", "Evt_ReceiveMessage");

	Params::BP_PVP_LoaderServerConnection_C_Evt_ReceiveMessage Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PVP_LoaderServerConnection.BP_PVP_LoaderServerConnection_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_PVP_LoaderServerConnection_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PVP_LoaderServerConnection_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PVP_LoaderServerConnection.BP_PVP_LoaderServerConnection_C.StringToFBIdent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FString&                    In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FYYMsgIdent*                     Out                                                    (Parm, OutParm, NoDestructor)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PVP_LoaderServerConnection_C::StringToFBIdent(const class FString& In, struct FYYMsgIdent* Out, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PVP_LoaderServerConnection_C", "StringToFBIdent");

	Params::BP_PVP_LoaderServerConnection_C_StringToFBIdent Parms{};

	Parms.In = std::move(In);

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_PVP_LoaderServerConnection.BP_PVP_LoaderServerConnection_C.FBIdentToString
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FYYMsgIdent&               In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class FString*                          Out                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_PVP_LoaderServerConnection_C::FBIdentToString(const struct FYYMsgIdent& In, class FString* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PVP_LoaderServerConnection_C", "FBIdentToString");

	Params::BP_PVP_LoaderServerConnection_C_FBIdentToString Parms{};

	Parms.In = std::move(In);

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function BP_PVP_LoaderServerConnection.BP_PVP_LoaderServerConnection_C.IsPlayerInRoom
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    PlayerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const struct FYYMsgReqAckRoomInfo&      RoomInfo_0                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// bool*                                   IsInRoom                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32*                                  Team                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FYYMsgReqAckRoomMember*          PlayerInfo                                             (Parm, OutParm)

void ABP_PVP_LoaderServerConnection_C::IsPlayerInRoom(const class FString& PlayerID, const struct FYYMsgReqAckRoomInfo& RoomInfo_0, bool* IsInRoom, int32* Team, struct FYYMsgReqAckRoomMember* PlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PVP_LoaderServerConnection_C", "IsPlayerInRoom");

	Params::BP_PVP_LoaderServerConnection_C_IsPlayerInRoom Parms{};

	Parms.PlayerID = std::move(PlayerID);
	Parms.RoomInfo_0 = std::move(RoomInfo_0);

	UObject::ProcessEvent(Func, &Parms);

	if (IsInRoom != nullptr)
		*IsInRoom = Parms.IsInRoom;

	if (Team != nullptr)
		*Team = Parms.Team;

	if (PlayerInfo != nullptr)
		*PlayerInfo = std::move(Parms.PlayerInfo);
}


// Function BP_PVP_LoaderServerConnection.BP_PVP_LoaderServerConnection_C.CountPlayers
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FYYMsgReqAckRoomInfo&      RoomInfo_0                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// int32*                                  Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PVP_LoaderServerConnection_C::CountPlayers(const struct FYYMsgReqAckRoomInfo& RoomInfo_0, int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PVP_LoaderServerConnection_C", "CountPlayers");

	Params::BP_PVP_LoaderServerConnection_C_CountPlayers Parms{};

	Parms.RoomInfo_0 = std::move(RoomInfo_0);

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}

}


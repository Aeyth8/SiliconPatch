#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_GameOver

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTT_GameOver.BTT_GameOver_C.ExecuteUbergraph_BTT_GameOver
// 0x0040 (0x0040 - 0x0000)
struct BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Lv2_NPCBase_C*                      K2Node_DynamicCast_AsBP_Lv_2_NPCBase;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver) == 0x000008, "Wrong alignment on BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver");
static_assert(sizeof(BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver) == 0x000040, "Wrong size on BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver");
static_assert(offsetof(BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver, EntryPoint) == 0x000000, "Member 'BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver, K2Node_DynamicCast_AsMer_2Game_Instance) == 0x000010, "Member 'BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver::K2Node_DynamicCast_AsMer_2Game_Instance' has a wrong offset!");
static_assert(offsetof(BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver, K2Node_Event_OwnerController) == 0x000020, "Member 'BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver, K2Node_Event_ControlledPawn) == 0x000028, "Member 'BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver, K2Node_DynamicCast_AsBP_Lv_2_NPCBase) == 0x000030, "Member 'BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver::K2Node_DynamicCast_AsBP_Lv_2_NPCBase' has a wrong offset!");
static_assert(offsetof(BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000039, "Member 'BTT_GameOver_C_ExecuteUbergraph_BTT_GameOver::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BTT_GameOver.BTT_GameOver_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_GameOver_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_GameOver_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_GameOver_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_GameOver_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_GameOver_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_GameOver_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_GameOver_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_GameOver_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_GameOver_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}


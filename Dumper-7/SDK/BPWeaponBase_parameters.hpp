#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPWeaponBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPWeaponBase.BPWeaponBase_C.ExecuteUbergraph_BPWeaponBase
// 0x0BA0 (0x0BA0 - 0x0000)
struct BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_Val;                            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_lsFromRightHand;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_Hand;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanFire_Result;                           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AWpn_Clip_C* Clip, bool IsDelay)> K2Node_CreateDelegate_OutputDelegate2;    // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ComputeYawRecoil_ReturnValue;             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ComputePitchRecoil_ReturnValue;           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ComputePushRecoil_Recoil_X_Push_;         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x00D0(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_TInterpTo_ReturnValue;                    // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ApplyRecoilToTransform_NewGunToWorld;     // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ApplyRecoilToTransform_NewGunToWorld1;    // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlaybackPosition_ReturnValue;          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPDefaultHand_C*                       K2Node_DynamicCast_AsBPDefault_Hand;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19B[0x5];                                      // 0x019B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AWpn_Clip_C* Clip, bool IsDelay)> K2Node_CreateDelegate_OutputDelegate4;    // 0x01A0(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPDefaultHand_C*                       K2Node_DynamicCast_AsBPDefault_Hand1;              // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C2[0x2];                                      // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPDefaultHand_C*                       K2Node_DynamicCast_AsBPDefault_Hand2;              // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterPVP_Base_C*                K2Node_DynamicCast_AsBP_Character_PVP_Base;        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    K2Node_DynamicCast_AsBP_Character_Base;            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x020B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponUI_C*                            K2Node_DynamicCast_AsWeapon_UI;                    // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_EventName;                      // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_EmitterTime;                    // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ParticleTime;                   // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Velocity;                       // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Direction;                      // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal;                         // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName;                       // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      K2Node_CustomEvent_PhysMat;                        // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2[0x6];                                      // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue4;                    // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Assist_Tutorial_C*                  K2Node_DynamicCast_AsBP_Assist_Tutorial;           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPDefaultHand_C*                       K2Node_DynamicCast_AsBPDefault_Hand3;              // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetAimPos_Pos;                            // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue5;                    // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterPVP_Base_C*                K2Node_DynamicCast_AsBP_Character_PVP_Base1;       // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterPVP_Base_C*                K2Node_DynamicCast_AsBP_Character_PVP_Base2;       // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x3];                                      // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetAimPos_Pos1;                           // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAimPos_Pos2;                           // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    K2Node_DynamicCast_AsBP_Character_Base1;           // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetAimPos_AimPos;                         // 0x0354(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsFromRightHand1;               // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Hand;                           // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPDefaultHand_C*                       K2Node_DynamicCast_AsBPDefault_Hand4;              // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Event_vfx;                                  // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_388[0x8];                                      // 0x0388(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Event_t;                                    // 0x0390(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location1;                 // 0x03C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation1;                 // 0x03CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale1;                    // 0x03D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnParticle_ReturnValue;                // 0x03E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x03F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F3[0x1];                                      // 0x03F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x03F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x0404(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_RotatorRotator_ReturnValue;    // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_411[0x3];                                      // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue1;                 // 0x0414(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_422[0x6];                                      // 0x0422(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x0428(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue9;                     // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    K2Node_DynamicCast_AsBP_Character_Base2;           // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess12;                     // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue10;                    // 0x04CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CB[0x5];                                      // 0x04CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_CustomEvent_TargetComponent;                // 0x04D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsFromRightHand;                // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E1[0xF];                                      // 0x04E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x04F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location2;                 // 0x0520(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation2;                 // 0x052C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale2;                    // 0x0538(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterPVP_Base_C*                K2Node_DynamicCast_AsBP_Character_PVP_Base3;       // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess13;                     // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_559[0x3];                                      // 0x0559(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0561(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x0562(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_563[0x1];                                      // 0x0563(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0564(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ComputeRollRecoil_ReturnValue;            // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue5;         // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue2;                 // 0x0578(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0584(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A1[0x3];                                      // 0x05A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x05A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x05AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue11;                    // 0x05AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue6;         // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B1[0x3];                                      // 0x05B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x05B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue12;                    // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B9[0x7];                                      // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult1; // 0x05C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UParticleSystemComponent*               CallFunc_SpawnParticle_ReturnValue1;               // 0x0648(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue13;                    // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue14;                    // 0x0651(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_652[0x6];                                      // 0x0652(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent2;   // 0x0658(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor2;            // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp2;             // 0x0668(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex2;        // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep1;            // 0x0674(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_675[0x3];                                      // 0x0675(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult1;           // 0x0678(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0700(0x0030)(IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue1;         // 0x0730(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location3;                 // 0x0738(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation3;                 // 0x0744(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale3;                    // 0x0750(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75C[0x4];                                      // 0x075C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TInterpTo_ReturnValue1;                   // 0x0760(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Distance_Between_Locations_Distance;      // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_794[0x4];                                      // 0x0794(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0798(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0821(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_822[0x6];                                      // 0x0822(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponAnimInstance*                    K2Node_DynamicCast_AsWeapon_Anim_Instance;         // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess14;                     // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue15;                    // 0x0839(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue16;                    // 0x083A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue17;                    // 0x083B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue18;                    // 0x083C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue19;                    // 0x083D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue20;                    // 0x083E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x083F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location4;                 // 0x0840(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation4;                 // 0x084C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale4;                    // 0x0858(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0864(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x086C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x0870(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87C[0x4];                                      // 0x087C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0880(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x08B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue21;                    // 0x0938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_939[0x7];                                      // 0x0939(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent1;   // 0x0940(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor1;            // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp1;             // 0x0950(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex1;        // 0x0958(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x095C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95D[0x3];                                      // 0x095D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0960(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x09E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x09F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x09F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A04[0x4];                                      // 0x0A04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName EventName, float EmitterTime, int32 ParticleTime, const struct FVector& Location, const struct FVector& Velocity, const struct FVector& Direction, const struct FVector& Normal, class FName BoneName, class UPhysicalMaterial* PhysMat)> K2Node_CreateDelegate_OutputDelegate5; // 0x0A08(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_A18[0x8];                                      // 0x0A18(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TLerp_ReturnValue;                        // 0x0A20(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue22;                    // 0x0A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue23;                    // 0x0A51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_TransformTransform_ReturnValue; // 0x0A52(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x0A53(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue24;                    // 0x0A54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue25;                    // 0x0A55(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue26;                    // 0x0A56(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue27;                    // 0x0A57(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue28;                    // 0x0A58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue29;                    // 0x0A59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5A[0x2];                                      // 0x0A5A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetThrowBulletDirection_Direction;        // 0x0A5C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0A68(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A74[0x4];                                      // 0x0A74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_Clip;                   // 0x0A78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWpn_Clip_C*                            K2Node_DynamicCast_AsWpn_Clip;                     // 0x0A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess15;                     // 0x0A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsHold;                         // 0x0A89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A8A[0x2];                                      // 0x0A8A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0A8C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A99[0x3];                                      // 0x0A99(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0A9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_On1;                            // 0x0AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA1[0x7];                                      // 0x0AA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWpn_Clip_C*                            K2Node_CustomEvent_Clip1;                          // 0x0AA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsDelay1;                       // 0x0AB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB1[0x7];                                      // 0x0AB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWpn_Clip_C*                            K2Node_CustomEvent_Clip;                           // 0x0AB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsDelay;                        // 0x0AC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue30;                    // 0x0AC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC2[0x6];                                      // 0x0AC2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue6;                    // 0x0AC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPDefaultHand_C*                       K2Node_DynamicCast_AsBPDefault_Hand5;              // 0x0AD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess16;                     // 0x0AD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD9[0x7];                                      // 0x0AD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue7;                    // 0x0AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPDefaultHand_C*                       K2Node_DynamicCast_AsBPDefault_Hand6;              // 0x0AE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess17;                     // 0x0AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue31;                    // 0x0AF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AF2[0x2];                                      // 0x0AF2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0AF4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue32;                    // 0x0B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue33;                    // 0x0B01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x0B02(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Value;                          // 0x0B03(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B04[0x4];                                      // 0x0B04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue1; // 0x0B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue6;                 // 0x0B18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0B19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0B1A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0B1B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue34;                    // 0x0B1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_On;                             // 0x0B1D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue35;                    // 0x0B1E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x0B1F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x0B20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B21[0x3];                                      // 0x0B21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0B24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0B28(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable2;                              // 0x0B34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select2_Default;                            // 0x0B38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue7;         // 0x0B3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue1;                      // 0x0B40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue8;         // 0x0B44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue2;                      // 0x0B48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue9;         // 0x0B4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0B50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x0B54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0B58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0B5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue3;                 // 0x0B60(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6C[0x4];                                      // 0x0B6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue1;               // 0x0B70(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase) == 0x000010, "Wrong alignment on BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase");
static_assert(sizeof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase) == 0x000BA0, "Wrong size on BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, EntryPoint) == 0x000000, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CreateDelegate_OutputDelegate1) == 0x000028, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_Val) == 0x000038, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_Val' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue1) == 0x000039, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_Event_DeltaSeconds) == 0x00003C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_ComponentBoundEvent_lsFromRightHand) == 0x000040, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_ComponentBoundEvent_lsFromRightHand' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_ComponentBoundEvent_Hand) == 0x000048, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_ComponentBoundEvent_Hand' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_CanFire_Result) == 0x000050, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_CanFire_Result' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CreateDelegate_OutputDelegate2) == 0x000058, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakTransform_Location) == 0x000068, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakTransform_Rotation) == 0x000074, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakTransform_Scale) == 0x000080, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_ComputeYawRecoil_ReturnValue) == 0x00008C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_ComputeYawRecoil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_ComputePitchRecoil_ReturnValue) == 0x000090, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_ComputePitchRecoil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_ComputePushRecoil_Recoil_X_Push_) == 0x000094, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_ComputePushRecoil_Recoil_X_Push_' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000098, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x00009C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x0000A0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x0000A4, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_MakeVector_ReturnValue) == 0x0000A8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B4, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetTimeRange_MinTime) == 0x0000C0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetTimeRange_MaxTime) == 0x0000C4, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x0000C8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CreateDelegate_OutputDelegate3) == 0x0000D0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000E0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_FClamp_ReturnValue) == 0x0000E4, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Not_PreBool_ReturnValue) == 0x0000E8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Not_PreBool_ReturnValue1) == 0x0000E9, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x0000EC, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_TInterpTo_ReturnValue) == 0x0000F0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_TInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_ApplyRecoilToTransform_NewGunToWorld) == 0x000120, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_ApplyRecoilToTransform_NewGunToWorld' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_ApplyRecoilToTransform_NewGunToWorld1) == 0x000150, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_ApplyRecoilToTransform_NewGunToWorld1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetOwner_ReturnValue) == 0x000180, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetPlaybackPosition_ReturnValue) == 0x000188, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetPlaybackPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_AsBPDefault_Hand) == 0x000190, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_AsBPDefault_Hand' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_bSuccess) == 0x000198, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000199, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue2) == 0x00019A, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CreateDelegate_OutputDelegate4) == 0x0001A0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetOwner_ReturnValue1) == 0x0001B0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_AsBPDefault_Hand1) == 0x0001B8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_AsBPDefault_Hand1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_bSuccess1) == 0x0001C0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue3) == 0x0001C1, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, Temp_struct_Variable) == 0x0001C4, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetOwner_ReturnValue2) == 0x0001D0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_AsBPDefault_Hand2) == 0x0001D8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_AsBPDefault_Hand2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_bSuccess2) == 0x0001E0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetOwner_ReturnValue3) == 0x0001E8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_AsBP_Character_PVP_Base) == 0x0001F0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_AsBP_Character_PVP_Base' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_bSuccess3) == 0x0001F8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_AsBP_Character_Base) == 0x000200, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_AsBP_Character_Base' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_bSuccess4) == 0x000208, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue4) == 0x000209, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Not_PreBool_ReturnValue2) == 0x00020A, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BooleanAND_ReturnValue) == 0x00020B, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Not_PreBool_ReturnValue3) == 0x00020C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000210, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BooleanAND_ReturnValue1) == 0x000218, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetRelativeTransform_ReturnValue) == 0x000220, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, Temp_bool_Variable) == 0x000250, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000258, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_AsWeapon_UI) == 0x000260, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_AsWeapon_UI' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_bSuccess5) == 0x000268, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_EventName) == 0x000270, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_EventName' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_EmitterTime) == 0x000278, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_EmitterTime' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_ParticleTime) == 0x00027C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_ParticleTime' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_Location) == 0x000280, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_Velocity) == 0x00028C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_Velocity' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_Direction) == 0x000298, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_Direction' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_Normal) == 0x0002A4, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_Normal' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_BoneName) == 0x0002B0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_PhysMat) == 0x0002B8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_PhysMat' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0002C0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x0002C8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue5) == 0x0002D0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsPlaying_ReturnValue) == 0x0002D1, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetOwner_ReturnValue4) == 0x0002D8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetOwner_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_AsBP_Assist_Tutorial) == 0x0002E0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_AsBP_Assist_Tutorial' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_bSuccess6) == 0x0002E8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_AsBPDefault_Hand3) == 0x0002F0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_AsBPDefault_Hand3' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_bSuccess7) == 0x0002F8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetAimPos_Pos) == 0x0002FC, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetAimPos_Pos' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetOwner_ReturnValue5) == 0x000308, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetOwner_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_AsBP_Character_PVP_Base1) == 0x000310, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_AsBP_Character_PVP_Base1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_bSuccess8) == 0x000318, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_AsBP_Character_PVP_Base2) == 0x000320, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_AsBP_Character_PVP_Base2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_bSuccess9) == 0x000328, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetAimPos_Pos1) == 0x00032C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetAimPos_Pos1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetAimPos_Pos2) == 0x000338, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetAimPos_Pos2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_AsBP_Character_Base1) == 0x000348, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_AsBP_Character_Base1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_bSuccess10) == 0x000350, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetAimPos_AimPos) == 0x000354, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetAimPos_AimPos' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_IsFromRightHand1) == 0x000360, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_IsFromRightHand1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_Hand) == 0x000368, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_Hand' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_AsBPDefault_Hand4) == 0x000370, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_AsBPDefault_Hand4' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_bSuccess11) == 0x000378, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_Event_vfx) == 0x000380, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_Event_vfx' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_Event_t) == 0x000390, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_Event_t' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakTransform_Location1) == 0x0003C0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakTransform_Location1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakTransform_Rotation1) == 0x0003CC, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakTransform_Rotation1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakTransform_Scale1) == 0x0003D8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakTransform_Scale1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_SpawnParticle_ReturnValue) == 0x0003E8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_SpawnParticle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue6) == 0x0003F0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue7) == 0x0003F1, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, Temp_bool_Has_Been_Initd_Variable) == 0x0003F2, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_MakeRotator_ReturnValue) == 0x0003F4, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue8) == 0x000400, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_MakeVector_ReturnValue1) == 0x000404, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_EqualEqual_RotatorRotator_ReturnValue) == 0x000410, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_EqualEqual_RotatorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_MakeRotator_ReturnValue1) == 0x000414, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_MakeRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Not_PreBool_ReturnValue4) == 0x000420, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BooleanAND_ReturnValue2) == 0x000421, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x000428, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetAttachParentActor_ReturnValue) == 0x0004B0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue9) == 0x0004B8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_AsBP_Character_Base2) == 0x0004C0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_AsBP_Character_Base2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_bSuccess12) == 0x0004C8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_bSuccess12' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0004C9, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue10) == 0x0004CA, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0004D0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_TargetComponent) == 0x0004D8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_TargetComponent' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_IsFromRightHand) == 0x0004E0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_IsFromRightHand' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetTransform_ReturnValue) == 0x0004F0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakTransform_Location2) == 0x000520, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakTransform_Location2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakTransform_Rotation2) == 0x00052C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakTransform_Rotation2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakTransform_Scale2) == 0x000538, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakTransform_Scale2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, Temp_float_Variable) == 0x000544, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetInstigator_ReturnValue) == 0x000548, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_AsBP_Character_PVP_Base3) == 0x000550, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_AsBP_Character_PVP_Base3' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_bSuccess13) == 0x000558, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_bSuccess13' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Add_FloatFloat_ReturnValue) == 0x00055C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Not_PreBool_ReturnValue5) == 0x000560, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, Temp_bool_Variable1) == 0x000561, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BooleanAND_ReturnValue3) == 0x000562, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_Select_Default) == 0x000564, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_ComputeRollRecoil_ReturnValue) == 0x000570, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_ComputeRollRecoil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Multiply_FloatFloat_ReturnValue5) == 0x000574, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Multiply_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_MakeRotator_ReturnValue2) == 0x000578, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_MakeRotator_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_ComposeRotators_ReturnValue) == 0x000584, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakRotator_Roll) == 0x000590, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakRotator_Pitch) == 0x000594, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakRotator_Yaw) == 0x000598, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, Temp_float_Variable1) == 0x00059C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_HasAuthority_ReturnValue) == 0x0005A0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Add_FloatFloat_ReturnValue1) == 0x0005A4, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_SwitchEnum_CmpSuccess) == 0x0005A8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, Temp_bool_Variable2) == 0x0005A9, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, Temp_bool_IsClosed_Variable) == 0x0005AA, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue11) == 0x0005AB, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Multiply_FloatFloat_ReturnValue6) == 0x0005AC, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Multiply_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0005B0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_Select1_Default) == 0x0005B4, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue12) == 0x0005B8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult1) == 0x0005C0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_SpawnParticle_ReturnValue1) == 0x000648, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_SpawnParticle_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue13) == 0x000650, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue14) == 0x000651, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_ComponentBoundEvent_OverlappedComponent2) == 0x000658, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_ComponentBoundEvent_OverlappedComponent2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_ComponentBoundEvent_OtherActor2) == 0x000660, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_ComponentBoundEvent_OtherActor2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_ComponentBoundEvent_OtherComp2) == 0x000668, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_ComponentBoundEvent_OtherComp2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_ComponentBoundEvent_OtherBodyIndex2) == 0x000670, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_ComponentBoundEvent_OtherBodyIndex2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_ComponentBoundEvent_bFromSweep1) == 0x000674, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_ComponentBoundEvent_bFromSweep1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_ComponentBoundEvent_SweepResult1) == 0x000678, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_ComponentBoundEvent_SweepResult1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000700, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_K2_GetRootComponent_ReturnValue1) == 0x000730, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_K2_GetRootComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakTransform_Location3) == 0x000738, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakTransform_Location3' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakTransform_Rotation3) == 0x000744, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakTransform_Rotation3' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakTransform_Scale3) == 0x000750, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakTransform_Scale3' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_TInterpTo_ReturnValue1) == 0x000760, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_TInterpTo_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Distance_Between_Locations_Distance) == 0x000790, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Distance_Between_Locations_Distance' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000798, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000820, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000821, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetAnimInstance_ReturnValue) == 0x000828, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_AsWeapon_Anim_Instance) == 0x000830, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_AsWeapon_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_bSuccess14) == 0x000838, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_bSuccess14' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue15) == 0x000839, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue16) == 0x00083A, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue17) == 0x00083B, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue18) == 0x00083C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue19) == 0x00083D, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue20) == 0x00083E, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x00083F, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakTransform_Location4) == 0x000840, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakTransform_Location4' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakTransform_Rotation4) == 0x00084C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakTransform_Rotation4' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakTransform_Scale4) == 0x000858, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakTransform_Scale4' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakVector_X) == 0x000864, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakVector_Y) == 0x000868, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BreakVector_Z) == 0x00086C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_MakeVector_ReturnValue2) == 0x000870, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_MakeTransform_ReturnValue) == 0x000880, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0008B0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue21) == 0x000938, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue21' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_ComponentBoundEvent_OverlappedComponent1) == 0x000940, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_ComponentBoundEvent_OverlappedComponent1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_ComponentBoundEvent_OtherActor1) == 0x000948, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_ComponentBoundEvent_OtherActor1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_ComponentBoundEvent_OtherComp1) == 0x000950, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_ComponentBoundEvent_OtherComp1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_ComponentBoundEvent_OtherBodyIndex1) == 0x000958, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_ComponentBoundEvent_OtherBodyIndex1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_ComponentBoundEvent_bFromSweep) == 0x00095C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_ComponentBoundEvent_SweepResult) == 0x000960, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0009E8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_ComponentBoundEvent_OtherActor) == 0x0009F0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_ComponentBoundEvent_OtherComp) == 0x0009F8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000A00, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CreateDelegate_OutputDelegate5) == 0x000A08, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_TLerp_ReturnValue) == 0x000A20, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_TLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue22) == 0x000A50, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue22' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue23) == 0x000A51, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue23' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_NearlyEqual_TransformTransform_ReturnValue) == 0x000A52, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_NearlyEqual_TransformTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BooleanAND_ReturnValue4) == 0x000A53, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue24) == 0x000A54, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue24' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue25) == 0x000A55, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue25' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue26) == 0x000A56, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue26' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue27) == 0x000A57, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue27' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue28) == 0x000A58, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue28' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue29) == 0x000A59, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue29' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetThrowBulletDirection_Direction) == 0x000A5C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetThrowBulletDirection_Direction' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000A68, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_ComponentBoundEvent_Clip) == 0x000A78, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_ComponentBoundEvent_Clip' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_AsWpn_Clip) == 0x000A80, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_AsWpn_Clip' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_bSuccess15) == 0x000A88, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_bSuccess15' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_IsHold) == 0x000A89, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_IsHold' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000A8C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Greater_IntInt_ReturnValue) == 0x000A98, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Subtract_IntInt_ReturnValue) == 0x000A9C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_On1) == 0x000AA0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_On1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_Clip1) == 0x000AA8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_Clip1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_IsDelay1) == 0x000AB0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_IsDelay1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_Clip) == 0x000AB8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_Clip' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_IsDelay) == 0x000AC0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_IsDelay' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue30) == 0x000AC1, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue30' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetOwner_ReturnValue6) == 0x000AC8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetOwner_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_AsBPDefault_Hand5) == 0x000AD0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_AsBPDefault_Hand5' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_bSuccess16) == 0x000AD8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_bSuccess16' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetOwner_ReturnValue7) == 0x000AE0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetOwner_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_AsBPDefault_Hand6) == 0x000AE8, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_AsBPDefault_Hand6' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_DynamicCast_bSuccess17) == 0x000AF0, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_DynamicCast_bSuccess17' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue31) == 0x000AF1, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue31' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000AF4, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue32) == 0x000B00, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue32' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue33) == 0x000B01, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue33' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, Temp_bool_Has_Been_Initd_Variable1) == 0x000B02, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_Value) == 0x000B03, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_GetMaterial_ReturnValue) == 0x000B08, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_CreateDynamicMaterialInstance_ReturnValue1) == 0x000B10, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_CreateDynamicMaterialInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Not_PreBool_ReturnValue6) == 0x000B18, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Not_PreBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BooleanOR_ReturnValue) == 0x000B19, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BooleanOR_ReturnValue1) == 0x000B1A, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000B1B, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue34) == 0x000B1C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue34' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_CustomEvent_On) == 0x000B1D, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_CustomEvent_On' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_IsValid_ReturnValue35) == 0x000B1E, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_IsValid_ReturnValue35' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_BooleanOR_ReturnValue2) == 0x000B1F, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, Temp_bool_IsClosed_Variable1) == 0x000B20, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Abs_ReturnValue) == 0x000B24, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_ClampVectorSize_ReturnValue) == 0x000B28, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, Temp_float_Variable2) == 0x000B34, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, K2Node_Select2_Default) == 0x000B38, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Multiply_FloatFloat_ReturnValue7) == 0x000B3C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Multiply_FloatFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_FClamp_ReturnValue1) == 0x000B40, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_FClamp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Multiply_FloatFloat_ReturnValue8) == 0x000B44, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Multiply_FloatFloat_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_FClamp_ReturnValue2) == 0x000B48, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_FClamp_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Multiply_FloatFloat_ReturnValue9) == 0x000B4C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Multiply_FloatFloat_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_RandomFloatInRange_ReturnValue) == 0x000B50, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_Add_FloatFloat_ReturnValue2) == 0x000B54, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_FMax_ReturnValue) == 0x000B58, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_FMin_ReturnValue) == 0x000B5C, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_MakeRotator_ReturnValue3) == 0x000B60, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_MakeRotator_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase, CallFunc_MakeTransform_ReturnValue1) == 0x000B70, "Member 'BPWeaponBase_C_ExecuteUbergraph_BPWeaponBase::CallFunc_MakeTransform_ReturnValue1' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.OnPullBoltHandOn
// 0x0001 (0x0001 - 0x0000)
struct BPWeaponBase_C_OnPullBoltHandOn final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponBase_C_OnPullBoltHandOn) == 0x000001, "Wrong alignment on BPWeaponBase_C_OnPullBoltHandOn");
static_assert(sizeof(BPWeaponBase_C_OnPullBoltHandOn) == 0x000001, "Wrong size on BPWeaponBase_C_OnPullBoltHandOn");
static_assert(offsetof(BPWeaponBase_C_OnPullBoltHandOn, On) == 0x000000, "Member 'BPWeaponBase_C_OnPullBoltHandOn::On' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.HightlightBolt
// 0x0001 (0x0001 - 0x0000)
struct BPWeaponBase_C_HightlightBolt final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponBase_C_HightlightBolt) == 0x000001, "Wrong alignment on BPWeaponBase_C_HightlightBolt");
static_assert(sizeof(BPWeaponBase_C_HightlightBolt) == 0x000001, "Wrong size on BPWeaponBase_C_HightlightBolt");
static_assert(offsetof(BPWeaponBase_C_HightlightBolt, Value) == 0x000000, "Member 'BPWeaponBase_C_HightlightBolt::Value' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.DoOnInsertClip_Base
// 0x0010 (0x0010 - 0x0000)
struct BPWeaponBase_C_DoOnInsertClip_Base final
{
public:
	class AWpn_Clip_C*                            Clip;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDelay;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponBase_C_DoOnInsertClip_Base) == 0x000008, "Wrong alignment on BPWeaponBase_C_DoOnInsertClip_Base");
static_assert(sizeof(BPWeaponBase_C_DoOnInsertClip_Base) == 0x000010, "Wrong size on BPWeaponBase_C_DoOnInsertClip_Base");
static_assert(offsetof(BPWeaponBase_C_DoOnInsertClip_Base, Clip) == 0x000000, "Member 'BPWeaponBase_C_DoOnInsertClip_Base::Clip' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_DoOnInsertClip_Base, IsDelay) == 0x000008, "Member 'BPWeaponBase_C_DoOnInsertClip_Base::IsDelay' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.CustomEvent_5
// 0x0010 (0x0010 - 0x0000)
struct BPWeaponBase_C_CustomEvent_5 final
{
public:
	class AWpn_Clip_C*                            Clip;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDelay;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponBase_C_CustomEvent_5) == 0x000008, "Wrong alignment on BPWeaponBase_C_CustomEvent_5");
static_assert(sizeof(BPWeaponBase_C_CustomEvent_5) == 0x000010, "Wrong size on BPWeaponBase_C_CustomEvent_5");
static_assert(offsetof(BPWeaponBase_C_CustomEvent_5, Clip) == 0x000000, "Member 'BPWeaponBase_C_CustomEvent_5::Clip' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_CustomEvent_5, IsDelay) == 0x000008, "Member 'BPWeaponBase_C_CustomEvent_5::IsDelay' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.SwitchLight
// 0x0001 (0x0001 - 0x0000)
struct BPWeaponBase_C_SwitchLight final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponBase_C_SwitchLight) == 0x000001, "Wrong alignment on BPWeaponBase_C_SwitchLight");
static_assert(sizeof(BPWeaponBase_C_SwitchLight) == 0x000001, "Wrong size on BPWeaponBase_C_SwitchLight");
static_assert(offsetof(BPWeaponBase_C_SwitchLight, On) == 0x000000, "Member 'BPWeaponBase_C_SwitchLight::On' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.BothHandHold
// 0x0001 (0x0001 - 0x0000)
struct BPWeaponBase_C_BothHandHold final
{
public:
	bool                                          IsHold;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponBase_C_BothHandHold) == 0x000001, "Wrong alignment on BPWeaponBase_C_BothHandHold");
static_assert(sizeof(BPWeaponBase_C_BothHandHold) == 0x000001, "Wrong size on BPWeaponBase_C_BothHandHold");
static_assert(offsetof(BPWeaponBase_C_BothHandHold, IsHold) == 0x000000, "Member 'BPWeaponBase_C_BothHandHold::IsHold' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.CheatOnInsertClip
// 0x0008 (0x0008 - 0x0000)
struct BPWeaponBase_C_CheatOnInsertClip final
{
public:
	class AActor*                                 Clip;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeaponBase_C_CheatOnInsertClip) == 0x000008, "Wrong alignment on BPWeaponBase_C_CheatOnInsertClip");
static_assert(sizeof(BPWeaponBase_C_CheatOnInsertClip) == 0x000008, "Wrong size on BPWeaponBase_C_CheatOnInsertClip");
static_assert(offsetof(BPWeaponBase_C_CheatOnInsertClip, Clip) == 0x000000, "Member 'BPWeaponBase_C_CheatOnInsertClip::Clip' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BPWeaponBase_C_BndEvt__SecondHandCheck_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BPWeaponBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPWeaponBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BPWeaponBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BPWeaponBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BPWeaponBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BPWeaponBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BPWeaponBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BPWeaponBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BPWeaponBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BPWeaponBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BPWeaponBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BPWeaponBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.FlyToTarget
// 0x0010 (0x0010 - 0x0000)
struct BPWeaponBase_C_FlyToTarget final
{
public:
	class USceneComponent*                        TargetComponent_0;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFromRightHand;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponBase_C_FlyToTarget) == 0x000008, "Wrong alignment on BPWeaponBase_C_FlyToTarget");
static_assert(sizeof(BPWeaponBase_C_FlyToTarget) == 0x000010, "Wrong size on BPWeaponBase_C_FlyToTarget");
static_assert(offsetof(BPWeaponBase_C_FlyToTarget, TargetComponent_0) == 0x000000, "Member 'BPWeaponBase_C_FlyToTarget::TargetComponent_0' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_FlyToTarget, IsFromRightHand) == 0x000008, "Member 'BPWeaponBase_C_FlyToTarget::IsFromRightHand' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.BP_PlayShellDropVfx
// 0x0040 (0x0040 - 0x0000)
struct BPWeaponBase_C_BP_PlayShellDropVfx final
{
public:
	class UParticleSystem*                        VFX;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             T;                                                 // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponBase_C_BP_PlayShellDropVfx) == 0x000010, "Wrong alignment on BPWeaponBase_C_BP_PlayShellDropVfx");
static_assert(sizeof(BPWeaponBase_C_BP_PlayShellDropVfx) == 0x000040, "Wrong size on BPWeaponBase_C_BP_PlayShellDropVfx");
static_assert(offsetof(BPWeaponBase_C_BP_PlayShellDropVfx, VFX) == 0x000000, "Member 'BPWeaponBase_C_BP_PlayShellDropVfx::VFX' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_BP_PlayShellDropVfx, T) == 0x000010, "Member 'BPWeaponBase_C_BP_PlayShellDropVfx::T' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.OnLineTriggerPull
// 0x0010 (0x0010 - 0x0000)
struct BPWeaponBase_C_OnLineTriggerPull final
{
public:
	bool                                          IsFromRightHand;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 hand;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeaponBase_C_OnLineTriggerPull) == 0x000008, "Wrong alignment on BPWeaponBase_C_OnLineTriggerPull");
static_assert(sizeof(BPWeaponBase_C_OnLineTriggerPull) == 0x000010, "Wrong size on BPWeaponBase_C_OnLineTriggerPull");
static_assert(offsetof(BPWeaponBase_C_OnLineTriggerPull, IsFromRightHand) == 0x000000, "Member 'BPWeaponBase_C_OnLineTriggerPull::IsFromRightHand' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_OnLineTriggerPull, hand) == 0x000008, "Member 'BPWeaponBase_C_OnLineTriggerPull::hand' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.CustomEvent_0
// 0x0050 (0x0050 - 0x0000)
struct BPWeaponBase_C_CustomEvent_0 final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmitterTime;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ParticleTime;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      PhysMat;                                           // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeaponBase_C_CustomEvent_0) == 0x000008, "Wrong alignment on BPWeaponBase_C_CustomEvent_0");
static_assert(sizeof(BPWeaponBase_C_CustomEvent_0) == 0x000050, "Wrong size on BPWeaponBase_C_CustomEvent_0");
static_assert(offsetof(BPWeaponBase_C_CustomEvent_0, EventName) == 0x000000, "Member 'BPWeaponBase_C_CustomEvent_0::EventName' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_CustomEvent_0, EmitterTime) == 0x000008, "Member 'BPWeaponBase_C_CustomEvent_0::EmitterTime' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_CustomEvent_0, ParticleTime) == 0x00000C, "Member 'BPWeaponBase_C_CustomEvent_0::ParticleTime' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_CustomEvent_0, Location) == 0x000010, "Member 'BPWeaponBase_C_CustomEvent_0::Location' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_CustomEvent_0, Velocity) == 0x00001C, "Member 'BPWeaponBase_C_CustomEvent_0::Velocity' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_CustomEvent_0, Direction) == 0x000028, "Member 'BPWeaponBase_C_CustomEvent_0::Direction' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_CustomEvent_0, Normal) == 0x000034, "Member 'BPWeaponBase_C_CustomEvent_0::Normal' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_CustomEvent_0, BoneName) == 0x000040, "Member 'BPWeaponBase_C_CustomEvent_0::BoneName' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_CustomEvent_0, PhysMat) == 0x000048, "Member 'BPWeaponBase_C_CustomEvent_0::PhysMat' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.BndEvt__BP_InteractionComponent_K2Node_ComponentBoundEvent_1_OnTriggerPulled__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BPWeaponBase_C_BndEvt__BP_InteractionComponent_K2Node_ComponentBoundEvent_1_OnTriggerPulled__DelegateSignature final
{
public:
	bool                                          lsFromRightHand;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 hand;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeaponBase_C_BndEvt__BP_InteractionComponent_K2Node_ComponentBoundEvent_1_OnTriggerPulled__DelegateSignature) == 0x000008, "Wrong alignment on BPWeaponBase_C_BndEvt__BP_InteractionComponent_K2Node_ComponentBoundEvent_1_OnTriggerPulled__DelegateSignature");
static_assert(sizeof(BPWeaponBase_C_BndEvt__BP_InteractionComponent_K2Node_ComponentBoundEvent_1_OnTriggerPulled__DelegateSignature) == 0x000010, "Wrong size on BPWeaponBase_C_BndEvt__BP_InteractionComponent_K2Node_ComponentBoundEvent_1_OnTriggerPulled__DelegateSignature");
static_assert(offsetof(BPWeaponBase_C_BndEvt__BP_InteractionComponent_K2Node_ComponentBoundEvent_1_OnTriggerPulled__DelegateSignature, lsFromRightHand) == 0x000000, "Member 'BPWeaponBase_C_BndEvt__BP_InteractionComponent_K2Node_ComponentBoundEvent_1_OnTriggerPulled__DelegateSignature::lsFromRightHand' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_BndEvt__BP_InteractionComponent_K2Node_ComponentBoundEvent_1_OnTriggerPulled__DelegateSignature, hand) == 0x000008, "Member 'BPWeaponBase_C_BndEvt__BP_InteractionComponent_K2Node_ComponentBoundEvent_1_OnTriggerPulled__DelegateSignature::hand' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BPWeaponBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeaponBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BPWeaponBase_C_ReceiveTick");
static_assert(sizeof(BPWeaponBase_C_ReceiveTick) == 0x000004, "Wrong size on BPWeaponBase_C_ReceiveTick");
static_assert(offsetof(BPWeaponBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BPWeaponBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.SetRenderCustomDepth
// 0x0001 (0x0001 - 0x0000)
struct BPWeaponBase_C_SetRenderCustomDepth final
{
public:
	bool                                          Val;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponBase_C_SetRenderCustomDepth) == 0x000001, "Wrong alignment on BPWeaponBase_C_SetRenderCustomDepth");
static_assert(sizeof(BPWeaponBase_C_SetRenderCustomDepth) == 0x000001, "Wrong size on BPWeaponBase_C_SetRenderCustomDepth");
static_assert(offsetof(BPWeaponBase_C_SetRenderCustomDepth, Val) == 0x000000, "Member 'BPWeaponBase_C_SetRenderCustomDepth::Val' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.UserConstructionScript
// 0x0002 (0x0002 - 0x0000)
struct BPWeaponBase_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponBase_C_UserConstructionScript) == 0x000001, "Wrong alignment on BPWeaponBase_C_UserConstructionScript");
static_assert(sizeof(BPWeaponBase_C_UserConstructionScript) == 0x000002, "Wrong size on BPWeaponBase_C_UserConstructionScript");
static_assert(offsetof(BPWeaponBase_C_UserConstructionScript, CallFunc_DoesSocketExist_ReturnValue) == 0x000000, "Member 'BPWeaponBase_C_UserConstructionScript::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000001, "Member 'BPWeaponBase_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.SetUIText
// 0x0054 (0x0054 - 0x0000)
struct BPWeaponBase_C_SetUIText final
{
public:
	bool                                          IsLeft;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLeftBulletInBag_Num;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue1;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue2;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue1;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue3;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLeftBulletInBag_Num1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue1;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable1;                              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeaponBase_C_SetUIText) == 0x000004, "Wrong alignment on BPWeaponBase_C_SetUIText");
static_assert(sizeof(BPWeaponBase_C_SetUIText) == 0x000054, "Wrong size on BPWeaponBase_C_SetUIText");
static_assert(offsetof(BPWeaponBase_C_SetUIText, IsLeft) == 0x000000, "Member 'BPWeaponBase_C_SetUIText::IsLeft' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, CallFunc_Divide_IntInt_ReturnValue) == 0x000004, "Member 'BPWeaponBase_C_SetUIText::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BPWeaponBase_C_SetUIText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000009, "Member 'BPWeaponBase_C_SetUIText::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'BPWeaponBase_C_SetUIText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, CallFunc_GetLeftBulletInBag_Num) == 0x00000C, "Member 'BPWeaponBase_C_SetUIText::CallFunc_GetLeftBulletInBag_Num' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'BPWeaponBase_C_SetUIText::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, CallFunc_Divide_IntInt_ReturnValue1) == 0x000014, "Member 'BPWeaponBase_C_SetUIText::CallFunc_Divide_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000018, "Member 'BPWeaponBase_C_SetUIText::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'BPWeaponBase_C_SetUIText::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, CallFunc_Percent_IntInt_ReturnValue) == 0x000020, "Member 'BPWeaponBase_C_SetUIText::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, Temp_bool_Variable) == 0x000024, "Member 'BPWeaponBase_C_SetUIText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000028, "Member 'BPWeaponBase_C_SetUIText::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, CallFunc_Divide_IntInt_ReturnValue2) == 0x00002C, "Member 'BPWeaponBase_C_SetUIText::CallFunc_Divide_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, CallFunc_Percent_IntInt_ReturnValue1) == 0x000030, "Member 'BPWeaponBase_C_SetUIText::CallFunc_Percent_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000034, "Member 'BPWeaponBase_C_SetUIText::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, CallFunc_Conv_IntToFloat_ReturnValue3) == 0x000038, "Member 'BPWeaponBase_C_SetUIText::CallFunc_Conv_IntToFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, CallFunc_IsValid_ReturnValue1) == 0x00003C, "Member 'BPWeaponBase_C_SetUIText::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, Temp_float_Variable) == 0x000040, "Member 'BPWeaponBase_C_SetUIText::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, CallFunc_GetLeftBulletInBag_Num1) == 0x000044, "Member 'BPWeaponBase_C_SetUIText::CallFunc_GetLeftBulletInBag_Num1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, CallFunc_GreaterEqual_IntInt_ReturnValue1) == 0x000048, "Member 'BPWeaponBase_C_SetUIText::CallFunc_GreaterEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, Temp_float_Variable1) == 0x00004C, "Member 'BPWeaponBase_C_SetUIText::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SetUIText, K2Node_Select_Default) == 0x000050, "Member 'BPWeaponBase_C_SetUIText::K2Node_Select_Default' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.ComputeYawRecoil
// 0x000C (0x000C - 0x0000)
struct BPWeaponBase_C_ComputeYawRecoil final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NegateFloatRandom_Out;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeaponBase_C_ComputeYawRecoil) == 0x000004, "Wrong alignment on BPWeaponBase_C_ComputeYawRecoil");
static_assert(sizeof(BPWeaponBase_C_ComputeYawRecoil) == 0x00000C, "Wrong size on BPWeaponBase_C_ComputeYawRecoil");
static_assert(offsetof(BPWeaponBase_C_ComputeYawRecoil, ReturnValue) == 0x000000, "Member 'BPWeaponBase_C_ComputeYawRecoil::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ComputeYawRecoil, CallFunc_RandomFloatInRange_ReturnValue) == 0x000004, "Member 'BPWeaponBase_C_ComputeYawRecoil::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ComputeYawRecoil, CallFunc_NegateFloatRandom_Out) == 0x000008, "Member 'BPWeaponBase_C_ComputeYawRecoil::CallFunc_NegateFloatRandom_Out' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.ComputePitchRecoil
// 0x0008 (0x0008 - 0x0000)
struct BPWeaponBase_C_ComputePitchRecoil final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeaponBase_C_ComputePitchRecoil) == 0x000004, "Wrong alignment on BPWeaponBase_C_ComputePitchRecoil");
static_assert(sizeof(BPWeaponBase_C_ComputePitchRecoil) == 0x000008, "Wrong size on BPWeaponBase_C_ComputePitchRecoil");
static_assert(offsetof(BPWeaponBase_C_ComputePitchRecoil, ReturnValue) == 0x000000, "Member 'BPWeaponBase_C_ComputePitchRecoil::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ComputePitchRecoil, CallFunc_RandomFloatInRange_ReturnValue) == 0x000004, "Member 'BPWeaponBase_C_ComputePitchRecoil::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.ComputePushRecoil
// 0x0004 (0x0004 - 0x0000)
struct BPWeaponBase_C_ComputePushRecoil final
{
public:
	float                                         Recoil_X_Push_;                                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeaponBase_C_ComputePushRecoil) == 0x000004, "Wrong alignment on BPWeaponBase_C_ComputePushRecoil");
static_assert(sizeof(BPWeaponBase_C_ComputePushRecoil) == 0x000004, "Wrong size on BPWeaponBase_C_ComputePushRecoil");
static_assert(offsetof(BPWeaponBase_C_ComputePushRecoil, Recoil_X_Push_) == 0x000000, "Member 'BPWeaponBase_C_ComputePushRecoil::Recoil_X_Push_' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.ApplyRecoilToTransform
// 0x0090 (0x0090 - 0x0000)
struct BPWeaponBase_C_ApplyRecoilToTransform final
{
public:
	struct FTransform                             GunToWorld;                                        // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             NewGunToWorld;                                     // 0x0030(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponBase_C_ApplyRecoilToTransform) == 0x000010, "Wrong alignment on BPWeaponBase_C_ApplyRecoilToTransform");
static_assert(sizeof(BPWeaponBase_C_ApplyRecoilToTransform) == 0x000090, "Wrong size on BPWeaponBase_C_ApplyRecoilToTransform");
static_assert(offsetof(BPWeaponBase_C_ApplyRecoilToTransform, GunToWorld) == 0x000000, "Member 'BPWeaponBase_C_ApplyRecoilToTransform::GunToWorld' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ApplyRecoilToTransform, NewGunToWorld) == 0x000030, "Member 'BPWeaponBase_C_ApplyRecoilToTransform::NewGunToWorld' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ApplyRecoilToTransform, CallFunc_ComposeTransforms_ReturnValue) == 0x000060, "Member 'BPWeaponBase_C_ApplyRecoilToTransform::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.SpawnClip
// 0x0050 (0x0050 - 0x0000)
struct BPWeaponBase_C_SpawnClip final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0xE];                                        // 0x0002(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWpn_Clip_C*                            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeaponBase_C_SpawnClip) == 0x000010, "Wrong alignment on BPWeaponBase_C_SpawnClip");
static_assert(sizeof(BPWeaponBase_C_SpawnClip) == 0x000050, "Wrong size on BPWeaponBase_C_SpawnClip");
static_assert(offsetof(BPWeaponBase_C_SpawnClip, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BPWeaponBase_C_SpawnClip::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SpawnClip, CallFunc_IsValidClass_ReturnValue) == 0x000001, "Member 'BPWeaponBase_C_SpawnClip::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SpawnClip, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BPWeaponBase_C_SpawnClip::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SpawnClip, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'BPWeaponBase_C_SpawnClip::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_SpawnClip, CallFunc_FinishSpawningActor_ReturnValue) == 0x000048, "Member 'BPWeaponBase_C_SpawnClip::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.DropClip
// 0x0003 (0x0003 - 0x0000)
struct BPWeaponBase_C_DropClip final
{
public:
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponBase_C_DropClip) == 0x000001, "Wrong alignment on BPWeaponBase_C_DropClip");
static_assert(sizeof(BPWeaponBase_C_DropClip) == 0x000003, "Wrong size on BPWeaponBase_C_DropClip");
static_assert(offsetof(BPWeaponBase_C_DropClip, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000000, "Member 'BPWeaponBase_C_DropClip::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_DropClip, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BPWeaponBase_C_DropClip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_DropClip, CallFunc_IsValid_ReturnValue1) == 0x000002, "Member 'BPWeaponBase_C_DropClip::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.GetLeftBulletInBag
// 0x0008 (0x0008 - 0x0000)
struct BPWeaponBase_C_GetLeftBulletInBag final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponBase_C_GetLeftBulletInBag) == 0x000004, "Wrong alignment on BPWeaponBase_C_GetLeftBulletInBag");
static_assert(sizeof(BPWeaponBase_C_GetLeftBulletInBag) == 0x000008, "Wrong size on BPWeaponBase_C_GetLeftBulletInBag");
static_assert(offsetof(BPWeaponBase_C_GetLeftBulletInBag, Num) == 0x000000, "Member 'BPWeaponBase_C_GetLeftBulletInBag::Num' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_GetLeftBulletInBag, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'BPWeaponBase_C_GetLeftBulletInBag::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_GetLeftBulletInBag, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x000005, "Member 'BPWeaponBase_C_GetLeftBulletInBag::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_GetLeftBulletInBag, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'BPWeaponBase_C_GetLeftBulletInBag::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.AjustUI
// 0x00E0 (0x00E0 - 0x0000)
struct BPWeaponBase_C_AjustUI final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_lsPhoneDevice_outlsPhone;                 // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPWeaponBase_C_AjustUI) == 0x000010, "Wrong alignment on BPWeaponBase_C_AjustUI");
static_assert(sizeof(BPWeaponBase_C_AjustUI) == 0x0000E0, "Wrong size on BPWeaponBase_C_AjustUI");
static_assert(offsetof(BPWeaponBase_C_AjustUI, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'BPWeaponBase_C_AjustUI::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_AjustUI, CallFunc_GetRelativeTransform_ReturnValue) == 0x000010, "Member 'BPWeaponBase_C_AjustUI::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_AjustUI, K2Node_DynamicCast_AsMer_2Game_Instance) == 0x000040, "Member 'BPWeaponBase_C_AjustUI::K2Node_DynamicCast_AsMer_2Game_Instance' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_AjustUI, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BPWeaponBase_C_AjustUI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_AjustUI, CallFunc_lsPhoneDevice_outlsPhone) == 0x000049, "Member 'BPWeaponBase_C_AjustUI::CallFunc_lsPhoneDevice_outlsPhone' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_AjustUI, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000050, "Member 'BPWeaponBase_C_AjustUI::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.CheckSize
// 0x0048 (0x0048 - 0x0000)
struct BPWeaponBase_C_CheckSize final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPDefaultHand_C*                       K2Node_DynamicCast_AsBPDefault_Hand;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeaponBase_C_CheckSize) == 0x000008, "Wrong alignment on BPWeaponBase_C_CheckSize");
static_assert(sizeof(BPWeaponBase_C_CheckSize) == 0x000048, "Wrong size on BPWeaponBase_C_CheckSize");
static_assert(offsetof(BPWeaponBase_C_CheckSize, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BPWeaponBase_C_CheckSize::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_CheckSize, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000008, "Member 'BPWeaponBase_C_CheckSize::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_CheckSize, K2Node_DynamicCast_AsBPDefault_Hand) == 0x000018, "Member 'BPWeaponBase_C_CheckSize::K2Node_DynamicCast_AsBPDefault_Hand' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_CheckSize, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPWeaponBase_C_CheckSize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_CheckSize, CallFunc_BreakVector_X) == 0x000024, "Member 'BPWeaponBase_C_CheckSize::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_CheckSize, CallFunc_BreakVector_Y) == 0x000028, "Member 'BPWeaponBase_C_CheckSize::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_CheckSize, CallFunc_BreakVector_Z) == 0x00002C, "Member 'BPWeaponBase_C_CheckSize::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_CheckSize, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'BPWeaponBase_C_CheckSize::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_CheckSize, CallFunc_Less_FloatFloat_ReturnValue) == 0x000034, "Member 'BPWeaponBase_C_CheckSize::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_CheckSize, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'BPWeaponBase_C_CheckSize::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.ComputeRollRecoil
// 0x000C (0x000C - 0x0000)
struct BPWeaponBase_C_ComputeRollRecoil final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeaponBase_C_ComputeRollRecoil) == 0x000004, "Wrong alignment on BPWeaponBase_C_ComputeRollRecoil");
static_assert(sizeof(BPWeaponBase_C_ComputeRollRecoil) == 0x00000C, "Wrong size on BPWeaponBase_C_ComputeRollRecoil");
static_assert(offsetof(BPWeaponBase_C_ComputeRollRecoil, ReturnValue) == 0x000000, "Member 'BPWeaponBase_C_ComputeRollRecoil::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ComputeRollRecoil, CallFunc_RandomFloatInRange_ReturnValue) == 0x000004, "Member 'BPWeaponBase_C_ComputeRollRecoil::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_ComputeRollRecoil, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BPWeaponBase_C_ComputeRollRecoil::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.OnRep_ClipActor
// 0x0010 (0x0010 - 0x0000)
struct BPWeaponBase_C_OnRep_ClipActor final
{
public:
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPWeaponBase_C_OnRep_ClipActor) == 0x000008, "Wrong alignment on BPWeaponBase_C_OnRep_ClipActor");
static_assert(sizeof(BPWeaponBase_C_OnRep_ClipActor) == 0x000010, "Wrong size on BPWeaponBase_C_OnRep_ClipActor");
static_assert(offsetof(BPWeaponBase_C_OnRep_ClipActor, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000000, "Member 'BPWeaponBase_C_OnRep_ClipActor::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_OnRep_ClipActor, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000008, "Member 'BPWeaponBase_C_OnRep_ClipActor::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.GetThrowBulletDirection
// 0x0018 (0x0018 - 0x0000)
struct BPWeaponBase_C_GetThrowBulletDirection final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeaponBase_C_GetThrowBulletDirection) == 0x000004, "Wrong alignment on BPWeaponBase_C_GetThrowBulletDirection");
static_assert(sizeof(BPWeaponBase_C_GetThrowBulletDirection) == 0x000018, "Wrong size on BPWeaponBase_C_GetThrowBulletDirection");
static_assert(offsetof(BPWeaponBase_C_GetThrowBulletDirection, Direction) == 0x000000, "Member 'BPWeaponBase_C_GetThrowBulletDirection::Direction' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_GetThrowBulletDirection, CallFunc_GetForwardVector_ReturnValue) == 0x00000C, "Member 'BPWeaponBase_C_GetThrowBulletDirection::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");

// Function BPWeaponBase.BPWeaponBase_C.GetBoltLength
// 0x0008 (0x0008 - 0x0000)
struct BPWeaponBase_C_GetBoltLength final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWeaponBase_C_GetBoltLength) == 0x000004, "Wrong alignment on BPWeaponBase_C_GetBoltLength");
static_assert(sizeof(BPWeaponBase_C_GetBoltLength) == 0x000008, "Wrong size on BPWeaponBase_C_GetBoltLength");
static_assert(offsetof(BPWeaponBase_C_GetBoltLength, Value) == 0x000000, "Member 'BPWeaponBase_C_GetBoltLength::Value' has a wrong offset!");
static_assert(offsetof(BPWeaponBase_C_GetBoltLength, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'BPWeaponBase_C_GetBoltLength::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AI_Wave

#include "Basic.hpp"

#include "BP_AI_Wave_classes.hpp"
#include "BP_AI_Wave_parameters.hpp"


namespace SDK
{

// Function BP_AI_Wave.BP_AI_Wave_C.ExecuteUbergraph_BP_AI_Wave
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AI_Wave_C::ExecuteUbergraph_BP_AI_Wave(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "ExecuteUbergraph_BP_AI_Wave");

	Params::BP_AI_Wave_C_ExecuteUbergraph_BP_AI_Wave Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AI_Wave.BP_AI_Wave_C.DeactiveRestricWalls
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsCheckNextWave                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AI_Wave_C::DeactiveRestricWalls(bool IsCheckNextWave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "DeactiveRestricWalls");

	Params::BP_AI_Wave_C_DeactiveRestricWalls Parms{};

	Parms.IsCheckNextWave = IsCheckNextWave;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AI_Wave.BP_AI_Wave_C.BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AI_Wave_C::BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AI_Wave.BP_AI_Wave_C.ActiveMe_Trigger
// (BlueprintCallable, BlueprintEvent)

void ABP_AI_Wave_C::ActiveMe_Trigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "ActiveMe_Trigger");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AI_Wave.BP_AI_Wave_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_AI_Wave_C::BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_AI_Wave_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AI_Wave.BP_AI_Wave_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)

void ABP_AI_Wave_C::CustomEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "CustomEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AI_Wave.BP_AI_Wave_C.PrivateActiveMe
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NotCheckChoice                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AI_Wave_C::PrivateActiveMe(bool NotCheckChoice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "PrivateActiveMe");

	Params::BP_AI_Wave_C_PrivateActiveMe Parms{};

	Parms.NotCheckChoice = NotCheckChoice;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AI_Wave.BP_AI_Wave_C.StartVerify
// (BlueprintCallable, BlueprintEvent)

void ABP_AI_Wave_C::StartVerify()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "StartVerify");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AI_Wave.BP_AI_Wave_C.CustomEvent_1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const class FString&                    Msg                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_AI_Wave_C::CustomEvent_1(bool Success, const class FString& Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "CustomEvent_1");

	Params::BP_AI_Wave_C_CustomEvent_1 Parms{};

	Parms.Success = Success;
	Parms.Msg = std::move(Msg);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AI_Wave.BP_AI_Wave_C.OnManalTeleport
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AI_Wave_C::OnManalTeleport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "OnManalTeleport");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AI_Wave.BP_AI_Wave_C.OnSetSwitchPoints
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsClear                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AI_Wave_C::OnSetSwitchPoints(bool IsClear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "OnSetSwitchPoints");

	Params::BP_AI_Wave_C_OnSetSwitchPoints Parms{};

	Parms.IsClear = IsClear;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AI_Wave.BP_AI_Wave_C.ActiveSwitchPoints
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AI_Wave_C::ActiveSwitchPoints(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "ActiveSwitchPoints");

	Params::BP_AI_Wave_C_ActiveSwitchPoints Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AI_Wave.BP_AI_Wave_C.OnFinishAll
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AI_Wave_C::OnFinishAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "OnFinishAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AI_Wave.BP_AI_Wave_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AI_Wave_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "ReceiveTick");

	Params::BP_AI_Wave_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AI_Wave.BP_AI_Wave_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AI_Wave_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AI_Wave.BP_AI_Wave_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AI_Wave_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AI_Wave.BP_AI_Wave_C.ActiveMe
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NotCheckChoose                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AI_Wave_C::ActiveMe(bool NotCheckChoose)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "ActiveMe");

	Params::BP_AI_Wave_C_ActiveMe Parms{};

	Parms.NotCheckChoose = NotCheckChoose;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AI_Wave.BP_AI_Wave_C.AddSpawner
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FStruct_SpawnerConfig&     Config                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class ABP_AISpawner_C**                 Spawner                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AI_Wave_C::AddSpawner(const struct FStruct_SpawnerConfig& Config, class ABP_AISpawner_C** Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "AddSpawner");

	Params::BP_AI_Wave_C_AddSpawner Parms{};

	Parms.Config = std::move(Config);

	UObject::ProcessEvent(Func, &Parms);

	if (Spawner != nullptr)
		*Spawner = Parms.Spawner;
}


// Function BP_AI_Wave.BP_AI_Wave_C.GetSpawnerFromIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_AISpawner_C**                 Spawner                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AI_Wave_C::GetSpawnerFromIndex(int32 Index_0, class ABP_AISpawner_C** Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "GetSpawnerFromIndex");

	Params::BP_AI_Wave_C_GetSpawnerFromIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Spawner != nullptr)
		*Spawner = Parms.Spawner;
}


// Function BP_AI_Wave.BP_AI_Wave_C.FadeCamera
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFadeOut                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AI_Wave_C::FadeCamera(bool IsFadeOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "FadeCamera");

	Params::BP_AI_Wave_C_FadeCamera Parms{};

	Parms.IsFadeOut = IsFadeOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AI_Wave.BP_AI_Wave_C.TeleportPlayer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AI_Wave_C::TeleportPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "TeleportPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AI_Wave.BP_AI_Wave_C.ResetMe
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AI_Wave_C::ResetMe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "ResetMe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AI_Wave.BP_AI_Wave_C.ClearMapItems
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AI_Wave_C::ClearMapItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "ClearMapItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AI_Wave.BP_AI_Wave_C.ActiveSwitchPoint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AI_Wave_C::ActiveSwitchPoint(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "ActiveSwitchPoint");

	Params::BP_AI_Wave_C_ActiveSwitchPoint Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AI_Wave.BP_AI_Wave_C.IsFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsFinished_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AI_Wave_C::IsFinished(bool* IsFinished_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "IsFinished");

	Params::BP_AI_Wave_C_IsFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsFinished_0 != nullptr)
		*IsFinished_0 = Parms.IsFinished_0;
}


// Function BP_AI_Wave.BP_AI_Wave_C.CheckPoint
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AI_Wave_C::CheckPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "CheckPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AI_Wave.BP_AI_Wave_C.KillAllAI
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AI_Wave_C::KillAllAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AI_Wave_C", "KillAllAI");

	UObject::ProcessEvent(Func, nullptr);
}

}


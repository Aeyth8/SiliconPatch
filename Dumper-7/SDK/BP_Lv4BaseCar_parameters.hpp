#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lv4BaseCar

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Lv4BaseCar.BP_Lv4BaseCar_C.ExecuteUbergraph_BP_Lv4BaseCar
// 0x0288 (0x0288 - 0x0000)
struct BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Distance_Between_Locations_Distance;      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Target;                               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Lv4_TargetActor_C*                  K2Node_DynamicCast_AsBP_Lv_4_Target_Actor;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue1;          // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue; // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue1;      // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue2;          // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Distance_Between_Locations_Distance1;     // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Multiple;                       // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Time;                           // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Force;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enforce;                        // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMer2WheeledVehicleMovement4W*          K2Node_DynamicCast_AsMer_2Wheeled_Vehicle_Movement_4W; // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMer2WheeledVehicleMovement4W*          K2Node_DynamicCast_AsMer_2Wheeled_Vehicle_Movement_4W1; // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue1;         // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetEngineMaxRPM_ReturnValue;              // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindRotationClosestToWorldLocation_ReturnValue; // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue2;      // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll2;                       // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch2;                      // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw2;                        // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue1;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue1;            // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue1; // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24A[0x2];                                      // 0x024A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Distance_Between_Locations_Distance2;     // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue1;                      // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue2;        // 0x026C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue3;            // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar) == 0x000008, "Wrong alignment on BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar");
static_assert(sizeof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar) == 0x000288, "Wrong size on BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, EntryPoint) == 0x000000, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_GetDisplayName_ReturnValue) == 0x000008, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000034, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Distance_Between_Locations_Distance) == 0x000040, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Distance_Between_Locations_Distance' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_FindLookAtRotation_ReturnValue) == 0x000044, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000050, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_BreakRotator_Roll) == 0x00005C, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_BreakRotator_Pitch) == 0x000060, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_BreakRotator_Yaw) == 0x000064, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Less_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_SelectFloat_ReturnValue) == 0x00006C, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000070, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, K2Node_Event_Target) == 0x000078, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::K2Node_Event_Target' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, K2Node_DynamicCast_AsBP_Lv_4_Target_Actor) == 0x000080, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::K2Node_DynamicCast_AsBP_Lv_4_Target_Actor' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x00008C, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_FindLookAtRotation_ReturnValue1) == 0x000098, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_FindLookAtRotation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_FindLocationClosestToWorldLocation_ReturnValue) == 0x0000A4, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_FindLocationClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_NormalizedDeltaRotator_ReturnValue1) == 0x0000B0, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_NormalizedDeltaRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_FindLookAtRotation_ReturnValue2) == 0x0000BC, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_FindLookAtRotation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_BreakRotator_Roll1) == 0x0000C8, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_BreakRotator_Pitch1) == 0x0000CC, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_BreakRotator_Yaw1) == 0x0000D0, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Distance_Between_Locations_Distance1) == 0x0000D4, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Distance_Between_Locations_Distance1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, K2Node_CustomEvent_Multiple) == 0x0000D8, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::K2Node_CustomEvent_Multiple' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, K2Node_CustomEvent_Time) == 0x0000DC, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, K2Node_CustomEvent_Force) == 0x0000E0, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::K2Node_CustomEvent_Force' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, K2Node_CustomEvent_Enforce) == 0x0000E4, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::K2Node_CustomEvent_Enforce' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Conv_IntToString_ReturnValue) == 0x0000E8, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, K2Node_DynamicCast_AsMer_2Wheeled_Vehicle_Movement_4W) == 0x0000F8, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::K2Node_DynamicCast_AsMer_2Wheeled_Vehicle_Movement_4W' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, K2Node_DynamicCast_bSuccess1) == 0x000100, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Conv_FloatToString_ReturnValue) == 0x000108, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Concat_StrStr_ReturnValue1) == 0x000118, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000128, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Concat_StrStr_ReturnValue2) == 0x000130, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Concat_StrStr_ReturnValue3) == 0x000140, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, K2Node_DynamicCast_AsMer_2Wheeled_Vehicle_Movement_4W1) == 0x000150, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::K2Node_DynamicCast_AsMer_2Wheeled_Vehicle_Movement_4W1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, K2Node_DynamicCast_bSuccess2) == 0x000158, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_K2_GetActorRotation_ReturnValue1) == 0x00015C, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_K2_GetActorRotation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_GetEngineMaxRPM_ReturnValue) == 0x000168, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_GetEngineMaxRPM_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_GetForwardVector_ReturnValue) == 0x00016C, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000178, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, K2Node_Event_DeltaSeconds) == 0x000184, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000188, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_BreakVector2D_X) == 0x000194, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_BreakVector2D_Y) == 0x000198, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_FindRotationClosestToWorldLocation_ReturnValue) == 0x00019C, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_FindRotationClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001A8, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_NormalizedDeltaRotator_ReturnValue2) == 0x0001AC, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_NormalizedDeltaRotator_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_BreakRotator_Roll2) == 0x0001B8, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_BreakRotator_Roll2' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_BreakRotator_Pitch2) == 0x0001BC, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_BreakRotator_Pitch2' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_BreakRotator_Yaw2) == 0x0001C0, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_BreakRotator_Yaw2' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Add_FloatFloat_ReturnValue1) == 0x0001C4, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Abs_ReturnValue) == 0x0001C8, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x0001CC, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001D8, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_SelectFloat_ReturnValue1) == 0x0001DC, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_SelectFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x0001E0, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_GetForwardVector_ReturnValue1) == 0x0001E4, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_GetForwardVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001F0, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_GetRightVector_ReturnValue) == 0x0001FC, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Add_FloatFloat_ReturnValue2) == 0x000208, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_FindLocationClosestToWorldLocation_ReturnValue1) == 0x00020C, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_FindLocationClosestToWorldLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000218, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Add_VectorVector_ReturnValue) == 0x000224, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Add_VectorVector_ReturnValue1) == 0x000230, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Add_VectorVector_ReturnValue2) == 0x00023C, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Not_PreBool_ReturnValue) == 0x000248, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_BooleanOR_ReturnValue) == 0x000249, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Distance_Between_Locations_Distance2) == 0x00024C, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Distance_Between_Locations_Distance2' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000250, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000254, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000258, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x00025C, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x000260, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_FClamp_ReturnValue) == 0x000264, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_FClamp_ReturnValue1) == 0x000268, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_FClamp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Multiply_VectorFloat_ReturnValue2) == 0x00026C, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Multiply_VectorFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar, CallFunc_Add_VectorVector_ReturnValue3) == 0x000278, "Member 'BP_Lv4BaseCar_C_ExecuteUbergraph_BP_Lv4BaseCar::CallFunc_Add_VectorVector_ReturnValue3' has a wrong offset!");

// Function BP_Lv4BaseCar.BP_Lv4BaseCar_C.AddSpeed
// 0x0010 (0x0010 - 0x0000)
struct BP_Lv4BaseCar_C_AddSpeed final
{
public:
	float                                         Multiple;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Force;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enforce;                                           // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lv4BaseCar_C_AddSpeed) == 0x000004, "Wrong alignment on BP_Lv4BaseCar_C_AddSpeed");
static_assert(sizeof(BP_Lv4BaseCar_C_AddSpeed) == 0x000010, "Wrong size on BP_Lv4BaseCar_C_AddSpeed");
static_assert(offsetof(BP_Lv4BaseCar_C_AddSpeed, Multiple) == 0x000000, "Member 'BP_Lv4BaseCar_C_AddSpeed::Multiple' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_AddSpeed, Time) == 0x000004, "Member 'BP_Lv4BaseCar_C_AddSpeed::Time' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_AddSpeed, Force) == 0x000008, "Member 'BP_Lv4BaseCar_C_AddSpeed::Force' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_AddSpeed, Enforce) == 0x00000C, "Member 'BP_Lv4BaseCar_C_AddSpeed::Enforce' has a wrong offset!");

// Function BP_Lv4BaseCar.BP_Lv4BaseCar_C.InitLv4Car
// 0x0018 (0x0018 - 0x0000)
struct BP_Lv4BaseCar_C_InitLv4Car final
{
public:
	class ABP_Lv4_TargetActor_C*                  K2Node_DynamicCast_AsBP_Lv_4_Target_Actor;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv4BaseCar_C_InitLv4Car) == 0x000008, "Wrong alignment on BP_Lv4BaseCar_C_InitLv4Car");
static_assert(sizeof(BP_Lv4BaseCar_C_InitLv4Car) == 0x000018, "Wrong size on BP_Lv4BaseCar_C_InitLv4Car");
static_assert(offsetof(BP_Lv4BaseCar_C_InitLv4Car, K2Node_DynamicCast_AsBP_Lv_4_Target_Actor) == 0x000000, "Member 'BP_Lv4BaseCar_C_InitLv4Car::K2Node_DynamicCast_AsBP_Lv_4_Target_Actor' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_InitLv4Car, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_Lv4BaseCar_C_InitLv4Car::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_InitLv4Car, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_Lv4BaseCar_C_InitLv4Car::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_InitLv4Car, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'BP_Lv4BaseCar_C_InitLv4Car::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function BP_Lv4BaseCar.BP_Lv4BaseCar_C.ConstructTeleport
// 0x0160 (0x0160 - 0x0000)
struct BP_Lv4BaseCar_C_ConstructTeleport final
{
public:
	bool                                          Teleport;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0xE];                                        // 0x0002(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue; // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0xB];                                       // 0x0095(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lv4BaseCar_C_ConstructTeleport) == 0x000010, "Wrong alignment on BP_Lv4BaseCar_C_ConstructTeleport");
static_assert(sizeof(BP_Lv4BaseCar_C_ConstructTeleport) == 0x000160, "Wrong size on BP_Lv4BaseCar_C_ConstructTeleport");
static_assert(offsetof(BP_Lv4BaseCar_C_ConstructTeleport, Teleport) == 0x000000, "Member 'BP_Lv4BaseCar_C_ConstructTeleport::Teleport' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ConstructTeleport, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_Lv4BaseCar_C_ConstructTeleport::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ConstructTeleport, CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue) == 0x000010, "Member 'BP_Lv4BaseCar_C_ConstructTeleport::CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ConstructTeleport, CallFunc_BreakTransform_Location) == 0x000040, "Member 'BP_Lv4BaseCar_C_ConstructTeleport::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ConstructTeleport, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'BP_Lv4BaseCar_C_ConstructTeleport::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ConstructTeleport, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'BP_Lv4BaseCar_C_ConstructTeleport::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ConstructTeleport, CallFunc_GetRightVector_ReturnValue) == 0x000064, "Member 'BP_Lv4BaseCar_C_ConstructTeleport::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ConstructTeleport, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000070, "Member 'BP_Lv4BaseCar_C_ConstructTeleport::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ConstructTeleport, CallFunc_Add_VectorVector_ReturnValue) == 0x00007C, "Member 'BP_Lv4BaseCar_C_ConstructTeleport::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ConstructTeleport, CallFunc_Add_VectorVector_ReturnValue1) == 0x000088, "Member 'BP_Lv4BaseCar_C_ConstructTeleport::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ConstructTeleport, CallFunc_K2_TeleportTo_ReturnValue) == 0x000094, "Member 'BP_Lv4BaseCar_C_ConstructTeleport::CallFunc_K2_TeleportTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ConstructTeleport, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'BP_Lv4BaseCar_C_ConstructTeleport::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ConstructTeleport, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0000D0, "Member 'BP_Lv4BaseCar_C_ConstructTeleport::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_ConstructTeleport, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000158, "Member 'BP_Lv4BaseCar_C_ConstructTeleport::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BP_Lv4BaseCar.BP_Lv4BaseCar_C.LoadLastGameInit
// 0x0038 (0x0038 - 0x0000)
struct BP_Lv4BaseCar_C_LoadLastGameInit final
{
public:
	class AActor*                                 TargetActor_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVehicle_MC_C*                          K2Node_DynamicCast_AsVehicle_MC;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RunBehaviorTree_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lv4BaseCar_C_LoadLastGameInit) == 0x000008, "Wrong alignment on BP_Lv4BaseCar_C_LoadLastGameInit");
static_assert(sizeof(BP_Lv4BaseCar_C_LoadLastGameInit) == 0x000038, "Wrong size on BP_Lv4BaseCar_C_LoadLastGameInit");
static_assert(offsetof(BP_Lv4BaseCar_C_LoadLastGameInit, TargetActor_0) == 0x000000, "Member 'BP_Lv4BaseCar_C_LoadLastGameInit::TargetActor_0' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_LoadLastGameInit, K2Node_DynamicCast_AsVehicle_MC) == 0x000008, "Member 'BP_Lv4BaseCar_C_LoadLastGameInit::K2Node_DynamicCast_AsVehicle_MC' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_LoadLastGameInit, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_Lv4BaseCar_C_LoadLastGameInit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_LoadLastGameInit, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_Lv4BaseCar_C_LoadLastGameInit::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_LoadLastGameInit, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000018, "Member 'BP_Lv4BaseCar_C_LoadLastGameInit::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_LoadLastGameInit, CallFunc_GetAIController_ReturnValue) == 0x000020, "Member 'BP_Lv4BaseCar_C_LoadLastGameInit::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_LoadLastGameInit, CallFunc_MakeVector2D_ReturnValue) == 0x000028, "Member 'BP_Lv4BaseCar_C_LoadLastGameInit::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv4BaseCar_C_LoadLastGameInit, CallFunc_RunBehaviorTree_ReturnValue) == 0x000030, "Member 'BP_Lv4BaseCar_C_LoadLastGameInit::CallFunc_RunBehaviorTree_ReturnValue' has a wrong offset!");

// Function BP_Lv4BaseCar.BP_Lv4BaseCar_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Lv4BaseCar_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv4BaseCar_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Lv4BaseCar_C_ReceiveTick");
static_assert(sizeof(BP_Lv4BaseCar_C_ReceiveTick) == 0x000004, "Wrong size on BP_Lv4BaseCar_C_ReceiveTick");
static_assert(offsetof(BP_Lv4BaseCar_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Lv4BaseCar_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Lv4BaseCar.BP_Lv4BaseCar_C.XYLocation
// 0x0008 (0x0008 - 0x0000)
struct BP_Lv4BaseCar_C_XYLocation final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv4BaseCar_C_XYLocation) == 0x000008, "Wrong alignment on BP_Lv4BaseCar_C_XYLocation");
static_assert(sizeof(BP_Lv4BaseCar_C_XYLocation) == 0x000008, "Wrong size on BP_Lv4BaseCar_C_XYLocation");
static_assert(offsetof(BP_Lv4BaseCar_C_XYLocation, Target) == 0x000000, "Member 'BP_Lv4BaseCar_C_XYLocation::Target' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_Andy_IK

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_Andy_IK.AnimBP_Andy_IK_C
// 0x14E8 (0x1840 - 0x0358)
class UAnimBP_Andy_IK_C final : public UAnimInstance
{
public:
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4705A3D54CC9E6D50A11068D9AAE7CD9; // 0x0368(0x00D8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_F6463BD344F9810AF5A07CA87D407219; // 0x0440(0x00D8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_0B444B9A4347FA89111817B4DBABFE45; // 0x0518(0x00D8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_120FFBF24189B9DF0CE479BA45F140F3; // 0x05F0(0x0048)()
	uint8                                         Pad_638[0x8];                                      // 0x0638(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_Fabrik                       AnimGraphNode_Fabrik_92B8E09240923DDBDCB7B98242A3343D; // 0x0640(0x01F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_0411076E4C9D25BAF79E4284A73B4CA4; // 0x0830(0x0040)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_FBB592424D44755F2DA492833B113EC5; // 0x0870(0x0138)()
	uint8                                         Pad_9A8[0x8];                                      // 0x09A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_Fabrik                       AnimGraphNode_Fabrik_CA0294304F9D38073CB7768C01FA12A4; // 0x09B0(0x01F0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_B24B735E4CB4CEA253AB3C839DD45FEE; // 0x0BA0(0x0138)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_B4E78D54406A94D79EC40DA675BDA84D; // 0x0CD8(0x00F8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1CECD587451BF209B4F67E9D715C176F; // 0x0DD0(0x0128)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_9B9BA5AC48B52FA8A4D8EC847F1B664B; // 0x0EF8(0x0128)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_A16187184392B2CF14305E8D99F6545E; // 0x1020(0x0040)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_FD05740B4982175489950CA0B2A3D77B; // 0x1060(0x00E0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_0D7272BC459DA5665F384084B3E208BB; // 0x1140(0x0040)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_A899A449423F5896F1FC92B5D982D3D0; // 0x1180(0x0040)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1EEADEE24FB0CE7F00844C9526F515AA; // 0x11C0(0x0138)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1C65331047753562C88EF9ABBDAEAB26; // 0x12F8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_A853693A40FF0888F5457B97B0F333EA; // 0x1340(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_45D97A8C49FA7F298D32DA89EE3B17C7; // 0x13E0(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_D8A809BF492756438568E98FBE734EC4; // 0x1480(0x00A0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_93E58EC642180EB84EB9AFA6750C134A; // 0x1520(0x0138)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_EE1E126645AD29935A70BC8CD7FAB63D; // 0x1658(0x0138)()
	float                                         Direction;                                         // 0x1790(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x1794(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CrouchStand;                                       // 0x1798(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179C[0x4];                                     // 0x179C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LeftHandTransform;                                 // 0x17A0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             RightHandTransform;                                // 0x17D0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             HeadTransform;                                     // 0x1800(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          UseLeftHand;                                       // 0x1830(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          UseRightHand;                                      // 0x1831(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          UseHead;                                           // 0x1832(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1833[0x1];                                     // 0x1833(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               BodyRotation;                                      // 0x1834(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_Andy_IK_AnimGraphNode_ModifyBone_B24B735E4CB4CEA253AB3C839DD45FEE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_Andy_IK_AnimGraphNode_Fabrik_CA0294304F9D38073CB7768C01FA12A4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_Andy_IK_AnimGraphNode_ModifyBone_93E58EC642180EB84EB9AFA6750C134A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_Andy_IK_AnimGraphNode_ModifyBone_1EEADEE24FB0CE7F00844C9526F515AA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_Andy_IK_AnimGraphNode_ModifyBone_FBB592424D44755F2DA492833B113EC5();
	void ExecuteUbergraph_AnimBP_Andy_IK(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_Andy_IK_AnimGraphNode_Fabrik_92B8E09240923DDBDCB7B98242A3343D();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_Andy_IK_C">();
	}
	static class UAnimBP_Andy_IK_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_Andy_IK_C>();
	}
};
static_assert(alignof(UAnimBP_Andy_IK_C) == 0x000010, "Wrong alignment on UAnimBP_Andy_IK_C");
static_assert(sizeof(UAnimBP_Andy_IK_C) == 0x001840, "Wrong size on UAnimBP_Andy_IK_C");
static_assert(offsetof(UAnimBP_Andy_IK_C, UberGraphFrame) == 0x000360, "Member 'UAnimBP_Andy_IK_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_SaveCachedPose_4705A3D54CC9E6D50A11068D9AAE7CD9) == 0x000368, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_SaveCachedPose_4705A3D54CC9E6D50A11068D9AAE7CD9' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_LayeredBoneBlend_F6463BD344F9810AF5A07CA87D407219) == 0x000440, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_LayeredBoneBlend_F6463BD344F9810AF5A07CA87D407219' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_SaveCachedPose_0B444B9A4347FA89111817B4DBABFE45) == 0x000518, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_SaveCachedPose_0B444B9A4347FA89111817B4DBABFE45' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_UseCachedPose_120FFBF24189B9DF0CE479BA45F140F3) == 0x0005F0, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_UseCachedPose_120FFBF24189B9DF0CE479BA45F140F3' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_Fabrik_92B8E09240923DDBDCB7B98242A3343D) == 0x000640, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_Fabrik_92B8E09240923DDBDCB7B98242A3343D' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_LocalToComponentSpace_0411076E4C9D25BAF79E4284A73B4CA4) == 0x000830, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_LocalToComponentSpace_0411076E4C9D25BAF79E4284A73B4CA4' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_ModifyBone_FBB592424D44755F2DA492833B113EC5) == 0x000870, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_ModifyBone_FBB592424D44755F2DA492833B113EC5' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_Fabrik_CA0294304F9D38073CB7768C01FA12A4) == 0x0009B0, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_Fabrik_CA0294304F9D38073CB7768C01FA12A4' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_ModifyBone_B24B735E4CB4CEA253AB3C839DD45FEE) == 0x000BA0, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_ModifyBone_B24B735E4CB4CEA253AB3C839DD45FEE' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_TwoWayBlend_B4E78D54406A94D79EC40DA675BDA84D) == 0x000CD8, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_TwoWayBlend_B4E78D54406A94D79EC40DA675BDA84D' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_BlendSpacePlayer_1CECD587451BF209B4F67E9D715C176F) == 0x000DD0, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_BlendSpacePlayer_1CECD587451BF209B4F67E9D715C176F' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_BlendSpacePlayer_9B9BA5AC48B52FA8A4D8EC847F1B664B) == 0x000EF8, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_BlendSpacePlayer_9B9BA5AC48B52FA8A4D8EC847F1B664B' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_StateResult_A16187184392B2CF14305E8D99F6545E) == 0x001020, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_StateResult_A16187184392B2CF14305E8D99F6545E' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_StateMachine_FD05740B4982175489950CA0B2A3D77B) == 0x001060, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_StateMachine_FD05740B4982175489950CA0B2A3D77B' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_Root_0D7272BC459DA5665F384084B3E208BB) == 0x001140, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_Root_0D7272BC459DA5665F384084B3E208BB' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_ComponentToLocalSpace_A899A449423F5896F1FC92B5D982D3D0) == 0x001180, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_ComponentToLocalSpace_A899A449423F5896F1FC92B5D982D3D0' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_ModifyBone_1EEADEE24FB0CE7F00844C9526F515AA) == 0x0011C0, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_ModifyBone_1EEADEE24FB0CE7F00844C9526F515AA' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_UseCachedPose_1C65331047753562C88EF9ABBDAEAB26) == 0x0012F8, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_UseCachedPose_1C65331047753562C88EF9ABBDAEAB26' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_SequencePlayer_A853693A40FF0888F5457B97B0F333EA) == 0x001340, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_SequencePlayer_A853693A40FF0888F5457B97B0F333EA' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_SequencePlayer_45D97A8C49FA7F298D32DA89EE3B17C7) == 0x0013E0, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_SequencePlayer_45D97A8C49FA7F298D32DA89EE3B17C7' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_SequencePlayer_D8A809BF492756438568E98FBE734EC4) == 0x001480, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_SequencePlayer_D8A809BF492756438568E98FBE734EC4' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_ModifyBone_93E58EC642180EB84EB9AFA6750C134A) == 0x001520, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_ModifyBone_93E58EC642180EB84EB9AFA6750C134A' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, AnimGraphNode_ModifyBone_EE1E126645AD29935A70BC8CD7FAB63D) == 0x001658, "Member 'UAnimBP_Andy_IK_C::AnimGraphNode_ModifyBone_EE1E126645AD29935A70BC8CD7FAB63D' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, Direction) == 0x001790, "Member 'UAnimBP_Andy_IK_C::Direction' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, Speed) == 0x001794, "Member 'UAnimBP_Andy_IK_C::Speed' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, CrouchStand) == 0x001798, "Member 'UAnimBP_Andy_IK_C::CrouchStand' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, LeftHandTransform) == 0x0017A0, "Member 'UAnimBP_Andy_IK_C::LeftHandTransform' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, RightHandTransform) == 0x0017D0, "Member 'UAnimBP_Andy_IK_C::RightHandTransform' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, HeadTransform) == 0x001800, "Member 'UAnimBP_Andy_IK_C::HeadTransform' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, UseLeftHand) == 0x001830, "Member 'UAnimBP_Andy_IK_C::UseLeftHand' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, UseRightHand) == 0x001831, "Member 'UAnimBP_Andy_IK_C::UseRightHand' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, UseHead) == 0x001832, "Member 'UAnimBP_Andy_IK_C::UseHead' has a wrong offset!");
static_assert(offsetof(UAnimBP_Andy_IK_C, BodyRotation) == 0x001834, "Member 'UAnimBP_Andy_IK_C::BodyRotation' has a wrong offset!");

}


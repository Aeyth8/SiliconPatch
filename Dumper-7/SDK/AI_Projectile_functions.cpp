#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AI_Projectile

#include "Basic.hpp"

#include "AI_Projectile_classes.hpp"
#include "AI_Projectile_parameters.hpp"


namespace SDK
{

// Function AI_Projectile.AI_Projectile_C.ExecuteUbergraph_AI_Projectile
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAI_Projectile_C::ExecuteUbergraph_AI_Projectile(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_Projectile_C", "ExecuteUbergraph_AI_Projectile");

	Params::AI_Projectile_C_ExecuteUbergraph_AI_Projectile Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AI_Projectile.AI_Projectile_C.Evt_InitSetting
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAI_Projectile_C::Evt_InitSetting(const struct FVector& Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_Projectile_C", "Evt_InitSetting");

	Params::AI_Projectile_C_Evt_InitSetting Parms{};

	Parms.Speed = std::move(Speed);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AI_Projectile.AI_Projectile_C.InitSetting
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAI_Projectile_C::InitSetting(const struct FVector& Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_Projectile_C", "InitSetting");

	Params::AI_Projectile_C_InitSetting Parms{};

	Parms.Speed = std::move(Speed);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AI_Projectile.AI_Projectile_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAI_Projectile_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_Projectile_C", "ReceiveTick");

	Params::AI_Projectile_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AI_Projectile.AI_Projectile_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AAI_Projectile_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_Projectile_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_Projectile.AI_Projectile_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AAI_Projectile_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_Projectile_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}


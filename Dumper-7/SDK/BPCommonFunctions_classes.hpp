#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPCommonFunctions

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "EnumSDKType_structs.hpp"
#include "Enum_Language_structs.hpp"
#include "Enum_TurnMode_structs.hpp"
#include "Enum_PlayMode_structs.hpp"
#include "SiliconRising_structs.hpp"
#include "Enum_ControllerType_structs.hpp"
#include "EnumDifficuty_structs.hpp"
#include "HeadMountedDisplay_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPCommonFunctions.BPCommonFunctions_C
// 0x0000 (0x0028 - 0x0028)
class UBPCommonFunctions_C final : public UBlueprintFunctionLibrary
{
public:
	static void Towards(float Current, float Target, float Speed, float DeltaTime, class UObject* __WorldContext, float* Result);
	static class UParticleSystemComponent* SpawnParticle(class UParticleSystem* EmitterTemplete, class USceneComponent* AttachToComponent, class FName AttachToName, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale, EAttachLocation LocationType, bool IsDestroy, bool IsAttach, class UObject* __WorldContext);
	static void ResetHMDRotationAndLocation(float Yaw, EOrientPositionSelector Options, class UObject* __WorldContext);
	static void GetLanguageText(const class FString& Text, class UObject* __WorldContext, bool* Found, class FString* Lan_Text, int32* FontSize);
	static void GetMer2MatchLogUrl(class UObject* __WorldContext, class FString* URL);
	static void GetMer2LoginUrl(class UObject* __WorldContext, class FString* URL);
	static void GetMer2VerifyGameUrl(class UObject* __WorldContext, class FString* URL);
	static void GetWebDomain(class UObject* __WorldContext, class FString* Domain);
	static void GetNeedOnlyVerify(class UObject* __WorldContext, bool* IsNeed);
	static void GetWebConfig(class UObject* __WorldContext, class FString* GameID, class FString* ChannelID);
	static void GetWebRankUrl(class UObject* __WorldContext, class FString* URL);
	static void ApplyText(class UTextBlock* Target, const class FString& Text, bool ApplySize, class UObject* __WorldContext);
	static void GetSDKType(class UObject* __WorldContext, EnumSDKType* SDKType);
	static void GetSettingsFromDisk(class UObject* __WorldContext, class UMer2OnlineSave_C** AsMer_2Online_Save, bool* IsExist);
	static void SaveSettingsToDisk(int32 StartLevel, int32 SoundLevel, EnumDifficuty Difficulty, Enum_Language Language, bool PlanerReflection, int32 Resolution, int32 Mass, bool Subtitle, class UObject* __WorldContext);
	static class FString GetMer2UserDataUrl(class UObject* __WorldContext);
	static void HidePlanarReflection(bool IsHidden, class UObject* __WorldContext);
	static void GetControllerType(class UObject* __WorldContext, Enum_ControllerType* ControllerType);
	static void SetAllPlanarReflectionScreenPercenatge(int32 Percentage, class UObject* __WorldContext);
	static void GetIsNeedSpectatorScreen(class UObject* __WorldContext, bool* IsNeed);
	static void GetLoadingDelay(class UObject* __WorldContext, float* Secs);
	static void GetNextLevelName(int32 CurrentLevelNumber, class UObject* __WorldContext, class FName* MapName);
	static void SetStartWaves(class UObject* WorldContext, int32 StartWave, class UObject* __WorldContext);
	static void GetMer2PVPServerIPUrl(class UObject* __WorldContext, class FString* URL);
	static void GetWebProtocol(class UObject* __WorldContext, class FString* Protocol);
	static void IsVerifyApiResult(class UObject* __WorldContext, bool* IsVerify);
	static void GetDominateHand(class UObject* __WorldContext, bool* LeftHand);
	static void SaveDominateHand(bool Left, class UObject* __WorldContext);
	static void GetPlayMode(class UObject* __WorldContext, Enum_PlayMode* Mode);
	static void SavePlayMode(Enum_PlayMode Mode, class UObject* __WorldContext);
	static void GetTurnMode(class UObject* __WorldContext, Enum_TurnMode* Mode);
	static void SaveTurnMode(Enum_TurnMode Mode, class UObject* __WorldContext);
	static void GetPlayBGM(class UObject* __WorldContext, bool* PlayBGM);
	static void SavePlayBGM(bool PlayBGM, class UObject* __WorldContext);
	static void GetFreeMoveMode(bool FromSave, class UObject* __WorldContext, bool* IsFreeMove);
	static void SetFreeMoveMode(bool Value, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPCommonFunctions_C">();
	}
	static class UBPCommonFunctions_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPCommonFunctions_C>();
	}
};
static_assert(alignof(UBPCommonFunctions_C) == 0x000008, "Wrong alignment on UBPCommonFunctions_C");
static_assert(sizeof(UBPCommonFunctions_C) == 0x000028, "Wrong size on UBPCommonFunctions_C");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PVP_RunawayShow

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_PVP_RunawayShow.BP_PVP_RunawayShow_C.ExecuteUbergraph_BP_PVP_RunawayShow
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) BP_PVP_RunawayShow_C_ExecuteUbergraph_BP_PVP_RunawayShow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue1;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsTeamA;                        // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PVP_RunawayShow_C_ExecuteUbergraph_BP_PVP_RunawayShow) == 0x000008, "Wrong alignment on BP_PVP_RunawayShow_C_ExecuteUbergraph_BP_PVP_RunawayShow");
static_assert(sizeof(BP_PVP_RunawayShow_C_ExecuteUbergraph_BP_PVP_RunawayShow) == 0x000030, "Wrong size on BP_PVP_RunawayShow_C_ExecuteUbergraph_BP_PVP_RunawayShow");
static_assert(offsetof(BP_PVP_RunawayShow_C_ExecuteUbergraph_BP_PVP_RunawayShow, EntryPoint) == 0x000000, "Member 'BP_PVP_RunawayShow_C_ExecuteUbergraph_BP_PVP_RunawayShow::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PVP_RunawayShow_C_ExecuteUbergraph_BP_PVP_RunawayShow, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_PVP_RunawayShow_C_ExecuteUbergraph_BP_PVP_RunawayShow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PVP_RunawayShow_C_ExecuteUbergraph_BP_PVP_RunawayShow, K2Node_CreateDelegate_OutputDelegate1) == 0x000018, "Member 'BP_PVP_RunawayShow_C_ExecuteUbergraph_BP_PVP_RunawayShow::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_PVP_RunawayShow_C_ExecuteUbergraph_BP_PVP_RunawayShow, CallFunc_HasAuthority_ReturnValue) == 0x000028, "Member 'BP_PVP_RunawayShow_C_ExecuteUbergraph_BP_PVP_RunawayShow::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_RunawayShow_C_ExecuteUbergraph_BP_PVP_RunawayShow, CallFunc_HasAuthority_ReturnValue1) == 0x000029, "Member 'BP_PVP_RunawayShow_C_ExecuteUbergraph_BP_PVP_RunawayShow::CallFunc_HasAuthority_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_PVP_RunawayShow_C_ExecuteUbergraph_BP_PVP_RunawayShow, K2Node_CustomEvent_IsTeamA) == 0x00002A, "Member 'BP_PVP_RunawayShow_C_ExecuteUbergraph_BP_PVP_RunawayShow::K2Node_CustomEvent_IsTeamA' has a wrong offset!");

// Function BP_PVP_RunawayShow.BP_PVP_RunawayShow_C.ShowRunaway
// 0x0001 (0x0001 - 0x0000)
struct BP_PVP_RunawayShow_C_ShowRunaway final
{
public:
	bool                                          IsTeamA;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PVP_RunawayShow_C_ShowRunaway) == 0x000001, "Wrong alignment on BP_PVP_RunawayShow_C_ShowRunaway");
static_assert(sizeof(BP_PVP_RunawayShow_C_ShowRunaway) == 0x000001, "Wrong size on BP_PVP_RunawayShow_C_ShowRunaway");
static_assert(offsetof(BP_PVP_RunawayShow_C_ShowRunaway, IsTeamA) == 0x000000, "Member 'BP_PVP_RunawayShow_C_ShowRunaway::IsTeamA' has a wrong offset!");

// Function BP_PVP_RunawayShow.BP_PVP_RunawayShow_C.UserConstructionScript
// 0x00C0 (0x00C0 - 0x0000)
struct BP_PVP_RunawayShow_C_UserConstructionScript final
{
public:
	struct FTransform                             CallFunc_GetTransformAtSplinePoint_ReturnValue;    // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0030(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PVP_RunawayShow_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_PVP_RunawayShow_C_UserConstructionScript");
static_assert(sizeof(BP_PVP_RunawayShow_C_UserConstructionScript) == 0x0000C0, "Wrong size on BP_PVP_RunawayShow_C_UserConstructionScript");
static_assert(offsetof(BP_PVP_RunawayShow_C_UserConstructionScript, CallFunc_GetTransformAtSplinePoint_ReturnValue) == 0x000000, "Member 'BP_PVP_RunawayShow_C_UserConstructionScript::CallFunc_GetTransformAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PVP_RunawayShow_C_UserConstructionScript, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000030, "Member 'BP_PVP_RunawayShow_C_UserConstructionScript::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");

}


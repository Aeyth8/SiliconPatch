#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MediaUtils

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct MediaUtils.MediaPlayerTrackOptions
// 0x001C (0x001C - 0x0000)
struct FMediaPlayerTrackOptions final
{
public:
	int32                                         Audio;                                             // 0x0000(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Caption;                                           // 0x0004(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MetaData;                                          // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Script;                                            // 0x000C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Subtitle;                                          // 0x0010(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Text;                                              // 0x0014(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Video;                                             // 0x0018(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMediaPlayerTrackOptions) == 0x000004, "Wrong alignment on FMediaPlayerTrackOptions");
static_assert(sizeof(FMediaPlayerTrackOptions) == 0x00001C, "Wrong size on FMediaPlayerTrackOptions");
static_assert(offsetof(FMediaPlayerTrackOptions, Audio) == 0x000000, "Member 'FMediaPlayerTrackOptions::Audio' has a wrong offset!");
static_assert(offsetof(FMediaPlayerTrackOptions, Caption) == 0x000004, "Member 'FMediaPlayerTrackOptions::Caption' has a wrong offset!");
static_assert(offsetof(FMediaPlayerTrackOptions, MetaData) == 0x000008, "Member 'FMediaPlayerTrackOptions::MetaData' has a wrong offset!");
static_assert(offsetof(FMediaPlayerTrackOptions, Script) == 0x00000C, "Member 'FMediaPlayerTrackOptions::Script' has a wrong offset!");
static_assert(offsetof(FMediaPlayerTrackOptions, Subtitle) == 0x000010, "Member 'FMediaPlayerTrackOptions::Subtitle' has a wrong offset!");
static_assert(offsetof(FMediaPlayerTrackOptions, Text) == 0x000014, "Member 'FMediaPlayerTrackOptions::Text' has a wrong offset!");
static_assert(offsetof(FMediaPlayerTrackOptions, Video) == 0x000018, "Member 'FMediaPlayerTrackOptions::Video' has a wrong offset!");

// ScriptStruct MediaUtils.MediaPlayerOptions
// 0x001C (0x001C - 0x0000)
struct FMediaPlayerOptions final
{
public:
	struct FMediaPlayerTrackOptions               Tracks;                                            // 0x0000(0x001C)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMediaPlayerOptions) == 0x000004, "Wrong alignment on FMediaPlayerOptions");
static_assert(sizeof(FMediaPlayerOptions) == 0x00001C, "Wrong size on FMediaPlayerOptions");
static_assert(offsetof(FMediaPlayerOptions, Tracks) == 0x000000, "Member 'FMediaPlayerOptions::Tracks' has a wrong offset!");

}


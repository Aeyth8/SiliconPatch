#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lv4BaseCar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_Lv3_BaseCar_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Lv4BaseCar.BP_Lv4BaseCar_C
// 0x0028 (0x0690 - 0x0668)
class ABP_Lv4BaseCar_C : public ABP_Lv3_BaseCar_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Lv4BaseCar_C;                    // 0x0668(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         MaxTurnDistance;                                   // 0x0670(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XlocMaxDistance;                                   // 0x0674(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XlocMinDistance;                                   // 0x0678(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BeginRPM;                                          // 0x067C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BSpeedUp;                                          // 0x0680(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_681[0x3];                                      // 0x0681(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                carScale;                                          // 0x0684(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Lv4BaseCar(int32 EntryPoint);
	void AddSpeed(float Multiple, float Time, int32 Force, bool Enforce);
	void InitLv4Car();
	void ConstructTeleport(bool Teleport);
	void LoadLastGameInit(class AActor* TargetActor_0);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void XYLocation(class AActor* Target);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Lv4BaseCar_C">();
	}
	static class ABP_Lv4BaseCar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Lv4BaseCar_C>();
	}
};
static_assert(alignof(ABP_Lv4BaseCar_C) == 0x000008, "Wrong alignment on ABP_Lv4BaseCar_C");
static_assert(sizeof(ABP_Lv4BaseCar_C) == 0x000690, "Wrong size on ABP_Lv4BaseCar_C");
static_assert(offsetof(ABP_Lv4BaseCar_C, UberGraphFrame_BP_Lv4BaseCar_C) == 0x000668, "Member 'ABP_Lv4BaseCar_C::UberGraphFrame_BP_Lv4BaseCar_C' has a wrong offset!");
static_assert(offsetof(ABP_Lv4BaseCar_C, MaxTurnDistance) == 0x000670, "Member 'ABP_Lv4BaseCar_C::MaxTurnDistance' has a wrong offset!");
static_assert(offsetof(ABP_Lv4BaseCar_C, XlocMaxDistance) == 0x000674, "Member 'ABP_Lv4BaseCar_C::XlocMaxDistance' has a wrong offset!");
static_assert(offsetof(ABP_Lv4BaseCar_C, XlocMinDistance) == 0x000678, "Member 'ABP_Lv4BaseCar_C::XlocMinDistance' has a wrong offset!");
static_assert(offsetof(ABP_Lv4BaseCar_C, BeginRPM) == 0x00067C, "Member 'ABP_Lv4BaseCar_C::BeginRPM' has a wrong offset!");
static_assert(offsetof(ABP_Lv4BaseCar_C, BSpeedUp) == 0x000680, "Member 'ABP_Lv4BaseCar_C::BSpeedUp' has a wrong offset!");
static_assert(offsetof(ABP_Lv4BaseCar_C, carScale) == 0x000684, "Member 'ABP_Lv4BaseCar_C::carScale' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PVP_Drone

#include "Basic.hpp"

#include "SiliconRising_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PVP_Drone.BP_PVP_Drone_C
// 0x00A0 (0x07E0 - 0x0740)
class ABP_PVP_Drone_C final : public ACharacter
{
public:
	uint8                                         Pad_738[0x8];                                      // 0x0738(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0740(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio;                                             // 0x0748(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               effect_Drone_engine_normal_2;                      // 0x0750(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Prop_Airfreighter;                                 // 0x0758(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0760(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0768(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       SplineToFly;                                       // 0x0770(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0778(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x077C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Transform;                                         // 0x0780(0x0030)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	EItemTypes                                    ItemType;                                          // 0x07B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B1[0x7];                                      // 0x07B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 HangItem;                                          // 0x07B8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	class ABPWeaponBase_C*                        ActorToFly;                                        // 0x07C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterPVP_Base_C*                Target;                                            // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PVP_DroneSpline_C*                  FlyPath;                                           // 0x07D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PVP_Drone(int32 EntryPoint);
	void BndEvt__Prop_Airfreighter_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void PlayDestroyEffect(const struct FVector& Location, class AActor* Actor);
	void BndEvt__Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void OnRep_Transform();
	void OnRep_HangItem();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PVP_Drone_C">();
	}
	static class ABP_PVP_Drone_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PVP_Drone_C>();
	}
};
static_assert(alignof(ABP_PVP_Drone_C) == 0x000010, "Wrong alignment on ABP_PVP_Drone_C");
static_assert(sizeof(ABP_PVP_Drone_C) == 0x0007E0, "Wrong size on ABP_PVP_Drone_C");
static_assert(offsetof(ABP_PVP_Drone_C, UberGraphFrame) == 0x000740, "Member 'ABP_PVP_Drone_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PVP_Drone_C, Audio) == 0x000748, "Member 'ABP_PVP_Drone_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_PVP_Drone_C, effect_Drone_engine_normal_2) == 0x000750, "Member 'ABP_PVP_Drone_C::effect_Drone_engine_normal_2' has a wrong offset!");
static_assert(offsetof(ABP_PVP_Drone_C, Prop_Airfreighter) == 0x000758, "Member 'ABP_PVP_Drone_C::Prop_Airfreighter' has a wrong offset!");
static_assert(offsetof(ABP_PVP_Drone_C, Scene) == 0x000760, "Member 'ABP_PVP_Drone_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_PVP_Drone_C, RotatingMovement) == 0x000768, "Member 'ABP_PVP_Drone_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(ABP_PVP_Drone_C, SplineToFly) == 0x000770, "Member 'ABP_PVP_Drone_C::SplineToFly' has a wrong offset!");
static_assert(offsetof(ABP_PVP_Drone_C, Distance) == 0x000778, "Member 'ABP_PVP_Drone_C::Distance' has a wrong offset!");
static_assert(offsetof(ABP_PVP_Drone_C, Speed) == 0x00077C, "Member 'ABP_PVP_Drone_C::Speed' has a wrong offset!");
static_assert(offsetof(ABP_PVP_Drone_C, Transform) == 0x000780, "Member 'ABP_PVP_Drone_C::Transform' has a wrong offset!");
static_assert(offsetof(ABP_PVP_Drone_C, ItemType) == 0x0007B0, "Member 'ABP_PVP_Drone_C::ItemType' has a wrong offset!");
static_assert(offsetof(ABP_PVP_Drone_C, HangItem) == 0x0007B8, "Member 'ABP_PVP_Drone_C::HangItem' has a wrong offset!");
static_assert(offsetof(ABP_PVP_Drone_C, ActorToFly) == 0x0007C0, "Member 'ABP_PVP_Drone_C::ActorToFly' has a wrong offset!");
static_assert(offsetof(ABP_PVP_Drone_C, Target) == 0x0007C8, "Member 'ABP_PVP_Drone_C::Target' has a wrong offset!");
static_assert(offsetof(ABP_PVP_Drone_C, FlyPath) == 0x0007D0, "Member 'ABP_PVP_Drone_C::FlyPath' has a wrong offset!");

}


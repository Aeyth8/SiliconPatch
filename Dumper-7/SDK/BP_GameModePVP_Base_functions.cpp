#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameModePVP_Base

#include "Basic.hpp"

#include "BP_GameModePVP_Base_classes.hpp"
#include "BP_GameModePVP_Base_parameters.hpp"


namespace SDK
{

// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.ExecuteUbergraph_BP_GameModePVP_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameModePVP_Base_C::ExecuteUbergraph_BP_GameModePVP_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "ExecuteUbergraph_BP_GameModePVP_Base");

	Params::BP_GameModePVP_Base_C_ExecuteUbergraph_BP_GameModePVP_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)

void ABP_GameModePVP_Base_C::CustomEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "CustomEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.SpawnAllCharacters
// (BlueprintCallable, BlueprintEvent)

void ABP_GameModePVP_Base_C::SpawnAllCharacters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "SpawnAllCharacters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.FakeBeginPlay
// (BlueprintCallable, BlueprintEvent)

void ABP_GameModePVP_Base_C::FakeBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "FakeBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.OnRoomInfo
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FYYMsgReqAckRoomInfo&      RoomInfo_0                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_GameModePVP_Base_C::OnRoomInfo(const struct FYYMsgReqAckRoomInfo& RoomInfo_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "OnRoomInfo");

	Params::BP_GameModePVP_Base_C_OnRoomInfo Parms{};

	Parms.RoomInfo_0 = std::move(RoomInfo_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.Evt_NewPlayerConnect
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                NewPlayerController                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    RoomName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    RoomID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    PlayerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_GameModePVP_Base_C::Evt_NewPlayerConnect(class APlayerController* NewPlayerController, const class FString& RoomName, const class FString& RoomID, const class FString& PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "Evt_NewPlayerConnect");

	Params::BP_GameModePVP_Base_C_Evt_NewPlayerConnect Parms{};

	Parms.NewPlayerController = NewPlayerController;
	Parms.RoomName = std::move(RoomName);
	Parms.RoomID = std::move(RoomID);
	Parms.PlayerID = std::move(PlayerID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.ShowWinnerAnimation
// (BlueprintCallable, BlueprintEvent)

void ABP_GameModePVP_Base_C::ShowWinnerAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "ShowWinnerAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.SetStartGame
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameModePVP_Base_C::SetStartGame(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "SetStartGame");

	Params::BP_GameModePVP_Base_C_SetStartGame Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.ShowUpEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_GameModePVP_Base_C::ShowUpEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "ShowUpEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.Shutdown
// (BlueprintCallable, BlueprintEvent)

void ABP_GameModePVP_Base_C::Shutdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "Shutdown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.Start
// (BlueprintCallable, BlueprintEvent)

void ABP_GameModePVP_Base_C::Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.InitGameMode
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameModePVP_Base_C::InitGameMode(bool Start)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "InitGameMode");

	Params::BP_GameModePVP_Base_C_InitGameMode Parms{};

	Parms.Start = Start;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.TakeToken
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_GameModePVP_Base_C::TakeToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "TakeToken");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameModePVP_Base_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "ReceiveTick");

	Params::BP_GameModePVP_Base_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.K2_OnLogout
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      ExitingController                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameModePVP_Base_C::K2_OnLogout(class AController* ExitingController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "K2_OnLogout");

	Params::BP_GameModePVP_Base_C_K2_OnLogout Parms{};

	Parms.ExitingController = ExitingController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.K2_PostLogin
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                NewPlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameModePVP_Base_C::K2_PostLogin(class APlayerController* NewPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "K2_PostLogin");

	Params::BP_GameModePVP_Base_C_K2_PostLogin Parms{};

	Parms.NewPlayer = NewPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_GameModePVP_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_GameModePVP_Base_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.GetStartTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FString&                    Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ABP_PVP_StartPosition_C**         Target                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameModePVP_Base_C::GetStartTransform(const class FString& Tag, class ABP_PVP_StartPosition_C** Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "GetStartTransform");

	Params::BP_GameModePVP_Base_C_GetStartTransform Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);

	if (Target != nullptr)
		*Target = Parms.Target;
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.GenerateRandomArray
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Mini                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>*                          Array                                                  (Parm, OutParm, ZeroConstructor)

void ABP_GameModePVP_Base_C::GenerateRandomArray(int32 Mini, int32 Max, TArray<int32>* Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "GenerateRandomArray");

	Params::BP_GameModePVP_Base_C_GenerateRandomArray Parms{};

	Parms.Mini = Mini;
	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);

	if (Array != nullptr)
		*Array = std::move(Parms.Array);
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.GetCharEnumFromInt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// Enum_Winner*                            Char                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameModePVP_Base_C::GetCharEnumFromInt(int32 Index_0, Enum_Winner* Char)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "GetCharEnumFromInt");

	Params::BP_GameModePVP_Base_C_GetCharEnumFromInt Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Char != nullptr)
		*Char = Parms.Char;
}


// Function BP_GameModePVP_Base.BP_GameModePVP_Base_C.CreateFakeRoomInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_PlayerControllerPVP_Base_C*   Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FYYMsgReqAckRoomInfo*            Out                                                    (Parm, OutParm)

void ABP_GameModePVP_Base_C::CreateFakeRoomInfo(class ABP_PlayerControllerPVP_Base_C* Controller, int32 Index_0, struct FYYMsgReqAckRoomInfo* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModePVP_Base_C", "CreateFakeRoomInfo");

	Params::BP_GameModePVP_Base_C_CreateFakeRoomInfo Parms{};

	Parms.Controller = Controller;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}

}


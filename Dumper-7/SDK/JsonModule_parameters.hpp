#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JsonModule

#include "Basic.hpp"

#include "JsonModule_structs.hpp"


namespace SDK::Params
{

// Function JsonModule.JsonHelper.AddJsonArrayValue
// 0x0048 (0x0048 - 0x0000)
struct JsonHelper_AddJsonArrayValue final
{
public:
	struct FJsonStruct                            Json;                                              // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FJsonStruct                            Value;                                             // 0x0020(0x0020)(Parm, NativeAccessSpecifierPublic)
	bool                                          isSuccess;                                         // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(JsonHelper_AddJsonArrayValue) == 0x000008, "Wrong alignment on JsonHelper_AddJsonArrayValue");
static_assert(sizeof(JsonHelper_AddJsonArrayValue) == 0x000048, "Wrong size on JsonHelper_AddJsonArrayValue");
static_assert(offsetof(JsonHelper_AddJsonArrayValue, Json) == 0x000000, "Member 'JsonHelper_AddJsonArrayValue::Json' has a wrong offset!");
static_assert(offsetof(JsonHelper_AddJsonArrayValue, Value) == 0x000020, "Member 'JsonHelper_AddJsonArrayValue::Value' has a wrong offset!");
static_assert(offsetof(JsonHelper_AddJsonArrayValue, isSuccess) == 0x000040, "Member 'JsonHelper_AddJsonArrayValue::isSuccess' has a wrong offset!");

// Function JsonModule.JsonHelper.AddJsonObjectValue
// 0x0048 (0x0048 - 0x0000)
struct JsonHelper_AddJsonObjectValue final
{
public:
	struct FJsonStruct                            Json;                                              // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	struct FJsonStruct                            Value;                                             // 0x0020(0x0020)(Parm, NativeAccessSpecifierPublic)
	bool                                          isSuccess;                                         // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          isRepleace;                                        // 0x0041(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(JsonHelper_AddJsonObjectValue) == 0x000008, "Wrong alignment on JsonHelper_AddJsonObjectValue");
static_assert(sizeof(JsonHelper_AddJsonObjectValue) == 0x000048, "Wrong size on JsonHelper_AddJsonObjectValue");
static_assert(offsetof(JsonHelper_AddJsonObjectValue, Json) == 0x000000, "Member 'JsonHelper_AddJsonObjectValue::Json' has a wrong offset!");
static_assert(offsetof(JsonHelper_AddJsonObjectValue, Value) == 0x000020, "Member 'JsonHelper_AddJsonObjectValue::Value' has a wrong offset!");
static_assert(offsetof(JsonHelper_AddJsonObjectValue, isSuccess) == 0x000040, "Member 'JsonHelper_AddJsonObjectValue::isSuccess' has a wrong offset!");
static_assert(offsetof(JsonHelper_AddJsonObjectValue, isRepleace) == 0x000041, "Member 'JsonHelper_AddJsonObjectValue::isRepleace' has a wrong offset!");

// Function JsonModule.JsonHelper.ChangeJsonArrayValue
// 0x0068 (0x0068 - 0x0000)
struct JsonHelper_ChangeJsonArrayValue final
{
public:
	struct FJsonStruct                            Json;                                              // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FJsonStruct                            from;                                              // 0x0020(0x0020)(Parm, NativeAccessSpecifierPublic)
	struct FJsonStruct                            to;                                                // 0x0040(0x0020)(Parm, NativeAccessSpecifierPublic)
	bool                                          isSuccess;                                         // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(JsonHelper_ChangeJsonArrayValue) == 0x000008, "Wrong alignment on JsonHelper_ChangeJsonArrayValue");
static_assert(sizeof(JsonHelper_ChangeJsonArrayValue) == 0x000068, "Wrong size on JsonHelper_ChangeJsonArrayValue");
static_assert(offsetof(JsonHelper_ChangeJsonArrayValue, Json) == 0x000000, "Member 'JsonHelper_ChangeJsonArrayValue::Json' has a wrong offset!");
static_assert(offsetof(JsonHelper_ChangeJsonArrayValue, from) == 0x000020, "Member 'JsonHelper_ChangeJsonArrayValue::from' has a wrong offset!");
static_assert(offsetof(JsonHelper_ChangeJsonArrayValue, to) == 0x000040, "Member 'JsonHelper_ChangeJsonArrayValue::to' has a wrong offset!");
static_assert(offsetof(JsonHelper_ChangeJsonArrayValue, isSuccess) == 0x000060, "Member 'JsonHelper_ChangeJsonArrayValue::isSuccess' has a wrong offset!");

// Function JsonModule.JsonHelper.ChangeJsonObjectValue
// 0x0058 (0x0058 - 0x0000)
struct JsonHelper_ChangeJsonObjectValue final
{
public:
	struct FJsonStruct                            Json;                                              // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJsonStruct                            Value;                                             // 0x0030(0x0020)(Parm, NativeAccessSpecifierPublic)
	bool                                          isSuccess;                                         // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(JsonHelper_ChangeJsonObjectValue) == 0x000008, "Wrong alignment on JsonHelper_ChangeJsonObjectValue");
static_assert(sizeof(JsonHelper_ChangeJsonObjectValue) == 0x000058, "Wrong size on JsonHelper_ChangeJsonObjectValue");
static_assert(offsetof(JsonHelper_ChangeJsonObjectValue, Json) == 0x000000, "Member 'JsonHelper_ChangeJsonObjectValue::Json' has a wrong offset!");
static_assert(offsetof(JsonHelper_ChangeJsonObjectValue, Key) == 0x000020, "Member 'JsonHelper_ChangeJsonObjectValue::Key' has a wrong offset!");
static_assert(offsetof(JsonHelper_ChangeJsonObjectValue, Value) == 0x000030, "Member 'JsonHelper_ChangeJsonObjectValue::Value' has a wrong offset!");
static_assert(offsetof(JsonHelper_ChangeJsonObjectValue, isSuccess) == 0x000050, "Member 'JsonHelper_ChangeJsonObjectValue::isSuccess' has a wrong offset!");

// Function JsonModule.JsonHelper.CreateJsonArray
// 0x0020 (0x0020 - 0x0000)
struct JsonHelper_CreateJsonArray final
{
public:
	struct FJsonStruct                            ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonHelper_CreateJsonArray) == 0x000008, "Wrong alignment on JsonHelper_CreateJsonArray");
static_assert(sizeof(JsonHelper_CreateJsonArray) == 0x000020, "Wrong size on JsonHelper_CreateJsonArray");
static_assert(offsetof(JsonHelper_CreateJsonArray, ReturnValue) == 0x000000, "Member 'JsonHelper_CreateJsonArray::ReturnValue' has a wrong offset!");

// Function JsonModule.JsonHelper.CreateJsonArrayByValue
// 0x0030 (0x0030 - 0x0000)
struct JsonHelper_CreateJsonArrayByValue final
{
public:
	TArray<struct FJsonStruct>                    Arrays;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FJsonStruct                            ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonHelper_CreateJsonArrayByValue) == 0x000008, "Wrong alignment on JsonHelper_CreateJsonArrayByValue");
static_assert(sizeof(JsonHelper_CreateJsonArrayByValue) == 0x000030, "Wrong size on JsonHelper_CreateJsonArrayByValue");
static_assert(offsetof(JsonHelper_CreateJsonArrayByValue, Arrays) == 0x000000, "Member 'JsonHelper_CreateJsonArrayByValue::Arrays' has a wrong offset!");
static_assert(offsetof(JsonHelper_CreateJsonArrayByValue, ReturnValue) == 0x000010, "Member 'JsonHelper_CreateJsonArrayByValue::ReturnValue' has a wrong offset!");

// Function JsonModule.JsonHelper.CreateJsonBoolValue
// 0x0038 (0x0038 - 0x0000)
struct JsonHelper_CreateJsonBoolValue final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJsonStruct                            ReturnValue;                                       // 0x0018(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonHelper_CreateJsonBoolValue) == 0x000008, "Wrong alignment on JsonHelper_CreateJsonBoolValue");
static_assert(sizeof(JsonHelper_CreateJsonBoolValue) == 0x000038, "Wrong size on JsonHelper_CreateJsonBoolValue");
static_assert(offsetof(JsonHelper_CreateJsonBoolValue, Key) == 0x000000, "Member 'JsonHelper_CreateJsonBoolValue::Key' has a wrong offset!");
static_assert(offsetof(JsonHelper_CreateJsonBoolValue, Value) == 0x000010, "Member 'JsonHelper_CreateJsonBoolValue::Value' has a wrong offset!");
static_assert(offsetof(JsonHelper_CreateJsonBoolValue, ReturnValue) == 0x000018, "Member 'JsonHelper_CreateJsonBoolValue::ReturnValue' has a wrong offset!");

// Function JsonModule.JsonHelper.CreateJsonNumberValue
// 0x0038 (0x0038 - 0x0000)
struct JsonHelper_CreateJsonNumberValue final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJsonStruct                            ReturnValue;                                       // 0x0018(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonHelper_CreateJsonNumberValue) == 0x000008, "Wrong alignment on JsonHelper_CreateJsonNumberValue");
static_assert(sizeof(JsonHelper_CreateJsonNumberValue) == 0x000038, "Wrong size on JsonHelper_CreateJsonNumberValue");
static_assert(offsetof(JsonHelper_CreateJsonNumberValue, Key) == 0x000000, "Member 'JsonHelper_CreateJsonNumberValue::Key' has a wrong offset!");
static_assert(offsetof(JsonHelper_CreateJsonNumberValue, Value) == 0x000010, "Member 'JsonHelper_CreateJsonNumberValue::Value' has a wrong offset!");
static_assert(offsetof(JsonHelper_CreateJsonNumberValue, ReturnValue) == 0x000018, "Member 'JsonHelper_CreateJsonNumberValue::ReturnValue' has a wrong offset!");

// Function JsonModule.JsonHelper.CreateJsonObject
// 0x0020 (0x0020 - 0x0000)
struct JsonHelper_CreateJsonObject final
{
public:
	struct FJsonStruct                            ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonHelper_CreateJsonObject) == 0x000008, "Wrong alignment on JsonHelper_CreateJsonObject");
static_assert(sizeof(JsonHelper_CreateJsonObject) == 0x000020, "Wrong size on JsonHelper_CreateJsonObject");
static_assert(offsetof(JsonHelper_CreateJsonObject, ReturnValue) == 0x000000, "Member 'JsonHelper_CreateJsonObject::ReturnValue' has a wrong offset!");

// Function JsonModule.JsonHelper.CreateJsonObjectByValue
// 0x0030 (0x0030 - 0x0000)
struct JsonHelper_CreateJsonObjectByValue final
{
public:
	TArray<struct FJsonStruct>                    Arrays;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FJsonStruct                            ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonHelper_CreateJsonObjectByValue) == 0x000008, "Wrong alignment on JsonHelper_CreateJsonObjectByValue");
static_assert(sizeof(JsonHelper_CreateJsonObjectByValue) == 0x000030, "Wrong size on JsonHelper_CreateJsonObjectByValue");
static_assert(offsetof(JsonHelper_CreateJsonObjectByValue, Arrays) == 0x000000, "Member 'JsonHelper_CreateJsonObjectByValue::Arrays' has a wrong offset!");
static_assert(offsetof(JsonHelper_CreateJsonObjectByValue, ReturnValue) == 0x000010, "Member 'JsonHelper_CreateJsonObjectByValue::ReturnValue' has a wrong offset!");

// Function JsonModule.JsonHelper.CreateJsonStringValue
// 0x0040 (0x0040 - 0x0000)
struct JsonHelper_CreateJsonStringValue final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJsonStruct                            ReturnValue;                                       // 0x0020(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonHelper_CreateJsonStringValue) == 0x000008, "Wrong alignment on JsonHelper_CreateJsonStringValue");
static_assert(sizeof(JsonHelper_CreateJsonStringValue) == 0x000040, "Wrong size on JsonHelper_CreateJsonStringValue");
static_assert(offsetof(JsonHelper_CreateJsonStringValue, Key) == 0x000000, "Member 'JsonHelper_CreateJsonStringValue::Key' has a wrong offset!");
static_assert(offsetof(JsonHelper_CreateJsonStringValue, Value) == 0x000010, "Member 'JsonHelper_CreateJsonStringValue::Value' has a wrong offset!");
static_assert(offsetof(JsonHelper_CreateJsonStringValue, ReturnValue) == 0x000020, "Member 'JsonHelper_CreateJsonStringValue::ReturnValue' has a wrong offset!");

// Function JsonModule.JsonHelper.FindJsonFromObject
// 0x0058 (0x0058 - 0x0000)
struct JsonHelper_FindJsonFromObject final
{
public:
	struct FJsonStruct                            Json;                                              // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJsonType                                     Type;                                              // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          isFound;                                           // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJsonStruct                            ReturnValue;                                       // 0x0038(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonHelper_FindJsonFromObject) == 0x000008, "Wrong alignment on JsonHelper_FindJsonFromObject");
static_assert(sizeof(JsonHelper_FindJsonFromObject) == 0x000058, "Wrong size on JsonHelper_FindJsonFromObject");
static_assert(offsetof(JsonHelper_FindJsonFromObject, Json) == 0x000000, "Member 'JsonHelper_FindJsonFromObject::Json' has a wrong offset!");
static_assert(offsetof(JsonHelper_FindJsonFromObject, Key) == 0x000020, "Member 'JsonHelper_FindJsonFromObject::Key' has a wrong offset!");
static_assert(offsetof(JsonHelper_FindJsonFromObject, Type) == 0x000030, "Member 'JsonHelper_FindJsonFromObject::Type' has a wrong offset!");
static_assert(offsetof(JsonHelper_FindJsonFromObject, isFound) == 0x000031, "Member 'JsonHelper_FindJsonFromObject::isFound' has a wrong offset!");
static_assert(offsetof(JsonHelper_FindJsonFromObject, ReturnValue) == 0x000038, "Member 'JsonHelper_FindJsonFromObject::ReturnValue' has a wrong offset!");

// Function JsonModule.JsonHelper.GetAllValueFromJson
// 0x0030 (0x0030 - 0x0000)
struct JsonHelper_GetAllValueFromJson final
{
public:
	struct FJsonStruct                            Json;                                              // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TArray<struct FJsonStruct>                    ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonHelper_GetAllValueFromJson) == 0x000008, "Wrong alignment on JsonHelper_GetAllValueFromJson");
static_assert(sizeof(JsonHelper_GetAllValueFromJson) == 0x000030, "Wrong size on JsonHelper_GetAllValueFromJson");
static_assert(offsetof(JsonHelper_GetAllValueFromJson, Json) == 0x000000, "Member 'JsonHelper_GetAllValueFromJson::Json' has a wrong offset!");
static_assert(offsetof(JsonHelper_GetAllValueFromJson, ReturnValue) == 0x000020, "Member 'JsonHelper_GetAllValueFromJson::ReturnValue' has a wrong offset!");

// Function JsonModule.JsonHelper.JsonObjectToKeyValuePairs
// 0x0030 (0x0030 - 0x0000)
struct JsonHelper_JsonObjectToKeyValuePairs final
{
public:
	struct FJsonStruct                            Json;                                              // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonHelper_JsonObjectToKeyValuePairs) == 0x000008, "Wrong alignment on JsonHelper_JsonObjectToKeyValuePairs");
static_assert(sizeof(JsonHelper_JsonObjectToKeyValuePairs) == 0x000030, "Wrong size on JsonHelper_JsonObjectToKeyValuePairs");
static_assert(offsetof(JsonHelper_JsonObjectToKeyValuePairs, Json) == 0x000000, "Member 'JsonHelper_JsonObjectToKeyValuePairs::Json' has a wrong offset!");
static_assert(offsetof(JsonHelper_JsonObjectToKeyValuePairs, ReturnValue) == 0x000020, "Member 'JsonHelper_JsonObjectToKeyValuePairs::ReturnValue' has a wrong offset!");

// Function JsonModule.JsonHelper.JsonType
// 0x0028 (0x0028 - 0x0000)
struct JsonHelper_JsonType final
{
public:
	struct FJsonStruct                            Json;                                              // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	EJsonType                                     ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(JsonHelper_JsonType) == 0x000008, "Wrong alignment on JsonHelper_JsonType");
static_assert(sizeof(JsonHelper_JsonType) == 0x000028, "Wrong size on JsonHelper_JsonType");
static_assert(offsetof(JsonHelper_JsonType, Json) == 0x000000, "Member 'JsonHelper_JsonType::Json' has a wrong offset!");
static_assert(offsetof(JsonHelper_JsonType, ReturnValue) == 0x000020, "Member 'JsonHelper_JsonType::ReturnValue' has a wrong offset!");

// Function JsonModule.JsonHelper.ParseJson
// 0x0030 (0x0030 - 0x0000)
struct JsonHelper_ParseJson final
{
public:
	class FString                                 str;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJsonStruct                            ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonHelper_ParseJson) == 0x000008, "Wrong alignment on JsonHelper_ParseJson");
static_assert(sizeof(JsonHelper_ParseJson) == 0x000030, "Wrong size on JsonHelper_ParseJson");
static_assert(offsetof(JsonHelper_ParseJson, str) == 0x000000, "Member 'JsonHelper_ParseJson::str' has a wrong offset!");
static_assert(offsetof(JsonHelper_ParseJson, ReturnValue) == 0x000010, "Member 'JsonHelper_ParseJson::ReturnValue' has a wrong offset!");

// Function JsonModule.JsonHelper.RemoveJsonArrayValueByValue
// 0x0048 (0x0048 - 0x0000)
struct JsonHelper_RemoveJsonArrayValueByValue final
{
public:
	struct FJsonStruct                            Json;                                              // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	struct FJsonStruct                            Value;                                             // 0x0020(0x0020)(Parm, NativeAccessSpecifierPublic)
	bool                                          isSuccess;                                         // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(JsonHelper_RemoveJsonArrayValueByValue) == 0x000008, "Wrong alignment on JsonHelper_RemoveJsonArrayValueByValue");
static_assert(sizeof(JsonHelper_RemoveJsonArrayValueByValue) == 0x000048, "Wrong size on JsonHelper_RemoveJsonArrayValueByValue");
static_assert(offsetof(JsonHelper_RemoveJsonArrayValueByValue, Json) == 0x000000, "Member 'JsonHelper_RemoveJsonArrayValueByValue::Json' has a wrong offset!");
static_assert(offsetof(JsonHelper_RemoveJsonArrayValueByValue, Value) == 0x000020, "Member 'JsonHelper_RemoveJsonArrayValueByValue::Value' has a wrong offset!");
static_assert(offsetof(JsonHelper_RemoveJsonArrayValueByValue, isSuccess) == 0x000040, "Member 'JsonHelper_RemoveJsonArrayValueByValue::isSuccess' has a wrong offset!");

// Function JsonModule.JsonHelper.RemoveJsonObjectValueByKey
// 0x0038 (0x0038 - 0x0000)
struct JsonHelper_RemoveJsonObjectValueByKey final
{
public:
	struct FJsonStruct                            Json;                                              // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          isSuccess;                                         // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(JsonHelper_RemoveJsonObjectValueByKey) == 0x000008, "Wrong alignment on JsonHelper_RemoveJsonObjectValueByKey");
static_assert(sizeof(JsonHelper_RemoveJsonObjectValueByKey) == 0x000038, "Wrong size on JsonHelper_RemoveJsonObjectValueByKey");
static_assert(offsetof(JsonHelper_RemoveJsonObjectValueByKey, Json) == 0x000000, "Member 'JsonHelper_RemoveJsonObjectValueByKey::Json' has a wrong offset!");
static_assert(offsetof(JsonHelper_RemoveJsonObjectValueByKey, Key) == 0x000020, "Member 'JsonHelper_RemoveJsonObjectValueByKey::Key' has a wrong offset!");
static_assert(offsetof(JsonHelper_RemoveJsonObjectValueByKey, isSuccess) == 0x000030, "Member 'JsonHelper_RemoveJsonObjectValueByKey::isSuccess' has a wrong offset!");

// Function JsonModule.JsonHelper.SetJsonKey
// 0x0050 (0x0050 - 0x0000)
struct JsonHelper_SetJsonKey final
{
public:
	struct FJsonStruct                            Json;                                              // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJsonStruct                            ReturnValue;                                       // 0x0030(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonHelper_SetJsonKey) == 0x000008, "Wrong alignment on JsonHelper_SetJsonKey");
static_assert(sizeof(JsonHelper_SetJsonKey) == 0x000050, "Wrong size on JsonHelper_SetJsonKey");
static_assert(offsetof(JsonHelper_SetJsonKey, Json) == 0x000000, "Member 'JsonHelper_SetJsonKey::Json' has a wrong offset!");
static_assert(offsetof(JsonHelper_SetJsonKey, Key) == 0x000020, "Member 'JsonHelper_SetJsonKey::Key' has a wrong offset!");
static_assert(offsetof(JsonHelper_SetJsonKey, ReturnValue) == 0x000030, "Member 'JsonHelper_SetJsonKey::ReturnValue' has a wrong offset!");

// Function JsonModule.JsonHelper.ToString
// 0x0030 (0x0030 - 0x0000)
struct JsonHelper_ToString final
{
public:
	struct FJsonStruct                            Json;                                              // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonHelper_ToString) == 0x000008, "Wrong alignment on JsonHelper_ToString");
static_assert(sizeof(JsonHelper_ToString) == 0x000030, "Wrong size on JsonHelper_ToString");
static_assert(offsetof(JsonHelper_ToString, Json) == 0x000000, "Member 'JsonHelper_ToString::Json' has a wrong offset!");
static_assert(offsetof(JsonHelper_ToString, ReturnValue) == 0x000020, "Member 'JsonHelper_ToString::ReturnValue' has a wrong offset!");

// Function JsonModule.JsonHelper.TryGetBaseValue
// 0x0030 (0x0030 - 0x0000)
struct JsonHelper_TryGetBaseValue final
{
public:
	struct FJsonStruct                            Json;                                              // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonHelper_TryGetBaseValue) == 0x000008, "Wrong alignment on JsonHelper_TryGetBaseValue");
static_assert(sizeof(JsonHelper_TryGetBaseValue) == 0x000030, "Wrong size on JsonHelper_TryGetBaseValue");
static_assert(offsetof(JsonHelper_TryGetBaseValue, Json) == 0x000000, "Member 'JsonHelper_TryGetBaseValue::Json' has a wrong offset!");
static_assert(offsetof(JsonHelper_TryGetBaseValue, ReturnValue) == 0x000020, "Member 'JsonHelper_TryGetBaseValue::ReturnValue' has a wrong offset!");

}


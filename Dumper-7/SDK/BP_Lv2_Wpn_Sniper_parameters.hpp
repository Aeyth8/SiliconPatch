#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lv2_Wpn_Sniper

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Lv2_DifficultStruct_structs.hpp"
#include "SiliconRising_structs.hpp"
#include "EnumDifficuty_structs.hpp"


namespace SDK::Params
{

// Function BP_Lv2_Wpn_Sniper.BP_Lv2_Wpn_Sniper_C.ExecuteUbergraph_BP_Lv2_Wpn_Sniper
// 0x0380 (0x0380 - 0x0000)
struct BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable1;                               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable2;                               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Visible;                        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent1;   // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp1;             // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex1;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0080(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   Temp_name_Variable3;                               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Lv2_Gia_C*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0110(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_Lv2_Gia_C*                          CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeaponParams                          K2Node_MakeStruct_WeaponParams;                    // 0x0128(0x0080)(NoDestructor)
	class ABP_Mer2_lv2_Character_PC_C*            K2Node_DynamicCast_AsBP_Mer_2_Lv_2_Character_PC;   // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EnumDifficuty                                 Temp_byte_Variable;                                // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DB[0x5];                                      // 0x01DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLv2_DifficultStruct                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x01E8(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_222[0x2];                                      // 0x0222(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0248(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult1;      // 0x02E0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x0368(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue1;        // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_373[0x1];                                      // 0x0373(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper) == 0x000008, "Wrong alignment on BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper");
static_assert(sizeof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper) == 0x000380, "Wrong size on BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, EntryPoint) == 0x000000, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, Temp_name_Variable) == 0x000008, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, Temp_name_Variable1) == 0x000010, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, Temp_name_Variable2) == 0x000018, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::Temp_name_Variable2' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, K2Node_DynamicCast_AsMer_2Game_Instance) == 0x000030, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::K2Node_DynamicCast_AsMer_2Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, K2Node_CustomEvent_Visible) == 0x000039, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::K2Node_CustomEvent_Visible' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, K2Node_ComponentBoundEvent_OverlappedComponent1) == 0x000040, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::K2Node_ComponentBoundEvent_OverlappedComponent1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, K2Node_ComponentBoundEvent_OtherActor1) == 0x000048, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::K2Node_ComponentBoundEvent_OtherActor1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, K2Node_ComponentBoundEvent_OtherComp1) == 0x000050, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::K2Node_ComponentBoundEvent_OtherComp1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, K2Node_ComponentBoundEvent_OtherBodyIndex1) == 0x000058, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::K2Node_ComponentBoundEvent_OtherBodyIndex1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000060, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, K2Node_ComponentBoundEvent_OtherActor) == 0x000068, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, K2Node_ComponentBoundEvent_OtherComp) == 0x000070, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000078, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, K2Node_ComponentBoundEvent_bFromSweep) == 0x00007C, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, K2Node_ComponentBoundEvent_SweepResult) == 0x000080, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, Temp_name_Variable3) == 0x000108, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::Temp_name_Variable3' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_GetAllActorsOfClass_OutActors) == 0x000110, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_Array_Get_Item) == 0x000120, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, K2Node_MakeStruct_WeaponParams) == 0x000128, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::K2Node_MakeStruct_WeaponParams' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, K2Node_DynamicCast_AsBP_Mer_2_Lv_2_Character_PC) == 0x0001A8, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::K2Node_DynamicCast_AsBP_Mer_2_Lv_2_Character_PC' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, K2Node_DynamicCast_bSuccess1) == 0x0001B0, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_GetOwner_ReturnValue) == 0x0001B8, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0001C0, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_IsValid_ReturnValue) == 0x0001C8, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, K2Node_DynamicCast_AsCharacter) == 0x0001D0, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, K2Node_DynamicCast_bSuccess2) == 0x0001D8, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, Temp_byte_Variable) == 0x0001D9, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_IsLocallyControlled_ReturnValue) == 0x0001DA, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, K2Node_Select_Default) == 0x0001E0, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001E8, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000220, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_IsValid_ReturnValue1) == 0x000221, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_GetForwardVector_ReturnValue) == 0x000224, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000230, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00023C, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000248, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_Add_VectorVector_ReturnValue) == 0x0002D0, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_K2_SetWorldLocation_SweepHitResult1) == 0x0002E0, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_K2_SetWorldLocation_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_GetAttachParent_ReturnValue) == 0x000368, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000370, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000371, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_K2_AttachToComponent_ReturnValue1) == 0x000372, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_K2_AttachToComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper, CallFunc_MakeVector_ReturnValue) == 0x000374, "Member 'BP_Lv2_Wpn_Sniper_C_ExecuteUbergraph_BP_Lv2_Wpn_Sniper::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_Lv2_Wpn_Sniper.BP_Lv2_Wpn_Sniper_C.BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Lv2_Wpn_Sniper.BP_Lv2_Wpn_Sniper_C.BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Lv2_Wpn_Sniper_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_Lv2_Wpn_Sniper.BP_Lv2_Wpn_Sniper_C.DisplayTexture
// 0x0001 (0x0001 - 0x0000)
struct BP_Lv2_Wpn_Sniper_C_DisplayTexture final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lv2_Wpn_Sniper_C_DisplayTexture) == 0x000001, "Wrong alignment on BP_Lv2_Wpn_Sniper_C_DisplayTexture");
static_assert(sizeof(BP_Lv2_Wpn_Sniper_C_DisplayTexture) == 0x000001, "Wrong size on BP_Lv2_Wpn_Sniper_C_DisplayTexture");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_DisplayTexture, Visible) == 0x000000, "Member 'BP_Lv2_Wpn_Sniper_C_DisplayTexture::Visible' has a wrong offset!");

// Function BP_Lv2_Wpn_Sniper.BP_Lv2_Wpn_Sniper_C.UpdateMark
// 0x03C8 (0x03C8 - 0x0000)
struct BP_Lv2_Wpn_Sniper_C_UpdateMark final
{
public:
	class UMaterialInstanceDynamic*               DynamicMat;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemoveIndex;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rotation;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue1;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue;       // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue1;      // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Lv2_NPCBase_C*                      K2Node_DynamicCast_AsBP_Lv_2_NPCBase;              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue3;              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue1;            // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Lv2_Gia_C*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0148(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_Lv2_Gia_C*                          CallFunc_Array_Get_Item1;                          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_162[0x2];                                      // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Mer2_lv2_Character_PC_C*            K2Node_DynamicCast_AsBP_Mer_2_Lv_2_Character_PC;   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue2;     // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0190(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue2;      // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue2;            // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue3;      // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue1;        // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue1;                       // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue1;        // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue1;       // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FA[0x2];                                      // 0x01FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue4;              // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue5;              // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue3;           // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue3;     // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0228(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B3[0x1];                                      // 0x02B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0300(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0340(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Lv2_Wpn_Sniper_C_UpdateMark) == 0x000008, "Wrong alignment on BP_Lv2_Wpn_Sniper_C_UpdateMark");
static_assert(sizeof(BP_Lv2_Wpn_Sniper_C_UpdateMark) == 0x0003C8, "Wrong size on BP_Lv2_Wpn_Sniper_C_UpdateMark");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, DynamicMat) == 0x000000, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::DynamicMat' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, RemoveIndex) == 0x000008, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::RemoveIndex' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, Rotation) == 0x00000C, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::Rotation' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Concat_StrStr_ReturnValue1) == 0x000038, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Conv_StringToName_ReturnValue) == 0x000048, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Conv_StringToName_ReturnValue1) == 0x000050, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Conv_StringToName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00005C, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Add_IntInt_ReturnValue1) == 0x000060, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Add_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00006C, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_GetForwardVector_ReturnValue) == 0x000070, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00007C, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000A0, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000AC, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000B8, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_IsValid_ReturnValue1) == 0x0000C4, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_ProjectVectorOnToPlane_ReturnValue) == 0x0000C8, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_ProjectVectorOnToPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_ProjectVectorOnToPlane_ReturnValue1) == 0x0000D4, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_ProjectVectorOnToPlane_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_VSize_ReturnValue) == 0x0000E0, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0000E4, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000F0, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakRotator_Roll) == 0x0000F4, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakRotator_Pitch) == 0x0000F8, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakRotator_Yaw) == 0x0000FC, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000100, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000104, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000108, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Add_FloatFloat_ReturnValue2) == 0x00010C, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000110, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000114, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, K2Node_DynamicCast_AsBP_Lv_2_NPCBase) == 0x000118, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::K2Node_DynamicCast_AsBP_Lv_2_NPCBase' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Add_FloatFloat_ReturnValue3) == 0x000124, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Add_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000128, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x00012C, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x000130, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_GetForwardVector_ReturnValue1) == 0x00013C, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_GetForwardVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_GetAllActorsOfClass_OutActors) == 0x000148, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Array_Get_Item1) == 0x000158, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_IsValid_ReturnValue2) == 0x000160, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000161, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000164, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000170, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, K2Node_DynamicCast_AsBP_Mer_2_Lv_2_Character_PC) == 0x000178, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::K2Node_DynamicCast_AsBP_Mer_2_Lv_2_Character_PC' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, K2Node_DynamicCast_bSuccess1) == 0x000180, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_K2_GetComponentLocation_ReturnValue2) == 0x000184, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_K2_GetComponentLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, K2Node_MakeArray_Array) == 0x000190, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x0001A0, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_ProjectVectorOnToPlane_ReturnValue2) == 0x0001AC, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_ProjectVectorOnToPlane_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_GetForwardVector_ReturnValue2) == 0x0001B8, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_GetForwardVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_ProjectVectorOnToPlane_ReturnValue3) == 0x0001C4, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_ProjectVectorOnToPlane_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001D0, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Conv_VectorToRotator_ReturnValue1) == 0x0001DC, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Conv_VectorToRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_VSize_ReturnValue1) == 0x0001E8, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_VSize_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakRotator_Roll1) == 0x0001EC, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakRotator_Pitch1) == 0x0001F0, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakRotator_Yaw1) == 0x0001F4, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_LessEqual_FloatFloat_ReturnValue1) == 0x0001F8, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_LessEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_EqualEqual_FloatFloat_ReturnValue1) == 0x0001F9, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_EqualEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0001FC, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Add_FloatFloat_ReturnValue4) == 0x000200, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Add_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Add_FloatFloat_ReturnValue5) == 0x000204, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Add_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x000208, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Divide_FloatFloat_ReturnValue3) == 0x00020C, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Divide_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_K2_GetComponentLocation_ReturnValue3) == 0x000210, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_K2_GetComponentLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_Add_VectorVector_ReturnValue) == 0x00021C, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_LineTraceSingle_OutHit) == 0x000228, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_LineTraceSingle_ReturnValue) == 0x0002B0, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakHitResult_bBlockingHit) == 0x0002B1, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002B2, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakHitResult_Time) == 0x0002B4, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakHitResult_Distance) == 0x0002B8, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakHitResult_Location) == 0x0002BC, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakHitResult_ImpactPoint) == 0x0002C8, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakHitResult_Normal) == 0x0002D4, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakHitResult_ImpactNormal) == 0x0002E0, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakHitResult_PhysMat) == 0x0002F0, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakHitResult_HitActor) == 0x0002F8, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakHitResult_HitComponent) == 0x000300, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakHitResult_HitBoneName) == 0x000308, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakHitResult_HitItem) == 0x000310, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakHitResult_FaceIndex) == 0x000314, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakHitResult_TraceStart) == 0x000318, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_BreakHitResult_TraceEnd) == 0x000324, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_FindLookAtRotation_ReturnValue) == 0x000330, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UpdateMark, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000340, "Member 'BP_Lv2_Wpn_Sniper_C_UpdateMark::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function BP_Lv2_Wpn_Sniper.BP_Lv2_Wpn_Sniper_C.AttachScope
// 0x0002 (0x0002 - 0x0000)
struct BP_Lv2_Wpn_Sniper_C_AttachScope final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lv2_Wpn_Sniper_C_AttachScope) == 0x000001, "Wrong alignment on BP_Lv2_Wpn_Sniper_C_AttachScope");
static_assert(sizeof(BP_Lv2_Wpn_Sniper_C_AttachScope) == 0x000002, "Wrong size on BP_Lv2_Wpn_Sniper_C_AttachScope");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_AttachScope, ReturnValue) == 0x000000, "Member 'BP_Lv2_Wpn_Sniper_C_AttachScope::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_AttachScope, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000001, "Member 'BP_Lv2_Wpn_Sniper_C_AttachScope::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BP_Lv2_Wpn_Sniper.BP_Lv2_Wpn_Sniper_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Lv2_Wpn_Sniper_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv2_Wpn_Sniper_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Lv2_Wpn_Sniper_C_ReceiveTick");
static_assert(sizeof(BP_Lv2_Wpn_Sniper_C_ReceiveTick) == 0x000004, "Wrong size on BP_Lv2_Wpn_Sniper_C_ReceiveTick");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Lv2_Wpn_Sniper_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Lv2_Wpn_Sniper.BP_Lv2_Wpn_Sniper_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct BP_Lv2_Wpn_Sniper_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_AttachScope_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lv2_Wpn_Sniper_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_Lv2_Wpn_Sniper_C_UserConstructionScript");
static_assert(sizeof(BP_Lv2_Wpn_Sniper_C_UserConstructionScript) == 0x000001, "Wrong size on BP_Lv2_Wpn_Sniper_C_UserConstructionScript");
static_assert(offsetof(BP_Lv2_Wpn_Sniper_C_UserConstructionScript, CallFunc_AttachScope_ReturnValue) == 0x000000, "Member 'BP_Lv2_Wpn_Sniper_C_UserConstructionScript::CallFunc_AttachScope_ReturnValue' has a wrong offset!");

}


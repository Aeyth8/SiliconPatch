#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CarHUD_map

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_CarHUD-map.BP_CarHUD-map_C.ExecuteUbergraph_BP_CarHUD-map
// 0x0060 (0x0060 - 0x0000)
struct BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPlayerCarLoc_NewParam;                 // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x000C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map) == 0x000004, "Wrong alignment on BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map");
static_assert(sizeof(BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map) == 0x000060, "Wrong size on BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map");
static_assert(offsetof(BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map, EntryPoint) == 0x000000, "Member 'BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map, CallFunc_GetPlayerCarLoc_NewParam) == 0x000004, "Member 'BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map::CallFunc_GetPlayerCarLoc_NewParam' has a wrong offset!");
static_assert(offsetof(BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map, K2Node_Event_MyGeometry) == 0x00000C, "Member 'BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map, K2Node_Event_InDeltaTime) == 0x000044, "Member 'BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map, CallFunc_BreakVector2D_X) == 0x000048, "Member 'BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map, CallFunc_BreakVector2D_Y) == 0x00004C, "Member 'BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000054, "Member 'BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map, CallFunc_MakeVector2D_ReturnValue) == 0x000058, "Member 'BP_CarHUD_map_C_ExecuteUbergraph_BP_CarHUD_map::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function BP_CarHUD-map.BP_CarHUD-map_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_CarHUD_map_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarHUD_map_C_Tick) == 0x000004, "Wrong alignment on BP_CarHUD_map_C_Tick");
static_assert(sizeof(BP_CarHUD_map_C_Tick) == 0x00003C, "Wrong size on BP_CarHUD_map_C_Tick");
static_assert(offsetof(BP_CarHUD_map_C_Tick, MyGeometry) == 0x000000, "Member 'BP_CarHUD_map_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_CarHUD_map_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_CarHUD_map_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_CarHUD-map.BP_CarHUD-map_C.InitHUD
// 0x0010 (0x0010 - 0x0000)
struct BP_CarHUD_map_C_InitHUD final
{
public:
	class ABP_Lv3_BaseCar_C*                      PlayerCar;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Lv3_BaseCar_C*                      Prison;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarHUD_map_C_InitHUD) == 0x000008, "Wrong alignment on BP_CarHUD_map_C_InitHUD");
static_assert(sizeof(BP_CarHUD_map_C_InitHUD) == 0x000010, "Wrong size on BP_CarHUD_map_C_InitHUD");
static_assert(offsetof(BP_CarHUD_map_C_InitHUD, PlayerCar) == 0x000000, "Member 'BP_CarHUD_map_C_InitHUD::PlayerCar' has a wrong offset!");
static_assert(offsetof(BP_CarHUD_map_C_InitHUD, Prison) == 0x000008, "Member 'BP_CarHUD_map_C_InitHUD::Prison' has a wrong offset!");

}


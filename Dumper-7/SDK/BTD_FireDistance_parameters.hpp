#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_FireDistance

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTD_FireDistance.BTD_FireDistance_C.PerformConditionCheckAI
// 0x0040 (0x0040 - 0x0000)
struct BTD_FireDistance_C_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Lv3_NPCBase_C*                      K2Node_DynamicCast_AsBP_Lv_3_NPCBase;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue1;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetBlackboardValueAsFloat_ReturnValue;    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBlackboardValueAsFloat_ReturnValue1;   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTD_FireDistance_C_PerformConditionCheckAI) == 0x000008, "Wrong alignment on BTD_FireDistance_C_PerformConditionCheckAI");
static_assert(sizeof(BTD_FireDistance_C_PerformConditionCheckAI) == 0x000040, "Wrong size on BTD_FireDistance_C_PerformConditionCheckAI");
static_assert(offsetof(BTD_FireDistance_C_PerformConditionCheckAI, OwnerController) == 0x000000, "Member 'BTD_FireDistance_C_PerformConditionCheckAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTD_FireDistance_C_PerformConditionCheckAI, ControlledPawn) == 0x000008, "Member 'BTD_FireDistance_C_PerformConditionCheckAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTD_FireDistance_C_PerformConditionCheckAI, ReturnValue) == 0x000010, "Member 'BTD_FireDistance_C_PerformConditionCheckAI::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_FireDistance_C_PerformConditionCheckAI, K2Node_DynamicCast_AsBP_Lv_3_NPCBase) == 0x000018, "Member 'BTD_FireDistance_C_PerformConditionCheckAI::K2Node_DynamicCast_AsBP_Lv_3_NPCBase' has a wrong offset!");
static_assert(offsetof(BTD_FireDistance_C_PerformConditionCheckAI, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTD_FireDistance_C_PerformConditionCheckAI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTD_FireDistance_C_PerformConditionCheckAI, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BTD_FireDistance_C_PerformConditionCheckAI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_FireDistance_C_PerformConditionCheckAI, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'BTD_FireDistance_C_PerformConditionCheckAI::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_FireDistance_C_PerformConditionCheckAI, K2Node_SwitchEnum_CmpSuccess) == 0x000023, "Member 'BTD_FireDistance_C_PerformConditionCheckAI::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BTD_FireDistance_C_PerformConditionCheckAI, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000024, "Member 'BTD_FireDistance_C_PerformConditionCheckAI::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_FireDistance_C_PerformConditionCheckAI, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000025, "Member 'BTD_FireDistance_C_PerformConditionCheckAI::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_FireDistance_C_PerformConditionCheckAI, CallFunc_Abs_ReturnValue) == 0x000028, "Member 'BTD_FireDistance_C_PerformConditionCheckAI::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_FireDistance_C_PerformConditionCheckAI, CallFunc_NotEqual_ByteByte_ReturnValue1) == 0x00002C, "Member 'BTD_FireDistance_C_PerformConditionCheckAI::CallFunc_NotEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTD_FireDistance_C_PerformConditionCheckAI, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x00002D, "Member 'BTD_FireDistance_C_PerformConditionCheckAI::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTD_FireDistance_C_PerformConditionCheckAI, CallFunc_GetBlackboardValueAsFloat_ReturnValue) == 0x000030, "Member 'BTD_FireDistance_C_PerformConditionCheckAI::CallFunc_GetBlackboardValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_FireDistance_C_PerformConditionCheckAI, CallFunc_GetBlackboardValueAsFloat_ReturnValue1) == 0x000034, "Member 'BTD_FireDistance_C_PerformConditionCheckAI::CallFunc_GetBlackboardValueAsFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTD_FireDistance_C_PerformConditionCheckAI, CallFunc_Less_FloatFloat_ReturnValue) == 0x000038, "Member 'BTD_FireDistance_C_PerformConditionCheckAI::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_FireDistance_C_PerformConditionCheckAI, CallFunc_BooleanAND_ReturnValue1) == 0x000039, "Member 'BTD_FireDistance_C_PerformConditionCheckAI::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

}


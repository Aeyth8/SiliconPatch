#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Mer2Character_PC

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_Mer2Character_PC.BP_Mer2Character_PC_C.ExecuteUbergraph_BP_Mer2Character_PC
// 0x0350 (0x0350 - 0x0000)
struct BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0008(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key3;                         // 0x0028(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key4;                         // 0x0048(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key5;                         // 0x0068(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key6;                         // 0x0088(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key7;                         // 0x00A0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key8;                         // 0x00B8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x00D0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key9;                         // 0x00E8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key10;                        // 0x0100(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key11;                        // 0x0118(0x0018)(HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key12;                        // 0x0138(0x0018)(HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPCModeHud_C*                           CallFunc_Create_ReturnValue;                       // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A3[0x1];                                      // 0x01A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue1;         // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll2;                       // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch2;                      // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw2;                        // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x01FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FF[0x1];                                      // 0x01FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_206[0x2];                                      // 0x0206(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue1;        // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_TPP_C*                          K2Node_DynamicCast_AsAnim_BP_TPP;                  // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_233[0x1];                                      // 0x0233(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select2_Default;                            // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable1;                              // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable4;                               // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable5;                               // 0x024E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24F[0x1];                                      // 0x024F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select3_Default;                            // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key13;                        // 0x0258(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue2;        // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key1;                         // 0x0278(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable1;                             // 0x0290(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key2;                         // 0x02A8(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x02D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x02F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue9;                     // 0x02F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x02F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue10;                    // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FA[0x6];                                      // 0x02FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0300(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue11;                    // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWpn_Clip_C*                            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue12;                    // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue13;                    // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x034A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC) == 0x000010, "Wrong alignment on BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC");
static_assert(sizeof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC) == 0x000350, "Wrong size on BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, EntryPoint) == 0x000000, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_InputKeyEvent_Key) == 0x000008, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000020, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_InputKeyEvent_Key3) == 0x000028, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_InputKeyEvent_Key3' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, Temp_bool_Variable) == 0x000040, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_InputKeyEvent_Key4) == 0x000048, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_InputKeyEvent_Key4' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_InputKeyEvent_Key5) == 0x000068, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_InputKeyEvent_Key5' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_HasAuthority_ReturnValue) == 0x000080, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_InputKeyEvent_Key6) == 0x000088, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_InputKeyEvent_Key6' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_InputKeyEvent_Key7) == 0x0000A0, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_InputKeyEvent_Key7' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_InputKeyEvent_Key8) == 0x0000B8, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_InputKeyEvent_Key8' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, Temp_struct_Variable) == 0x0000D0, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_InputKeyEvent_Key9) == 0x0000E8, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_InputKeyEvent_Key9' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_InputKeyEvent_Key10) == 0x000100, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_InputKeyEvent_Key10' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_InputKeyEvent_Key11) == 0x000118, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_InputKeyEvent_Key11' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_Event_DeltaSeconds) == 0x000130, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_InputKeyEvent_Key12) == 0x000138, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_InputKeyEvent_Key12' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_GetController_ReturnValue) == 0x000150, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_IsValid_ReturnValue) == 0x000158, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_DynamicCast_AsPlayer_Controller) == 0x000160, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_Create_ReturnValue) == 0x000170, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, Temp_bool_Variable1) == 0x000178, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00017C, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_BreakRotator_Roll) == 0x000188, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_BreakRotator_Pitch) == 0x00018C, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_BreakRotator_Yaw) == 0x000190, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_MakeRotator_ReturnValue) == 0x000194, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0001A0, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_IsValid_ReturnValue1) == 0x0001A1, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_IsValid_ReturnValue2) == 0x0001A2, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_GetVelocity_ReturnValue) == 0x0001A4, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_K2_GetActorRotation_ReturnValue1) == 0x0001B0, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_K2_GetActorRotation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_VSize_ReturnValue) == 0x0001BC, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0001C0, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001CC, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x0001D0, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_BreakRotator_Roll1) == 0x0001DC, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_BreakRotator_Pitch1) == 0x0001E0, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_BreakRotator_Yaw1) == 0x0001E4, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_BreakRotator_Roll2) == 0x0001E8, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_BreakRotator_Roll2' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_BreakRotator_Pitch2) == 0x0001EC, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_BreakRotator_Pitch2' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_BreakRotator_Yaw2) == 0x0001F0, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_BreakRotator_Yaw2' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001F4, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_Abs_ReturnValue) == 0x0001F8, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_Less_FloatFloat_ReturnValue) == 0x0001FC, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_Less_FloatFloat_ReturnValue1) == 0x0001FD, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x0001FE, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000200, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x000204, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, Temp_bool_Variable2) == 0x000205, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_Select_Default) == 0x000208, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00020C, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x000210, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_Add_FloatFloat_ReturnValue) == 0x000214, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_K2_AttachToComponent_ReturnValue1) == 0x000218, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_K2_AttachToComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_GetAnimInstance_ReturnValue) == 0x000220, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_DynamicCast_AsAnim_BP_TPP) == 0x000228, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_DynamicCast_AsAnim_BP_TPP' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_DynamicCast_bSuccess1) == 0x000230, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_IsValid_ReturnValue3) == 0x000231, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, Temp_bool_Variable3) == 0x000232, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_Select1_Default) == 0x000234, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_Select2_Default) == 0x000238, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00023C, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, Temp_float_Variable) == 0x000240, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_IsLocallyControlled_ReturnValue) == 0x000244, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, Temp_float_Variable1) == 0x000248, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, Temp_bool_Variable4) == 0x00024C, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_Not_PreBool_ReturnValue1) == 0x00024D, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, Temp_bool_Variable5) == 0x00024E, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_Select3_Default) == 0x000250, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_InputKeyEvent_Key13) == 0x000258, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_InputKeyEvent_Key13' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_K2_AttachToComponent_ReturnValue2) == 0x000270, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_K2_AttachToComponent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_InputKeyEvent_Key1) == 0x000278, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_InputKeyEvent_Key1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, Temp_struct_Variable1) == 0x000290, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, K2Node_InputKeyEvent_Key2) == 0x0002A8, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::K2Node_InputKeyEvent_Key2' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, Temp_int_Variable) == 0x0002C0, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_Add_IntInt_ReturnValue) == 0x0002C4, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0002C8, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_Conv_IntToString_ReturnValue) == 0x0002D0, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_Concat_StrStr_ReturnValue) == 0x0002E0, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_IsValid_ReturnValue4) == 0x0002F0, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_IsValid_ReturnValue5) == 0x0002F1, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_IsValid_ReturnValue6) == 0x0002F2, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_IsValid_ReturnValue7) == 0x0002F3, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_IsValid_ReturnValue8) == 0x0002F4, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_IsValid_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_IsValid_ReturnValue9) == 0x0002F5, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_IsValid_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_BooleanOR_ReturnValue) == 0x0002F6, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, Temp_bool_Has_Been_Initd_Variable) == 0x0002F7, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_IsValid_ReturnValue10) == 0x0002F8, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_IsValid_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_IsValidClass_ReturnValue) == 0x0002F9, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_MakeTransform_ReturnValue) == 0x000300, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000330, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_IsValid_ReturnValue11) == 0x000338, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_IsValid_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_FinishSpawningActor_ReturnValue) == 0x000340, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_IsValid_ReturnValue12) == 0x000348, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_IsValid_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, CallFunc_IsValid_ReturnValue13) == 0x000349, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::CallFunc_IsValid_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC, Temp_bool_IsClosed_Variable) == 0x00034A, "Member 'BP_Mer2Character_PC_C_ExecuteUbergraph_BP_Mer2Character_PC::Temp_bool_IsClosed_Variable' has a wrong offset!");

// Function BP_Mer2Character_PC.BP_Mer2Character_PC_C.InpActEvt_Enter_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_Mer2Character_PC_C_InpActEvt_Enter_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mer2Character_PC_C_InpActEvt_Enter_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_Mer2Character_PC_C_InpActEvt_Enter_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_Mer2Character_PC_C_InpActEvt_Enter_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_Mer2Character_PC_C_InpActEvt_Enter_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_Mer2Character_PC_C_InpActEvt_Enter_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_Mer2Character_PC_C_InpActEvt_Enter_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_Mer2Character_PC.BP_Mer2Character_PC_C.InpActEvt_RightBracket_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_Mer2Character_PC_C_InpActEvt_RightBracket_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mer2Character_PC_C_InpActEvt_RightBracket_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_Mer2Character_PC_C_InpActEvt_RightBracket_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_Mer2Character_PC_C_InpActEvt_RightBracket_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_Mer2Character_PC_C_InpActEvt_RightBracket_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_Mer2Character_PC_C_InpActEvt_RightBracket_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_Mer2Character_PC_C_InpActEvt_RightBracket_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_Mer2Character_PC.BP_Mer2Character_PC_C.InpActEvt_LeftBracket_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_Mer2Character_PC_C_InpActEvt_LeftBracket_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mer2Character_PC_C_InpActEvt_LeftBracket_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on BP_Mer2Character_PC_C_InpActEvt_LeftBracket_K2Node_InputKeyEvent_2");
static_assert(sizeof(BP_Mer2Character_PC_C_InpActEvt_LeftBracket_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on BP_Mer2Character_PC_C_InpActEvt_LeftBracket_K2Node_InputKeyEvent_2");
static_assert(offsetof(BP_Mer2Character_PC_C_InpActEvt_LeftBracket_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'BP_Mer2Character_PC_C_InpActEvt_LeftBracket_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function BP_Mer2Character_PC.BP_Mer2Character_PC_C.InpActEvt_LeftBracket_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_Mer2Character_PC_C_InpActEvt_LeftBracket_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mer2Character_PC_C_InpActEvt_LeftBracket_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on BP_Mer2Character_PC_C_InpActEvt_LeftBracket_K2Node_InputKeyEvent_3");
static_assert(sizeof(BP_Mer2Character_PC_C_InpActEvt_LeftBracket_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on BP_Mer2Character_PC_C_InpActEvt_LeftBracket_K2Node_InputKeyEvent_3");
static_assert(offsetof(BP_Mer2Character_PC_C_InpActEvt_LeftBracket_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'BP_Mer2Character_PC_C_InpActEvt_LeftBracket_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function BP_Mer2Character_PC.BP_Mer2Character_PC_C.InpActEvt_Eight_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_Mer2Character_PC_C_InpActEvt_Eight_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mer2Character_PC_C_InpActEvt_Eight_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on BP_Mer2Character_PC_C_InpActEvt_Eight_K2Node_InputKeyEvent_4");
static_assert(sizeof(BP_Mer2Character_PC_C_InpActEvt_Eight_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on BP_Mer2Character_PC_C_InpActEvt_Eight_K2Node_InputKeyEvent_4");
static_assert(offsetof(BP_Mer2Character_PC_C_InpActEvt_Eight_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'BP_Mer2Character_PC_C_InpActEvt_Eight_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function BP_Mer2Character_PC.BP_Mer2Character_PC_C.InpActEvt_Nine_K2Node_InputKeyEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BP_Mer2Character_PC_C_InpActEvt_Nine_K2Node_InputKeyEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mer2Character_PC_C_InpActEvt_Nine_K2Node_InputKeyEvent_5) == 0x000008, "Wrong alignment on BP_Mer2Character_PC_C_InpActEvt_Nine_K2Node_InputKeyEvent_5");
static_assert(sizeof(BP_Mer2Character_PC_C_InpActEvt_Nine_K2Node_InputKeyEvent_5) == 0x000018, "Wrong size on BP_Mer2Character_PC_C_InpActEvt_Nine_K2Node_InputKeyEvent_5");
static_assert(offsetof(BP_Mer2Character_PC_C_InpActEvt_Nine_K2Node_InputKeyEvent_5, Key) == 0x000000, "Member 'BP_Mer2Character_PC_C_InpActEvt_Nine_K2Node_InputKeyEvent_5::Key' has a wrong offset!");

// Function BP_Mer2Character_PC.BP_Mer2Character_PC_C.InpActEvt_Zero_K2Node_InputKeyEvent_6
// 0x0018 (0x0018 - 0x0000)
struct BP_Mer2Character_PC_C_InpActEvt_Zero_K2Node_InputKeyEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mer2Character_PC_C_InpActEvt_Zero_K2Node_InputKeyEvent_6) == 0x000008, "Wrong alignment on BP_Mer2Character_PC_C_InpActEvt_Zero_K2Node_InputKeyEvent_6");
static_assert(sizeof(BP_Mer2Character_PC_C_InpActEvt_Zero_K2Node_InputKeyEvent_6) == 0x000018, "Wrong size on BP_Mer2Character_PC_C_InpActEvt_Zero_K2Node_InputKeyEvent_6");
static_assert(offsetof(BP_Mer2Character_PC_C_InpActEvt_Zero_K2Node_InputKeyEvent_6, Key) == 0x000000, "Member 'BP_Mer2Character_PC_C_InpActEvt_Zero_K2Node_InputKeyEvent_6::Key' has a wrong offset!");

// Function BP_Mer2Character_PC.BP_Mer2Character_PC_C.InpActEvt_B_K2Node_InputKeyEvent_7
// 0x0018 (0x0018 - 0x0000)
struct BP_Mer2Character_PC_C_InpActEvt_B_K2Node_InputKeyEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mer2Character_PC_C_InpActEvt_B_K2Node_InputKeyEvent_7) == 0x000008, "Wrong alignment on BP_Mer2Character_PC_C_InpActEvt_B_K2Node_InputKeyEvent_7");
static_assert(sizeof(BP_Mer2Character_PC_C_InpActEvt_B_K2Node_InputKeyEvent_7) == 0x000018, "Wrong size on BP_Mer2Character_PC_C_InpActEvt_B_K2Node_InputKeyEvent_7");
static_assert(offsetof(BP_Mer2Character_PC_C_InpActEvt_B_K2Node_InputKeyEvent_7, Key) == 0x000000, "Member 'BP_Mer2Character_PC_C_InpActEvt_B_K2Node_InputKeyEvent_7::Key' has a wrong offset!");

// Function BP_Mer2Character_PC.BP_Mer2Character_PC_C.InpActEvt_P_K2Node_InputKeyEvent_8
// 0x0018 (0x0018 - 0x0000)
struct BP_Mer2Character_PC_C_InpActEvt_P_K2Node_InputKeyEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mer2Character_PC_C_InpActEvt_P_K2Node_InputKeyEvent_8) == 0x000008, "Wrong alignment on BP_Mer2Character_PC_C_InpActEvt_P_K2Node_InputKeyEvent_8");
static_assert(sizeof(BP_Mer2Character_PC_C_InpActEvt_P_K2Node_InputKeyEvent_8) == 0x000018, "Wrong size on BP_Mer2Character_PC_C_InpActEvt_P_K2Node_InputKeyEvent_8");
static_assert(offsetof(BP_Mer2Character_PC_C_InpActEvt_P_K2Node_InputKeyEvent_8, Key) == 0x000000, "Member 'BP_Mer2Character_PC_C_InpActEvt_P_K2Node_InputKeyEvent_8::Key' has a wrong offset!");

// Function BP_Mer2Character_PC.BP_Mer2Character_PC_C.InpActEvt_LeftShift_K2Node_InputKeyEvent_9
// 0x0018 (0x0018 - 0x0000)
struct BP_Mer2Character_PC_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mer2Character_PC_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_9) == 0x000008, "Wrong alignment on BP_Mer2Character_PC_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_9");
static_assert(sizeof(BP_Mer2Character_PC_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_9) == 0x000018, "Wrong size on BP_Mer2Character_PC_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_9");
static_assert(offsetof(BP_Mer2Character_PC_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_9, Key) == 0x000000, "Member 'BP_Mer2Character_PC_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_9::Key' has a wrong offset!");

// Function BP_Mer2Character_PC.BP_Mer2Character_PC_C.InpActEvt_LeftShift_K2Node_InputKeyEvent_10
// 0x0018 (0x0018 - 0x0000)
struct BP_Mer2Character_PC_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mer2Character_PC_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_10) == 0x000008, "Wrong alignment on BP_Mer2Character_PC_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_10");
static_assert(sizeof(BP_Mer2Character_PC_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_10) == 0x000018, "Wrong size on BP_Mer2Character_PC_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_10");
static_assert(offsetof(BP_Mer2Character_PC_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_10, Key) == 0x000000, "Member 'BP_Mer2Character_PC_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_10::Key' has a wrong offset!");

// Function BP_Mer2Character_PC.BP_Mer2Character_PC_C.InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_11
// 0x0018 (0x0018 - 0x0000)
struct BP_Mer2Character_PC_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_11 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mer2Character_PC_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_11) == 0x000008, "Wrong alignment on BP_Mer2Character_PC_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_11");
static_assert(sizeof(BP_Mer2Character_PC_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_11) == 0x000018, "Wrong size on BP_Mer2Character_PC_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_11");
static_assert(offsetof(BP_Mer2Character_PC_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_11, Key) == 0x000000, "Member 'BP_Mer2Character_PC_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_11::Key' has a wrong offset!");

// Function BP_Mer2Character_PC.BP_Mer2Character_PC_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_12
// 0x0018 (0x0018 - 0x0000)
struct BP_Mer2Character_PC_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_12 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mer2Character_PC_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_12) == 0x000008, "Wrong alignment on BP_Mer2Character_PC_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_12");
static_assert(sizeof(BP_Mer2Character_PC_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_12) == 0x000018, "Wrong size on BP_Mer2Character_PC_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_12");
static_assert(offsetof(BP_Mer2Character_PC_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_12, Key) == 0x000000, "Member 'BP_Mer2Character_PC_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_12::Key' has a wrong offset!");

// Function BP_Mer2Character_PC.BP_Mer2Character_PC_C.InpActEvt_Backslash_K2Node_InputKeyEvent_13
// 0x0018 (0x0018 - 0x0000)
struct BP_Mer2Character_PC_C_InpActEvt_Backslash_K2Node_InputKeyEvent_13 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mer2Character_PC_C_InpActEvt_Backslash_K2Node_InputKeyEvent_13) == 0x000008, "Wrong alignment on BP_Mer2Character_PC_C_InpActEvt_Backslash_K2Node_InputKeyEvent_13");
static_assert(sizeof(BP_Mer2Character_PC_C_InpActEvt_Backslash_K2Node_InputKeyEvent_13) == 0x000018, "Wrong size on BP_Mer2Character_PC_C_InpActEvt_Backslash_K2Node_InputKeyEvent_13");
static_assert(offsetof(BP_Mer2Character_PC_C_InpActEvt_Backslash_K2Node_InputKeyEvent_13, Key) == 0x000000, "Member 'BP_Mer2Character_PC_C_InpActEvt_Backslash_K2Node_InputKeyEvent_13::Key' has a wrong offset!");

// Function BP_Mer2Character_PC.BP_Mer2Character_PC_C.SkipWaves
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Mer2Character_PC_C_SkipWaves final
{
public:
	TArray<class ABP_AI_Wave_C*>                  Waves;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	class UPCModeCheat_C*                         CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AI_Wave_C*                          CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetGamePaused_ReturnValue;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AI_Wave_C*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0058(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class UObject*>                        CallFunc_SortArrayWithDefault_OutArray;            // 0x0068(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item1;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AI_Wave_C*                          K2Node_DynamicCast_AsBP_AI_Wave;                   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPCModeCheat_C*                         K2Node_DynamicCast_AsPCMode_Cheat;                 // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Mer2Character_PC_C_SkipWaves) == 0x000008, "Wrong alignment on BP_Mer2Character_PC_C_SkipWaves");
static_assert(sizeof(BP_Mer2Character_PC_C_SkipWaves) == 0x0000B0, "Wrong size on BP_Mer2Character_PC_C_SkipWaves");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, Waves) == 0x000000, "Member 'BP_Mer2Character_PC_C_SkipWaves::Waves' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, CallFunc_Create_ReturnValue) == 0x000010, "Member 'BP_Mer2Character_PC_C_SkipWaves::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_Mer2Character_PC_C_SkipWaves::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_Mer2Character_PC_C_SkipWaves::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_Mer2Character_PC_C_SkipWaves::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, Temp_int_Array_Index_Variable1) == 0x000024, "Member 'BP_Mer2Character_PC_C_SkipWaves::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Mer2Character_PC_C_SkipWaves::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_Mer2Character_PC_C_SkipWaves::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, CallFunc_GetController_ReturnValue) == 0x000038, "Member 'BP_Mer2Character_PC_C_SkipWaves::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_Mer2Character_PC_C_SkipWaves::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, K2Node_DynamicCast_AsPlayer_Controller) == 0x000048, "Member 'BP_Mer2Character_PC_C_SkipWaves::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_Mer2Character_PC_C_SkipWaves::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, CallFunc_SetGamePaused_ReturnValue) == 0x000051, "Member 'BP_Mer2Character_PC_C_SkipWaves::CallFunc_SetGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, Temp_int_Loop_Counter_Variable1) == 0x000054, "Member 'BP_Mer2Character_PC_C_SkipWaves::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, CallFunc_GetAllActorsOfClass_OutActors) == 0x000058, "Member 'BP_Mer2Character_PC_C_SkipWaves::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, CallFunc_SortArrayWithDefault_OutArray) == 0x000068, "Member 'BP_Mer2Character_PC_C_SkipWaves::CallFunc_SortArrayWithDefault_OutArray' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, CallFunc_Add_IntInt_ReturnValue1) == 0x000078, "Member 'BP_Mer2Character_PC_C_SkipWaves::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, CallFunc_Array_Get_Item1) == 0x000080, "Member 'BP_Mer2Character_PC_C_SkipWaves::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, K2Node_DynamicCast_AsBP_AI_Wave) == 0x000088, "Member 'BP_Mer2Character_PC_C_SkipWaves::K2Node_DynamicCast_AsBP_AI_Wave' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, K2Node_DynamicCast_bSuccess1) == 0x000090, "Member 'BP_Mer2Character_PC_C_SkipWaves::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, CallFunc_Array_Length_ReturnValue1) == 0x000094, "Member 'BP_Mer2Character_PC_C_SkipWaves::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, CallFunc_Array_Add_ReturnValue) == 0x000098, "Member 'BP_Mer2Character_PC_C_SkipWaves::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, CallFunc_Less_IntInt_ReturnValue1) == 0x00009C, "Member 'BP_Mer2Character_PC_C_SkipWaves::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, K2Node_DynamicCast_AsPCMode_Cheat) == 0x0000A0, "Member 'BP_Mer2Character_PC_C_SkipWaves::K2Node_DynamicCast_AsPCMode_Cheat' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, K2Node_DynamicCast_bSuccess2) == 0x0000A8, "Member 'BP_Mer2Character_PC_C_SkipWaves::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_SkipWaves, CallFunc_IsValid_ReturnValue) == 0x0000A9, "Member 'BP_Mer2Character_PC_C_SkipWaves::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Mer2Character_PC.BP_Mer2Character_PC_C.NewFunction_0_0
// 0x0018 (0x0018 - 0x0000)
struct BP_Mer2Character_PC_C_NewFunction_0_0 final
{
public:
	int32                                         A;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mer2Character_PC_C_NewFunction_0_0) == 0x000008, "Wrong alignment on BP_Mer2Character_PC_C_NewFunction_0_0");
static_assert(sizeof(BP_Mer2Character_PC_C_NewFunction_0_0) == 0x000018, "Wrong size on BP_Mer2Character_PC_C_NewFunction_0_0");
static_assert(offsetof(BP_Mer2Character_PC_C_NewFunction_0_0, A) == 0x000000, "Member 'BP_Mer2Character_PC_C_NewFunction_0_0::A' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_NewFunction_0_0, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'BP_Mer2Character_PC_C_NewFunction_0_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_NewFunction_0_0, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_Mer2Character_PC_C_NewFunction_0_0::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_NewFunction_0_0, CallFunc_GetGameUserSettings_ReturnValue) == 0x000010, "Member 'BP_Mer2Character_PC_C_NewFunction_0_0::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");

// Function BP_Mer2Character_PC.BP_Mer2Character_PC_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Mer2Character_PC_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mer2Character_PC_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Mer2Character_PC_C_ReceiveTick");
static_assert(sizeof(BP_Mer2Character_PC_C_ReceiveTick) == 0x000004, "Wrong size on BP_Mer2Character_PC_C_ReceiveTick");
static_assert(offsetof(BP_Mer2Character_PC_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Mer2Character_PC_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Mer2Character_PC.BP_Mer2Character_PC_C.GetAimPos
// 0x0178 (0x0178 - 0x0000)
struct BP_Mer2Character_PC_C_GetAimPos final
{
public:
	struct FVector                                AimPos;                                            // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetAimPos_AimPos;                         // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mer2Character_PC_C_GetAimPos) == 0x000008, "Wrong alignment on BP_Mer2Character_PC_C_GetAimPos");
static_assert(sizeof(BP_Mer2Character_PC_C_GetAimPos) == 0x000178, "Wrong size on BP_Mer2Character_PC_C_GetAimPos");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, AimPos) == 0x000000, "Member 'BP_Mer2Character_PC_C_GetAimPos::AimPos' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, Temp_object_Variable) == 0x000010, "Member 'BP_Mer2Character_PC_C_GetAimPos::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_GetForwardVector_ReturnValue) == 0x000020, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00002C, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000038, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_Add_VectorVector_ReturnValue) == 0x000044, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_LineTraceSingle_OutHit) == 0x000050, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_LineTraceSingle_ReturnValue) == 0x0000D8, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_GetAimPos_AimPos) == 0x0000DC, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_GetAimPos_AimPos' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_BreakHitResult_bBlockingHit) == 0x0000E8, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000E9, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_BreakHitResult_Time) == 0x0000EC, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_BreakHitResult_Distance) == 0x0000F0, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_BreakHitResult_Location) == 0x0000F4, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_BreakHitResult_ImpactPoint) == 0x000100, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_BreakHitResult_Normal) == 0x00010C, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_BreakHitResult_ImpactNormal) == 0x000118, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_BreakHitResult_PhysMat) == 0x000128, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_BreakHitResult_HitActor) == 0x000130, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_BreakHitResult_HitComponent) == 0x000138, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_BreakHitResult_HitBoneName) == 0x000140, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_BreakHitResult_HitItem) == 0x000148, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_BreakHitResult_FaceIndex) == 0x00014C, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_BreakHitResult_TraceStart) == 0x000150, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_BreakHitResult_TraceEnd) == 0x00015C, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetAimPos, CallFunc_SelectVector_ReturnValue) == 0x000168, "Member 'BP_Mer2Character_PC_C_GetAimPos::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function BP_Mer2Character_PC.BP_Mer2Character_PC_C.GetCameraTargetPoint
// 0x0058 (0x0058 - 0x0000)
struct BP_Mer2Character_PC_C_GetCameraTargetPoint final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraTargetPoint_Location;            // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mer2Character_PC_C_GetCameraTargetPoint) == 0x000004, "Wrong alignment on BP_Mer2Character_PC_C_GetCameraTargetPoint");
static_assert(sizeof(BP_Mer2Character_PC_C_GetCameraTargetPoint) == 0x000058, "Wrong size on BP_Mer2Character_PC_C_GetCameraTargetPoint");
static_assert(offsetof(BP_Mer2Character_PC_C_GetCameraTargetPoint, Location) == 0x000000, "Member 'BP_Mer2Character_PC_C_GetCameraTargetPoint::Location' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetCameraTargetPoint, Temp_bool_Variable) == 0x00000C, "Member 'BP_Mer2Character_PC_C_GetCameraTargetPoint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetCameraTargetPoint, CallFunc_GetForwardVector_ReturnValue) == 0x000010, "Member 'BP_Mer2Character_PC_C_GetCameraTargetPoint::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetCameraTargetPoint, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00001C, "Member 'BP_Mer2Character_PC_C_GetCameraTargetPoint::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetCameraTargetPoint, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000028, "Member 'BP_Mer2Character_PC_C_GetCameraTargetPoint::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetCameraTargetPoint, CallFunc_GetCameraTargetPoint_Location) == 0x000034, "Member 'BP_Mer2Character_PC_C_GetCameraTargetPoint::CallFunc_GetCameraTargetPoint_Location' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetCameraTargetPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x000040, "Member 'BP_Mer2Character_PC_C_GetCameraTargetPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mer2Character_PC_C_GetCameraTargetPoint, K2Node_Select_Default) == 0x00004C, "Member 'BP_Mer2Character_PC_C_GetCameraTargetPoint::K2Node_Select_Default' has a wrong offset!");

}


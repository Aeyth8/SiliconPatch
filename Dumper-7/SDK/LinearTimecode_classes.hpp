#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LinearTimecode

#include "Basic.hpp"

#include "LinearTimecode_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class LinearTimecode.LinearTimecodeComponent
// 0x0068 (0x02A0 - 0x0238)
class ULinearTimecodeComponent final : public USceneComponent
{
public:
	class UMediaPlayer*                           MediaPlayer;                                       // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDropTimecode                          DropTimecode;                                      // 0x0240(0x001C)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnTimecodeChange;                                  // 0x0260(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_270[0x30];                                     // 0x0270(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void GetDropTimeCodeFrameNumber(const struct FDropTimecode& Timecode, int32* FrameNumber);
	static void SetDropTimecodeFrameNumber(const struct FDropTimecode& Timecode, int32 FrameNumber, struct FDropTimecode* OutTimecode);

	int32 GetDropFrameNumber() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LinearTimecodeComponent">();
	}
	static class ULinearTimecodeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULinearTimecodeComponent>();
	}
};
static_assert(alignof(ULinearTimecodeComponent) == 0x000008, "Wrong alignment on ULinearTimecodeComponent");
static_assert(sizeof(ULinearTimecodeComponent) == 0x0002A0, "Wrong size on ULinearTimecodeComponent");
static_assert(offsetof(ULinearTimecodeComponent, MediaPlayer) == 0x000238, "Member 'ULinearTimecodeComponent::MediaPlayer' has a wrong offset!");
static_assert(offsetof(ULinearTimecodeComponent, DropTimecode) == 0x000240, "Member 'ULinearTimecodeComponent::DropTimecode' has a wrong offset!");
static_assert(offsetof(ULinearTimecodeComponent, OnTimecodeChange) == 0x000260, "Member 'ULinearTimecodeComponent::OnTimecodeChange' has a wrong offset!");

// Class LinearTimecode.DropTimecodeToStringConversion
// 0x0000 (0x0028 - 0x0028)
class UDropTimecodeToStringConversion final : public UBlueprintFunctionLibrary
{
public:
	static class FString Conv_DropTimecodeToString(const struct FDropTimecode& InTimecode);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DropTimecodeToStringConversion">();
	}
	static class UDropTimecodeToStringConversion* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDropTimecodeToStringConversion>();
	}
};
static_assert(alignof(UDropTimecodeToStringConversion) == 0x000008, "Wrong alignment on UDropTimecodeToStringConversion");
static_assert(sizeof(UDropTimecodeToStringConversion) == 0x000028, "Wrong size on UDropTimecodeToStringConversion");

}


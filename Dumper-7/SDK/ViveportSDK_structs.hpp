#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ViveportSDK

#include "Basic.hpp"


namespace SDK
{

// Enum ViveportSDK.SubscriptionTransactionType
// NumValues: 0x0005
enum class ESubscriptionTransactionType : uint8
{
	UNKNOWN                                  = 0,
	PAID                                     = 1,
	REDEEM                                   = 2,
	FREETRIAL                                = 3,
	SubscriptionTransactionType_MAX          = 4,
};

// ScriptStruct ViveportSDK.SessionIsReadyJsonResponse
// 0x0028 (0x0028 - 0x0000)
struct FSessionIsReadyJsonResponse final
{
public:
	int32                                         statusCode;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 appID;                                             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message;                                           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSessionIsReadyJsonResponse) == 0x000008, "Wrong alignment on FSessionIsReadyJsonResponse");
static_assert(sizeof(FSessionIsReadyJsonResponse) == 0x000028, "Wrong size on FSessionIsReadyJsonResponse");
static_assert(offsetof(FSessionIsReadyJsonResponse, statusCode) == 0x000000, "Member 'FSessionIsReadyJsonResponse::statusCode' has a wrong offset!");
static_assert(offsetof(FSessionIsReadyJsonResponse, appID) == 0x000008, "Member 'FSessionIsReadyJsonResponse::appID' has a wrong offset!");
static_assert(offsetof(FSessionIsReadyJsonResponse, Message) == 0x000018, "Member 'FSessionIsReadyJsonResponse::Message' has a wrong offset!");

// ScriptStruct ViveportSDK.SessionResult
// 0x0020 (0x0020 - 0x0000)
struct FSessionResult final
{
public:
	class FString                                 pchAppID;                                          // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 pchGuid;                                           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSessionResult) == 0x000008, "Wrong alignment on FSessionResult");
static_assert(sizeof(FSessionResult) == 0x000020, "Wrong size on FSessionResult");
static_assert(offsetof(FSessionResult, pchAppID) == 0x000000, "Member 'FSessionResult::pchAppID' has a wrong offset!");
static_assert(offsetof(FSessionResult, pchGuid) == 0x000010, "Member 'FSessionResult::pchGuid' has a wrong offset!");

// ScriptStruct ViveportSDK.SessionJsonResponse
// 0x0038 (0x0038 - 0x0000)
struct FSessionJsonResponse final
{
public:
	int32                                         statusCode;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 appID;                                             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Guid;                                              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message;                                           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSessionJsonResponse) == 0x000008, "Wrong alignment on FSessionJsonResponse");
static_assert(sizeof(FSessionJsonResponse) == 0x000038, "Wrong size on FSessionJsonResponse");
static_assert(offsetof(FSessionJsonResponse, statusCode) == 0x000000, "Member 'FSessionJsonResponse::statusCode' has a wrong offset!");
static_assert(offsetof(FSessionJsonResponse, appID) == 0x000008, "Member 'FSessionJsonResponse::appID' has a wrong offset!");
static_assert(offsetof(FSessionJsonResponse, Guid) == 0x000018, "Member 'FSessionJsonResponse::Guid' has a wrong offset!");
static_assert(offsetof(FSessionJsonResponse, Message) == 0x000028, "Member 'FSessionJsonResponse::Message' has a wrong offset!");

// ScriptStruct ViveportSDK.TimePeriod
// 0x0018 (0x0018 - 0x0000)
struct FTimePeriod final
{
public:
	class FString                                 time_type;                                         // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTimePeriod) == 0x000008, "Wrong alignment on FTimePeriod");
static_assert(sizeof(FTimePeriod) == 0x000018, "Wrong size on FTimePeriod");
static_assert(offsetof(FTimePeriod, time_type) == 0x000000, "Member 'FTimePeriod::time_type' has a wrong offset!");
static_assert(offsetof(FTimePeriod, Value) == 0x000010, "Member 'FTimePeriod::Value' has a wrong offset!");

// ScriptStruct ViveportSDK.StatusDetailTransaction
// 0x0028 (0x0028 - 0x0000)
struct FStatusDetailTransaction final
{
public:
	int64                                         create_time;                                       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 payment_method;                                    // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 status;                                            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FStatusDetailTransaction) == 0x000008, "Wrong alignment on FStatusDetailTransaction");
static_assert(sizeof(FStatusDetailTransaction) == 0x000028, "Wrong size on FStatusDetailTransaction");
static_assert(offsetof(FStatusDetailTransaction, create_time) == 0x000000, "Member 'FStatusDetailTransaction::create_time' has a wrong offset!");
static_assert(offsetof(FStatusDetailTransaction, payment_method) == 0x000008, "Member 'FStatusDetailTransaction::payment_method' has a wrong offset!");
static_assert(offsetof(FStatusDetailTransaction, status) == 0x000018, "Member 'FStatusDetailTransaction::status' has a wrong offset!");

// ScriptStruct ViveportSDK.StatusDetail
// 0x0028 (0x0028 - 0x0000)
struct FStatusDetail final
{
public:
	int64                                         date_next_charge;                                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FStatusDetailTransaction>       transactions;                                      // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 cancel_reason;                                     // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FStatusDetail) == 0x000008, "Wrong alignment on FStatusDetail");
static_assert(sizeof(FStatusDetail) == 0x000028, "Wrong size on FStatusDetail");
static_assert(offsetof(FStatusDetail, date_next_charge) == 0x000000, "Member 'FStatusDetail::date_next_charge' has a wrong offset!");
static_assert(offsetof(FStatusDetail, transactions) == 0x000008, "Member 'FStatusDetail::transactions' has a wrong offset!");
static_assert(offsetof(FStatusDetail, cancel_reason) == 0x000018, "Member 'FStatusDetail::cancel_reason' has a wrong offset!");

// ScriptStruct ViveportSDK.Subscription
// 0x00E8 (0x00E8 - 0x0000)
struct FSubscription final
{
public:
	class FString                                 app_id;                                            // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 order_id;                                          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 subscription_id;                                   // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 price;                                             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 currency;                                          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         subscribed_timestamp;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimePeriod                            free_trial_period;                                 // 0x0058(0x0018)(NativeAccessSpecifierPublic)
	struct FTimePeriod                            charge_period;                                     // 0x0070(0x0018)(NativeAccessSpecifierPublic)
	int32                                         number_of_charge_period;                           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 plan_id;                                           // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 plan_name;                                         // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 status;                                            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStatusDetail                          status_detail;                                     // 0x00C0(0x0028)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FSubscription) == 0x000008, "Wrong alignment on FSubscription");
static_assert(sizeof(FSubscription) == 0x0000E8, "Wrong size on FSubscription");
static_assert(offsetof(FSubscription, app_id) == 0x000000, "Member 'FSubscription::app_id' has a wrong offset!");
static_assert(offsetof(FSubscription, order_id) == 0x000010, "Member 'FSubscription::order_id' has a wrong offset!");
static_assert(offsetof(FSubscription, subscription_id) == 0x000020, "Member 'FSubscription::subscription_id' has a wrong offset!");
static_assert(offsetof(FSubscription, price) == 0x000030, "Member 'FSubscription::price' has a wrong offset!");
static_assert(offsetof(FSubscription, currency) == 0x000040, "Member 'FSubscription::currency' has a wrong offset!");
static_assert(offsetof(FSubscription, subscribed_timestamp) == 0x000050, "Member 'FSubscription::subscribed_timestamp' has a wrong offset!");
static_assert(offsetof(FSubscription, free_trial_period) == 0x000058, "Member 'FSubscription::free_trial_period' has a wrong offset!");
static_assert(offsetof(FSubscription, charge_period) == 0x000070, "Member 'FSubscription::charge_period' has a wrong offset!");
static_assert(offsetof(FSubscription, number_of_charge_period) == 0x000088, "Member 'FSubscription::number_of_charge_period' has a wrong offset!");
static_assert(offsetof(FSubscription, plan_id) == 0x000090, "Member 'FSubscription::plan_id' has a wrong offset!");
static_assert(offsetof(FSubscription, plan_name) == 0x0000A0, "Member 'FSubscription::plan_name' has a wrong offset!");
static_assert(offsetof(FSubscription, status) == 0x0000B0, "Member 'FSubscription::status' has a wrong offset!");
static_assert(offsetof(FSubscription, status_detail) == 0x0000C0, "Member 'FSubscription::status_detail' has a wrong offset!");

// ScriptStruct ViveportSDK.GetBalanceJsonResponse
// 0x0038 (0x0038 - 0x0000)
struct FGetBalanceJsonResponse final
{
public:
	int32                                         statusCode;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 currencyName;                                      // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 balance;                                           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message;                                           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGetBalanceJsonResponse) == 0x000008, "Wrong alignment on FGetBalanceJsonResponse");
static_assert(sizeof(FGetBalanceJsonResponse) == 0x000038, "Wrong size on FGetBalanceJsonResponse");
static_assert(offsetof(FGetBalanceJsonResponse, statusCode) == 0x000000, "Member 'FGetBalanceJsonResponse::statusCode' has a wrong offset!");
static_assert(offsetof(FGetBalanceJsonResponse, currencyName) == 0x000008, "Member 'FGetBalanceJsonResponse::currencyName' has a wrong offset!");
static_assert(offsetof(FGetBalanceJsonResponse, balance) == 0x000018, "Member 'FGetBalanceJsonResponse::balance' has a wrong offset!");
static_assert(offsetof(FGetBalanceJsonResponse, Message) == 0x000028, "Member 'FGetBalanceJsonResponse::Message' has a wrong offset!");

// ScriptStruct ViveportSDK.QueryResponse2
// 0x0068 (0x0068 - 0x0000)
struct FQueryResponse2 final
{
public:
	class FString                                 order_id;                                          // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 app_id;                                            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 purchase_id;                                       // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 price;                                             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 currency;                                          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         paid_timestamp;                                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 user_data;                                         // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FQueryResponse2) == 0x000008, "Wrong alignment on FQueryResponse2");
static_assert(sizeof(FQueryResponse2) == 0x000068, "Wrong size on FQueryResponse2");
static_assert(offsetof(FQueryResponse2, order_id) == 0x000000, "Member 'FQueryResponse2::order_id' has a wrong offset!");
static_assert(offsetof(FQueryResponse2, app_id) == 0x000010, "Member 'FQueryResponse2::app_id' has a wrong offset!");
static_assert(offsetof(FQueryResponse2, purchase_id) == 0x000020, "Member 'FQueryResponse2::purchase_id' has a wrong offset!");
static_assert(offsetof(FQueryResponse2, price) == 0x000030, "Member 'FQueryResponse2::price' has a wrong offset!");
static_assert(offsetof(FQueryResponse2, currency) == 0x000040, "Member 'FQueryResponse2::currency' has a wrong offset!");
static_assert(offsetof(FQueryResponse2, paid_timestamp) == 0x000050, "Member 'FQueryResponse2::paid_timestamp' has a wrong offset!");
static_assert(offsetof(FQueryResponse2, user_data) == 0x000058, "Member 'FQueryResponse2::user_data' has a wrong offset!");

// ScriptStruct ViveportSDK.QueryListResponse
// 0x0028 (0x0028 - 0x0000)
struct FQueryListResponse final
{
public:
	int64                                         total;                                             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         from;                                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         to;                                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FQueryResponse2>                purchaseList;                                      // 0x0018(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FQueryListResponse) == 0x000008, "Wrong alignment on FQueryListResponse");
static_assert(sizeof(FQueryListResponse) == 0x000028, "Wrong size on FQueryListResponse");
static_assert(offsetof(FQueryListResponse, total) == 0x000000, "Member 'FQueryListResponse::total' has a wrong offset!");
static_assert(offsetof(FQueryListResponse, from) == 0x000008, "Member 'FQueryListResponse::from' has a wrong offset!");
static_assert(offsetof(FQueryListResponse, to) == 0x000010, "Member 'FQueryListResponse::to' has a wrong offset!");
static_assert(offsetof(FQueryListResponse, purchaseList) == 0x000018, "Member 'FQueryListResponse::purchaseList' has a wrong offset!");

// ScriptStruct ViveportSDK.QueryResponse
// 0x0058 (0x0058 - 0x0000)
struct FQueryResponse final
{
public:
	class FString                                 purchase_id;                                       // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 order_id;                                          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 status;                                            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 price;                                             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 currency;                                          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         paid_timestamp;                                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FQueryResponse) == 0x000008, "Wrong alignment on FQueryResponse");
static_assert(sizeof(FQueryResponse) == 0x000058, "Wrong size on FQueryResponse");
static_assert(offsetof(FQueryResponse, purchase_id) == 0x000000, "Member 'FQueryResponse::purchase_id' has a wrong offset!");
static_assert(offsetof(FQueryResponse, order_id) == 0x000010, "Member 'FQueryResponse::order_id' has a wrong offset!");
static_assert(offsetof(FQueryResponse, status) == 0x000020, "Member 'FQueryResponse::status' has a wrong offset!");
static_assert(offsetof(FQueryResponse, price) == 0x000030, "Member 'FQueryResponse::price' has a wrong offset!");
static_assert(offsetof(FQueryResponse, currency) == 0x000040, "Member 'FQueryResponse::currency' has a wrong offset!");
static_assert(offsetof(FQueryResponse, paid_timestamp) == 0x000050, "Member 'FQueryResponse::paid_timestamp' has a wrong offset!");

// ScriptStruct ViveportSDK.CancelSubscriptionJsonResponse
// 0x0018 (0x0018 - 0x0000)
struct FCancelSubscriptionJsonResponse final
{
public:
	int32                                         statusCode;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCancelSubscriptionJsonResponse) == 0x000008, "Wrong alignment on FCancelSubscriptionJsonResponse");
static_assert(sizeof(FCancelSubscriptionJsonResponse) == 0x000018, "Wrong size on FCancelSubscriptionJsonResponse");
static_assert(offsetof(FCancelSubscriptionJsonResponse, statusCode) == 0x000000, "Member 'FCancelSubscriptionJsonResponse::statusCode' has a wrong offset!");
static_assert(offsetof(FCancelSubscriptionJsonResponse, Message) == 0x000008, "Member 'FCancelSubscriptionJsonResponse::Message' has a wrong offset!");

// ScriptStruct ViveportSDK.QuerySubscriptionJsonResponse
// 0x0028 (0x0028 - 0x0000)
struct FQuerySubscriptionJsonResponse final
{
public:
	int32                                         statusCode;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSubscription>                  subscriptions;                                     // 0x0018(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FQuerySubscriptionJsonResponse) == 0x000008, "Wrong alignment on FQuerySubscriptionJsonResponse");
static_assert(sizeof(FQuerySubscriptionJsonResponse) == 0x000028, "Wrong size on FQuerySubscriptionJsonResponse");
static_assert(offsetof(FQuerySubscriptionJsonResponse, statusCode) == 0x000000, "Member 'FQuerySubscriptionJsonResponse::statusCode' has a wrong offset!");
static_assert(offsetof(FQuerySubscriptionJsonResponse, Message) == 0x000008, "Member 'FQuerySubscriptionJsonResponse::Message' has a wrong offset!");
static_assert(offsetof(FQuerySubscriptionJsonResponse, subscriptions) == 0x000018, "Member 'FQuerySubscriptionJsonResponse::subscriptions' has a wrong offset!");

// ScriptStruct ViveportSDK.SubscribeJsonResponse
// 0x0040 (0x0040 - 0x0000)
struct FSubscribeJsonResponse final
{
public:
	int32                                         statusCode;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 subscription_id;                                   // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         subscribed_timestamp;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 plan_id;                                           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message;                                           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSubscribeJsonResponse) == 0x000008, "Wrong alignment on FSubscribeJsonResponse");
static_assert(sizeof(FSubscribeJsonResponse) == 0x000040, "Wrong size on FSubscribeJsonResponse");
static_assert(offsetof(FSubscribeJsonResponse, statusCode) == 0x000000, "Member 'FSubscribeJsonResponse::statusCode' has a wrong offset!");
static_assert(offsetof(FSubscribeJsonResponse, subscription_id) == 0x000008, "Member 'FSubscribeJsonResponse::subscription_id' has a wrong offset!");
static_assert(offsetof(FSubscribeJsonResponse, subscribed_timestamp) == 0x000018, "Member 'FSubscribeJsonResponse::subscribed_timestamp' has a wrong offset!");
static_assert(offsetof(FSubscribeJsonResponse, plan_id) == 0x000020, "Member 'FSubscribeJsonResponse::plan_id' has a wrong offset!");
static_assert(offsetof(FSubscribeJsonResponse, Message) == 0x000030, "Member 'FSubscribeJsonResponse::Message' has a wrong offset!");

// ScriptStruct ViveportSDK.RequestSubscriptionJsonResponse
// 0x0028 (0x0028 - 0x0000)
struct FRequestSubscriptionJsonResponse final
{
public:
	int32                                         statusCode;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 subscription_id;                                   // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message;                                           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRequestSubscriptionJsonResponse) == 0x000008, "Wrong alignment on FRequestSubscriptionJsonResponse");
static_assert(sizeof(FRequestSubscriptionJsonResponse) == 0x000028, "Wrong size on FRequestSubscriptionJsonResponse");
static_assert(offsetof(FRequestSubscriptionJsonResponse, statusCode) == 0x000000, "Member 'FRequestSubscriptionJsonResponse::statusCode' has a wrong offset!");
static_assert(offsetof(FRequestSubscriptionJsonResponse, subscription_id) == 0x000008, "Member 'FRequestSubscriptionJsonResponse::subscription_id' has a wrong offset!");
static_assert(offsetof(FRequestSubscriptionJsonResponse, Message) == 0x000018, "Member 'FRequestSubscriptionJsonResponse::Message' has a wrong offset!");

// ScriptStruct ViveportSDK.QueryJsonResponse
// 0x0070 (0x0070 - 0x0000)
struct FQueryJsonResponse final
{
public:
	int32                                         statusCode;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 purchase_id;                                       // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 order_id;                                          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 status;                                            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 price;                                             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 currency;                                          // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         paid_timestamp;                                    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message;                                           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FQueryJsonResponse) == 0x000008, "Wrong alignment on FQueryJsonResponse");
static_assert(sizeof(FQueryJsonResponse) == 0x000070, "Wrong size on FQueryJsonResponse");
static_assert(offsetof(FQueryJsonResponse, statusCode) == 0x000000, "Member 'FQueryJsonResponse::statusCode' has a wrong offset!");
static_assert(offsetof(FQueryJsonResponse, purchase_id) == 0x000008, "Member 'FQueryJsonResponse::purchase_id' has a wrong offset!");
static_assert(offsetof(FQueryJsonResponse, order_id) == 0x000018, "Member 'FQueryJsonResponse::order_id' has a wrong offset!");
static_assert(offsetof(FQueryJsonResponse, status) == 0x000028, "Member 'FQueryJsonResponse::status' has a wrong offset!");
static_assert(offsetof(FQueryJsonResponse, price) == 0x000038, "Member 'FQueryJsonResponse::price' has a wrong offset!");
static_assert(offsetof(FQueryJsonResponse, currency) == 0x000048, "Member 'FQueryJsonResponse::currency' has a wrong offset!");
static_assert(offsetof(FQueryJsonResponse, paid_timestamp) == 0x000058, "Member 'FQueryJsonResponse::paid_timestamp' has a wrong offset!");
static_assert(offsetof(FQueryJsonResponse, Message) == 0x000060, "Member 'FQueryJsonResponse::Message' has a wrong offset!");

// ScriptStruct ViveportSDK.PurchaseJsonResponse
// 0x0030 (0x0030 - 0x0000)
struct FPurchaseJsonResponse final
{
public:
	int32                                         statusCode;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 purchase_id;                                       // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         paid_timestamp;                                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message;                                           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPurchaseJsonResponse) == 0x000008, "Wrong alignment on FPurchaseJsonResponse");
static_assert(sizeof(FPurchaseJsonResponse) == 0x000030, "Wrong size on FPurchaseJsonResponse");
static_assert(offsetof(FPurchaseJsonResponse, statusCode) == 0x000000, "Member 'FPurchaseJsonResponse::statusCode' has a wrong offset!");
static_assert(offsetof(FPurchaseJsonResponse, purchase_id) == 0x000008, "Member 'FPurchaseJsonResponse::purchase_id' has a wrong offset!");
static_assert(offsetof(FPurchaseJsonResponse, paid_timestamp) == 0x000018, "Member 'FPurchaseJsonResponse::paid_timestamp' has a wrong offset!");
static_assert(offsetof(FPurchaseJsonResponse, Message) == 0x000020, "Member 'FPurchaseJsonResponse::Message' has a wrong offset!");

// ScriptStruct ViveportSDK.RequestJsonResponse
// 0x0028 (0x0028 - 0x0000)
struct FRequestJsonResponse final
{
public:
	int32                                         statusCode;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 purchase_id;                                       // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message;                                           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRequestJsonResponse) == 0x000008, "Wrong alignment on FRequestJsonResponse");
static_assert(sizeof(FRequestJsonResponse) == 0x000028, "Wrong size on FRequestJsonResponse");
static_assert(offsetof(FRequestJsonResponse, statusCode) == 0x000000, "Member 'FRequestJsonResponse::statusCode' has a wrong offset!");
static_assert(offsetof(FRequestJsonResponse, purchase_id) == 0x000008, "Member 'FRequestJsonResponse::purchase_id' has a wrong offset!");
static_assert(offsetof(FRequestJsonResponse, Message) == 0x000018, "Member 'FRequestJsonResponse::Message' has a wrong offset!");

// ScriptStruct ViveportSDK.IsReadyJsonResponse
// 0x0028 (0x0028 - 0x0000)
struct FIsReadyJsonResponse final
{
public:
	int32                                         statusCode;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 currencyName;                                      // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message;                                           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FIsReadyJsonResponse) == 0x000008, "Wrong alignment on FIsReadyJsonResponse");
static_assert(sizeof(FIsReadyJsonResponse) == 0x000028, "Wrong size on FIsReadyJsonResponse");
static_assert(offsetof(FIsReadyJsonResponse, statusCode) == 0x000000, "Member 'FIsReadyJsonResponse::statusCode' has a wrong offset!");
static_assert(offsetof(FIsReadyJsonResponse, currencyName) == 0x000008, "Member 'FIsReadyJsonResponse::currencyName' has a wrong offset!");
static_assert(offsetof(FIsReadyJsonResponse, Message) == 0x000018, "Member 'FIsReadyJsonResponse::Message' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_EnemySentry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Enum_BehaviorType_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_EnemySentry.AnimBP_EnemySentry_C
// 0x1188 (0x14E0 - 0x0358)
class UAnimBP_EnemySentry_C final : public UAnimInstance
{
public:
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_12685F8E47B2190EC3C7B8BFF67829BB; // 0x0368(0x0040)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_35690E24475BFD3C919A6DA75DA63813; // 0x03A8(0x00D0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_CDC2AFD44266A1AB944A64A6105388B2; // 0x0478(0x0128)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_0EBF66E44B8B313237AE7D9FC3DA6797; // 0x05A0(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6BCEE4E94D66C91DC65A7C8CC5ABB091; // 0x0670(0x00A0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_FFDC13A04E705BB6745E1395F6EB3A3D; // 0x0710(0x0128)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_A330C525484DC4F40EAF4A9C7D49DC6B; // 0x0838(0x0128)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_A39BA02C4598A0B6A6CE71A78266E17D; // 0x0960(0x0128)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_938C00564F56F69F4208A5866929285F; // 0x0A88(0x0128)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_05AE64564050253AA5A9D18C176E2775; // 0x0BB0(0x0128)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_7D8B8F004B11D399002F9C9F8DA6B83D; // 0x0CD8(0x00D0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_549293794B0FFB75CDEAD493B682D416; // 0x0DA8(0x00E0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_E3E233F94F0FD03E8ADA4F8D35915DE1; // 0x0E88(0x0040)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_7C87F9EE4F2C8B0BA030078628D46152; // 0x0EC8(0x00E0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_33FAAC5D4851B790CD8DF5BB520496DE; // 0x0FA8(0x00D8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7C6689F647E698F0FDDC768B8AED6790; // 0x1080(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4553C0A647A312BF810C61871BDFE39C; // 0x10C8(0x0068)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_497479E240BA9026F139F5AB5BD2BDC1; // 0x1130(0x00D8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4F658E6C4740D89763F7F9A6A316BD93; // 0x1208(0x0048)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_595A24354C62FDC39E6485BAFF1BE13F; // 0x1250(0x01E0)()
	bool                                          IsInAir_;                                          // 0x1430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1431[0x3];                                     // 0x1431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Speed;                                             // 0x1434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_BehaviorType                             CurrentBehavior;                                   // 0x1438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1439[0x3];                                     // 0x1439(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Direction;                                         // 0x143C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCrouching;                                       // 0x1440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasTarget;                                         // 0x1441(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1442[0x2];                                     // 0x1442(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FootOff_L;                                         // 0x1444(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootOff_R;                                         // 0x1450(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootJoint_L;                                       // 0x145C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootJoint_R;                                       // 0x1468(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1474[0x4];                                     // 0x1474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   HandIKSocket;                                      // 0x1478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HandL_Weight;                                      // 0x1480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1484[0xC];                                     // 0x1484(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             HandL_Trans;                                       // 0x1490(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EnableHandIk;                                      // 0x14C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14C1[0x3];                                     // 0x14C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CrouchBlendTime;                                   // 0x14C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCrouchComplete;                                  // 0x14C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14C9[0x3];                                     // 0x14C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AimPitch;                                          // 0x14CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnDelta;                                         // 0x14D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AnimBP_EnemySentry(int32 EntryPoint);
	void AnimNotify_StandToIdleComplete();
	void AnimNotify_ReloadEnd();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_EnemySentry_AnimGraphNode_BlendListByBool_35690E24475BFD3C919A6DA75DA63813();
	void UpdateFootOff();
	void UpdateHandTransform();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_EnemySentry_C">();
	}
	static class UAnimBP_EnemySentry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_EnemySentry_C>();
	}
};
static_assert(alignof(UAnimBP_EnemySentry_C) == 0x000010, "Wrong alignment on UAnimBP_EnemySentry_C");
static_assert(sizeof(UAnimBP_EnemySentry_C) == 0x0014E0, "Wrong size on UAnimBP_EnemySentry_C");
static_assert(offsetof(UAnimBP_EnemySentry_C, UberGraphFrame) == 0x000360, "Member 'UAnimBP_EnemySentry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AnimGraphNode_Root_12685F8E47B2190EC3C7B8BFF67829BB) == 0x000368, "Member 'UAnimBP_EnemySentry_C::AnimGraphNode_Root_12685F8E47B2190EC3C7B8BFF67829BB' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AnimGraphNode_BlendListByBool_35690E24475BFD3C919A6DA75DA63813) == 0x0003A8, "Member 'UAnimBP_EnemySentry_C::AnimGraphNode_BlendListByBool_35690E24475BFD3C919A6DA75DA63813' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AnimGraphNode_BlendSpacePlayer_CDC2AFD44266A1AB944A64A6105388B2) == 0x000478, "Member 'UAnimBP_EnemySentry_C::AnimGraphNode_BlendSpacePlayer_CDC2AFD44266A1AB944A64A6105388B2' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AnimGraphNode_BlendListByBool_0EBF66E44B8B313237AE7D9FC3DA6797) == 0x0005A0, "Member 'UAnimBP_EnemySentry_C::AnimGraphNode_BlendListByBool_0EBF66E44B8B313237AE7D9FC3DA6797' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AnimGraphNode_SequencePlayer_6BCEE4E94D66C91DC65A7C8CC5ABB091) == 0x000670, "Member 'UAnimBP_EnemySentry_C::AnimGraphNode_SequencePlayer_6BCEE4E94D66C91DC65A7C8CC5ABB091' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AnimGraphNode_BlendSpacePlayer_FFDC13A04E705BB6745E1395F6EB3A3D) == 0x000710, "Member 'UAnimBP_EnemySentry_C::AnimGraphNode_BlendSpacePlayer_FFDC13A04E705BB6745E1395F6EB3A3D' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AnimGraphNode_BlendSpacePlayer_A330C525484DC4F40EAF4A9C7D49DC6B) == 0x000838, "Member 'UAnimBP_EnemySentry_C::AnimGraphNode_BlendSpacePlayer_A330C525484DC4F40EAF4A9C7D49DC6B' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AnimGraphNode_BlendSpacePlayer_A39BA02C4598A0B6A6CE71A78266E17D) == 0x000960, "Member 'UAnimBP_EnemySentry_C::AnimGraphNode_BlendSpacePlayer_A39BA02C4598A0B6A6CE71A78266E17D' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AnimGraphNode_BlendSpacePlayer_938C00564F56F69F4208A5866929285F) == 0x000A88, "Member 'UAnimBP_EnemySentry_C::AnimGraphNode_BlendSpacePlayer_938C00564F56F69F4208A5866929285F' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AnimGraphNode_BlendSpacePlayer_05AE64564050253AA5A9D18C176E2775) == 0x000BB0, "Member 'UAnimBP_EnemySentry_C::AnimGraphNode_BlendSpacePlayer_05AE64564050253AA5A9D18C176E2775' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AnimGraphNode_BlendListByBool_7D8B8F004B11D399002F9C9F8DA6B83D) == 0x000CD8, "Member 'UAnimBP_EnemySentry_C::AnimGraphNode_BlendListByBool_7D8B8F004B11D399002F9C9F8DA6B83D' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AnimGraphNode_BlendListByEnum_549293794B0FFB75CDEAD493B682D416) == 0x000DA8, "Member 'UAnimBP_EnemySentry_C::AnimGraphNode_BlendListByEnum_549293794B0FFB75CDEAD493B682D416' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AnimGraphNode_StateResult_E3E233F94F0FD03E8ADA4F8D35915DE1) == 0x000E88, "Member 'UAnimBP_EnemySentry_C::AnimGraphNode_StateResult_E3E233F94F0FD03E8ADA4F8D35915DE1' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AnimGraphNode_StateMachine_7C87F9EE4F2C8B0BA030078628D46152) == 0x000EC8, "Member 'UAnimBP_EnemySentry_C::AnimGraphNode_StateMachine_7C87F9EE4F2C8B0BA030078628D46152' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AnimGraphNode_SaveCachedPose_33FAAC5D4851B790CD8DF5BB520496DE) == 0x000FA8, "Member 'UAnimBP_EnemySentry_C::AnimGraphNode_SaveCachedPose_33FAAC5D4851B790CD8DF5BB520496DE' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AnimGraphNode_UseCachedPose_7C6689F647E698F0FDDC768B8AED6790) == 0x001080, "Member 'UAnimBP_EnemySentry_C::AnimGraphNode_UseCachedPose_7C6689F647E698F0FDDC768B8AED6790' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AnimGraphNode_Slot_4553C0A647A312BF810C61871BDFE39C) == 0x0010C8, "Member 'UAnimBP_EnemySentry_C::AnimGraphNode_Slot_4553C0A647A312BF810C61871BDFE39C' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AnimGraphNode_LayeredBoneBlend_497479E240BA9026F139F5AB5BD2BDC1) == 0x001130, "Member 'UAnimBP_EnemySentry_C::AnimGraphNode_LayeredBoneBlend_497479E240BA9026F139F5AB5BD2BDC1' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AnimGraphNode_UseCachedPose_4F658E6C4740D89763F7F9A6A316BD93) == 0x001208, "Member 'UAnimBP_EnemySentry_C::AnimGraphNode_UseCachedPose_4F658E6C4740D89763F7F9A6A316BD93' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AnimGraphNode_RotationOffsetBlendSpace_595A24354C62FDC39E6485BAFF1BE13F) == 0x001250, "Member 'UAnimBP_EnemySentry_C::AnimGraphNode_RotationOffsetBlendSpace_595A24354C62FDC39E6485BAFF1BE13F' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, IsInAir_) == 0x001430, "Member 'UAnimBP_EnemySentry_C::IsInAir_' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, Speed) == 0x001434, "Member 'UAnimBP_EnemySentry_C::Speed' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, CurrentBehavior) == 0x001438, "Member 'UAnimBP_EnemySentry_C::CurrentBehavior' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, Direction) == 0x00143C, "Member 'UAnimBP_EnemySentry_C::Direction' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, IsCrouching) == 0x001440, "Member 'UAnimBP_EnemySentry_C::IsCrouching' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, HasTarget) == 0x001441, "Member 'UAnimBP_EnemySentry_C::HasTarget' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, FootOff_L) == 0x001444, "Member 'UAnimBP_EnemySentry_C::FootOff_L' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, FootOff_R) == 0x001450, "Member 'UAnimBP_EnemySentry_C::FootOff_R' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, FootJoint_L) == 0x00145C, "Member 'UAnimBP_EnemySentry_C::FootJoint_L' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, FootJoint_R) == 0x001468, "Member 'UAnimBP_EnemySentry_C::FootJoint_R' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, HandIKSocket) == 0x001478, "Member 'UAnimBP_EnemySentry_C::HandIKSocket' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, HandL_Weight) == 0x001480, "Member 'UAnimBP_EnemySentry_C::HandL_Weight' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, HandL_Trans) == 0x001490, "Member 'UAnimBP_EnemySentry_C::HandL_Trans' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, EnableHandIk) == 0x0014C0, "Member 'UAnimBP_EnemySentry_C::EnableHandIk' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, CrouchBlendTime) == 0x0014C4, "Member 'UAnimBP_EnemySentry_C::CrouchBlendTime' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, IsCrouchComplete) == 0x0014C8, "Member 'UAnimBP_EnemySentry_C::IsCrouchComplete' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, AimPitch) == 0x0014CC, "Member 'UAnimBP_EnemySentry_C::AimPitch' has a wrong offset!");
static_assert(offsetof(UAnimBP_EnemySentry_C, TurnDelta) == 0x0014D0, "Member 'UAnimBP_EnemySentry_C::TurnDelta' has a wrong offset!");

}


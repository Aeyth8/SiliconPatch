#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_TakeCover

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BTT_TakeCover.BTT_TakeCover_C.ExecuteUbergraph_BTT_TakeCover
// 0x0278 (0x0278 - 0x0000)
struct BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter1;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BehaviorComponent_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue3;            // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BehaviorComponent_C*                CallFunc_GetComponentByClass_ReturnValue1;         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue4;            // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OwnerActor;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AIC_C*                              K2Node_DynamicCast_AsBP_AIC;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetCurrentAttackTarget_TargetRef;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindAttackTarget_Success;                 // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    K2Node_DynamicCast_AsBP_Character_Base;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                K2Node_Select_Default;                             // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0128(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_BoxTraceSingle_OutHit;                    // 0x01D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceSingle_ReturnValue;               // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue5;            // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover) == 0x000008, "Wrong alignment on BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover");
static_assert(sizeof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover) == 0x000278, "Wrong size on BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, EntryPoint) == 0x000000, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_Add_VectorVector_ReturnValue) == 0x000010, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, K2Node_DynamicCast_AsCharacter) == 0x000020, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_Add_VectorVector_ReturnValue1) == 0x00002C, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, K2Node_DynamicCast_AsCharacter1) == 0x000038, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::K2Node_DynamicCast_AsCharacter1' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, K2Node_DynamicCast_bSuccess1) == 0x000040, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_GetActorForwardVector_ReturnValue) == 0x000044, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, Temp_bool_Variable) == 0x000050, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000054, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_Add_VectorVector_ReturnValue2) == 0x000060, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_GetComponentByClass_ReturnValue) == 0x000070, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_Add_VectorVector_ReturnValue3) == 0x000078, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_Add_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_GetComponentByClass_ReturnValue1) == 0x000088, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_IsValid_ReturnValue1) == 0x000090, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000094, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_Add_VectorVector_ReturnValue4) == 0x0000A0, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_Add_VectorVector_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, K2Node_Event_OwnerActor) == 0x0000B0, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::K2Node_Event_OwnerActor' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, K2Node_DynamicCast_AsBP_AIC) == 0x0000B8, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::K2Node_DynamicCast_AsBP_AIC' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, K2Node_DynamicCast_bSuccess2) == 0x0000C0, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_K2_GetPawn_ReturnValue) == 0x0000C8, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_GetCurrentAttackTarget_TargetRef) == 0x0000D0, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_GetCurrentAttackTarget_TargetRef' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_FindAttackTarget_Success) == 0x0000D8, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_FindAttackTarget_Success' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_IsValid_ReturnValue2) == 0x0000D9, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, K2Node_DynamicCast_AsBP_Character_Base) == 0x0000E0, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::K2Node_DynamicCast_AsBP_Character_Base' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, K2Node_DynamicCast_bSuccess3) == 0x0000E8, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x0000EC, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000F8, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, K2Node_MakeArray_Array) == 0x000108, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, K2Node_Select_Default) == 0x000118, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_LineTraceSingle_OutHit) == 0x000128, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_LineTraceSingle_ReturnValue) == 0x0001B0, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001B4, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_Normal_ReturnValue) == 0x0001C0, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_BoxTraceSingle_OutHit) == 0x0001D0, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_BoxTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_BoxTraceSingle_ReturnValue) == 0x000258, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_BoxTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x00025C, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover, CallFunc_Add_VectorVector_ReturnValue5) == 0x000268, "Member 'BTT_TakeCover_C_ExecuteUbergraph_BTT_TakeCover::CallFunc_Add_VectorVector_ReturnValue5' has a wrong offset!");

// Function BTT_TakeCover.BTT_TakeCover_C.ReceiveExecute
// 0x0008 (0x0008 - 0x0000)
struct BTT_TakeCover_C_ReceiveExecute final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_TakeCover_C_ReceiveExecute) == 0x000008, "Wrong alignment on BTT_TakeCover_C_ReceiveExecute");
static_assert(sizeof(BTT_TakeCover_C_ReceiveExecute) == 0x000008, "Wrong size on BTT_TakeCover_C_ReceiveExecute");
static_assert(offsetof(BTT_TakeCover_C_ReceiveExecute, OwnerActor) == 0x000000, "Member 'BTT_TakeCover_C_ReceiveExecute::OwnerActor' has a wrong offset!");

}


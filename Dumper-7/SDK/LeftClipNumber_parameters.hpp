#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LeftClipNumber

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function LeftClipNumber.LeftClipNumber_C.ExecuteUbergraph_LeftClipNumber
// 0x0060 (0x0060 - 0x0000)
struct LeftClipNumber_C_ExecuteUbergraph_LeftClipNumber final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Infinity;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0048(0x0018)()
};
static_assert(alignof(LeftClipNumber_C_ExecuteUbergraph_LeftClipNumber) == 0x000008, "Wrong alignment on LeftClipNumber_C_ExecuteUbergraph_LeftClipNumber");
static_assert(sizeof(LeftClipNumber_C_ExecuteUbergraph_LeftClipNumber) == 0x000060, "Wrong size on LeftClipNumber_C_ExecuteUbergraph_LeftClipNumber");
static_assert(offsetof(LeftClipNumber_C_ExecuteUbergraph_LeftClipNumber, EntryPoint) == 0x000000, "Member 'LeftClipNumber_C_ExecuteUbergraph_LeftClipNumber::EntryPoint' has a wrong offset!");
static_assert(offsetof(LeftClipNumber_C_ExecuteUbergraph_LeftClipNumber, K2Node_Event_MyGeometry) == 0x000004, "Member 'LeftClipNumber_C_ExecuteUbergraph_LeftClipNumber::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(LeftClipNumber_C_ExecuteUbergraph_LeftClipNumber, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'LeftClipNumber_C_ExecuteUbergraph_LeftClipNumber::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(LeftClipNumber_C_ExecuteUbergraph_LeftClipNumber, K2Node_CustomEvent_Infinity) == 0x000040, "Member 'LeftClipNumber_C_ExecuteUbergraph_LeftClipNumber::K2Node_CustomEvent_Infinity' has a wrong offset!");
static_assert(offsetof(LeftClipNumber_C_ExecuteUbergraph_LeftClipNumber, CallFunc_Greater_IntInt_ReturnValue) == 0x000041, "Member 'LeftClipNumber_C_ExecuteUbergraph_LeftClipNumber::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeftClipNumber_C_ExecuteUbergraph_LeftClipNumber, CallFunc_Conv_IntToText_ReturnValue) == 0x000048, "Member 'LeftClipNumber_C_ExecuteUbergraph_LeftClipNumber::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function LeftClipNumber.LeftClipNumber_C.SetInfinity
// 0x0001 (0x0001 - 0x0000)
struct LeftClipNumber_C_SetInfinity final
{
public:
	bool                                          Infinity;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LeftClipNumber_C_SetInfinity) == 0x000001, "Wrong alignment on LeftClipNumber_C_SetInfinity");
static_assert(sizeof(LeftClipNumber_C_SetInfinity) == 0x000001, "Wrong size on LeftClipNumber_C_SetInfinity");
static_assert(offsetof(LeftClipNumber_C_SetInfinity, Infinity) == 0x000000, "Member 'LeftClipNumber_C_SetInfinity::Infinity' has a wrong offset!");

// Function LeftClipNumber.LeftClipNumber_C.Tick
// 0x003C (0x003C - 0x0000)
struct LeftClipNumber_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LeftClipNumber_C_Tick) == 0x000004, "Wrong alignment on LeftClipNumber_C_Tick");
static_assert(sizeof(LeftClipNumber_C_Tick) == 0x00003C, "Wrong size on LeftClipNumber_C_Tick");
static_assert(offsetof(LeftClipNumber_C_Tick, MyGeometry) == 0x000000, "Member 'LeftClipNumber_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(LeftClipNumber_C_Tick, InDeltaTime) == 0x000038, "Member 'LeftClipNumber_C_Tick::InDeltaTime' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_Caravoid

#include "Basic.hpp"

#include "BTT_Caravoid_classes.hpp"
#include "BTT_Caravoid_parameters.hpp"


namespace SDK
{

// Function BTT_Caravoid.BTT_CarAvoid_C.ExecuteUbergraph_BTT_CarAvoid
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_CarAvoid_C::ExecuteUbergraph_BTT_CarAvoid(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_CarAvoid_C", "ExecuteUbergraph_BTT_CarAvoid");

	Params::BTT_CarAvoid_C_ExecuteUbergraph_BTT_CarAvoid Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_Caravoid.BTT_CarAvoid_C.ReceiveExecuteAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_CarAvoid_C::ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_CarAvoid_C", "ReceiveExecuteAI");

	Params::BTT_CarAvoid_C_ReceiveExecuteAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_Caravoid.BTT_CarAvoid_C.Trace
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UArrowComponent*                  Arrow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Dir                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HalfSize                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float*                                  CurXRel                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  CurYRel                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_CarAvoid_C::Trace(class UArrowComponent* Arrow, float Distance, const struct FVector& Dir, const struct FVector& HalfSize, bool* Result, float* CurXRel, float* CurYRel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_CarAvoid_C", "Trace");

	Params::BTT_CarAvoid_C_Trace Parms{};

	Parms.Arrow = Arrow;
	Parms.Distance = Distance;
	Parms.Dir = std::move(Dir);
	Parms.HalfSize = std::move(HalfSize);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (CurXRel != nullptr)
		*CurXRel = Parms.CurXRel;

	if (CurYRel != nullptr)
		*CurYRel = Parms.CurYRel;
}


// Function BTT_Caravoid.BTT_CarAvoid_C.GetLRoffset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Steering                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_CarAvoid_C::GetLRoffset(int32 Result, float Steering)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_CarAvoid_C", "GetLRoffset");

	Params::BTT_CarAvoid_C_GetLRoffset Parms{};

	Parms.Result = Result;
	Parms.Steering = Steering;

	UObject::ProcessEvent(Func, &Parms);
}

}


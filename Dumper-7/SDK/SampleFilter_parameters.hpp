#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SampleFilter

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function SampleFilter.SampleFilter_C.SampleFilter
// 0x00E0 (0x00E0 - 0x0000)
struct SampleFilter_C_SampleFilter final
{
public:
	TArray<struct FVector>                        Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                Value;                                             // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCount;                                          // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 contentx;                                          // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 contenty;                                          // 0x0040(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 contentz;                                          // 0x0050(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsDebug;                                           // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          _______________;                                   // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_0;                                           // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Prev;                                              // 0x0068(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugContent;                                      // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SliderArray_Count;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DeltaFilter_ratio;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_DeltaFilter_debugText;                    // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_DeltaFilter_ratio1;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_DeltaFilter_debugText1;                   // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_DeltaFilter_ratio2;                       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_DeltaFilter_debugText2;                   // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue1;                        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SampleFilter_C_SampleFilter) == 0x000008, "Wrong alignment on SampleFilter_C_SampleFilter");
static_assert(sizeof(SampleFilter_C_SampleFilter) == 0x0000E0, "Wrong size on SampleFilter_C_SampleFilter");
static_assert(offsetof(SampleFilter_C_SampleFilter, Array) == 0x000000, "Member 'SampleFilter_C_SampleFilter::Array' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, Value) == 0x000010, "Member 'SampleFilter_C_SampleFilter::Value' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, MaxCount) == 0x00001C, "Member 'SampleFilter_C_SampleFilter::MaxCount' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, __WorldContext) == 0x000020, "Member 'SampleFilter_C_SampleFilter::__WorldContext' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, Rate) == 0x000028, "Member 'SampleFilter_C_SampleFilter::Rate' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, contentx) == 0x000030, "Member 'SampleFilter_C_SampleFilter::contentx' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, contenty) == 0x000040, "Member 'SampleFilter_C_SampleFilter::contenty' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, contentz) == 0x000050, "Member 'SampleFilter_C_SampleFilter::contentz' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, IsDebug) == 0x000060, "Member 'SampleFilter_C_SampleFilter::IsDebug' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, _______________) == 0x000061, "Member 'SampleFilter_C_SampleFilter::_______________' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, Index_0) == 0x000064, "Member 'SampleFilter_C_SampleFilter::Index_0' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, Prev) == 0x000068, "Member 'SampleFilter_C_SampleFilter::Prev' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, DebugContent) == 0x000078, "Member 'SampleFilter_C_SampleFilter::DebugContent' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, Count) == 0x000088, "Member 'SampleFilter_C_SampleFilter::Count' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, CallFunc_SliderArray_Count) == 0x00008C, "Member 'SampleFilter_C_SampleFilter::CallFunc_SliderArray_Count' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, CallFunc_DeltaFilter_ratio) == 0x000090, "Member 'SampleFilter_C_SampleFilter::CallFunc_DeltaFilter_ratio' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, CallFunc_DeltaFilter_debugText) == 0x000098, "Member 'SampleFilter_C_SampleFilter::CallFunc_DeltaFilter_debugText' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, CallFunc_DeltaFilter_ratio1) == 0x0000A8, "Member 'SampleFilter_C_SampleFilter::CallFunc_DeltaFilter_ratio1' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, CallFunc_DeltaFilter_debugText1) == 0x0000B0, "Member 'SampleFilter_C_SampleFilter::CallFunc_DeltaFilter_debugText1' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, CallFunc_DeltaFilter_ratio2) == 0x0000C0, "Member 'SampleFilter_C_SampleFilter::CallFunc_DeltaFilter_ratio2' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, CallFunc_DeltaFilter_debugText2) == 0x0000C8, "Member 'SampleFilter_C_SampleFilter::CallFunc_DeltaFilter_debugText2' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, CallFunc_FMax_ReturnValue) == 0x0000D8, "Member 'SampleFilter_C_SampleFilter::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SampleFilter, CallFunc_FMax_ReturnValue1) == 0x0000DC, "Member 'SampleFilter_C_SampleFilter::CallFunc_FMax_ReturnValue1' has a wrong offset!");

// Function SampleFilter.SampleFilter_C.SliderArray
// 0x0038 (0x0038 - 0x0000)
struct SampleFilter_C_SliderArray final
{
public:
	TArray<struct FVector>                        Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                Value;                                             // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCount;                                          // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SampleFilter_C_SliderArray) == 0x000008, "Wrong alignment on SampleFilter_C_SliderArray");
static_assert(sizeof(SampleFilter_C_SliderArray) == 0x000038, "Wrong size on SampleFilter_C_SliderArray");
static_assert(offsetof(SampleFilter_C_SliderArray, Array) == 0x000000, "Member 'SampleFilter_C_SliderArray::Array' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SliderArray, Value) == 0x000010, "Member 'SampleFilter_C_SliderArray::Value' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SliderArray, MaxCount) == 0x00001C, "Member 'SampleFilter_C_SliderArray::MaxCount' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SliderArray, __WorldContext) == 0x000020, "Member 'SampleFilter_C_SliderArray::__WorldContext' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SliderArray, Count) == 0x000028, "Member 'SampleFilter_C_SliderArray::Count' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SliderArray, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'SampleFilter_C_SliderArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SliderArray, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'SampleFilter_C_SliderArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_SliderArray, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000034, "Member 'SampleFilter_C_SliderArray::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function SampleFilter.SampleFilter_C.DeltaFilter
// 0x0198 (0x0198 - 0x0000)
struct SampleFilter_C_DeltaFilter final
{
public:
	int32                                         Axis;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        Data;                                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          IsDebug;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ratio;                                             // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugText;                                         // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Debug;                                             // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         countP;                                            // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         countN;                                            // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 queue;                                             // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Variable;                                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable3;                                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable4;                                // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable5;                                // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable6;                                // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable7;                                // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable8;                                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable9;                                // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable10;                               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable11;                               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue6;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable12;                               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue3;             // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue7;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue8;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue4;             // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable13;                               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue9;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue2;              // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue3;              // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x0127(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue5;             // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue10;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue11;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue1;                      // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue2;                      // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SampleFilter_C_DeltaFilter) == 0x000008, "Wrong alignment on SampleFilter_C_DeltaFilter");
static_assert(sizeof(SampleFilter_C_DeltaFilter) == 0x000198, "Wrong size on SampleFilter_C_DeltaFilter");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Axis) == 0x000000, "Member 'SampleFilter_C_DeltaFilter::Axis' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Data) == 0x000008, "Member 'SampleFilter_C_DeltaFilter::Data' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, IsDebug) == 0x000018, "Member 'SampleFilter_C_DeltaFilter::IsDebug' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, __WorldContext) == 0x000020, "Member 'SampleFilter_C_DeltaFilter::__WorldContext' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Ratio) == 0x000028, "Member 'SampleFilter_C_DeltaFilter::Ratio' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, DebugText) == 0x000030, "Member 'SampleFilter_C_DeltaFilter::DebugText' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Debug) == 0x000040, "Member 'SampleFilter_C_DeltaFilter::Debug' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, countP) == 0x000050, "Member 'SampleFilter_C_DeltaFilter::countP' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Scale) == 0x000054, "Member 'SampleFilter_C_DeltaFilter::Scale' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Value) == 0x000058, "Member 'SampleFilter_C_DeltaFilter::Value' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, countN) == 0x00005C, "Member 'SampleFilter_C_DeltaFilter::countN' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Index_0) == 0x000060, "Member 'SampleFilter_C_DeltaFilter::Index_0' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, queue) == 0x000068, "Member 'SampleFilter_C_DeltaFilter::queue' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Temp_int_Variable) == 0x000078, "Member 'SampleFilter_C_DeltaFilter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, K2Node_SwitchInteger_CmpSuccess) == 0x000084, "Member 'SampleFilter_C_DeltaFilter::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000088, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Subtract_IntInt_ReturnValue) == 0x00008C, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Temp_int_Variable1) == 0x000090, "Member 'SampleFilter_C_DeltaFilter::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Temp_int_Variable2) == 0x000094, "Member 'SampleFilter_C_DeltaFilter::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Temp_int_Variable3) == 0x000098, "Member 'SampleFilter_C_DeltaFilter::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Temp_int_Variable4) == 0x00009C, "Member 'SampleFilter_C_DeltaFilter::Temp_int_Variable4' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Temp_int_Variable5) == 0x0000A0, "Member 'SampleFilter_C_DeltaFilter::Temp_int_Variable5' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Temp_int_Variable6) == 0x0000A4, "Member 'SampleFilter_C_DeltaFilter::Temp_int_Variable6' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Temp_int_Variable7) == 0x0000A8, "Member 'SampleFilter_C_DeltaFilter::Temp_int_Variable7' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B0, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Temp_int_Variable8) == 0x0000C0, "Member 'SampleFilter_C_DeltaFilter::Temp_int_Variable8' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Max_ReturnValue) == 0x0000C4, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x0000C8, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Greater_IntInt_ReturnValue) == 0x0000CC, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000D0, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Add_IntInt_ReturnValue1) == 0x0000D4, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Subtract_IntInt_ReturnValue1) == 0x0000D8, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Temp_int_Variable9) == 0x0000DC, "Member 'SampleFilter_C_DeltaFilter::Temp_int_Variable9' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Temp_int_Variable10) == 0x0000E0, "Member 'SampleFilter_C_DeltaFilter::Temp_int_Variable10' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Add_IntInt_ReturnValue2) == 0x0000E4, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Subtract_IntInt_ReturnValue2) == 0x0000E8, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Add_IntInt_ReturnValue3) == 0x0000EC, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Temp_int_Variable11) == 0x0000F0, "Member 'SampleFilter_C_DeltaFilter::Temp_int_Variable11' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Add_IntInt_ReturnValue4) == 0x0000F4, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Add_IntInt_ReturnValue5) == 0x0000F8, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Add_IntInt_ReturnValue6) == 0x0000FC, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Add_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Temp_int_Variable12) == 0x000100, "Member 'SampleFilter_C_DeltaFilter::Temp_int_Variable12' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Subtract_IntInt_ReturnValue3) == 0x000104, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Subtract_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Add_IntInt_ReturnValue7) == 0x000108, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Add_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Add_IntInt_ReturnValue8) == 0x00010C, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Add_IntInt_ReturnValue8' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Subtract_IntInt_ReturnValue4) == 0x000110, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Subtract_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, Temp_int_Variable13) == 0x000114, "Member 'SampleFilter_C_DeltaFilter::Temp_int_Variable13' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Add_IntInt_ReturnValue9) == 0x000118, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Add_IntInt_ReturnValue9' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Greater_IntInt_ReturnValue1) == 0x00011C, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Multiply_IntInt_ReturnValue) == 0x000120, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Greater_IntInt_ReturnValue2) == 0x000124, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Greater_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Greater_IntInt_ReturnValue3) == 0x000125, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Greater_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000126, "Member 'SampleFilter_C_DeltaFilter::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x000127, "Member 'SampleFilter_C_DeltaFilter::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Array_Length_ReturnValue1) == 0x000128, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Subtract_IntInt_ReturnValue5) == 0x00012C, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Subtract_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Less_IntInt_ReturnValue) == 0x000130, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Array_Add_ReturnValue) == 0x000134, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Conv_IntToString_ReturnValue) == 0x000138, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Concat_StrStr_ReturnValue1) == 0x000148, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Add_IntInt_ReturnValue10) == 0x000158, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Add_IntInt_ReturnValue10' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Less_IntInt_ReturnValue1) == 0x00015C, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Add_IntInt_ReturnValue11) == 0x000160, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Add_IntInt_ReturnValue11' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000164, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_BreakVector_X) == 0x000170, "Member 'SampleFilter_C_DeltaFilter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_BreakVector_Y) == 0x000174, "Member 'SampleFilter_C_DeltaFilter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_BreakVector_Z) == 0x000178, "Member 'SampleFilter_C_DeltaFilter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00017C, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000180, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_FTrunc_ReturnValue) == 0x000184, "Member 'SampleFilter_C_DeltaFilter::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_FTrunc_ReturnValue1) == 0x000188, "Member 'SampleFilter_C_DeltaFilter::CallFunc_FTrunc_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x00018C, "Member 'SampleFilter_C_DeltaFilter::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(SampleFilter_C_DeltaFilter, CallFunc_FTrunc_ReturnValue2) == 0x000190, "Member 'SampleFilter_C_DeltaFilter::CallFunc_FTrunc_ReturnValue2' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_lv3_ActiveBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_lv3_ActiveBox.BP_lv3_ActiveBox_C
// 0x0050 (0x0378 - 0x0328)
class ABP_lv3_ActiveBox_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ALv4_PrisonCar_C*                       PrisonCar;                                         // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Lv3_Wave_C*>                 SpawnerList;                                       // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	bool                                          IsOutLeave;                                        // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Number;                                            // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_lv3_LeaveCheckBox_C*                LeaveCheckBox;                                     // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSection2;                                        // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_lv3_ActiveBox(int32 EntryPoint);
	void OnOverlap_Event_0(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_lv3_ActiveBox_C">();
	}
	static class ABP_lv3_ActiveBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_lv3_ActiveBox_C>();
	}
};
static_assert(alignof(ABP_lv3_ActiveBox_C) == 0x000008, "Wrong alignment on ABP_lv3_ActiveBox_C");
static_assert(sizeof(ABP_lv3_ActiveBox_C) == 0x000378, "Wrong size on ABP_lv3_ActiveBox_C");
static_assert(offsetof(ABP_lv3_ActiveBox_C, UberGraphFrame) == 0x000328, "Member 'ABP_lv3_ActiveBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_lv3_ActiveBox_C, Box) == 0x000330, "Member 'ABP_lv3_ActiveBox_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_lv3_ActiveBox_C, DefaultSceneRoot) == 0x000338, "Member 'ABP_lv3_ActiveBox_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_lv3_ActiveBox_C, PrisonCar) == 0x000340, "Member 'ABP_lv3_ActiveBox_C::PrisonCar' has a wrong offset!");
static_assert(offsetof(ABP_lv3_ActiveBox_C, Active) == 0x000348, "Member 'ABP_lv3_ActiveBox_C::Active' has a wrong offset!");
static_assert(offsetof(ABP_lv3_ActiveBox_C, SpawnerList) == 0x000350, "Member 'ABP_lv3_ActiveBox_C::SpawnerList' has a wrong offset!");
static_assert(offsetof(ABP_lv3_ActiveBox_C, IsOutLeave) == 0x000360, "Member 'ABP_lv3_ActiveBox_C::IsOutLeave' has a wrong offset!");
static_assert(offsetof(ABP_lv3_ActiveBox_C, Number) == 0x000364, "Member 'ABP_lv3_ActiveBox_C::Number' has a wrong offset!");
static_assert(offsetof(ABP_lv3_ActiveBox_C, LeaveCheckBox) == 0x000368, "Member 'ABP_lv3_ActiveBox_C::LeaveCheckBox' has a wrong offset!");
static_assert(offsetof(ABP_lv3_ActiveBox_C, IsSection2) == 0x000370, "Member 'ABP_lv3_ActiveBox_C::IsSection2' has a wrong offset!");

}


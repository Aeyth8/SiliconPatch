#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerProjectile

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PlayerProjectile.PlayerProjectile_C.ExecuteUbergraph_PlayerProjectile
// 0x0170 (0x0170 - 0x0000)
struct PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPDefaultHand_C*                       K2Node_DynamicCast_AsBPDefault_Hand;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    K2Node_DynamicCast_AsBP_Character_Base;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterBase_C*                    K2Node_DynamicCast_AsBP_Character_Base1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue1;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x00B8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Speed;                          // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Speed;                                // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile) == 0x000008, "Wrong alignment on PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile");
static_assert(sizeof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile) == 0x000170, "Wrong size on PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, EntryPoint) == 0x000000, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_DynamicCast_AsBPDefault_Hand) == 0x000010, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_DynamicCast_AsBPDefault_Hand' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_DynamicCast_AsBP_Character_Base) == 0x000020, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_DynamicCast_AsBP_Character_Base' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_DynamicCast_bSuccess1) == 0x000028, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, CallFunc_GetOwner_ReturnValue1) == 0x000030, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, CallFunc_GetController_ReturnValue) == 0x000038, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_DynamicCast_AsBP_Character_Base1) == 0x000040, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_DynamicCast_AsBP_Character_Base1' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_DynamicCast_AsPlayer_Controller) == 0x000050, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_DynamicCast_bSuccess3) == 0x000058, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, CallFunc_GetController_ReturnValue1) == 0x000060, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::CallFunc_GetController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_DynamicCast_AsPlayer_Controller1) == 0x000068, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_DynamicCast_AsPlayer_Controller1' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_DynamicCast_bSuccess4) == 0x000070, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_Event_DeltaSeconds) == 0x000074, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_Event_MyComp) == 0x000078, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_Event_Other) == 0x000080, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_Event_OtherComp) == 0x000088, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_Event_bSelfMoved) == 0x000090, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_Event_HitLocation) == 0x000094, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_Event_HitNormal) == 0x0000A0, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_Event_NormalImpulse) == 0x0000AC, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_Event_Hit) == 0x0000B8, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, CallFunc_GetGameInstance_ReturnValue) == 0x000140, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_CustomEvent_Speed) == 0x000148, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_CustomEvent_Speed' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_DynamicCast_AsMer_2Game_Instance) == 0x000158, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_DynamicCast_AsMer_2Game_Instance' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_DynamicCast_bSuccess5) == 0x000160, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile, K2Node_Event_Speed) == 0x000164, "Member 'PlayerProjectile_C_ExecuteUbergraph_PlayerProjectile::K2Node_Event_Speed' has a wrong offset!");

// Function PlayerProjectile.PlayerProjectile_C.Evt_InitSetting
// 0x000C (0x000C - 0x0000)
struct PlayerProjectile_C_Evt_InitSetting final
{
public:
	struct FVector                                Speed;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerProjectile_C_Evt_InitSetting) == 0x000004, "Wrong alignment on PlayerProjectile_C_Evt_InitSetting");
static_assert(sizeof(PlayerProjectile_C_Evt_InitSetting) == 0x00000C, "Wrong size on PlayerProjectile_C_Evt_InitSetting");
static_assert(offsetof(PlayerProjectile_C_Evt_InitSetting, Speed) == 0x000000, "Member 'PlayerProjectile_C_Evt_InitSetting::Speed' has a wrong offset!");

// Function PlayerProjectile.PlayerProjectile_C.InitSetting
// 0x000C (0x000C - 0x0000)
struct PlayerProjectile_C_InitSetting final
{
public:
	struct FVector                                Speed;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerProjectile_C_InitSetting) == 0x000004, "Wrong alignment on PlayerProjectile_C_InitSetting");
static_assert(sizeof(PlayerProjectile_C_InitSetting) == 0x00000C, "Wrong size on PlayerProjectile_C_InitSetting");
static_assert(offsetof(PlayerProjectile_C_InitSetting, Speed) == 0x000000, "Member 'PlayerProjectile_C_InitSetting::Speed' has a wrong offset!");

// Function PlayerProjectile.PlayerProjectile_C.ReceiveHit
// 0x00C8 (0x00C8 - 0x0000)
struct PlayerProjectile_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PlayerProjectile_C_ReceiveHit) == 0x000008, "Wrong alignment on PlayerProjectile_C_ReceiveHit");
static_assert(sizeof(PlayerProjectile_C_ReceiveHit) == 0x0000C8, "Wrong size on PlayerProjectile_C_ReceiveHit");
static_assert(offsetof(PlayerProjectile_C_ReceiveHit, MyComp) == 0x000000, "Member 'PlayerProjectile_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ReceiveHit, Other) == 0x000008, "Member 'PlayerProjectile_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ReceiveHit, OtherComp) == 0x000010, "Member 'PlayerProjectile_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'PlayerProjectile_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'PlayerProjectile_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ReceiveHit, HitNormal) == 0x000028, "Member 'PlayerProjectile_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'PlayerProjectile_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(PlayerProjectile_C_ReceiveHit, Hit) == 0x000040, "Member 'PlayerProjectile_C_ReceiveHit::Hit' has a wrong offset!");

// Function PlayerProjectile.PlayerProjectile_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PlayerProjectile_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerProjectile_C_ReceiveTick) == 0x000004, "Wrong alignment on PlayerProjectile_C_ReceiveTick");
static_assert(sizeof(PlayerProjectile_C_ReceiveTick) == 0x000004, "Wrong size on PlayerProjectile_C_ReceiveTick");
static_assert(offsetof(PlayerProjectile_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PlayerProjectile_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}


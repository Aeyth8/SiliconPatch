#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Vehicle_MC

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BE_Lv3_ClimberJumpDir_structs.hpp"
#include "Engine_structs.hpp"
#include "Enum_ControllerType_structs.hpp"


namespace SDK::Params
{

// Function Vehicle_MC.Vehicle_MC_C.ExecuteUbergraph_Vehicle_MC
// 0x0D50 (0x0D50 - 0x0000)
struct Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDominateHand_LeftHand;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	Enum_ControllerType                           Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable1;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable2;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable3;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable4;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable5;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable6;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable2;                // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x00A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Bool;                           // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindRotationClosestToWorldLocation_ReturnValue; // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Abs_ReturnValue1;                         // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEnemy_Climber_C*                       K2Node_CustomEvent_Jumper;                         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_SteeringInput;                        // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable2;                      // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentGear_ReturnValue;               // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_Delta;                                // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue1;            // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue1;          // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Lv3_characterBase_C*                K2Node_DynamicCast_AsBP_Lv_3_Character_Base;       // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue2;                         // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue3;                         // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X2;                           // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue3;          // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue4;                         // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue4;          // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0278(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0280(0x0030)(IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Lv3_characterBase_C*                K2Node_CustomEvent_Player1;                        // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult; // 0x02C8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent6;          // 0x0358(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor6;            // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp6;             // 0x0368(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse6;         // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit6;                   // 0x0380(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_Lv3_BaseCar_C*                      K2Node_DynamicCast_AsBP_Lv_3_Base_Car;             // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_411[0x3];                                      // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_PlayerSteer;                    // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent5;          // 0x0420(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor5;            // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp5;             // 0x0430(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse5;         // 0x0438(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit5;                   // 0x0448(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_Damage;                               // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4[0x4];                                      // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x04D8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent4;          // 0x04F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor4;            // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp4;             // 0x0500(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse4;         // 0x0508(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_514[0x4];                                      // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit4;                   // 0x0518(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent3;          // 0x05A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor3;            // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp3;             // 0x05B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse3;         // 0x05B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C4[0x4];                                      // 0x05C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit3;                   // 0x05C8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent2;          // 0x0650(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor2;            // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp2;             // 0x0660(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse2;         // 0x0668(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_674[0x4];                                      // 0x0674(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit2;                   // 0x0678(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent1;          // 0x0700(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor1;            // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp1;             // 0x0710(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse1;         // 0x0718(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_724[0x4];                                      // 0x0724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit1;                   // 0x0728(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x07B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x07C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x07C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D4[0x4];                                      // 0x07D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x07D8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_861[0x7];                                      // 0x0861(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0868(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F4[0x4];                                      // 0x08F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x08F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue1;     // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0901(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_902[0x2];                                      // 0x0902(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0904(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x0910(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x0920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_921[0x7];                                      // 0x0921(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0928(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x09B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x09B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x09B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B6[0x2];                                      // 0x09B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x09B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x09BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x09C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x09CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x09D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x09E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x09F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x09F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0A00(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0A10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0A14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0A18(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0A24(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0A31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0A32(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A33[0x1];                                      // 0x0A33(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x0A34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0A38(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue;                // 0x0A44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A45[0x3];                                      // 0x0A45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TeleportPointCheck_Loc;                   // 0x0A48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0A54(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TeleportPointCheck_Loc1;                  // 0x0A60(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue1;               // 0x0A6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0A6D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0A6E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6F[0x1];                                      // 0x0A6F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Mer2_lv3_Character_PC_C*            K2Node_DynamicCast_AsBP_Mer_2_Lv_3_Character_PC;   // 0x0A70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0A78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A79[0x7];                                      // 0x0A79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable3;                // 0x0A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A89[0x7];                                      // 0x0A89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance;           // 0x0A90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0A99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable4;                // 0x0A9A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x0A9B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9C[0x4];                                      // 0x0A9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue; // 0x0AA0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_teleport;                             // 0x0AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD1[0x3];                                      // 0x0AD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0AD4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0AE0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0AEC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0AF8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0B04(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x0B10(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue3;            // 0x0B1C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B28[0x8];                                      // 0x0B28(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue1;               // 0x0B30(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TeleportPointCheck_Loc2;                  // 0x0B60(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B6C[0x4];                                      // 0x0B6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0B70(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0BF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue2;               // 0x0BF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BFA[0x2];                                      // 0x0BFA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TeleportPointCheck_Loc3;                  // 0x0BFC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue1;                 // 0x0C08(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue3;               // 0x0C14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C15[0x3];                                      // 0x0C15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult1;   // 0x0C18(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_IsClosed_Variable3;                      // 0x0CA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable4;                      // 0x0CA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_ControllerType                           CallFunc_GetControllerType_ControllerType;         // 0x0CA2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDominateHand_LeftHand1;                // 0x0CA3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA4[0x4];                                      // 0x0CA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0CA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x0CB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB4[0x4];                                      // 0x0CB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Lv3_characterBase_C*                K2Node_CustomEvent_Player;                         // 0x0CB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x0CC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC4[0x4];                                      // 0x0CC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Mer2_lv3_Character_PC_C*            K2Node_DynamicCast_AsBP_Mer_2_Lv_3_Character_PC1;  // 0x0CC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0CD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD1[0x3];                                      // 0x0CD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0CD4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0CE0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0CEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin1;               // 0x0CF0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent1;            // 0x0CFC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius1;         // 0x0D08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0D0C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x0D18(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x0D24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D25[0x3];                                      // 0x0D25(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue2;     // 0x0D28(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Distance_Between_Locations_Distance;      // 0x0D34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue3;     // 0x0D38(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0D44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D45[0x3];                                      // 0x0D45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Distance_Between_Locations_Distance1;     // 0x0D48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x0D4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC) == 0x000010, "Wrong alignment on Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC");
static_assert(sizeof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC) == 0x000D50, "Wrong size on Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, EntryPoint) == 0x000000, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::EntryPoint' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GetDominateHand_LeftHand) == 0x000004, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GetDominateHand_LeftHand' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_object_Variable) == 0x000008, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_byte_Variable) == 0x000018, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_object_Variable1) == 0x000020, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_object_Variable2) == 0x000028, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_object_Variable3) == 0x000030, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_object_Variable4) == 0x000038, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_object_Variable5) == 0x000040, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_object_Variable5' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_object_Variable6) == 0x000048, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_object_Variable6' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_bool_Variable) == 0x000050, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_float_Variable) == 0x000054, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_float_Variable1) == 0x000058, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_bool_Has_Been_Initd_Variable) == 0x00005C, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_bool_IsClosed_Variable) == 0x00005D, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_CreateDelegate_OutputDelegate) == 0x000060, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_int_Array_Index_Variable) == 0x000078, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_IsValid_ReturnValue) == 0x00007C, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_bool_IsClosed_Variable1) == 0x00007D, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_bool_Has_Been_Initd_Variable1) == 0x00007E, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_bool_Has_Been_Initd_Variable2) == 0x00007F, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_bool_Has_Been_Initd_Variable2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Abs_ReturnValue) == 0x000080, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_FClamp_ReturnValue) == 0x000084, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000088, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_MakeRotator_ReturnValue) == 0x00008C, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_Event_DeltaSeconds) == 0x000098, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0000A0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakRotator_Roll) == 0x000128, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakRotator_Pitch) == 0x00012C, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakRotator_Yaw) == 0x000130, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000134, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_CustomEvent_Bool) == 0x000138, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_CustomEvent_Bool' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00013C, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_FindRotationClosestToWorldLocation_ReturnValue) == 0x000148, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_FindRotationClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Abs_ReturnValue1) == 0x000154, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Abs_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GetForwardVector_ReturnValue) == 0x000158, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_CustomEvent_Jumper) == 0x000168, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_CustomEvent_Jumper' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_Event_SteeringInput) == 0x000170, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_Event_SteeringInput' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GetActorForwardVector_ReturnValue) == 0x000174, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Dot_VectorVector_ReturnValue) == 0x000180, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_DegAcos_ReturnValue) == 0x000184, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_IsValid_ReturnValue1) == 0x000188, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00018C, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000190, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_MapRangeClamped_ReturnValue) == 0x000194, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000198, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_bool_IsClosed_Variable2) == 0x00019C, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_bool_IsClosed_Variable2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_FInterpTo_ReturnValue) == 0x0001A0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GetCurrentGear_ReturnValue) == 0x0001A4, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GetCurrentGear_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Less_IntInt_ReturnValue) == 0x0001A8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x0001A9, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BooleanAND_ReturnValue) == 0x0001AA, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BooleanOR_ReturnValue) == 0x0001AB, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_Event_Delta) == 0x0001AC, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_Event_Delta' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001B0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GetForwardVector_ReturnValue1) == 0x0001B4, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GetForwardVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Less_IntInt_ReturnValue1) == 0x0001C0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Multiply_VectorInt_ReturnValue) == 0x0001C4, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Multiply_VectorInt_ReturnValue1) == 0x0001D0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Multiply_VectorInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0001E0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_DynamicCast_AsBP_Lv_3_Character_Base) == 0x0001E8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_DynamicCast_AsBP_Lv_3_Character_Base' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_DynamicCast_bSuccess) == 0x0001F0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Abs_ReturnValue2) == 0x0001F4, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Abs_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0001F8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Abs_ReturnValue3) == 0x0001FC, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Abs_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Not_PreBool_ReturnValue1) == 0x000200, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakVector_X) == 0x000204, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakVector_Y) == 0x000208, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakVector_Z) == 0x00020C, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakVector_X1) == 0x000210, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakVector_Y1) == 0x000214, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakVector_Z1) == 0x000218, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00021C, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000220, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakVector_X2) == 0x000224, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakVector_Y2) == 0x000228, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakVector_Z2) == 0x00022C, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000230, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x000234, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_SelectFloat_ReturnValue) == 0x000238, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Add_FloatFloat_ReturnValue1) == 0x00023C, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Greater_FloatFloat_ReturnValue3) == 0x000240, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Greater_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000244, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BooleanOR_ReturnValue1) == 0x000250, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000254, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakRotator_Roll1) == 0x000260, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakRotator_Pitch1) == 0x000264, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakRotator_Yaw1) == 0x000268, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Abs_ReturnValue4) == 0x00026C, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Abs_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Greater_FloatFloat_ReturnValue4) == 0x000270, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Greater_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BooleanOR_ReturnValue2) == 0x000271, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BooleanAND_ReturnValue1) == 0x000272, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_IsValid_ReturnValue2) == 0x000273, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000278, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_MakeTransform_ReturnValue) == 0x000280, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GetAttachParent_ReturnValue) == 0x0002B0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_CustomEvent_Player1) == 0x0002B8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_CustomEvent_Player1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0002C0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_K2_SetActorRelativeLocation_SweepHitResult) == 0x0002C8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_K2_SetActorRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_IsValid_ReturnValue3) == 0x000350, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_HitComponent6) == 0x000358, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_HitComponent6' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_OtherActor6) == 0x000360, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_OtherActor6' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_OtherComp6) == 0x000368, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_OtherComp6' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_NormalImpulse6) == 0x000370, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_NormalImpulse6' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_Hit6) == 0x000380, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_Hit6' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_DynamicCast_AsBP_Lv_3_Base_Car) == 0x000408, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_DynamicCast_AsBP_Lv_3_Base_Car' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_DynamicCast_bSuccess1) == 0x000410, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_CustomEvent_PlayerSteer) == 0x000414, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_CustomEvent_PlayerSteer' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Greater_IntInt_ReturnValue) == 0x000418, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_HitComponent5) == 0x000420, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_HitComponent5' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_OtherActor5) == 0x000428, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_OtherActor5' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_OtherComp5) == 0x000430, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_OtherComp5' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_NormalImpulse5) == 0x000438, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_NormalImpulse5' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_Hit5) == 0x000448, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_Hit5' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_Event_Damage) == 0x0004D0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_Event_DamageType) == 0x0004D8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_Event_InstigatedBy) == 0x0004E0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_Event_DamageCauser) == 0x0004E8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_HitComponent4) == 0x0004F0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_HitComponent4' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_OtherActor4) == 0x0004F8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_OtherActor4' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_OtherComp4) == 0x000500, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_OtherComp4' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_NormalImpulse4) == 0x000508, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_NormalImpulse4' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_Hit4) == 0x000518, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_Hit4' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_HitComponent3) == 0x0005A0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_HitComponent3' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_OtherActor3) == 0x0005A8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_OtherActor3' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_OtherComp3) == 0x0005B0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_OtherComp3' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_NormalImpulse3) == 0x0005B8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_NormalImpulse3' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_Hit3) == 0x0005C8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_Hit3' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_HitComponent2) == 0x000650, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_HitComponent2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_OtherActor2) == 0x000658, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_OtherActor2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_OtherComp2) == 0x000660, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_OtherComp2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_NormalImpulse2) == 0x000668, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_NormalImpulse2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_Hit2) == 0x000678, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_Hit2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_HitComponent1) == 0x000700, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_HitComponent1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_OtherActor1) == 0x000708, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_OtherActor1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_OtherComp1) == 0x000710, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_OtherComp1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_NormalImpulse1) == 0x000718, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_NormalImpulse1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_Hit1) == 0x000728, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_Hit1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_HitComponent) == 0x0007B0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_OtherActor) == 0x0007B8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_OtherComp) == 0x0007C0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_NormalImpulse) == 0x0007C8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_ComponentBoundEvent_Hit) == 0x0007D8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_IsValid_ReturnValue4) == 0x000860, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000868, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0008F0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0008F8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GreaterEqual_FloatFloat_ReturnValue1) == 0x000900, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GreaterEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000901, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000904, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_SphereTraceMulti_OutHits) == 0x000910, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_SphereTraceMulti_ReturnValue) == 0x000920, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Array_Get_Item) == 0x000928, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Array_Length_ReturnValue) == 0x0009B0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakHitResult_bBlockingHit) == 0x0009B4, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakHitResult_bInitialOverlap) == 0x0009B5, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakHitResult_Time) == 0x0009B8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakHitResult_Distance) == 0x0009BC, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakHitResult_Location) == 0x0009C0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakHitResult_ImpactPoint) == 0x0009CC, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakHitResult_Normal) == 0x0009D8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakHitResult_ImpactNormal) == 0x0009E4, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakHitResult_PhysMat) == 0x0009F0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakHitResult_HitActor) == 0x0009F8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakHitResult_HitComponent) == 0x000A00, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakHitResult_HitBoneName) == 0x000A08, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakHitResult_HitItem) == 0x000A10, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakHitResult_FaceIndex) == 0x000A14, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakHitResult_TraceStart) == 0x000A18, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakHitResult_TraceEnd) == 0x000A24, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Less_IntInt_ReturnValue2) == 0x000A30, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_ActorHasTag_ReturnValue) == 0x000A31, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_IsValid_ReturnValue5) == 0x000A32, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x000A34, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Add_VectorVector_ReturnValue) == 0x000A38, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_K2_TeleportTo_ReturnValue) == 0x000A44, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_K2_TeleportTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_TeleportPointCheck_Loc) == 0x000A48, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_TeleportPointCheck_Loc' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Add_VectorVector_ReturnValue1) == 0x000A54, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_TeleportPointCheck_Loc1) == 0x000A60, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_TeleportPointCheck_Loc1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_K2_TeleportTo_ReturnValue1) == 0x000A6C, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_K2_TeleportTo_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000A6D, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BooleanAND_ReturnValue2) == 0x000A6E, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_DynamicCast_AsBP_Mer_2_Lv_3_Character_PC) == 0x000A70, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_DynamicCast_AsBP_Mer_2_Lv_3_Character_PC' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_DynamicCast_bSuccess2) == 0x000A78, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GetGameInstance_ReturnValue) == 0x000A80, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_bool_Has_Been_Initd_Variable3) == 0x000A88, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_bool_Has_Been_Initd_Variable3' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_DynamicCast_AsMer_2Game_Instance) == 0x000A90, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_DynamicCast_AsMer_2Game_Instance' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_DynamicCast_bSuccess3) == 0x000A98, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_SwitchEnum_CmpSuccess) == 0x000A99, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_bool_Has_Been_Initd_Variable4) == 0x000A9A, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_bool_Has_Been_Initd_Variable4' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_IsValid_ReturnValue6) == 0x000A9B, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue) == 0x000AA0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_Event_teleport) == 0x000AD0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_Event_teleport' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakTransform_Location) == 0x000AD4, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakTransform_Rotation) == 0x000AE0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_BreakTransform_Scale) == 0x000AEC, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GetRightVector_ReturnValue) == 0x000AF8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000B04, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Add_VectorVector_ReturnValue2) == 0x000B10, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Add_VectorVector_ReturnValue3) == 0x000B1C, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Add_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_MakeTransform_ReturnValue1) == 0x000B30, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_MakeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_TeleportPointCheck_Loc2) == 0x000B60, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_TeleportPointCheck_Loc2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000B70, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000BF8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_K2_TeleportTo_ReturnValue2) == 0x000BF9, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_K2_TeleportTo_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_TeleportPointCheck_Loc3) == 0x000BFC, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_TeleportPointCheck_Loc3' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_MakeRotator_ReturnValue1) == 0x000C08, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_MakeRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_K2_TeleportTo_ReturnValue3) == 0x000C14, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_K2_TeleportTo_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_K2_SetRelativeRotation_SweepHitResult1) == 0x000C18, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_K2_SetRelativeRotation_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_bool_IsClosed_Variable3) == 0x000CA0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_bool_IsClosed_Variable3' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, Temp_bool_IsClosed_Variable4) == 0x000CA1, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::Temp_bool_IsClosed_Variable4' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GetControllerType_ControllerType) == 0x000CA2, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GetControllerType_ControllerType' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GetDominateHand_LeftHand1) == 0x000CA3, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GetDominateHand_LeftHand1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_Select_Default) == 0x000CA8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_Select1_Default) == 0x000CB0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_CustomEvent_Player) == 0x000CB8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x000CC0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_DynamicCast_AsBP_Mer_2_Lv_3_Character_PC1) == 0x000CC8, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_DynamicCast_AsBP_Mer_2_Lv_3_Character_PC1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, K2Node_DynamicCast_bSuccess4) == 0x000CD0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GetComponentBounds_Origin) == 0x000CD4, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GetComponentBounds_BoxExtent) == 0x000CE0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GetComponentBounds_SphereRadius) == 0x000CEC, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GetComponentBounds_Origin1) == 0x000CF0, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GetComponentBounds_Origin1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GetComponentBounds_BoxExtent1) == 0x000CFC, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GetComponentBounds_BoxExtent1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_GetComponentBounds_SphereRadius1) == 0x000D08, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_GetComponentBounds_SphereRadius1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000D0C, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x000D18, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_IsValid_ReturnValue7) == 0x000D24, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_K2_GetComponentLocation_ReturnValue2) == 0x000D28, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_K2_GetComponentLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Distance_Between_Locations_Distance) == 0x000D34, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Distance_Between_Locations_Distance' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_K2_GetComponentLocation_ReturnValue3) == 0x000D38, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_K2_GetComponentLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Less_FloatFloat_ReturnValue) == 0x000D44, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Distance_Between_Locations_Distance1) == 0x000D48, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Distance_Between_Locations_Distance1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC, CallFunc_Less_FloatFloat_ReturnValue1) == 0x000D4C, "Member 'Vehicle_MC_C_ExecuteUbergraph_Vehicle_MC::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.DettachPlayerFromCar
// 0x0008 (0x0008 - 0x0000)
struct Vehicle_MC_C_DettachPlayerFromCar final
{
public:
	class ABP_Lv3_characterBase_C*                Player_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Vehicle_MC_C_DettachPlayerFromCar) == 0x000008, "Wrong alignment on Vehicle_MC_C_DettachPlayerFromCar");
static_assert(sizeof(Vehicle_MC_C_DettachPlayerFromCar) == 0x000008, "Wrong size on Vehicle_MC_C_DettachPlayerFromCar");
static_assert(offsetof(Vehicle_MC_C_DettachPlayerFromCar, Player_0) == 0x000000, "Member 'Vehicle_MC_C_DettachPlayerFromCar::Player_0' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.ConstructTeleport
// 0x0001 (0x0001 - 0x0000)
struct Vehicle_MC_C_ConstructTeleport final
{
public:
	bool                                          Teleport;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Vehicle_MC_C_ConstructTeleport) == 0x000001, "Wrong alignment on Vehicle_MC_C_ConstructTeleport");
static_assert(sizeof(Vehicle_MC_C_ConstructTeleport) == 0x000001, "Wrong size on Vehicle_MC_C_ConstructTeleport");
static_assert(offsetof(Vehicle_MC_C_ConstructTeleport, Teleport) == 0x000000, "Member 'Vehicle_MC_C_ConstructTeleport::Teleport' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.BndEvt__glass6_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct Vehicle_MC_C_BndEvt__glass6_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0028(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Vehicle_MC_C_BndEvt__glass6_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on Vehicle_MC_C_BndEvt__glass6_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(Vehicle_MC_C_BndEvt__glass6_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on Vehicle_MC_C_BndEvt__glass6_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass6_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'Vehicle_MC_C_BndEvt__glass6_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass6_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Vehicle_MC_C_BndEvt__glass6_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass6_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Vehicle_MC_C_BndEvt__glass6_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass6_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'Vehicle_MC_C_BndEvt__glass6_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass6_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature, Hit) == 0x000028, "Member 'Vehicle_MC_C_BndEvt__glass6_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.BndEvt__glass5_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct Vehicle_MC_C_BndEvt__glass5_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0028(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Vehicle_MC_C_BndEvt__glass5_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on Vehicle_MC_C_BndEvt__glass5_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(Vehicle_MC_C_BndEvt__glass5_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on Vehicle_MC_C_BndEvt__glass5_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass5_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'Vehicle_MC_C_BndEvt__glass5_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass5_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Vehicle_MC_C_BndEvt__glass5_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass5_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Vehicle_MC_C_BndEvt__glass5_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass5_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'Vehicle_MC_C_BndEvt__glass5_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass5_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature, Hit) == 0x000028, "Member 'Vehicle_MC_C_BndEvt__glass5_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.BndEvt__glass4_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct Vehicle_MC_C_BndEvt__glass4_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0028(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Vehicle_MC_C_BndEvt__glass4_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on Vehicle_MC_C_BndEvt__glass4_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(Vehicle_MC_C_BndEvt__glass4_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on Vehicle_MC_C_BndEvt__glass4_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass4_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'Vehicle_MC_C_BndEvt__glass4_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass4_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Vehicle_MC_C_BndEvt__glass4_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass4_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Vehicle_MC_C_BndEvt__glass4_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass4_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'Vehicle_MC_C_BndEvt__glass4_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass4_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature, Hit) == 0x000028, "Member 'Vehicle_MC_C_BndEvt__glass4_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.BndEvt__glass3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct Vehicle_MC_C_BndEvt__glass3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0028(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Vehicle_MC_C_BndEvt__glass3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on Vehicle_MC_C_BndEvt__glass3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(Vehicle_MC_C_BndEvt__glass3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on Vehicle_MC_C_BndEvt__glass3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'Vehicle_MC_C_BndEvt__glass3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Vehicle_MC_C_BndEvt__glass3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Vehicle_MC_C_BndEvt__glass3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'Vehicle_MC_C_BndEvt__glass3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature, Hit) == 0x000028, "Member 'Vehicle_MC_C_BndEvt__glass3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.BndEvt__glass2_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct Vehicle_MC_C_BndEvt__glass2_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0028(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Vehicle_MC_C_BndEvt__glass2_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on Vehicle_MC_C_BndEvt__glass2_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(Vehicle_MC_C_BndEvt__glass2_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on Vehicle_MC_C_BndEvt__glass2_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass2_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'Vehicle_MC_C_BndEvt__glass2_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass2_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Vehicle_MC_C_BndEvt__glass2_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass2_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Vehicle_MC_C_BndEvt__glass2_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass2_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'Vehicle_MC_C_BndEvt__glass2_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__glass2_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature, Hit) == 0x000028, "Member 'Vehicle_MC_C_BndEvt__glass2_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct Vehicle_MC_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Vehicle_MC_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on Vehicle_MC_C_ReceiveAnyDamage");
static_assert(sizeof(Vehicle_MC_C_ReceiveAnyDamage) == 0x000020, "Wrong size on Vehicle_MC_C_ReceiveAnyDamage");
static_assert(offsetof(Vehicle_MC_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'Vehicle_MC_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'Vehicle_MC_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'Vehicle_MC_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'Vehicle_MC_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.BndEvt__Tunnel_Vehicle_MC_Glass01_Static_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct Vehicle_MC_C_BndEvt__Tunnel_Vehicle_MC_Glass01_Static_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0028(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Vehicle_MC_C_BndEvt__Tunnel_Vehicle_MC_Glass01_Static_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on Vehicle_MC_C_BndEvt__Tunnel_Vehicle_MC_Glass01_Static_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(Vehicle_MC_C_BndEvt__Tunnel_Vehicle_MC_Glass01_Static_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on Vehicle_MC_C_BndEvt__Tunnel_Vehicle_MC_Glass01_Static_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(Vehicle_MC_C_BndEvt__Tunnel_Vehicle_MC_Glass01_Static_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'Vehicle_MC_C_BndEvt__Tunnel_Vehicle_MC_Glass01_Static_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__Tunnel_Vehicle_MC_Glass01_Static_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Vehicle_MC_C_BndEvt__Tunnel_Vehicle_MC_Glass01_Static_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__Tunnel_Vehicle_MC_Glass01_Static_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Vehicle_MC_C_BndEvt__Tunnel_Vehicle_MC_Glass01_Static_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__Tunnel_Vehicle_MC_Glass01_Static_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'Vehicle_MC_C_BndEvt__Tunnel_Vehicle_MC_Glass01_Static_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__Tunnel_Vehicle_MC_Glass01_Static_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature, Hit) == 0x000028, "Member 'Vehicle_MC_C_BndEvt__Tunnel_Vehicle_MC_Glass01_Static_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.TurnSteeringWheeByRocker
// 0x0004 (0x0004 - 0x0000)
struct Vehicle_MC_C_TurnSteeringWheeByRocker final
{
public:
	float                                         PlayerSteer_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Vehicle_MC_C_TurnSteeringWheeByRocker) == 0x000004, "Wrong alignment on Vehicle_MC_C_TurnSteeringWheeByRocker");
static_assert(sizeof(Vehicle_MC_C_TurnSteeringWheeByRocker) == 0x000004, "Wrong size on Vehicle_MC_C_TurnSteeringWheeByRocker");
static_assert(offsetof(Vehicle_MC_C_TurnSteeringWheeByRocker, PlayerSteer_0) == 0x000000, "Member 'Vehicle_MC_C_TurnSteeringWheeByRocker::PlayerSteer_0' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct Vehicle_MC_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0028(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Vehicle_MC_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on Vehicle_MC_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(Vehicle_MC_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on Vehicle_MC_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(Vehicle_MC_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'Vehicle_MC_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Vehicle_MC_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Vehicle_MC_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'Vehicle_MC_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, Hit) == 0x000028, "Member 'Vehicle_MC_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.AttachPlayerToCar
// 0x0008 (0x0008 - 0x0000)
struct Vehicle_MC_C_AttachPlayerToCar final
{
public:
	class ABP_Lv3_characterBase_C*                Player_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Vehicle_MC_C_AttachPlayerToCar) == 0x000008, "Wrong alignment on Vehicle_MC_C_AttachPlayerToCar");
static_assert(sizeof(Vehicle_MC_C_AttachPlayerToCar) == 0x000008, "Wrong size on Vehicle_MC_C_AttachPlayerToCar");
static_assert(offsetof(Vehicle_MC_C_AttachPlayerToCar, Player_0) == 0x000000, "Member 'Vehicle_MC_C_AttachPlayerToCar::Player_0' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.TeleportCheck
// 0x0004 (0x0004 - 0x0000)
struct Vehicle_MC_C_TeleportCheck final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Vehicle_MC_C_TeleportCheck) == 0x000004, "Wrong alignment on Vehicle_MC_C_TeleportCheck");
static_assert(sizeof(Vehicle_MC_C_TeleportCheck) == 0x000004, "Wrong size on Vehicle_MC_C_TeleportCheck");
static_assert(offsetof(Vehicle_MC_C_TeleportCheck, Delta) == 0x000000, "Member 'Vehicle_MC_C_TeleportCheck::Delta' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.AiControlled
// 0x0004 (0x0004 - 0x0000)
struct Vehicle_MC_C_AiControlled final
{
public:
	float                                         SteeringInput_0;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Vehicle_MC_C_AiControlled) == 0x000004, "Wrong alignment on Vehicle_MC_C_AiControlled");
static_assert(sizeof(Vehicle_MC_C_AiControlled) == 0x000004, "Wrong size on Vehicle_MC_C_AiControlled");
static_assert(offsetof(Vehicle_MC_C_AiControlled, SteeringInput_0) == 0x000000, "Member 'Vehicle_MC_C_AiControlled::SteeringInput_0' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.Spawnjump
// 0x0008 (0x0008 - 0x0000)
struct Vehicle_MC_C_Spawnjump final
{
public:
	class AEnemy_Climber_C*                       Jumper;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Vehicle_MC_C_Spawnjump) == 0x000008, "Wrong alignment on Vehicle_MC_C_Spawnjump");
static_assert(sizeof(Vehicle_MC_C_Spawnjump) == 0x000008, "Wrong size on Vehicle_MC_C_Spawnjump");
static_assert(offsetof(Vehicle_MC_C_Spawnjump, Jumper) == 0x000000, "Member 'Vehicle_MC_C_Spawnjump::Jumper' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.TurnSteeringWheeByHand
// 0x0001 (0x0001 - 0x0000)
struct Vehicle_MC_C_TurnSteeringWheeByHand final
{
public:
	bool                                          Bool;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Vehicle_MC_C_TurnSteeringWheeByHand) == 0x000001, "Wrong alignment on Vehicle_MC_C_TurnSteeringWheeByHand");
static_assert(sizeof(Vehicle_MC_C_TurnSteeringWheeByHand) == 0x000001, "Wrong size on Vehicle_MC_C_TurnSteeringWheeByHand");
static_assert(offsetof(Vehicle_MC_C_TurnSteeringWheeByHand, Bool) == 0x000000, "Member 'Vehicle_MC_C_TurnSteeringWheeByHand::Bool' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Vehicle_MC_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Vehicle_MC_C_ReceiveTick) == 0x000004, "Wrong alignment on Vehicle_MC_C_ReceiveTick");
static_assert(sizeof(Vehicle_MC_C_ReceiveTick) == 0x000004, "Wrong size on Vehicle_MC_C_ReceiveTick");
static_assert(offsetof(Vehicle_MC_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Vehicle_MC_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.UserConstructionScript
// 0x0002 (0x0002 - 0x0000)
struct Vehicle_MC_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Vehicle_MC_C_UserConstructionScript) == 0x000001, "Wrong alignment on Vehicle_MC_C_UserConstructionScript");
static_assert(sizeof(Vehicle_MC_C_UserConstructionScript) == 0x000002, "Wrong size on Vehicle_MC_C_UserConstructionScript");
static_assert(offsetof(Vehicle_MC_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000000, "Member 'Vehicle_MC_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue1) == 0x000001, "Member 'Vehicle_MC_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue1' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.JumperToCar
// 0x0160 (0x0160 - 0x0000)
struct Vehicle_MC_C_JumperToCar final
{
public:
	class AEnemy_Climber_C*                       Jumper;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBE_Lv3_ClimberJumpDir                        NewParam;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CurJumper;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CurPoint;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBE_Lv3_ClimberJumpDir                        Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Distance_Between_Locations_Distance;      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_Constant_ReturnValue;           // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue1;        // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x1];                                       // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        K2Node_Select_Default;                             // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Vehicle_MC_C_JumperToCar) == 0x000010, "Wrong alignment on Vehicle_MC_C_JumperToCar");
static_assert(sizeof(Vehicle_MC_C_JumperToCar) == 0x000160, "Wrong size on Vehicle_MC_C_JumperToCar");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, Jumper) == 0x000000, "Member 'Vehicle_MC_C_JumperToCar::Jumper' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, Delta) == 0x000008, "Member 'Vehicle_MC_C_JumperToCar::Delta' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, NewParam) == 0x00000C, "Member 'Vehicle_MC_C_JumperToCar::NewParam' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CurJumper) == 0x000010, "Member 'Vehicle_MC_C_JumperToCar::CurJumper' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CurPoint) == 0x000018, "Member 'Vehicle_MC_C_JumperToCar::CurPoint' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, Temp_byte_Variable) == 0x000020, "Member 'Vehicle_MC_C_JumperToCar::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'Vehicle_MC_C_JumperToCar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, Temp_object_Variable) == 0x000028, "Member 'Vehicle_MC_C_JumperToCar::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'Vehicle_MC_C_JumperToCar::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00003C, "Member 'Vehicle_MC_C_JumperToCar::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000048, "Member 'Vehicle_MC_C_JumperToCar::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CallFunc_BreakRotator_Roll) == 0x000054, "Member 'Vehicle_MC_C_JumperToCar::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CallFunc_BreakRotator_Pitch) == 0x000058, "Member 'Vehicle_MC_C_JumperToCar::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CallFunc_BreakRotator_Yaw) == 0x00005C, "Member 'Vehicle_MC_C_JumperToCar::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CallFunc_Distance_Between_Locations_Distance) == 0x000060, "Member 'Vehicle_MC_C_JumperToCar::CallFunc_Distance_Between_Locations_Distance' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CallFunc_VInterpTo_Constant_ReturnValue) == 0x000064, "Member 'Vehicle_MC_C_JumperToCar::CallFunc_VInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000070, "Member 'Vehicle_MC_C_JumperToCar::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000071, "Member 'Vehicle_MC_C_JumperToCar::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CallFunc_LessEqual_FloatFloat_ReturnValue1) == 0x000072, "Member 'Vehicle_MC_C_JumperToCar::CallFunc_LessEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000074, "Member 'Vehicle_MC_C_JumperToCar::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, K2Node_Select_Default) == 0x000080, "Member 'Vehicle_MC_C_JumperToCar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CallFunc_BreakRotator_Roll1) == 0x000088, "Member 'Vehicle_MC_C_JumperToCar::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CallFunc_BreakRotator_Pitch1) == 0x00008C, "Member 'Vehicle_MC_C_JumperToCar::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CallFunc_BreakRotator_Yaw1) == 0x000090, "Member 'Vehicle_MC_C_JumperToCar::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CallFunc_MakeRotator_ReturnValue) == 0x000094, "Member 'Vehicle_MC_C_JumperToCar::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'Vehicle_MC_C_JumperToCar::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0000D0, "Member 'Vehicle_MC_C_JumperToCar::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_JumperToCar, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000158, "Member 'Vehicle_MC_C_JumperToCar::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.CheckCanJump
// 0x0018 (0x0018 - 0x0000)
struct Vehicle_MC_C_CheckCanJump final
{
public:
	EBE_Lv3_ClimberJumpDir                        JumpDir;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEnemy_Climber_C*                       NPC;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EBE_Lv3_ClimberJumpDir                        NewParam1;                                         // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Vehicle_MC_C_CheckCanJump) == 0x000008, "Wrong alignment on Vehicle_MC_C_CheckCanJump");
static_assert(sizeof(Vehicle_MC_C_CheckCanJump) == 0x000018, "Wrong size on Vehicle_MC_C_CheckCanJump");
static_assert(offsetof(Vehicle_MC_C_CheckCanJump, JumpDir) == 0x000000, "Member 'Vehicle_MC_C_CheckCanJump::JumpDir' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_CheckCanJump, NPC) == 0x000008, "Member 'Vehicle_MC_C_CheckCanJump::NPC' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_CheckCanJump, Result) == 0x000010, "Member 'Vehicle_MC_C_CheckCanJump::Result' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_CheckCanJump, NewParam1) == 0x000011, "Member 'Vehicle_MC_C_CheckCanJump::NewParam1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_CheckCanJump, K2Node_SwitchEnum_CmpSuccess) == 0x000012, "Member 'Vehicle_MC_C_CheckCanJump::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_CheckCanJump, CallFunc_IsValid_ReturnValue) == 0x000013, "Member 'Vehicle_MC_C_CheckCanJump::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_CheckCanJump, CallFunc_IsValid_ReturnValue1) == 0x000014, "Member 'Vehicle_MC_C_CheckCanJump::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_CheckCanJump, CallFunc_IsValid_ReturnValue2) == 0x000015, "Member 'Vehicle_MC_C_CheckCanJump::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.ClearJumper
// 0x0002 (0x0002 - 0x0000)
struct Vehicle_MC_C_ClearJumper final
{
public:
	EBE_Lv3_ClimberJumpDir                        NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Vehicle_MC_C_ClearJumper) == 0x000001, "Wrong alignment on Vehicle_MC_C_ClearJumper");
static_assert(sizeof(Vehicle_MC_C_ClearJumper) == 0x000002, "Wrong size on Vehicle_MC_C_ClearJumper");
static_assert(offsetof(Vehicle_MC_C_ClearJumper, NewParam) == 0x000000, "Member 'Vehicle_MC_C_ClearJumper::NewParam' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ClearJumper, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'Vehicle_MC_C_ClearJumper::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.ResetPlayerHMDLocation
// 0x01D0 (0x01D0 - 0x0000)
struct Vehicle_MC_C_ResetPlayerHMDLocation final
{
public:
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorRelativeRotation_SweepHitResult; // 0x0080(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult; // 0x0148(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Vehicle_MC_C_ResetPlayerHMDLocation) == 0x000010, "Wrong alignment on Vehicle_MC_C_ResetPlayerHMDLocation");
static_assert(sizeof(Vehicle_MC_C_ResetPlayerHMDLocation) == 0x0001D0, "Wrong size on Vehicle_MC_C_ResetPlayerHMDLocation");
static_assert(offsetof(Vehicle_MC_C_ResetPlayerHMDLocation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000000, "Member 'Vehicle_MC_C_ResetPlayerHMDLocation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ResetPlayerHMDLocation, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'Vehicle_MC_C_ResetPlayerHMDLocation::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ResetPlayerHMDLocation, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'Vehicle_MC_C_ResetPlayerHMDLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ResetPlayerHMDLocation, CallFunc_BreakTransform_Location) == 0x000044, "Member 'Vehicle_MC_C_ResetPlayerHMDLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ResetPlayerHMDLocation, CallFunc_BreakTransform_Rotation) == 0x000050, "Member 'Vehicle_MC_C_ResetPlayerHMDLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ResetPlayerHMDLocation, CallFunc_BreakTransform_Scale) == 0x00005C, "Member 'Vehicle_MC_C_ResetPlayerHMDLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ResetPlayerHMDLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'Vehicle_MC_C_ResetPlayerHMDLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ResetPlayerHMDLocation, CallFunc_GetController_ReturnValue) == 0x000078, "Member 'Vehicle_MC_C_ResetPlayerHMDLocation::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ResetPlayerHMDLocation, CallFunc_K2_SetActorRelativeRotation_SweepHitResult) == 0x000080, "Member 'Vehicle_MC_C_ResetPlayerHMDLocation::CallFunc_K2_SetActorRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ResetPlayerHMDLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000108, "Member 'Vehicle_MC_C_ResetPlayerHMDLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ResetPlayerHMDLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000114, "Member 'Vehicle_MC_C_ResetPlayerHMDLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ResetPlayerHMDLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000120, "Member 'Vehicle_MC_C_ResetPlayerHMDLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ResetPlayerHMDLocation, CallFunc_Add_VectorVector_ReturnValue1) == 0x00012C, "Member 'Vehicle_MC_C_ResetPlayerHMDLocation::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ResetPlayerHMDLocation, CallFunc_InverseTransformLocation_ReturnValue) == 0x000138, "Member 'Vehicle_MC_C_ResetPlayerHMDLocation::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_ResetPlayerHMDLocation, CallFunc_K2_SetActorRelativeLocation_SweepHitResult) == 0x000148, "Member 'Vehicle_MC_C_ResetPlayerHMDLocation::CallFunc_K2_SetActorRelativeLocation_SweepHitResult' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.SpawnSlidingSound
// 0x0004 (0x0004 - 0x0000)
struct Vehicle_MC_C_SpawnSlidingSound final
{
public:
	float                                         PlayerSteer_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Vehicle_MC_C_SpawnSlidingSound) == 0x000004, "Wrong alignment on Vehicle_MC_C_SpawnSlidingSound");
static_assert(sizeof(Vehicle_MC_C_SpawnSlidingSound) == 0x000004, "Wrong size on Vehicle_MC_C_SpawnSlidingSound");
static_assert(offsetof(Vehicle_MC_C_SpawnSlidingSound, PlayerSteer_0) == 0x000000, "Member 'Vehicle_MC_C_SpawnSlidingSound::PlayerSteer_0' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.GlassHit
// 0x00F0 (0x00F0 - 0x0000)
struct Vehicle_MC_C_GlassHit final
{
public:
	class UPrimitiveComponent*                    Glass;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 OtherActor;                                        // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerProjectile_C*                    K2Node_DynamicCast_AsPlayer_Projectile;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMer2GameState_C*                       K2Node_DynamicCast_AsMer_2Game_State;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnParticle_ReturnValue;                // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(Vehicle_MC_C_GlassHit) == 0x000008, "Wrong alignment on Vehicle_MC_C_GlassHit");
static_assert(sizeof(Vehicle_MC_C_GlassHit) == 0x0000F0, "Wrong size on Vehicle_MC_C_GlassHit");
static_assert(offsetof(Vehicle_MC_C_GlassHit, Glass) == 0x000000, "Member 'Vehicle_MC_C_GlassHit::Glass' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_GlassHit, Hit) == 0x000008, "Member 'Vehicle_MC_C_GlassHit::Hit' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_GlassHit, OtherActor) == 0x000090, "Member 'Vehicle_MC_C_GlassHit::OtherActor' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_GlassHit, CallFunc_GetGameState_ReturnValue) == 0x000098, "Member 'Vehicle_MC_C_GlassHit::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_GlassHit, K2Node_DynamicCast_AsPlayer_Projectile) == 0x0000A0, "Member 'Vehicle_MC_C_GlassHit::K2Node_DynamicCast_AsPlayer_Projectile' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_GlassHit, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'Vehicle_MC_C_GlassHit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_GlassHit, K2Node_DynamicCast_AsMer_2Game_State) == 0x0000B0, "Member 'Vehicle_MC_C_GlassHit::K2Node_DynamicCast_AsMer_2Game_State' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_GlassHit, K2Node_DynamicCast_bSuccess1) == 0x0000B8, "Member 'Vehicle_MC_C_GlassHit::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_GlassHit, CallFunc_SpawnParticle_ReturnValue) == 0x0000C0, "Member 'Vehicle_MC_C_GlassHit::CallFunc_SpawnParticle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_GlassHit, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000C8, "Member 'Vehicle_MC_C_GlassHit::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_GlassHit, CallFunc_ComponentHasTag_ReturnValue) == 0x0000D0, "Member 'Vehicle_MC_C_GlassHit::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_GlassHit, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0000D8, "Member 'Vehicle_MC_C_GlassHit::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_GlassHit, K2Node_MakeArray_Array) == 0x0000E0, "Member 'Vehicle_MC_C_GlassHit::K2Node_MakeArray_Array' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.TeleportPointCheck
// 0x02E0 (0x02E0 - 0x0000)
struct Vehicle_MC_C_TeleportPointCheck final
{
public:
	struct FVector                                A;                                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Loc;                                               // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB[0x1];                                       // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0170(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array1;                           // 0x0180(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x0190(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x01A8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit1;             // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap1;          // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_233[0x1];                                      // 0x0233(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time1;                     // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance1;                 // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location1;                 // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint1;              // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal1;                   // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal1;             // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat1;                  // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor1;                 // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent1;             // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName1;              // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem1;                  // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex1;                // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart1;               // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd1;                 // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALv4_AttackCarBase_C*                   K2Node_DynamicCast_AsLv_4_Attack_Car_Base;         // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALv4_NormalCarBase_C*                   K2Node_DynamicCast_AsLv_4_Normal_Car_Base;         // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item1;                          // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Vehicle_MC_C_TeleportPointCheck) == 0x000008, "Wrong alignment on Vehicle_MC_C_TeleportPointCheck");
static_assert(sizeof(Vehicle_MC_C_TeleportPointCheck) == 0x0002E0, "Wrong size on Vehicle_MC_C_TeleportPointCheck");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, A) == 0x000000, "Member 'Vehicle_MC_C_TeleportPointCheck::A' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, Loc) == 0x00000C, "Member 'Vehicle_MC_C_TeleportPointCheck::Loc' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, Temp_int_Array_Index_Variable) == 0x000018, "Member 'Vehicle_MC_C_TeleportPointCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00001C, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_Add_VectorVector_ReturnValue) == 0x000028, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'Vehicle_MC_C_TeleportPointCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, Temp_int_Array_Index_Variable1) == 0x00003C, "Member 'Vehicle_MC_C_TeleportPointCheck::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, Temp_object_Variable) == 0x000040, "Member 'Vehicle_MC_C_TeleportPointCheck::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_LineTraceSingle_OutHit) == 0x000050, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_LineTraceSingle_ReturnValue) == 0x0000D8, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_bBlockingHit) == 0x0000D9, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000DA, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_Time) == 0x0000DC, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_Distance) == 0x0000E0, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_Location) == 0x0000E4, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_ImpactPoint) == 0x0000F0, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_Normal) == 0x0000FC, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_ImpactNormal) == 0x000108, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_PhysMat) == 0x000118, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_HitActor) == 0x000120, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_HitComponent) == 0x000128, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_HitBoneName) == 0x000130, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_HitItem) == 0x000138, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_FaceIndex) == 0x00013C, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_TraceStart) == 0x000140, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_TraceEnd) == 0x00014C, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, Temp_int_Loop_Counter_Variable1) == 0x000158, "Member 'Vehicle_MC_C_TeleportPointCheck::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000160, "Member 'Vehicle_MC_C_TeleportPointCheck::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'Vehicle_MC_C_TeleportPointCheck::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_Add_IntInt_ReturnValue1) == 0x00016C, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, K2Node_MakeArray_Array) == 0x000170, "Member 'Vehicle_MC_C_TeleportPointCheck::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, K2Node_MakeArray_Array1) == 0x000180, "Member 'Vehicle_MC_C_TeleportPointCheck::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x000190, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x0001A0, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_Array_Length_ReturnValue) == 0x0001A4, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_Array_Get_Item) == 0x0001A8, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_Less_IntInt_ReturnValue) == 0x000230, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_bBlockingHit1) == 0x000231, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_bBlockingHit1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_bInitialOverlap1) == 0x000232, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_bInitialOverlap1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_Time1) == 0x000234, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_Time1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_Distance1) == 0x000238, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_Distance1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_Location1) == 0x00023C, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_Location1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_ImpactPoint1) == 0x000248, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_ImpactPoint1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_Normal1) == 0x000254, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_Normal1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_ImpactNormal1) == 0x000260, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_ImpactNormal1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_PhysMat1) == 0x000270, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_PhysMat1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_HitActor1) == 0x000278, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_HitActor1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_HitComponent1) == 0x000280, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_HitComponent1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_HitBoneName1) == 0x000288, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_HitBoneName1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_HitItem1) == 0x000290, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_HitItem1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_FaceIndex1) == 0x000294, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_FaceIndex1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_TraceStart1) == 0x000298, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_TraceStart1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_BreakHitResult_TraceEnd1) == 0x0002A4, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_BreakHitResult_TraceEnd1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, K2Node_DynamicCast_AsLv_4_Attack_Car_Base) == 0x0002B0, "Member 'Vehicle_MC_C_TeleportPointCheck::K2Node_DynamicCast_AsLv_4_Attack_Car_Base' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, K2Node_DynamicCast_bSuccess1) == 0x0002B8, "Member 'Vehicle_MC_C_TeleportPointCheck::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, K2Node_DynamicCast_AsLv_4_Normal_Car_Base) == 0x0002C0, "Member 'Vehicle_MC_C_TeleportPointCheck::K2Node_DynamicCast_AsLv_4_Normal_Car_Base' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, K2Node_DynamicCast_bSuccess2) == 0x0002C8, "Member 'Vehicle_MC_C_TeleportPointCheck::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_Array_Get_Item1) == 0x0002D0, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_Array_Length_ReturnValue1) == 0x0002D8, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_TeleportPointCheck, CallFunc_Less_IntInt_ReturnValue1) == 0x0002DC, "Member 'Vehicle_MC_C_TeleportPointCheck::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");

// Function Vehicle_MC.Vehicle_MC_C.SetHUD
// 0x0030 (0x0030 - 0x0000)
struct Vehicle_MC_C_SetHUD final
{
public:
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CarFrontHUD_C*                      K2Node_DynamicCast_AsBP_Car_Front_HUD;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue1;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CarGPS_C*                           K2Node_DynamicCast_AsBP_Car_GPS;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Vehicle_MC_C_SetHUD) == 0x000008, "Wrong alignment on Vehicle_MC_C_SetHUD");
static_assert(sizeof(Vehicle_MC_C_SetHUD) == 0x000030, "Wrong size on Vehicle_MC_C_SetHUD");
static_assert(offsetof(Vehicle_MC_C_SetHUD, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000000, "Member 'Vehicle_MC_C_SetHUD::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_SetHUD, K2Node_DynamicCast_AsBP_Car_Front_HUD) == 0x000008, "Member 'Vehicle_MC_C_SetHUD::K2Node_DynamicCast_AsBP_Car_Front_HUD' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_SetHUD, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Vehicle_MC_C_SetHUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_SetHUD, CallFunc_GetUserWidgetObject_ReturnValue1) == 0x000018, "Member 'Vehicle_MC_C_SetHUD::CallFunc_GetUserWidgetObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_SetHUD, K2Node_DynamicCast_AsBP_Car_GPS) == 0x000020, "Member 'Vehicle_MC_C_SetHUD::K2Node_DynamicCast_AsBP_Car_GPS' has a wrong offset!");
static_assert(offsetof(Vehicle_MC_C_SetHUD, K2Node_DynamicCast_bSuccess1) == 0x000028, "Member 'Vehicle_MC_C_SetHUD::K2Node_DynamicCast_bSuccess1' has a wrong offset!");

}


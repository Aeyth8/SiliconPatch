#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mer2AchievementComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Enum_Achievement_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Mer2AchievementComponent.Mer2AchievementComponent_C
// 0x0018 (0x0108 - 0x00F0)
class UMer2AchievementComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class APlayerController*                      Con_Ref;                                           // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_Achievement                              Ach;                                               // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Mer2AchievementComponent(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UnlockSteamAchievement(class APlayerController* PlayerController, Enum_Achievement Achievement);
	void OnSuccess_3A1532A449CA8E12C725E29D9CD57262();
	void OnFailure_3A1532A449CA8E12C725E29D9CD57262();
	void OnSuccess_A7F272754A56CDF721E29285B42B7853();
	void OnFailure_A7F272754A56CDF721E29285B42B7853();
	void OnSuccess_1C58A86A453328AE0BEDCB9C9CC5B450(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void OnFailure_1C58A86A453328AE0BEDCB9C9CC5B450(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Mer2AchievementComponent_C">();
	}
	static class UMer2AchievementComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMer2AchievementComponent_C>();
	}
};
static_assert(alignof(UMer2AchievementComponent_C) == 0x000008, "Wrong alignment on UMer2AchievementComponent_C");
static_assert(sizeof(UMer2AchievementComponent_C) == 0x000108, "Wrong size on UMer2AchievementComponent_C");
static_assert(offsetof(UMer2AchievementComponent_C, UberGraphFrame) == 0x0000F0, "Member 'UMer2AchievementComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMer2AchievementComponent_C, Con_Ref) == 0x0000F8, "Member 'UMer2AchievementComponent_C::Con_Ref' has a wrong offset!");
static_assert(offsetof(UMer2AchievementComponent_C, Ach) == 0x000100, "Member 'UMer2AchievementComponent_C::Ach' has a wrong offset!");

}


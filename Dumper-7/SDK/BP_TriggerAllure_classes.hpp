#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TriggerAllure

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Struct_AllureTriggerData_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TriggerAllure.BP_TriggerAllure_C
// 0x0030 (0x0358 - 0x0328)
class ABP_TriggerAllure_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         TriggerCount;                                      // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_AllureTriggerData>      AllureData;                                        // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_TriggerAllure(int32 EntryPoint);
	void BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void SetAlluredActorAndPos(class ABP_NPC_Plunger_C* _actor, const struct FVector& _pos, class UAnimMontage* _anim);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TriggerAllure_C">();
	}
	static class ABP_TriggerAllure_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TriggerAllure_C>();
	}
};
static_assert(alignof(ABP_TriggerAllure_C) == 0x000008, "Wrong alignment on ABP_TriggerAllure_C");
static_assert(sizeof(ABP_TriggerAllure_C) == 0x000358, "Wrong size on ABP_TriggerAllure_C");
static_assert(offsetof(ABP_TriggerAllure_C, UberGraphFrame) == 0x000328, "Member 'ABP_TriggerAllure_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_TriggerAllure_C, Box) == 0x000330, "Member 'ABP_TriggerAllure_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_TriggerAllure_C, DefaultSceneRoot) == 0x000338, "Member 'ABP_TriggerAllure_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_TriggerAllure_C, TriggerCount) == 0x000340, "Member 'ABP_TriggerAllure_C::TriggerCount' has a wrong offset!");
static_assert(offsetof(ABP_TriggerAllure_C, AllureData) == 0x000348, "Member 'ABP_TriggerAllure_C::AllureData' has a wrong offset!");

}


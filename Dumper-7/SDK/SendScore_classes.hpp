#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SendScore

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SendScore.SendScore_C
// 0x00C0 (0x02C8 - 0x0208)
class USendScore_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0208(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             Accuracy;                                          // 0x0210(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ACCURACYTxt;                                       // 0x0218(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMainMenuButton_C*                      back;                                              // 0x0220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Bonus;                                             // 0x0228(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BONUSTxt;                                          // 0x0230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMainMenuButton_C*                      Continue;                                          // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_79;                                          // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_123;                                         // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Kill;                                              // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             KILLTxt;                                           // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LEADERBOARDTxt;                                    // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Process;                                           // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PROCESSTxt;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           RankOrderBox;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMainMenuButton_C*                      RESTART;                                           // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             total;                                             // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TOTALTxt;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnBack;                                            // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnContinue;                                        // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnRestart;                                         // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_SendScore(int32 EntryPoint);
	void UpdateScore();
	void BndEvt__Restart_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature();
	void BndEvt__Continue_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature();
	void BndEvt__Back_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void OnLeaderBoard(const TArray<struct FLeaderBoardData>& leaderboard, bool ShowContinue);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void ApplyText(class UTextBlock* Target, const class FString& Text, bool B);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SendScore_C">();
	}
	static class USendScore_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USendScore_C>();
	}
};
static_assert(alignof(USendScore_C) == 0x000008, "Wrong alignment on USendScore_C");
static_assert(sizeof(USendScore_C) == 0x0002C8, "Wrong size on USendScore_C");
static_assert(offsetof(USendScore_C, UberGraphFrame) == 0x000208, "Member 'USendScore_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USendScore_C, Accuracy) == 0x000210, "Member 'USendScore_C::Accuracy' has a wrong offset!");
static_assert(offsetof(USendScore_C, ACCURACYTxt) == 0x000218, "Member 'USendScore_C::ACCURACYTxt' has a wrong offset!");
static_assert(offsetof(USendScore_C, back) == 0x000220, "Member 'USendScore_C::back' has a wrong offset!");
static_assert(offsetof(USendScore_C, Bonus) == 0x000228, "Member 'USendScore_C::Bonus' has a wrong offset!");
static_assert(offsetof(USendScore_C, BONUSTxt) == 0x000230, "Member 'USendScore_C::BONUSTxt' has a wrong offset!");
static_assert(offsetof(USendScore_C, Continue) == 0x000238, "Member 'USendScore_C::Continue' has a wrong offset!");
static_assert(offsetof(USendScore_C, Image_79) == 0x000240, "Member 'USendScore_C::Image_79' has a wrong offset!");
static_assert(offsetof(USendScore_C, Image_123) == 0x000248, "Member 'USendScore_C::Image_123' has a wrong offset!");
static_assert(offsetof(USendScore_C, Kill) == 0x000250, "Member 'USendScore_C::Kill' has a wrong offset!");
static_assert(offsetof(USendScore_C, KILLTxt) == 0x000258, "Member 'USendScore_C::KILLTxt' has a wrong offset!");
static_assert(offsetof(USendScore_C, LEADERBOARDTxt) == 0x000260, "Member 'USendScore_C::LEADERBOARDTxt' has a wrong offset!");
static_assert(offsetof(USendScore_C, Process) == 0x000268, "Member 'USendScore_C::Process' has a wrong offset!");
static_assert(offsetof(USendScore_C, PROCESSTxt) == 0x000270, "Member 'USendScore_C::PROCESSTxt' has a wrong offset!");
static_assert(offsetof(USendScore_C, RankOrderBox) == 0x000278, "Member 'USendScore_C::RankOrderBox' has a wrong offset!");
static_assert(offsetof(USendScore_C, RESTART) == 0x000280, "Member 'USendScore_C::RESTART' has a wrong offset!");
static_assert(offsetof(USendScore_C, total) == 0x000288, "Member 'USendScore_C::total' has a wrong offset!");
static_assert(offsetof(USendScore_C, TOTALTxt) == 0x000290, "Member 'USendScore_C::TOTALTxt' has a wrong offset!");
static_assert(offsetof(USendScore_C, OnBack) == 0x000298, "Member 'USendScore_C::OnBack' has a wrong offset!");
static_assert(offsetof(USendScore_C, OnContinue) == 0x0002A8, "Member 'USendScore_C::OnContinue' has a wrong offset!");
static_assert(offsetof(USendScore_C, OnRestart) == 0x0002B8, "Member 'USendScore_C::OnRestart' has a wrong offset!");

}


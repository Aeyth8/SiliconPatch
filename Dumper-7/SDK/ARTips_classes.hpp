#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ARTips

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ARTips.ARTips_C
// 0x0020 (0x0228 - 0x0208)
class UARTips_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0208(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         backToWar;                                         // 0x0210(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         tip1;                                              // 0x0218(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         tip2;                                              // 0x0220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ARTips(int32 EntryPoint);
	void Construct();
	void ShowTip2();
	void showbackWar(bool blsVisile);
	void HideTip2();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ARTips_C">();
	}
	static class UARTips_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTips_C>();
	}
};
static_assert(alignof(UARTips_C) == 0x000008, "Wrong alignment on UARTips_C");
static_assert(sizeof(UARTips_C) == 0x000228, "Wrong size on UARTips_C");
static_assert(offsetof(UARTips_C, UberGraphFrame) == 0x000208, "Member 'UARTips_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UARTips_C, backToWar) == 0x000210, "Member 'UARTips_C::backToWar' has a wrong offset!");
static_assert(offsetof(UARTips_C, tip1) == 0x000218, "Member 'UARTips_C::tip1' has a wrong offset!");
static_assert(offsetof(UARTips_C, tip2) == 0x000220, "Member 'UARTips_C::tip2' has a wrong offset!");

}


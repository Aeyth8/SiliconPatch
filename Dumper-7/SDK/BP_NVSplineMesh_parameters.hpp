#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NVSplineMesh

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SSplineMeshDetails_structs.hpp"
#include "ESplineMeshStretchMode_structs.hpp"
#include "Engine_structs.hpp"
#include "SSplineMeshStep_structs.hpp"
#include "SSplineMeshInstanceList_structs.hpp"
#include "ESplineMeshSequenceDistanceModifierType_structs.hpp"
#include "ESplineMeshSequenceType_structs.hpp"


namespace SDK::Params
{

// Function BP_NVSplineMesh.BP_NVSplineMesh_C.UserConstructionScript
// 0x0140 (0x0140 - 0x0000)
struct BP_NVSplineMesh_C_UserConstructionScript final
{
public:
	TArray<struct FSSplineMeshStep>               Sequence;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FSSplineMeshDetails>            Dependants;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	struct FTransform                             Temp_struct_Variable;                              // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             Temp_struct_Variable1;                             // 0x0050(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue1;                // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue1;        // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue1;              // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue1;               // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C7[0x1];                                       // 0x00C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x00C8(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue; // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue1;           // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue1; // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue1; // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVSplineMesh_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_NVSplineMesh_C_UserConstructionScript");
static_assert(sizeof(BP_NVSplineMesh_C_UserConstructionScript) == 0x000140, "Wrong size on BP_NVSplineMesh_C_UserConstructionScript");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, Sequence) == 0x000000, "Member 'BP_NVSplineMesh_C_UserConstructionScript::Sequence' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, Dependants) == 0x000010, "Member 'BP_NVSplineMesh_C_UserConstructionScript::Dependants' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, Temp_struct_Variable) == 0x000020, "Member 'BP_NVSplineMesh_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, Temp_struct_Variable1) == 0x000050, "Member 'BP_NVSplineMesh_C_UserConstructionScript::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000080, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue1) == 0x000088, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, Temp_int_Variable) == 0x000090, "Member 'BP_NVSplineMesh_C_UserConstructionScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue1) == 0x000098, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x00009C, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_BreakVector2D_X) == 0x0000A4, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_BreakVector2D_Y) == 0x0000A8, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000AC, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_Array_Contains_ReturnValue) == 0x0000B0, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_MakeVector2D_ReturnValue) == 0x0000B4, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_Add_Vector2DVector2D_ReturnValue1) == 0x0000BC, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_Add_Vector2DVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_Array_Contains_ReturnValue1) == 0x0000C4, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_Array_Contains_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x0000C5, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue1) == 0x0000C6, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_GetBounds_ReturnValue) == 0x0000C8, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_GetSplineLength_ReturnValue) == 0x0000E4, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x0000E8, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x0000EC, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x0000F0, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0000F4, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000F8, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000FC, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue) == 0x000100, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_FTrunc_ReturnValue) == 0x00010C, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000110, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00011C, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_Multiply_IntFloat_ReturnValue1) == 0x000120, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_Multiply_IntFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue1) == 0x000124, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_UserConstructionScript, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue1) == 0x000130, "Member 'BP_NVSplineMesh_C_UserConstructionScript::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue1' has a wrong offset!");

// Function BP_NVSplineMesh.BP_NVSplineMesh_C.BuildMeshSequence
// 0x02A0 (0x02A0 - 0x0000)
struct BP_NVSplineMesh_C_BuildMeshSequence final
{
public:
	struct FSSplineMeshDetails                    SplineMeshDetails_0;                               // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	float                                         StartDistance;                                     // 0x00B0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndDistnace;                                       // 0x00B4(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSSplineMeshStep>               Mesh_segment_sequence;                             // 0x00B8(0x0010)(Parm, OutParm, ZeroConstructor)
	float                                         AdjustedEndDistance;                               // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            FinalMesh;                                         // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DesiredDistance;                                   // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          KeepLooping;                                       // 0x00DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            MeshToTry;                                         // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BestLengthDifference;                              // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Longest;                                           // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            ChosenMesh;                                        // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSSplineMeshStep>               MeshSteps;                                         // 0x00F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	float                                         CurrentDistance;                                   // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_Array_Get_Item;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x2];                                      // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue; // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_Array_Get_Item1;                          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_ChooseNextMeshInSequence_Chosen_Mesh;     // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_FindBestMeshForLength_ChosenMesh;         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshSequenceType                       Temp_byte_Variable;                                // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default;                             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0170(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue1;                   // 0x01AC(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue1;                        // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue1;       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue1;                 // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSSplineMeshStep                       K2Node_MakeStruct_SSplineMeshStep;                 // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue3;         // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSSplineMeshStep                       CallFunc_Array_Get_Item2;                          // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MathExpression_ReturnValue1;                // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSplineMeshStep                       K2Node_MakeStruct_SSplineMeshStep1;                // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue2;                   // 0x0250(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X2;                           // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue3;           // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue2;                        // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue2;                 // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue3;              // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue3;          // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue6;         // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NVSplineMesh_C_BuildMeshSequence) == 0x000010, "Wrong alignment on BP_NVSplineMesh_C_BuildMeshSequence");
static_assert(sizeof(BP_NVSplineMesh_C_BuildMeshSequence) == 0x0002A0, "Wrong size on BP_NVSplineMesh_C_BuildMeshSequence");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, SplineMeshDetails_0) == 0x000000, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::SplineMeshDetails_0' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, StartDistance) == 0x0000B0, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::StartDistance' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, EndDistnace) == 0x0000B4, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::EndDistnace' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, Mesh_segment_sequence) == 0x0000B8, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::Mesh_segment_sequence' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, AdjustedEndDistance) == 0x0000C8, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::AdjustedEndDistance' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, FinalMesh) == 0x0000D0, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::FinalMesh' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, DesiredDistance) == 0x0000D8, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::DesiredDistance' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, KeepLooping) == 0x0000DC, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::KeepLooping' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, MeshToTry) == 0x0000E0, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::MeshToTry' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, BestLengthDifference) == 0x0000E8, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::BestLengthDifference' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, Longest) == 0x0000EC, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::Longest' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, ChosenMesh) == 0x0000F0, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::ChosenMesh' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, MeshSteps) == 0x0000F8, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::MeshSteps' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CurrentDistance) == 0x000108, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CurrentDistance' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Array_Get_Item) == 0x000110, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000118, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Array_Length_ReturnValue) == 0x00011C, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Array_Length_ReturnValue1) == 0x000120, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Subtract_IntInt_ReturnValue) == 0x000124, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Greater_IntInt_ReturnValue) == 0x000128, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, K2Node_SwitchEnum_CmpSuccess) == 0x000129, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00012A, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x00012B, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Array_Length_ReturnValue2) == 0x00012C, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Greater_IntInt_ReturnValue1) == 0x000130, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000134, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000138, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x000139, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_RandomIntegerInRangeFromStream_ReturnValue) == 0x00013C, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_RandomIntegerInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000140, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Array_Get_Item1) == 0x000148, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_ChooseNextMeshInSequence_Chosen_Mesh) == 0x000150, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_ChooseNextMeshInSequence_Chosen_Mesh' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_FindBestMeshForLength_ChosenMesh) == 0x000158, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_FindBestMeshForLength_ChosenMesh' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000160, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, Temp_byte_Variable) == 0x000164, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, K2Node_Select_Default) == 0x000168, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_GetBounds_ReturnValue) == 0x000170, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, Temp_int_Array_Index_Variable) == 0x00018C, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_BreakVector_X) == 0x000190, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_BreakVector_Y) == 0x000194, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_BreakVector_Z) == 0x000198, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00019C, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001A0, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_FMax_ReturnValue) == 0x0001A4, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_SelectFloat_ReturnValue) == 0x0001A8, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_GetBounds_ReturnValue1) == 0x0001AC, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_GetBounds_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001C8, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x0001CC, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_BreakVector_X1) == 0x0001D0, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_BreakVector_Y1) == 0x0001D4, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_BreakVector_Z1) == 0x0001D8, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x0001DC, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0001E0, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_FMax_ReturnValue1) == 0x0001E4, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_FMax_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_NotEqual_ObjectObject_ReturnValue1) == 0x0001E8, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_NotEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_SelectFloat_ReturnValue1) == 0x0001EC, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_SelectFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Add_FloatFloat_ReturnValue1) == 0x0001F0, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Add_FloatFloat_ReturnValue2) == 0x0001F4, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, Temp_int_Loop_Counter_Variable) == 0x0001F8, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Add_IntInt_ReturnValue) == 0x0001FC, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, K2Node_MakeStruct_SSplineMeshStep) == 0x000200, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::K2Node_MakeStruct_SSplineMeshStep' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000210, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Subtract_FloatFloat_ReturnValue3) == 0x000214, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Subtract_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Array_Get_Item2) == 0x000218, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x000228, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Array_Length_ReturnValue3) == 0x00022C, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, K2Node_MathExpression_ReturnValue) == 0x000230, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Less_IntInt_ReturnValue) == 0x000234, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, K2Node_MathExpression_ReturnValue1) == 0x000238, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::K2Node_MathExpression_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, K2Node_MakeStruct_SSplineMeshStep1) == 0x000240, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::K2Node_MakeStruct_SSplineMeshStep1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_GetBounds_ReturnValue2) == 0x000250, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_GetBounds_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Array_Add_ReturnValue) == 0x00026C, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_BreakVector_X2) == 0x000270, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_BreakVector_Y2) == 0x000274, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_BreakVector_Z2) == 0x000278, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x00027C, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Divide_FloatFloat_ReturnValue3) == 0x000280, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Divide_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_FMax_ReturnValue2) == 0x000284, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_FMax_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_SelectFloat_ReturnValue2) == 0x000288, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_SelectFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Add_FloatFloat_ReturnValue3) == 0x00028C, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Add_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Greater_FloatFloat_ReturnValue3) == 0x000290, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Greater_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_Subtract_FloatFloat_ReturnValue6) == 0x000294, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_Subtract_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000298, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildMeshSequence, CallFunc_BooleanOR_ReturnValue) == 0x000299, "Member 'BP_NVSplineMesh_C_BuildMeshSequence::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_NVSplineMesh.BP_NVSplineMesh_C.GetLongestMeshes
// 0x0108 (0x0108 - 0x0000)
struct BP_NVSplineMesh_C_GetLongestMeshes final
{
public:
	TArray<class UStaticMesh*>                    Meshes;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                         Tolerance;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMesh*>                    Matching_Meshes;                                   // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor)
	float                                         Longest;                                           // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMesh*>                    MeshList;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_Array_Get_Item1;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0080(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue1;                   // 0x009C(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue1;                        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue1;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NVSplineMesh_C_GetLongestMeshes) == 0x000008, "Wrong alignment on BP_NVSplineMesh_C_GetLongestMeshes");
static_assert(sizeof(BP_NVSplineMesh_C_GetLongestMeshes) == 0x000108, "Wrong size on BP_NVSplineMesh_C_GetLongestMeshes");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, Meshes) == 0x000000, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::Meshes' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, Tolerance) == 0x000010, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::Tolerance' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, Matching_Meshes) == 0x000018, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::Matching_Meshes' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, Longest) == 0x000028, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::Longest' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, MeshList) == 0x000030, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::MeshList' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_Array_Length_ReturnValue1) == 0x000048, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x000050, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, Temp_int_Loop_Counter_Variable1) == 0x000058, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_Less_IntInt_ReturnValue1) == 0x00005C, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_Add_IntInt_ReturnValue1) == 0x000060, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, Temp_int_Array_Index_Variable) == 0x000064, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, Temp_int_Array_Index_Variable1) == 0x000068, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_Array_Get_Item1) == 0x000078, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_GetBounds_ReturnValue) == 0x000080, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_GetBounds_ReturnValue1) == 0x00009C, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_GetBounds_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_BreakVector_X) == 0x0000B8, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_BreakVector_Y) == 0x0000BC, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_BreakVector_Z) == 0x0000C0, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_BreakVector_X1) == 0x0000C4, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_BreakVector_Y1) == 0x0000C8, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_BreakVector_Z1) == 0x0000CC, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000D0, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x0000D4, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_FMax_ReturnValue) == 0x0000D8, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_FMax_ReturnValue1) == 0x0000DC, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_FMax_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000E0, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0000E4, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_SelectFloat_ReturnValue) == 0x0000E8, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_SelectFloat_ReturnValue1) == 0x0000EC, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_SelectFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000F0, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_Add_FloatFloat_ReturnValue1) == 0x0000F4, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0000F8, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_Array_Add_ReturnValue) == 0x0000FC, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_GetLongestMeshes, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x000100, "Member 'BP_NVSplineMesh_C_GetLongestMeshes::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");

// Function BP_NVSplineMesh.BP_NVSplineMesh_C.ChooseNextMeshInSequence
// 0x0140 (0x0140 - 0x0000)
struct BP_NVSplineMesh_C_ChooseNextMeshInSequence final
{
public:
	struct FSSplineMeshDetails                    SplineMeshDetails_0;                               // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          First;                                             // 0x00B0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Chosen_Mesh;                                       // 0x00B8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            ChosenMesh;                                        // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMesh*>                    CallFunc_GetLongestMeshes_Matching_Meshes;         // 0x00D0(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E3[0x1];                                       // 0x00E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESplineMeshSequenceDistanceModifierType       Temp_byte_Variable;                                // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMesh*>                    K2Node_Select_Default;                             // 0x00F0(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class UStaticMesh*>                    K2Node_Select1_Default;                            // 0x0100(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue; // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_Array_Get_Item1;                          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVSplineMesh_C_ChooseNextMeshInSequence) == 0x000010, "Wrong alignment on BP_NVSplineMesh_C_ChooseNextMeshInSequence");
static_assert(sizeof(BP_NVSplineMesh_C_ChooseNextMeshInSequence) == 0x000140, "Wrong size on BP_NVSplineMesh_C_ChooseNextMeshInSequence");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, SplineMeshDetails_0) == 0x000000, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::SplineMeshDetails_0' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, First) == 0x0000B0, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::First' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, Chosen_Mesh) == 0x0000B8, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::Chosen_Mesh' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, ChosenMesh) == 0x0000C0, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::ChosenMesh' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, CallFunc_GetLongestMeshes_Matching_Meshes) == 0x0000D0, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::CallFunc_GetLongestMeshes_Matching_Meshes' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, K2Node_SwitchEnum_CmpSuccess) == 0x0000E1, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, CallFunc_BooleanAND_ReturnValue) == 0x0000E2, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, Temp_int_Variable) == 0x0000E4, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, CallFunc_Add_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, Temp_bool_Variable) == 0x0000EC, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, Temp_byte_Variable) == 0x0000ED, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, K2Node_Select_Default) == 0x0000F0, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, K2Node_Select1_Default) == 0x000100, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, CallFunc_Array_Length_ReturnValue1) == 0x000110, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, CallFunc_Array_Length_ReturnValue2) == 0x000114, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, CallFunc_Percent_IntInt_ReturnValue) == 0x000118, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, CallFunc_Subtract_IntInt_ReturnValue) == 0x00011C, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, CallFunc_Array_Get_Item) == 0x000120, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, CallFunc_RandomIntegerInRangeFromStream_ReturnValue) == 0x000128, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::CallFunc_RandomIntegerInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ChooseNextMeshInSequence, CallFunc_Array_Get_Item1) == 0x000130, "Member 'BP_NVSplineMesh_C_ChooseNextMeshInSequence::CallFunc_Array_Get_Item1' has a wrong offset!");

// Function BP_NVSplineMesh.BP_NVSplineMesh_C.FindBestMeshForLength
// 0x0220 (0x0220 - 0x0000)
struct BP_NVSplineMesh_C_FindBestMeshForLength final
{
public:
	struct FSSplineMeshDetails                    Mesh_Details;                                      // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	float                                         Desired_Length;                                    // 0x00B0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            InitialChoice;                                     // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            ChosenMesh;                                        // 0x00C0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            BestMesh;                                          // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BestLengthDifference;                              // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            MeshToTry;                                         // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EB[0x1];                                       // 0x00EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Temp_int_Variable3;                                // 0x0128(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Get_Item1;                          // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item2;                          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item3;                          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_Array_Get_Item4;                          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue; // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x016C(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshStretchMode                        Temp_byte_Variable;                                // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue1;                   // 0x01AC(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue1;                        // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable4;                                // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue1;                 // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue1;                         // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20A[0x2];                                      // 0x020A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0216(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NVSplineMesh_C_FindBestMeshForLength) == 0x000010, "Wrong alignment on BP_NVSplineMesh_C_FindBestMeshForLength");
static_assert(sizeof(BP_NVSplineMesh_C_FindBestMeshForLength) == 0x000220, "Wrong size on BP_NVSplineMesh_C_FindBestMeshForLength");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, Mesh_Details) == 0x000000, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::Mesh_Details' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, Desired_Length) == 0x0000B0, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::Desired_Length' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, InitialChoice) == 0x0000B8, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::InitialChoice' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, ChosenMesh) == 0x0000C0, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::ChosenMesh' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, BestMesh) == 0x0000C8, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::BestMesh' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, BestLengthDifference) == 0x0000D0, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::BestLengthDifference' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, MeshToTry) == 0x0000D8, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::MeshToTry' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, Temp_int_Variable) == 0x0000E0, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Add_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000E8, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, K2Node_SwitchEnum_CmpSuccess) == 0x0000E9, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, K2Node_SwitchEnum1_CmpSuccess) == 0x0000EA, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Array_Length_ReturnValue) == 0x0000EC, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Array_Length_ReturnValue1) == 0x0000F0, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000F8, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, Temp_int_Array_Index_Variable) == 0x0000FC, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x000100, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, Temp_int_Loop_Counter_Variable) == 0x000104, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Add_IntInt_ReturnValue1) == 0x00010C, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, Temp_int_Array_Index_Variable1) == 0x000110, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, Temp_int_Variable1) == 0x000114, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Array_Get_Item) == 0x000118, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, Temp_int_Variable2) == 0x000120, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, Temp_int_Loop_Counter_Variable1) == 0x000124, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, Temp_int_Variable3) == 0x000128, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Array_Get_Item1) == 0x000138, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Array_Get_Item2) == 0x00013C, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Array_Get_Item3) == 0x000140, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Array_Get_Item4) == 0x000148, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Array_Length_ReturnValue2) == 0x000150, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Less_IntInt_ReturnValue1) == 0x000154, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Array_Length_ReturnValue3) == 0x000158, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Add_IntInt_ReturnValue2) == 0x00015C, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Subtract_IntInt_ReturnValue1) == 0x000160, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000164, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_RandomIntegerInRangeFromStream_ReturnValue) == 0x000168, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_RandomIntegerInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_GetBounds_ReturnValue) == 0x00016C, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000188, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_BreakVector_X) == 0x00018C, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_BreakVector_Y) == 0x000190, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_BreakVector_Z) == 0x000194, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, Temp_byte_Variable) == 0x000198, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00019C, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_FMax_ReturnValue) == 0x0001A0, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001A4, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_SelectFloat_ReturnValue) == 0x0001A8, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_GetBounds_ReturnValue1) == 0x0001AC, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_GetBounds_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001C8, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001CC, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_BreakVector_X1) == 0x0001D0, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_BreakVector_Y1) == 0x0001D4, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_BreakVector_Z1) == 0x0001D8, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Abs_ReturnValue) == 0x0001DC, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x0001E0, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_FMax_ReturnValue1) == 0x0001E4, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_FMax_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0001E8, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, Temp_int_Variable4) == 0x0001EC, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::Temp_int_Variable4' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_SelectFloat_ReturnValue1) == 0x0001F0, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_SelectFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Array_Add_ReturnValue) == 0x0001F4, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Add_FloatFloat_ReturnValue1) == 0x0001F8, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x0001FC, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Less_FloatFloat_ReturnValue) == 0x000200, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Abs_ReturnValue1) == 0x000204, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Abs_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_BooleanOR_ReturnValue) == 0x000208, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x000209, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Add_IntInt_ReturnValue3) == 0x00020C, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x000210, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_Less_FloatFloat_ReturnValue1) == 0x000214, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, CallFunc_BooleanAND_ReturnValue) == 0x000215, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_FindBestMeshForLength, K2Node_Select_Default) == 0x000216, "Member 'BP_NVSplineMesh_C_FindBestMeshForLength::K2Node_Select_Default' has a wrong offset!");

// Function BP_NVSplineMesh.BP_NVSplineMesh_C.PlaceMeshSequence
// 0x01A0 (0x01A0 - 0x0000)
struct BP_NVSplineMesh_C_PlaceMeshSequence final
{
public:
	TArray<struct FSSplineMeshStep>               Mesh_Sequence;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FSSplineMeshDetails                    SplineMeshDetails_0;                               // 0x0010(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<struct FSSplineMeshDetails>            Dependants;                                        // 0x00C0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int32                                         MeshSequenceNumber;                                // 0x00D0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USplineMeshComponent*>           MeshList;                                          // 0x00D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          StartOfSequence;                                   // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSplineMeshInstanceList               K2Node_MakeStruct_SSplineMeshInstanceList;         // 0x00F0(0x0010)(ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USplineMeshComponent*>           K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSplineMeshInstanceList               CallFunc_Map_Find_Value;                           // 0x0148(0x0010)(ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSplineMeshStep                       CallFunc_Array_Get_Item1;                          // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_Array_Get_Item2;                          // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_186[0x2];                                      // 0x0186(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_CreateSplineMeshBetweenTwoDistancesAlongSpline_CreatedSplineMesh; // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue1;          // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NVSplineMesh_C_PlaceMeshSequence) == 0x000010, "Wrong alignment on BP_NVSplineMesh_C_PlaceMeshSequence");
static_assert(sizeof(BP_NVSplineMesh_C_PlaceMeshSequence) == 0x0001A0, "Wrong size on BP_NVSplineMesh_C_PlaceMeshSequence");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, Mesh_Sequence) == 0x000000, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::Mesh_Sequence' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, SplineMeshDetails_0) == 0x000010, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::SplineMeshDetails_0' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, Dependants) == 0x0000C0, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::Dependants' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, MeshSequenceNumber) == 0x0000D0, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::MeshSequenceNumber' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, MeshList) == 0x0000D8, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::MeshList' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, StartOfSequence) == 0x0000E8, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::StartOfSequence' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, K2Node_MakeStruct_SSplineMeshInstanceList) == 0x0000F0, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::K2Node_MakeStruct_SSplineMeshInstanceList' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, Temp_int_Variable) == 0x000104, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_Array_Length_ReturnValue1) == 0x000108, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_Add_IntInt_ReturnValue) == 0x00010C, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_Array_Length_ReturnValue2) == 0x000110, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_Subtract_IntInt_ReturnValue) == 0x000114, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, K2Node_MakeArray_Array) == 0x000118, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_Subtract_IntInt_ReturnValue1) == 0x000128, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00012C, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_Subtract_IntInt_ReturnValue2) == 0x000130, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_Array_Get_Item) == 0x000138, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, Temp_int_Loop_Counter_Variable) == 0x000140, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_Map_Find_Value) == 0x000148, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_Map_Find_ReturnValue) == 0x000158, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_Less_IntInt_ReturnValue) == 0x000159, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_Add_IntInt_ReturnValue1) == 0x00015C, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, Temp_int_Array_Index_Variable) == 0x000160, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_Array_Get_Item1) == 0x000168, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_Array_Get_Item2) == 0x000178, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_Add_IntInt_ReturnValue2) == 0x000180, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000184, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000185, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_CreateSplineMeshBetweenTwoDistancesAlongSpline_CreatedSplineMesh) == 0x000188, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_CreateSplineMeshBetweenTwoDistancesAlongSpline_CreatedSplineMesh' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_Not_PreBool_ReturnValue) == 0x000190, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_Array_Add_ReturnValue) == 0x000194, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_Array_IsValidIndex_ReturnValue1) == 0x000198, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_Array_IsValidIndex_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceMeshSequence, CallFunc_Not_PreBool_ReturnValue1) == 0x000199, "Member 'BP_NVSplineMesh_C_PlaceMeshSequence::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");

// Function BP_NVSplineMesh.BP_NVSplineMesh_C.CreateStaticMeshesAtDistancesAlongSpline
// 0x0150 (0x0150 - 0x0000)
struct BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline final
{
public:
	struct FSSplineMeshDetails                    Spline_Mesh_Details;                               // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         TotalDistance;                                     // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x1];                                       // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_ChooseNextMeshInSequence_Chosen_Mesh;     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x00D0(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue1;             // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshStretchMode                        Temp_byte_Variable;                                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshStretchMode                        Temp_byte_Variable1;                               // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNOR_ReturnValue;                   // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline) == 0x000010, "Wrong alignment on BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline");
static_assert(sizeof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline) == 0x000150, "Wrong size on BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, Spline_Mesh_Details) == 0x000000, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::Spline_Mesh_Details' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, TotalDistance) == 0x0000B0, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::TotalDistance' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, Temp_int_Variable) == 0x0000B4, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000B8, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B9, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_BooleanAND_ReturnValue) == 0x0000BA, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_ChooseNextMeshInSequence_Chosen_Mesh) == 0x0000C0, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_ChooseNextMeshInSequence_Chosen_Mesh' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_GetBounds_ReturnValue) == 0x0000D0, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_GetSplineLength_ReturnValue) == 0x0000EC, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_BreakVector_X) == 0x0000F0, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_BreakVector_Y) == 0x0000F4, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_BreakVector_Z) == 0x0000F8, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_GetSplineLength_ReturnValue1) == 0x0000FC, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_GetSplineLength_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000100, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000104, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_FMax_ReturnValue) == 0x000108, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_SelectFloat_ReturnValue) == 0x00010C, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, Temp_byte_Variable) == 0x000110, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_Add_FloatFloat_ReturnValue) == 0x000114, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000118, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, Temp_byte_Variable1) == 0x00011C, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_FTrunc_ReturnValue) == 0x000120, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_Round_ReturnValue) == 0x000124, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000128, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, K2Node_Select_Default) == 0x00012C, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x000130, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000134, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, K2Node_Select1_Default) == 0x000138, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00013C, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x000140, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_BooleanAND_ReturnValue1) == 0x000141, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_BooleanNOR_ReturnValue) == 0x000142, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_BooleanNOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_BooleanOR_ReturnValue) == 0x000143, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_BooleanAND_ReturnValue2) == 0x000144, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline, CallFunc_BooleanOR_ReturnValue1) == 0x000145, "Member 'BP_NVSplineMesh_C_CreateStaticMeshesAtDistancesAlongSpline::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");

// Function BP_NVSplineMesh.BP_NVSplineMesh_C.PlaceDependants
// 0x00F0 (0x00F0 - 0x0000)
struct BP_NVSplineMesh_C_PlaceDependants final
{
public:
	TArray<struct FSSplineMeshDetails>            Dependants;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                         Distance_0;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStart;                                           // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsMiddle;                                          // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsEnd;                                             // 0x0016(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSplineMeshDetails                    CallFunc_Array_Get_Item;                           // 0x0030(0x00B0)(HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_ChooseNextMeshInSequence_Chosen_Mesh;     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NVSplineMesh_C_PlaceDependants) == 0x000010, "Wrong alignment on BP_NVSplineMesh_C_PlaceDependants");
static_assert(sizeof(BP_NVSplineMesh_C_PlaceDependants) == 0x0000F0, "Wrong size on BP_NVSplineMesh_C_PlaceDependants");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceDependants, Dependants) == 0x000000, "Member 'BP_NVSplineMesh_C_PlaceDependants::Dependants' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceDependants, Distance_0) == 0x000010, "Member 'BP_NVSplineMesh_C_PlaceDependants::Distance_0' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceDependants, IsStart) == 0x000014, "Member 'BP_NVSplineMesh_C_PlaceDependants::IsStart' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceDependants, IsMiddle) == 0x000015, "Member 'BP_NVSplineMesh_C_PlaceDependants::IsMiddle' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceDependants, IsEnd) == 0x000016, "Member 'BP_NVSplineMesh_C_PlaceDependants::IsEnd' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceDependants, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_NVSplineMesh_C_PlaceDependants::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceDependants, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_NVSplineMesh_C_PlaceDependants::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceDependants, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_NVSplineMesh_C_PlaceDependants::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceDependants, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_NVSplineMesh_C_PlaceDependants::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceDependants, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_NVSplineMesh_C_PlaceDependants::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceDependants, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_NVSplineMesh_C_PlaceDependants::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceDependants, CallFunc_ChooseNextMeshInSequence_Chosen_Mesh) == 0x0000E0, "Member 'BP_NVSplineMesh_C_PlaceDependants::CallFunc_ChooseNextMeshInSequence_Chosen_Mesh' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceDependants, CallFunc_BooleanAND_ReturnValue) == 0x0000E8, "Member 'BP_NVSplineMesh_C_PlaceDependants::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceDependants, CallFunc_BooleanAND_ReturnValue1) == 0x0000E9, "Member 'BP_NVSplineMesh_C_PlaceDependants::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceDependants, CallFunc_BooleanAND_ReturnValue2) == 0x0000EA, "Member 'BP_NVSplineMesh_C_PlaceDependants::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceDependants, K2Node_SwitchEnum_CmpSuccess) == 0x0000EB, "Member 'BP_NVSplineMesh_C_PlaceDependants::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceDependants, CallFunc_BooleanOR_ReturnValue) == 0x0000EC, "Member 'BP_NVSplineMesh_C_PlaceDependants::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceDependants, CallFunc_BooleanOR_ReturnValue1) == 0x0000ED, "Member 'BP_NVSplineMesh_C_PlaceDependants::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");

// Function BP_NVSplineMesh.BP_NVSplineMesh_C.CreateStaticMeshAtDistanceAlongSplineFunc
// 0x0310 (0x0310 - 0x0000)
struct BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc final
{
public:
	class UStaticMesh*                            Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance_0;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSplineMeshDetails                    SplineMeshDetails_0;                               // 0x0010(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SpawnedStaticMesh;                                 // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DesiredTransform;                                  // 0x00D0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class UInstancedStaticMeshComponent*          Instance;                                          // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_108[0x8];                                      // 0x0108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0110(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHierarchicalInstancedStaticMeshComponent* CallFunc_AddComponent_ReturnValue;              // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue1;                // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue2;                // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue3;                // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_168[0x8];                                      // 0x0168(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalculatePositionForStaticMeshAtDistance_ReturnValue; // 0x0170(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             Temp_struct_Variable1;                             // 0x01A0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UHierarchicalInstancedStaticMeshComponent* CallFunc_AddComponent_ReturnValue4;             // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable2;                             // 0x01E0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHierarchicalInstancedStaticMeshComponent* CallFunc_AddComponent_ReturnValue5;             // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0xF];                                      // 0x0221(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable3;                             // 0x0230(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum3_CmpSuccess;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          CallFunc_AddComponent_ReturnValue6;                // 0x0268(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable4;                             // 0x0270(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          CallFunc_AddComponent_ReturnValue7;                // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue1;               // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum4_CmpSuccess;                     // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B2[0xE];                                      // 0x02B2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable5;                             // 0x02C0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UInstancedStaticMeshComponent*          CallFunc_AddComponent_ReturnValue8;                // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          CallFunc_Map_Find_Value;                           // 0x0300(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc) == 0x000010, "Wrong alignment on BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc");
static_assert(sizeof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc) == 0x000310, "Wrong size on BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, Mesh) == 0x000000, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::Mesh' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, Distance_0) == 0x000008, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::Distance_0' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, SplineMeshDetails_0) == 0x000010, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::SplineMeshDetails_0' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, SpawnedStaticMesh) == 0x0000C0, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::SpawnedStaticMesh' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, DesiredTransform) == 0x0000D0, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::DesiredTransform' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, Instance) == 0x000100, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::Instance' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, Temp_struct_Variable) == 0x000110, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, K2Node_SwitchEnum_CmpSuccess) == 0x000140, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, CallFunc_AddComponent_ReturnValue) == 0x000148, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, CallFunc_AddComponent_ReturnValue1) == 0x000150, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::CallFunc_AddComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, CallFunc_AddComponent_ReturnValue2) == 0x000158, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::CallFunc_AddComponent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, CallFunc_AddComponent_ReturnValue3) == 0x000160, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::CallFunc_AddComponent_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, CallFunc_CalculatePositionForStaticMeshAtDistance_ReturnValue) == 0x000170, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::CallFunc_CalculatePositionForStaticMeshAtDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, Temp_struct_Variable1) == 0x0001A0, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, CallFunc_AddComponent_ReturnValue4) == 0x0001D0, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::CallFunc_AddComponent_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, K2Node_SwitchEnum1_CmpSuccess) == 0x0001D8, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, Temp_struct_Variable2) == 0x0001E0, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, CallFunc_SetStaticMesh_ReturnValue) == 0x000210, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, CallFunc_AddComponent_ReturnValue5) == 0x000218, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::CallFunc_AddComponent_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, K2Node_SwitchEnum2_CmpSuccess) == 0x000220, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, Temp_struct_Variable3) == 0x000230, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, K2Node_SwitchEnum3_CmpSuccess) == 0x000260, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::K2Node_SwitchEnum3_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, CallFunc_AddComponent_ReturnValue6) == 0x000268, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::CallFunc_AddComponent_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, Temp_struct_Variable4) == 0x000270, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, CallFunc_Array_Add_ReturnValue) == 0x0002A0, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, CallFunc_AddComponent_ReturnValue7) == 0x0002A8, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::CallFunc_AddComponent_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, CallFunc_SetStaticMesh_ReturnValue1) == 0x0002B0, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::CallFunc_SetStaticMesh_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, K2Node_SwitchEnum4_CmpSuccess) == 0x0002B1, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::K2Node_SwitchEnum4_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, Temp_struct_Variable5) == 0x0002C0, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::Temp_struct_Variable5' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, CallFunc_AddComponent_ReturnValue8) == 0x0002F0, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::CallFunc_AddComponent_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, CallFunc_AddInstance_ReturnValue) == 0x0002F8, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, CallFunc_Map_Find_Value) == 0x000300, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc, CallFunc_Map_Find_ReturnValue) == 0x000308, "Member 'BP_NVSplineMesh_C_CreateStaticMeshAtDistanceAlongSplineFunc::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_NVSplineMesh.BP_NVSplineMesh_C.CreateSplineMeshBetweenTwoDistancesAlongSpline
// 0x00E0 (0x00E0 - 0x0000)
struct BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline final
{
public:
	class UStaticMesh*                            Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Start_Distance;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         End_Distance;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gap;                                               // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CreatedSplineMesh;                                 // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   Instance;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             Temp_struct_Variable1;                             // 0x0060(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue1;                // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable2;                             // 0x00A0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue2;                // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline) == 0x000010, "Wrong alignment on BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline");
static_assert(sizeof(BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline) == 0x0000E0, "Wrong size on BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline");
static_assert(offsetof(BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline, Mesh) == 0x000000, "Member 'BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline::Mesh' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline, Start_Distance) == 0x000008, "Member 'BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline::Start_Distance' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline, End_Distance) == 0x00000C, "Member 'BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline::End_Distance' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline, Gap) == 0x000010, "Member 'BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline::Gap' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline, CreatedSplineMesh) == 0x000018, "Member 'BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline::CreatedSplineMesh' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline, Instance) == 0x000020, "Member 'BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline::Instance' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline, Temp_struct_Variable) == 0x000030, "Member 'BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline, Temp_struct_Variable1) == 0x000060, "Member 'BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline, CallFunc_AddComponent_ReturnValue) == 0x000090, "Member 'BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline, CallFunc_AddComponent_ReturnValue1) == 0x000098, "Member 'BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline::CallFunc_AddComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline, Temp_struct_Variable2) == 0x0000A0, "Member 'BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline, CallFunc_AddComponent_ReturnValue2) == 0x0000D0, "Member 'BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline::CallFunc_AddComponent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline, K2Node_SwitchEnum_CmpSuccess) == 0x0000D8, "Member 'BP_NVSplineMesh_C_CreateSplineMeshBetweenTwoDistancesAlongSpline::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_NVSplineMesh.BP_NVSplineMesh_C.BuildSplineMeshSequence
// 0x02B0 (0x02B0 - 0x0000)
struct BP_NVSplineMesh_C_BuildSplineMeshSequence final
{
public:
	int32                                         SplineMeshSequenceNumber;                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSSplineMeshStep>               Sequence;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FSSplineMeshDetails>            Dependants;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue1;     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue2;     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable1;                                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue1; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue6;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue2; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue2;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue7;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSSplineMeshDetails                    CallFunc_Array_Get_Item;                           // 0x00A0(0x00B0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_156[0x2];                                      // 0x0156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue3; // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue4; // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSplineMeshDetails                    CallFunc_Array_Get_Item1;                          // 0x0170(0x00B0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSSplineMeshStep>               CallFunc_BuildMeshSequence_Mesh_segment_sequence;  // 0x0228(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSplineMeshStep                       CallFunc_Array_Get_Item2;                          // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_ChooseNextMeshInSequence_Chosen_Mesh;     // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_FindBestMeshForLength_ChosenMesh;         // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSSplineMeshStep                       K2Node_MakeStruct_SSplineMeshStep;                 // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_ChooseNextMeshInSequence_Chosen_Mesh1;    // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSSplineMeshStep>               CallFunc_BuildMeshSequence_Mesh_segment_sequence1; // 0x0290(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NVSplineMesh_C_BuildSplineMeshSequence) == 0x000010, "Wrong alignment on BP_NVSplineMesh_C_BuildSplineMeshSequence");
static_assert(sizeof(BP_NVSplineMesh_C_BuildSplineMeshSequence) == 0x0002B0, "Wrong size on BP_NVSplineMesh_C_BuildSplineMeshSequence");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, SplineMeshSequenceNumber) == 0x000000, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::SplineMeshSequenceNumber' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, Sequence) == 0x000008, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::Sequence' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, Dependants) == 0x000018, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::Dependants' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, Temp_int_Loop_Counter_Variable1) == 0x000034, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Add_IntInt_ReturnValue1) == 0x000038, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, Temp_int_Loop_Counter_Variable2) == 0x00003C, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, Temp_int_Variable) == 0x000040, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Add_IntInt_ReturnValue2) == 0x000044, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Add_IntInt_ReturnValue3) == 0x000048, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, Temp_int_Array_Index_Variable1) == 0x00004C, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000050, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Subtract_IntInt_ReturnValue) == 0x000054, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_GetNumberOfSplinePoints_ReturnValue1) == 0x000058, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_GetNumberOfSplinePoints_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Subtract_IntInt_ReturnValue1) == 0x00005C, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_GetNumberOfSplinePoints_ReturnValue2) == 0x000060, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_GetNumberOfSplinePoints_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Subtract_IntInt_ReturnValue2) == 0x000064, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x000068, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00006C, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, Temp_int_Variable1) == 0x000070, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Add_IntInt_ReturnValue4) == 0x000074, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x000078, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Add_IntInt_ReturnValue5) == 0x00007C, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, Temp_int_Variable2) == 0x000080, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue1) == 0x000084, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Add_IntInt_ReturnValue6) == 0x000088, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Add_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue2) == 0x00008C, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_LessEqual_IntInt_ReturnValue2) == 0x000090, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_LessEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Add_IntInt_ReturnValue7) == 0x000098, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Add_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, Temp_int_Array_Index_Variable2) == 0x00009C, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Array_Add_ReturnValue) == 0x000150, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000154, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, K2Node_SwitchEnum_CmpSuccess) == 0x000155, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Array_Length_ReturnValue) == 0x000158, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Less_IntInt_ReturnValue) == 0x00015C, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue3) == 0x000160, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue4) == 0x000164, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_GetSplineLength_ReturnValue) == 0x000168, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Array_Get_Item1) == 0x000170, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Array_Length_ReturnValue1) == 0x000220, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_BuildMeshSequence_Mesh_segment_sequence) == 0x000228, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_BuildMeshSequence_Mesh_segment_sequence' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Less_IntInt_ReturnValue1) == 0x000238, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Array_Get_Item2) == 0x000240, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Array_Add_ReturnValue1) == 0x000250, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Array_Length_ReturnValue2) == 0x000254, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Less_IntInt_ReturnValue2) == 0x000258, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_ChooseNextMeshInSequence_Chosen_Mesh) == 0x000260, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_ChooseNextMeshInSequence_Chosen_Mesh' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_FindBestMeshForLength_ChosenMesh) == 0x000268, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_FindBestMeshForLength_ChosenMesh' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, K2Node_MakeStruct_SSplineMeshStep) == 0x000270, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::K2Node_MakeStruct_SSplineMeshStep' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_ChooseNextMeshInSequence_Chosen_Mesh1) == 0x000280, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_ChooseNextMeshInSequence_Chosen_Mesh1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Array_Add_ReturnValue2) == 0x000288, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_BuildMeshSequence_Mesh_segment_sequence1) == 0x000290, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_BuildMeshSequence_Mesh_segment_sequence1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, K2Node_SwitchEnum1_CmpSuccess) == 0x0002A0, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Array_Length_ReturnValue3) == 0x0002A4, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_BuildSplineMeshSequence, CallFunc_Greater_IntInt_ReturnValue) == 0x0002A8, "Member 'BP_NVSplineMesh_C_BuildSplineMeshSequence::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_NVSplineMesh.BP_NVSplineMesh_C.DropSplinePointsToGround
// 0x0160 (0x0160 - 0x0000)
struct BP_NVSplineMesh_C_DropSplinePointsToGround final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0018(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0058(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E3[0x1];                                       // 0x00E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NVSplineMesh_C_DropSplinePointsToGround) == 0x000008, "Wrong alignment on BP_NVSplineMesh_C_DropSplinePointsToGround");
static_assert(sizeof(BP_NVSplineMesh_C_DropSplinePointsToGround) == 0x000160, "Wrong size on BP_NVSplineMesh_C_DropSplinePointsToGround");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, Temp_int_Variable) == 0x000000, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, Temp_object_Variable) == 0x000018, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000028, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000030, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_Add_VectorVector_ReturnValue) == 0x000040, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00004C, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000058, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0000E0, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_BreakHitResult_bBlockingHit) == 0x0000E1, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000E2, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_BreakHitResult_Time) == 0x0000E4, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_BreakHitResult_Distance) == 0x0000E8, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_BreakHitResult_Location) == 0x0000EC, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_BreakHitResult_ImpactPoint) == 0x0000F8, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_BreakHitResult_Normal) == 0x000104, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_BreakHitResult_ImpactNormal) == 0x000110, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_BreakHitResult_PhysMat) == 0x000120, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_BreakHitResult_HitActor) == 0x000128, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_BreakHitResult_HitComponent) == 0x000130, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_BreakHitResult_HitBoneName) == 0x000138, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_BreakHitResult_HitItem) == 0x000140, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_BreakHitResult_FaceIndex) == 0x000144, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_BreakHitResult_TraceStart) == 0x000148, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_DropSplinePointsToGround, CallFunc_BreakHitResult_TraceEnd) == 0x000154, "Member 'BP_NVSplineMesh_C_DropSplinePointsToGround::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BP_NVSplineMesh.BP_NVSplineMesh_C.SetSplinePointCurveTypes
// 0x0018 (0x0018 - 0x0000)
struct BP_NVSplineMesh_C_SetSplinePointCurveTypes final
{
public:
	ESplinePointType                              Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NVSplineMesh_C_SetSplinePointCurveTypes) == 0x000004, "Wrong alignment on BP_NVSplineMesh_C_SetSplinePointCurveTypes");
static_assert(sizeof(BP_NVSplineMesh_C_SetSplinePointCurveTypes) == 0x000018, "Wrong size on BP_NVSplineMesh_C_SetSplinePointCurveTypes");
static_assert(offsetof(BP_NVSplineMesh_C_SetSplinePointCurveTypes, Type) == 0x000000, "Member 'BP_NVSplineMesh_C_SetSplinePointCurveTypes::Type' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_SetSplinePointCurveTypes, Temp_int_Variable) == 0x000004, "Member 'BP_NVSplineMesh_C_SetSplinePointCurveTypes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_SetSplinePointCurveTypes, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000008, "Member 'BP_NVSplineMesh_C_SetSplinePointCurveTypes::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_SetSplinePointCurveTypes, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_NVSplineMesh_C_SetSplinePointCurveTypes::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_SetSplinePointCurveTypes, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_NVSplineMesh_C_SetSplinePointCurveTypes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_SetSplinePointCurveTypes, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_NVSplineMesh_C_SetSplinePointCurveTypes::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_NVSplineMesh.BP_NVSplineMesh_C.ClearStaticMeshInstances
// 0x0058 (0x0058 - 0x0000)
struct BP_NVSplineMesh_C_ClearStaticMeshInstances final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UInstancedStaticMeshComponent*>  CallFunc_Map_Values_Values;                        // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          CallFunc_Array_Get_Item1;                          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NVSplineMesh_C_ClearStaticMeshInstances) == 0x000008, "Wrong alignment on BP_NVSplineMesh_C_ClearStaticMeshInstances");
static_assert(sizeof(BP_NVSplineMesh_C_ClearStaticMeshInstances) == 0x000058, "Wrong size on BP_NVSplineMesh_C_ClearStaticMeshInstances");
static_assert(offsetof(BP_NVSplineMesh_C_ClearStaticMeshInstances, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_NVSplineMesh_C_ClearStaticMeshInstances::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ClearStaticMeshInstances, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_NVSplineMesh_C_ClearStaticMeshInstances::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ClearStaticMeshInstances, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_NVSplineMesh_C_ClearStaticMeshInstances::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ClearStaticMeshInstances, Temp_int_Array_Index_Variable1) == 0x00000C, "Member 'BP_NVSplineMesh_C_ClearStaticMeshInstances::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ClearStaticMeshInstances, Temp_int_Loop_Counter_Variable1) == 0x000010, "Member 'BP_NVSplineMesh_C_ClearStaticMeshInstances::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ClearStaticMeshInstances, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_NVSplineMesh_C_ClearStaticMeshInstances::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ClearStaticMeshInstances, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_NVSplineMesh_C_ClearStaticMeshInstances::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ClearStaticMeshInstances, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_NVSplineMesh_C_ClearStaticMeshInstances::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ClearStaticMeshInstances, CallFunc_Add_IntInt_ReturnValue1) == 0x000028, "Member 'BP_NVSplineMesh_C_ClearStaticMeshInstances::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ClearStaticMeshInstances, CallFunc_Map_Values_Values) == 0x000030, "Member 'BP_NVSplineMesh_C_ClearStaticMeshInstances::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ClearStaticMeshInstances, CallFunc_Array_Length_ReturnValue1) == 0x000040, "Member 'BP_NVSplineMesh_C_ClearStaticMeshInstances::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ClearStaticMeshInstances, CallFunc_Array_Get_Item1) == 0x000048, "Member 'BP_NVSplineMesh_C_ClearStaticMeshInstances::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_ClearStaticMeshInstances, CallFunc_Less_IntInt_ReturnValue1) == 0x000050, "Member 'BP_NVSplineMesh_C_ClearStaticMeshInstances::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");

// Function BP_NVSplineMesh.BP_NVSplineMesh_C.PlaceSplineMeshBetweenTwoDistances
// 0x00D0 (0x00D0 - 0x0000)
struct BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances final
{
public:
	class USplineMeshComponent*                   SplineMeshComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            NewMesh;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartDistance;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndDistance;                                       // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gap;                                               // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue; // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue1; // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue1; // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue1;                      // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEndTangent_ReturnValue;                // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetStartTangent_ReturnValue;              // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEndPosition_ReturnValue;               // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue1;       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue2;       // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetStartPosition_ReturnValue;             // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue3;       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances) == 0x000008, "Wrong alignment on BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances");
static_assert(sizeof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances) == 0x0000D0, "Wrong size on BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, SplineMeshComponent) == 0x000000, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::SplineMeshComponent' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, NewMesh) == 0x000008, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::NewMesh' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, StartDistance) == 0x000010, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::StartDistance' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, EndDistance) == 0x000014, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::EndDistance' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, Gap) == 0x000018, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::Gap' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_SetStaticMesh_ReturnValue) == 0x000020, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue) == 0x00002C, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000038, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_Normal_ReturnValue) == 0x00003C, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000048, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000054, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue1) == 0x000060, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue1) == 0x00006C, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_Normal_ReturnValue1) == 0x000078, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_Normal_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_GetEndTangent_ReturnValue) == 0x000084, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_GetEndTangent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000090, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x00009C, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_GetStartTangent_ReturnValue) == 0x0000A0, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_GetStartTangent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_GetEndPosition_ReturnValue) == 0x0000AC, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_GetEndPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_NotEqual_VectorVector_ReturnValue1) == 0x0000B8, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_NotEqual_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_NotEqual_VectorVector_ReturnValue2) == 0x0000B9, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_NotEqual_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_GetStartPosition_ReturnValue) == 0x0000BC, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_GetStartPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_NotEqual_VectorVector_ReturnValue3) == 0x0000C8, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_NotEqual_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000C9, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_BooleanOR_ReturnValue) == 0x0000CA, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_BooleanOR_ReturnValue1) == 0x0000CB, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances, CallFunc_BooleanOR_ReturnValue2) == 0x0000CC, "Member 'BP_NVSplineMesh_C_PlaceSplineMeshBetweenTwoDistances::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");

// Function BP_NVSplineMesh.BP_NVSplineMesh_C.CalculatePositionForStaticMeshAtDistance
// 0x01C0 (0x01C0 - 0x0000)
struct BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance final
{
public:
	float                                         Distance_0;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSplineMeshDetails                    SplineMeshDetails_0;                               // 0x0010(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FTransform                             ReturnValue;                                       // 0x00C0(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatFromStream_ReturnValue;        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0xC];                                       // 0x00F4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue; // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue1;           // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_TLerp_ReturnValue;                        // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance) == 0x000010, "Wrong alignment on BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance");
static_assert(sizeof(BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance) == 0x0001C0, "Wrong size on BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance");
static_assert(offsetof(BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance, Distance_0) == 0x000000, "Member 'BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance::Distance_0' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance, SplineMeshDetails_0) == 0x000010, "Member 'BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance::SplineMeshDetails_0' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance, ReturnValue) == 0x0000C0, "Member 'BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance, CallFunc_RandomFloatFromStream_ReturnValue) == 0x0000F0, "Member 'BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance::CallFunc_RandomFloatFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance, CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue) == 0x000100, "Member 'BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance::CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance, CallFunc_ComposeTransforms_ReturnValue) == 0x000130, "Member 'BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance, CallFunc_ComposeTransforms_ReturnValue1) == 0x000160, "Member 'BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance::CallFunc_ComposeTransforms_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance, CallFunc_TLerp_ReturnValue) == 0x000190, "Member 'BP_NVSplineMesh_C_CalculatePositionForStaticMeshAtDistance::CallFunc_TLerp_ReturnValue' has a wrong offset!");

}


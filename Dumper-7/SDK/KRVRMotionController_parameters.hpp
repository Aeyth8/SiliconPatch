#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KRVRMotionController

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function KRVRMotionController.KRVRMotionController_C.ExecuteUbergraph_KRVRMotionController
// 0x0070 (0x0070 - 0x0000)
struct KRVRMotionController_C_ExecuteUbergraph_KRVRMotionController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_NewParam1;                      // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             K2Node_CustomEvent_NewParam;                       // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(KRVRMotionController_C_ExecuteUbergraph_KRVRMotionController) == 0x000010, "Wrong alignment on KRVRMotionController_C_ExecuteUbergraph_KRVRMotionController");
static_assert(sizeof(KRVRMotionController_C_ExecuteUbergraph_KRVRMotionController) == 0x000070, "Wrong size on KRVRMotionController_C_ExecuteUbergraph_KRVRMotionController");
static_assert(offsetof(KRVRMotionController_C_ExecuteUbergraph_KRVRMotionController, EntryPoint) == 0x000000, "Member 'KRVRMotionController_C_ExecuteUbergraph_KRVRMotionController::EntryPoint' has a wrong offset!");
static_assert(offsetof(KRVRMotionController_C_ExecuteUbergraph_KRVRMotionController, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'KRVRMotionController_C_ExecuteUbergraph_KRVRMotionController::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(KRVRMotionController_C_ExecuteUbergraph_KRVRMotionController, K2Node_CustomEvent_NewParam1) == 0x000010, "Member 'KRVRMotionController_C_ExecuteUbergraph_KRVRMotionController::K2Node_CustomEvent_NewParam1' has a wrong offset!");
static_assert(offsetof(KRVRMotionController_C_ExecuteUbergraph_KRVRMotionController, K2Node_CustomEvent_NewParam) == 0x000040, "Member 'KRVRMotionController_C_ExecuteUbergraph_KRVRMotionController::K2Node_CustomEvent_NewParam' has a wrong offset!");

// Function KRVRMotionController.KRVRMotionController_C.ReplicateToClient
// 0x0030 (0x0030 - 0x0000)
struct KRVRMotionController_C_ReplicateToClient final
{
public:
	struct FTransform                             NewParam;                                          // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KRVRMotionController_C_ReplicateToClient) == 0x000010, "Wrong alignment on KRVRMotionController_C_ReplicateToClient");
static_assert(sizeof(KRVRMotionController_C_ReplicateToClient) == 0x000030, "Wrong size on KRVRMotionController_C_ReplicateToClient");
static_assert(offsetof(KRVRMotionController_C_ReplicateToClient, NewParam) == 0x000000, "Member 'KRVRMotionController_C_ReplicateToClient::NewParam' has a wrong offset!");

// Function KRVRMotionController.KRVRMotionController_C.ReplicateToServer
// 0x0030 (0x0030 - 0x0000)
struct KRVRMotionController_C_ReplicateToServer final
{
public:
	struct FTransform                             NewParam;                                          // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KRVRMotionController_C_ReplicateToServer) == 0x000010, "Wrong alignment on KRVRMotionController_C_ReplicateToServer");
static_assert(sizeof(KRVRMotionController_C_ReplicateToServer) == 0x000030, "Wrong size on KRVRMotionController_C_ReplicateToServer");
static_assert(offsetof(KRVRMotionController_C_ReplicateToServer, NewParam) == 0x000000, "Member 'KRVRMotionController_C_ReplicateToServer::NewParam' has a wrong offset!");

// Function KRVRMotionController.KRVRMotionController_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct KRVRMotionController_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KRVRMotionController_C_ReceiveTick) == 0x000004, "Wrong alignment on KRVRMotionController_C_ReceiveTick");
static_assert(sizeof(KRVRMotionController_C_ReceiveTick) == 0x000004, "Wrong size on KRVRMotionController_C_ReceiveTick");
static_assert(offsetof(KRVRMotionController_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'KRVRMotionController_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}


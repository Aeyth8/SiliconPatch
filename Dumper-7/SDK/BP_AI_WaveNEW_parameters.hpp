#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AI_WaveNEW

#include "Basic.hpp"

#include "Struct_SpawnerConfigNew_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.ExecuteUbergraph_BP_AI_WaveNEW
// 0x0098 (0x0098 - 0x0000)
struct BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AISpawnerNEW_C*                     CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAllDead_AllDead;                        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_SpawnerConfigNew               CallFunc_Array_Get_Item1;                          // 0x0030(0x0048)(HasGetValueTypeHash)
	class ABP_AISpawnerNEW_C*                     CallFunc_AddSpawner_Spawner;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW) == 0x000008, "Wrong alignment on BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW");
static_assert(sizeof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW) == 0x000098, "Wrong size on BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW");
static_assert(offsetof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW, EntryPoint) == 0x000000, "Member 'BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW, CallFunc_IsAllDead_AllDead) == 0x000021, "Member 'BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW::CallFunc_IsAllDead_AllDead' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW, CallFunc_Array_Length_ReturnValue1) == 0x000024, "Member 'BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW, Temp_int_Array_Index_Variable1) == 0x00002C, "Member 'BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW, CallFunc_Array_Get_Item1) == 0x000030, "Member 'BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW, CallFunc_AddSpawner_Spawner) == 0x000078, "Member 'BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW::CallFunc_AddSpawner_Spawner' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW, CallFunc_Array_Length_ReturnValue2) == 0x000080, "Member 'BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW, CallFunc_Array_Add_ReturnValue) == 0x000084, "Member 'BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW, Temp_int_Loop_Counter_Variable1) == 0x000088, "Member 'BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW, CallFunc_Less_IntInt_ReturnValue1) == 0x00008C, "Member 'BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW, CallFunc_Add_IntInt_ReturnValue1) == 0x000090, "Member 'BP_AI_WaveNEW_C_ExecuteUbergraph_BP_AI_WaveNEW::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");

// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AI_WaveNEW_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AI_WaveNEW_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AI_WaveNEW_C_ReceiveTick");
static_assert(sizeof(BP_AI_WaveNEW_C_ReceiveTick) == 0x000004, "Wrong size on BP_AI_WaveNEW_C_ReceiveTick");
static_assert(offsetof(BP_AI_WaveNEW_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AI_WaveNEW_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.UserConstructionScript
// 0x00B0 (0x00B0 - 0x0000)
struct BP_AI_WaveNEW_C_UserConstructionScript final
{
public:
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0000(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0018)()
};
static_assert(alignof(BP_AI_WaveNEW_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_AI_WaveNEW_C_UserConstructionScript");
static_assert(sizeof(BP_AI_WaveNEW_C_UserConstructionScript) == 0x0000B0, "Wrong size on BP_AI_WaveNEW_C_UserConstructionScript");
static_assert(offsetof(BP_AI_WaveNEW_C_UserConstructionScript, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000000, "Member 'BP_AI_WaveNEW_C_UserConstructionScript::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue) == 0x000088, "Member 'BP_AI_WaveNEW_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_UserConstructionScript, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'BP_AI_WaveNEW_C_UserConstructionScript::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.ActiveMe
// 0x0038 (0x0038 - 0x0000)
struct BP_AI_WaveNEW_C_ActiveMe final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMer2GameInstance_C*                    K2Node_DynamicCast_AsMer_2Game_Instance;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterPhone_C*                   K2Node_DynamicCast_AsBP_Character_Phone;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_WaveNEW_C_ActiveMe) == 0x000008, "Wrong alignment on BP_AI_WaveNEW_C_ActiveMe");
static_assert(sizeof(BP_AI_WaveNEW_C_ActiveMe) == 0x000038, "Wrong size on BP_AI_WaveNEW_C_ActiveMe");
static_assert(offsetof(BP_AI_WaveNEW_C_ActiveMe, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'BP_AI_WaveNEW_C_ActiveMe::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ActiveMe, K2Node_DynamicCast_AsMer_2Game_Instance) == 0x000008, "Member 'BP_AI_WaveNEW_C_ActiveMe::K2Node_DynamicCast_AsMer_2Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ActiveMe, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_AI_WaveNEW_C_ActiveMe::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ActiveMe, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'BP_AI_WaveNEW_C_ActiveMe::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ActiveMe, CallFunc_GetPlayerPawn_ReturnValue) == 0x000020, "Member 'BP_AI_WaveNEW_C_ActiveMe::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ActiveMe, K2Node_DynamicCast_AsBP_Character_Phone) == 0x000028, "Member 'BP_AI_WaveNEW_C_ActiveMe::K2Node_DynamicCast_AsBP_Character_Phone' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ActiveMe, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AI_WaveNEW_C_ActiveMe::K2Node_DynamicCast_bSuccess1' has a wrong offset!");

// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.AddSpawner
// 0x00A0 (0x00A0 - 0x0000)
struct BP_AI_WaveNEW_C_AddSpawner final
{
public:
	struct FStruct_SpawnerConfigNew               Config;                                            // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         _index;                                            // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AISpawnerNEW_C*                     Spawner;                                           // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AISpawnerNEW_C*                     CallFunc_FinishSpawningActor_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AI_WaveNEW_C_AddSpawner) == 0x000010, "Wrong alignment on BP_AI_WaveNEW_C_AddSpawner");
static_assert(sizeof(BP_AI_WaveNEW_C_AddSpawner) == 0x0000A0, "Wrong size on BP_AI_WaveNEW_C_AddSpawner");
static_assert(offsetof(BP_AI_WaveNEW_C_AddSpawner, Config) == 0x000000, "Member 'BP_AI_WaveNEW_C_AddSpawner::Config' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_AddSpawner, _index) == 0x000048, "Member 'BP_AI_WaveNEW_C_AddSpawner::_index' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_AddSpawner, Spawner) == 0x000050, "Member 'BP_AI_WaveNEW_C_AddSpawner::Spawner' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_AddSpawner, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_AI_WaveNEW_C_AddSpawner::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_AddSpawner, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000090, "Member 'BP_AI_WaveNEW_C_AddSpawner::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_AddSpawner, CallFunc_FinishSpawningActor_ReturnValue) == 0x000098, "Member 'BP_AI_WaveNEW_C_AddSpawner::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.GetSpawnerFromIndex
// 0x0028 (0x0028 - 0x0000)
struct BP_AI_WaveNEW_C_GetSpawnerFromIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AISpawnerNEW_C*                     Spawner;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AISpawnerNEW_C*                     CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_WaveNEW_C_GetSpawnerFromIndex) == 0x000008, "Wrong alignment on BP_AI_WaveNEW_C_GetSpawnerFromIndex");
static_assert(sizeof(BP_AI_WaveNEW_C_GetSpawnerFromIndex) == 0x000028, "Wrong size on BP_AI_WaveNEW_C_GetSpawnerFromIndex");
static_assert(offsetof(BP_AI_WaveNEW_C_GetSpawnerFromIndex, Index_0) == 0x000000, "Member 'BP_AI_WaveNEW_C_GetSpawnerFromIndex::Index_0' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_GetSpawnerFromIndex, Spawner) == 0x000008, "Member 'BP_AI_WaveNEW_C_GetSpawnerFromIndex::Spawner' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_GetSpawnerFromIndex, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AI_WaveNEW_C_GetSpawnerFromIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_GetSpawnerFromIndex, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_AI_WaveNEW_C_GetSpawnerFromIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_GetSpawnerFromIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_AI_WaveNEW_C_GetSpawnerFromIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_GetSpawnerFromIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_AI_WaveNEW_C_GetSpawnerFromIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.ResetMe
// 0x0038 (0x0038 - 0x0000)
struct BP_AI_WaveNEW_C_ResetMe final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AISpawnerNEW_C*                     CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AISpawnerNEW_C*                     CallFunc_Array_Get_Item1;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_WaveNEW_C_ResetMe) == 0x000008, "Wrong alignment on BP_AI_WaveNEW_C_ResetMe");
static_assert(sizeof(BP_AI_WaveNEW_C_ResetMe) == 0x000038, "Wrong size on BP_AI_WaveNEW_C_ResetMe");
static_assert(offsetof(BP_AI_WaveNEW_C_ResetMe, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_AI_WaveNEW_C_ResetMe::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ResetMe, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_AI_WaveNEW_C_ResetMe::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ResetMe, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_AI_WaveNEW_C_ResetMe::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ResetMe, Temp_int_Array_Index_Variable1) == 0x00000C, "Member 'BP_AI_WaveNEW_C_ResetMe::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ResetMe, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AI_WaveNEW_C_ResetMe::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ResetMe, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_AI_WaveNEW_C_ResetMe::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ResetMe, Temp_int_Loop_Counter_Variable1) == 0x00001C, "Member 'BP_AI_WaveNEW_C_ResetMe::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ResetMe, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_AI_WaveNEW_C_ResetMe::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ResetMe, CallFunc_Add_IntInt_ReturnValue1) == 0x000024, "Member 'BP_AI_WaveNEW_C_ResetMe::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ResetMe, CallFunc_Array_Get_Item1) == 0x000028, "Member 'BP_AI_WaveNEW_C_ResetMe::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ResetMe, CallFunc_Array_Length_ReturnValue1) == 0x000030, "Member 'BP_AI_WaveNEW_C_ResetMe::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ResetMe, CallFunc_Less_IntInt_ReturnValue1) == 0x000034, "Member 'BP_AI_WaveNEW_C_ResetMe::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");

// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.ClearMapItems
// 0x0030 (0x0030 - 0x0000)
struct BP_AI_WaveNEW_C_ClearMapItems final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_ItemBase_C*>                 CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_ItemBase_C*                         CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_WaveNEW_C_ClearMapItems) == 0x000008, "Wrong alignment on BP_AI_WaveNEW_C_ClearMapItems");
static_assert(sizeof(BP_AI_WaveNEW_C_ClearMapItems) == 0x000030, "Wrong size on BP_AI_WaveNEW_C_ClearMapItems");
static_assert(offsetof(BP_AI_WaveNEW_C_ClearMapItems, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_AI_WaveNEW_C_ClearMapItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ClearMapItems, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AI_WaveNEW_C_ClearMapItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ClearMapItems, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AI_WaveNEW_C_ClearMapItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ClearMapItems, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_AI_WaveNEW_C_ClearMapItems::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ClearMapItems, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_AI_WaveNEW_C_ClearMapItems::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ClearMapItems, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AI_WaveNEW_C_ClearMapItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ClearMapItems, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_AI_WaveNEW_C_ClearMapItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_ClearMapItems, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_AI_WaveNEW_C_ClearMapItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.CheckleftAICount
// 0x0030 (0x0030 - 0x0000)
struct BP_AI_WaveNEW_C_CheckleftAICount final
{
public:
	int32                                         _Count;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AISpawnerNEW_C*                     CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLastSpawnAILeftCount_leftCount;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AI_WaveNEW_C_CheckleftAICount) == 0x000008, "Wrong alignment on BP_AI_WaveNEW_C_CheckleftAICount");
static_assert(sizeof(BP_AI_WaveNEW_C_CheckleftAICount) == 0x000030, "Wrong size on BP_AI_WaveNEW_C_CheckleftAICount");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckleftAICount, _Count) == 0x000000, "Member 'BP_AI_WaveNEW_C_CheckleftAICount::_Count' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckleftAICount, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AI_WaveNEW_C_CheckleftAICount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckleftAICount, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AI_WaveNEW_C_CheckleftAICount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckleftAICount, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AI_WaveNEW_C_CheckleftAICount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckleftAICount, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_AI_WaveNEW_C_CheckleftAICount::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckleftAICount, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_AI_WaveNEW_C_CheckleftAICount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckleftAICount, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_AI_WaveNEW_C_CheckleftAICount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckleftAICount, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_AI_WaveNEW_C_CheckleftAICount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckleftAICount, CallFunc_GetLastSpawnAILeftCount_leftCount) == 0x000024, "Member 'BP_AI_WaveNEW_C_CheckleftAICount::CallFunc_GetLastSpawnAILeftCount_leftCount' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckleftAICount, CallFunc_Add_IntInt_ReturnValue1) == 0x000028, "Member 'BP_AI_WaveNEW_C_CheckleftAICount::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");

// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.CheckAllLeftAICount
// 0x00B0 (0x00B0 - 0x0000)
struct BP_AI_WaveNEW_C_CheckAllLeftAICount final
{
public:
	bool                                          AllFinished;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AI_WaveNEW_C*>               waveArray;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	int32                                         deadCount;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AI_WaveNEW_C*                       CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AI_WaveNEW_C*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x0058(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_AI_WaveNEW_C*                       CallFunc_Array_Get_Item1;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_NPC_Base_C*>                 CallFunc_GetAllActorsOfClass_OutActors1;           // 0x0080(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_Base_C*                         CallFunc_Array_Get_Item2;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_WaveNEW_C_CheckAllLeftAICount) == 0x000008, "Wrong alignment on BP_AI_WaveNEW_C_CheckAllLeftAICount");
static_assert(sizeof(BP_AI_WaveNEW_C_CheckAllLeftAICount) == 0x0000B0, "Wrong size on BP_AI_WaveNEW_C_CheckAllLeftAICount");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, AllFinished) == 0x000000, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::AllFinished' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, waveArray) == 0x000008, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::waveArray' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, deadCount) == 0x000018, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::deadCount' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, Temp_int_Array_Index_Variable1) == 0x000028, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, Temp_int_Loop_Counter_Variable1) == 0x00002C, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, CallFunc_Add_IntInt_ReturnValue1) == 0x000030, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, Temp_int_Loop_Counter_Variable2) == 0x000034, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, CallFunc_Add_IntInt_ReturnValue2) == 0x000038, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, Temp_int_Array_Index_Variable2) == 0x00003C, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, Temp_int_Variable) == 0x000040, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, CallFunc_GetAllActorsOfClass_OutActors) == 0x000058, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, CallFunc_Array_Get_Item1) == 0x000068, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, CallFunc_Array_Length_ReturnValue1) == 0x000070, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, CallFunc_Less_IntInt_ReturnValue1) == 0x000078, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, CallFunc_Add_IntInt_ReturnValue3) == 0x00007C, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, CallFunc_GetAllActorsOfClass_OutActors1) == 0x000080, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::CallFunc_GetAllActorsOfClass_OutActors1' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, CallFunc_Array_Length_ReturnValue2) == 0x000090, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, CallFunc_Array_Get_Item2) == 0x000098, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, CallFunc_Array_Length_ReturnValue3) == 0x0000A8, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_CheckAllLeftAICount, CallFunc_Less_IntInt_ReturnValue2) == 0x0000AC, "Member 'BP_AI_WaveNEW_C_CheckAllLeftAICount::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");

// Function BP_AI_WaveNEW.BP_AI_WaveNEW_C.UpdateAICount
// 0x0030 (0x0030 - 0x0000)
struct BP_AI_WaveNEW_C_UpdateAICount final
{
public:
	int32                                         _Count;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AISpawnerNEW_C*                     CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLastSpawnAILeftCount_leftCount;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AI_WaveNEW_C_UpdateAICount) == 0x000008, "Wrong alignment on BP_AI_WaveNEW_C_UpdateAICount");
static_assert(sizeof(BP_AI_WaveNEW_C_UpdateAICount) == 0x000030, "Wrong size on BP_AI_WaveNEW_C_UpdateAICount");
static_assert(offsetof(BP_AI_WaveNEW_C_UpdateAICount, _Count) == 0x000000, "Member 'BP_AI_WaveNEW_C_UpdateAICount::_Count' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_UpdateAICount, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AI_WaveNEW_C_UpdateAICount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_UpdateAICount, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AI_WaveNEW_C_UpdateAICount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_UpdateAICount, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AI_WaveNEW_C_UpdateAICount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_UpdateAICount, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_AI_WaveNEW_C_UpdateAICount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_UpdateAICount, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_AI_WaveNEW_C_UpdateAICount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_UpdateAICount, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_AI_WaveNEW_C_UpdateAICount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_UpdateAICount, CallFunc_GetLastSpawnAILeftCount_leftCount) == 0x000024, "Member 'BP_AI_WaveNEW_C_UpdateAICount::CallFunc_GetLastSpawnAILeftCount_leftCount' has a wrong offset!");
static_assert(offsetof(BP_AI_WaveNEW_C_UpdateAICount, CallFunc_Add_IntInt_ReturnValue1) == 0x000028, "Member 'BP_AI_WaveNEW_C_UpdateAICount::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");

}


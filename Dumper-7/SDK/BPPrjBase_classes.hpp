#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPPrjBase

#include "Basic.hpp"

#include "SiliconRising_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPPrjBase.BPPrjBase_C
// 0x01F8 (0x0520 - 0x0328)
class ABPPrjBase_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               Trailler;                                          // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           ProjectileMovement;                                // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FSpecialBulletCfg                      SpecialConfig;                                     // 0x0360(0x001C)(Edit, BlueprintVisible, Net, DisableEditOnInstance, NoDestructor)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBulletConfig                          BulletConfig;                                      // 0x0380(0x0158)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	bool                                          IsSpecial;                                         // 0x04D8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShowDeadly;                                      // 0x04D9(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShowNormal;                                      // 0x04DA(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DB[0x5];                                      // 0x04DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        DeadlyVFX;                                         // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        NormalVFX;                                         // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFromRightWeapon;                                 // 0x04F0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0x3];                                      // 0x04F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                VelocityOfBullet;                                  // 0x04F4(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DeadlyBulletSettings_C*             DeadlyBulletSettings;                              // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentDamage;                                     // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        HitMainCharacter;                                  // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExplored;                                        // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BPPrjBase(int32 EntryPoint);
	void OnMulticastBulletHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void Init();
	void OnBulletHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void InitSettings(bool IsSpecial_0, const struct FVector& Velocity);
	void HeadToVelocityDirection();
	void GetVFX(const struct FHitResult& Hit, class UParticleSystem** VFX);
	void GetSFX(const struct FHitResult& Hit, class USoundBase** Sound);
	void GetRandomSound(TArray<class USoundBase*>& In, class USoundBase** Sound);
	void CheckAlarmPlunger(class AActor* _hitActor, const struct FVector& _hitPos);
	void SpawnDecal(struct FHitResult& Hit, const struct FVector& Location, const struct FRotator& Rotation);
	void IsMC(class AActor* Actor, bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPPrjBase_C">();
	}
	static class ABPPrjBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPPrjBase_C>();
	}
};
static_assert(alignof(ABPPrjBase_C) == 0x000008, "Wrong alignment on ABPPrjBase_C");
static_assert(sizeof(ABPPrjBase_C) == 0x000520, "Wrong size on ABPPrjBase_C");
static_assert(offsetof(ABPPrjBase_C, UberGraphFrame) == 0x000328, "Member 'ABPPrjBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABPPrjBase_C, Trailler) == 0x000330, "Member 'ABPPrjBase_C::Trailler' has a wrong offset!");
static_assert(offsetof(ABPPrjBase_C, StaticMesh) == 0x000338, "Member 'ABPPrjBase_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABPPrjBase_C, Box) == 0x000340, "Member 'ABPPrjBase_C::Box' has a wrong offset!");
static_assert(offsetof(ABPPrjBase_C, Scene) == 0x000348, "Member 'ABPPrjBase_C::Scene' has a wrong offset!");
static_assert(offsetof(ABPPrjBase_C, ProjectileMovement) == 0x000350, "Member 'ABPPrjBase_C::ProjectileMovement' has a wrong offset!");
static_assert(offsetof(ABPPrjBase_C, DefaultSceneRoot) == 0x000358, "Member 'ABPPrjBase_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABPPrjBase_C, SpecialConfig) == 0x000360, "Member 'ABPPrjBase_C::SpecialConfig' has a wrong offset!");
static_assert(offsetof(ABPPrjBase_C, BulletConfig) == 0x000380, "Member 'ABPPrjBase_C::BulletConfig' has a wrong offset!");
static_assert(offsetof(ABPPrjBase_C, IsSpecial) == 0x0004D8, "Member 'ABPPrjBase_C::IsSpecial' has a wrong offset!");
static_assert(offsetof(ABPPrjBase_C, IsShowDeadly) == 0x0004D9, "Member 'ABPPrjBase_C::IsShowDeadly' has a wrong offset!");
static_assert(offsetof(ABPPrjBase_C, IsShowNormal) == 0x0004DA, "Member 'ABPPrjBase_C::IsShowNormal' has a wrong offset!");
static_assert(offsetof(ABPPrjBase_C, DeadlyVFX) == 0x0004E0, "Member 'ABPPrjBase_C::DeadlyVFX' has a wrong offset!");
static_assert(offsetof(ABPPrjBase_C, NormalVFX) == 0x0004E8, "Member 'ABPPrjBase_C::NormalVFX' has a wrong offset!");
static_assert(offsetof(ABPPrjBase_C, IsFromRightWeapon) == 0x0004F0, "Member 'ABPPrjBase_C::IsFromRightWeapon' has a wrong offset!");
static_assert(offsetof(ABPPrjBase_C, VelocityOfBullet) == 0x0004F4, "Member 'ABPPrjBase_C::VelocityOfBullet' has a wrong offset!");
static_assert(offsetof(ABPPrjBase_C, DeadlyBulletSettings) == 0x000500, "Member 'ABPPrjBase_C::DeadlyBulletSettings' has a wrong offset!");
static_assert(offsetof(ABPPrjBase_C, CurrentDamage) == 0x000508, "Member 'ABPPrjBase_C::CurrentDamage' has a wrong offset!");
static_assert(offsetof(ABPPrjBase_C, HitMainCharacter) == 0x000510, "Member 'ABPPrjBase_C::HitMainCharacter' has a wrong offset!");
static_assert(offsetof(ABPPrjBase_C, IsExplored) == 0x000518, "Member 'ABPPrjBase_C::IsExplored' has a wrong offset!");

}


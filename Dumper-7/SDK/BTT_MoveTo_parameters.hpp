#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_MoveTo

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTT_MoveTo.BTT_MoveTo_C.ExecuteUbergraph_BTT_MoveTo
// 0x00A0 (0x00A0 - 0x0000)
struct BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate;       // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate1;      // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Lv2_NPCBase_C*                      K2Node_DynamicCast_AsBP_Lv_2_NPCBase;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LV2_plunger_C*                      K2Node_DynamicCast_AsBP_LV2_Plunger;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Lv2_Sniper_C*                       K2Node_DynamicCast_AsBP_Lv_2_Sniper;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_FindMovePoint_NewParam;                   // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue;   // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidAILocation_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo) == 0x000008, "Wrong alignment on BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo");
static_assert(sizeof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo) == 0x0000A0, "Wrong size on BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, EntryPoint) == 0x000000, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CustomEvent_MovementResult1) == 0x000004, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CustomEvent_MovementResult1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CustomEvent_MovementResult) == 0x000018, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_CreateDelegate_OutputDelegate1) == 0x000020, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, Temp_byte_Variable) == 0x000030, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_Event_OwnerController) == 0x000038, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_Event_ControlledPawn) == 0x000040, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_DynamicCast_AsBP_Lv_2_NPCBase) == 0x000048, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_DynamicCast_AsBP_Lv_2_NPCBase' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_DynamicCast_AsBP_LV2_Plunger) == 0x000058, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_DynamicCast_AsBP_LV2_Plunger' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_DynamicCast_bSuccess1) == 0x000060, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_DynamicCast_AsBP_Lv_2_Sniper) == 0x000068, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_DynamicCast_AsBP_Lv_2_Sniper' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, K2Node_DynamicCast_bSuccess2) == 0x000070, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_FindMovePoint_NewParam) == 0x000074, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_FindMovePoint_NewParam' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_GetBlackboardValueAsVector_ReturnValue) == 0x000080, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_GetBlackboardValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x00008C, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x000090, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_IsValidAILocation_ReturnValue) == 0x000098, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_IsValidAILocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_BooleanAND_ReturnValue) == 0x000099, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo, CallFunc_IsValid_ReturnValue) == 0x00009A, "Member 'BTT_MoveTo_C_ExecuteUbergraph_BTT_MoveTo::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BTT_MoveTo.BTT_MoveTo_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_MoveTo_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_MoveTo_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_MoveTo_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_MoveTo_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_MoveTo_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_MoveTo_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_MoveTo_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_MoveTo_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_MoveTo_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BTT_MoveTo.BTT_MoveTo_C.OnSuccess_DFF0D11A4B88AFE12CC9A7866381C1C8
// 0x0001 (0x0001 - 0x0000)
struct BTT_MoveTo_C_OnSuccess_DFF0D11A4B88AFE12CC9A7866381C1C8 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_MoveTo_C_OnSuccess_DFF0D11A4B88AFE12CC9A7866381C1C8) == 0x000001, "Wrong alignment on BTT_MoveTo_C_OnSuccess_DFF0D11A4B88AFE12CC9A7866381C1C8");
static_assert(sizeof(BTT_MoveTo_C_OnSuccess_DFF0D11A4B88AFE12CC9A7866381C1C8) == 0x000001, "Wrong size on BTT_MoveTo_C_OnSuccess_DFF0D11A4B88AFE12CC9A7866381C1C8");
static_assert(offsetof(BTT_MoveTo_C_OnSuccess_DFF0D11A4B88AFE12CC9A7866381C1C8, MovementResult) == 0x000000, "Member 'BTT_MoveTo_C_OnSuccess_DFF0D11A4B88AFE12CC9A7866381C1C8::MovementResult' has a wrong offset!");

// Function BTT_MoveTo.BTT_MoveTo_C.OnFail_DFF0D11A4B88AFE12CC9A7866381C1C8
// 0x0001 (0x0001 - 0x0000)
struct BTT_MoveTo_C_OnFail_DFF0D11A4B88AFE12CC9A7866381C1C8 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_MoveTo_C_OnFail_DFF0D11A4B88AFE12CC9A7866381C1C8) == 0x000001, "Wrong alignment on BTT_MoveTo_C_OnFail_DFF0D11A4B88AFE12CC9A7866381C1C8");
static_assert(sizeof(BTT_MoveTo_C_OnFail_DFF0D11A4B88AFE12CC9A7866381C1C8) == 0x000001, "Wrong size on BTT_MoveTo_C_OnFail_DFF0D11A4B88AFE12CC9A7866381C1C8");
static_assert(offsetof(BTT_MoveTo_C_OnFail_DFF0D11A4B88AFE12CC9A7866381C1C8, MovementResult) == 0x000000, "Member 'BTT_MoveTo_C_OnFail_DFF0D11A4B88AFE12CC9A7866381C1C8::MovementResult' has a wrong offset!");

}


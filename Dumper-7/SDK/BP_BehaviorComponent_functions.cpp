#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BehaviorComponent

#include "Basic.hpp"

#include "BP_BehaviorComponent_classes.hpp"
#include "BP_BehaviorComponent_parameters.hpp"


namespace SDK
{

// Function BP_BehaviorComponent.BP_BehaviorComponent_C.ExecuteUbergraph_BP_BehaviorComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::ExecuteUbergraph_BP_BehaviorComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "ExecuteUbergraph_BP_BehaviorComponent");

	Params::BP_BehaviorComponent_C_ExecuteUbergraph_BP_BehaviorComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.GoToSplineTarget
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::GoToSplineTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "GoToSplineTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.startPoint
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::startPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "startPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.AIMoveLoop
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::AIMoveLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "AIMoveLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "ReceiveTick");

	Params::BP_BehaviorComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.DelayAlertEvent 
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::DelayAlertEvent_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "DelayAlertEvent ");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.BeginALert
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::BeginALert()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "BeginALert");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnStartTalking
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TalkLength                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// Enum_IdleType                           PrevIdleType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::OnStartTalking(class AActor* OtherActor, float TalkLength, Enum_IdleType PrevIdleType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnStartTalking");

	Params::BP_BehaviorComponent_C_OnStartTalking Parms{};

	Parms.OtherActor = OtherActor;
	Parms.TalkLength = TalkLength;
	Parms.PrevIdleType = PrevIdleType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnBeginIdle_Event
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::OnBeginIdle_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnBeginIdle_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnBeginInvestigate_Event
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::OnBeginInvestigate_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnBeginInvestigate_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnEndAttack_Event
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::OnEndAttack_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnEndAttack_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.ReceiveMessageTag
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_MessageTag                         MessageTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::ReceiveMessageTag(Enum_MessageTag MessageTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "ReceiveMessageTag");

	Params::BP_BehaviorComponent_C_ReceiveMessageTag Parms{};

	Parms.MessageTag = MessageTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnDelayTrigger
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::OnDelayTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnDelayTrigger");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnPerceptionUpdate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ActorRef                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FAIStimulus&               StimulusRef                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_BehaviorComponent_C::OnPerceptionUpdate(class AActor* ActorRef, const struct FAIStimulus& StimulusRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnPerceptionUpdate");

	Params::BP_BehaviorComponent_C_OnPerceptionUpdate Parms{};

	Parms.ActorRef = ActorRef;
	Parms.StimulusRef = std::move(StimulusRef);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_BehaviorComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnDeath
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::OnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.ReplicatedAudio
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Audio                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::ReplicatedAudio(class USoundBase* Audio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "ReplicatedAudio");

	Params::BP_BehaviorComponent_C_ReplicatedAudio Parms{};

	Parms.Audio = Audio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.ReplicatedAnimation
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Anim                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::ReplicatedAnimation(class UAnimMontage* Anim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "ReplicatedAnimation");

	Params::BP_BehaviorComponent_C_ReplicatedAnimation Parms{};

	Parms.Anim = Anim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnRequestFailed_332FFA2C4D1FE3654FD69C9913A6C303
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::OnRequestFailed_332FFA2C4D1FE3654FD69C9913A6C303()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnRequestFailed_332FFA2C4D1FE3654FD69C9913A6C303");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnMoveFinished_332FFA2C4D1FE3654FD69C9913A6C303
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAIController*                    AIController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::OnMoveFinished_332FFA2C4D1FE3654FD69C9913A6C303(EPathFollowingResult Result, class AAIController* AIController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnMoveFinished_332FFA2C4D1FE3654FD69C9913A6C303");

	Params::BP_BehaviorComponent_C_OnMoveFinished_332FFA2C4D1FE3654FD69C9913A6C303 Parms{};

	Parms.Result = Result;
	Parms.AIController = AIController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.SetDefaults
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    ControllerIn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::SetDefaults(class AAIController* ControllerIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "SetDefaults");

	Params::BP_BehaviorComponent_C_SetDefaults Parms{};

	Parms.ControllerIn = ControllerIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.ChangeBehavior
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_BehaviorType                       NewBehaviorType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    StopAnimations                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BehaviorComponent_C::ChangeBehavior(Enum_BehaviorType NewBehaviorType, bool StopAnimations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "ChangeBehavior");

	Params::BP_BehaviorComponent_C_ChangeBehavior Parms{};

	Parms.NewBehaviorType = NewBehaviorType;
	Parms.StopAnimations = StopAnimations;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.CheckForDistanceTriggers
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CheckWithin                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BehaviorComponent_C::CheckForDistanceTriggers(bool CheckWithin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "CheckForDistanceTriggers");

	Params::BP_BehaviorComponent_C_CheckForDistanceTriggers Parms{};

	Parms.CheckWithin = CheckWithin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.GetCurrentBehaviorType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// Enum_BehaviorType*                      CurrentBehaviorType                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::GetCurrentBehaviorType(Enum_BehaviorType* CurrentBehaviorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "GetCurrentBehaviorType");

	Params::BP_BehaviorComponent_C_GetCurrentBehaviorType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentBehaviorType != nullptr)
		*CurrentBehaviorType = Parms.CurrentBehaviorType;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.FindNextPatrolLocation
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::FindNextPatrolLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "FindNextPatrolLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.FindSeekTarget
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::FindSeekTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "FindSeekTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.FindAttackTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BehaviorComponent_C::FindAttackTarget(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "FindAttackTarget");

	Params::BP_BehaviorComponent_C_FindAttackTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.GetCurrentAttackTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor**                          TargetRef                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::GetCurrentAttackTarget(class AActor** TargetRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "GetCurrentAttackTarget");

	Params::BP_BehaviorComponent_C_GetCurrentAttackTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetRef != nullptr)
		*TargetRef = Parms.TargetRef;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.PlayAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     AnimMontage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  AnimLength                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::PlayAnimation(class UAnimMontage* AnimMontage, float* AnimLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "PlayAnimation");

	Params::BP_BehaviorComponent_C_PlayAnimation Parms{};

	Parms.AnimMontage = AnimMontage;

	UObject::ProcessEvent(Func, &Parms);

	if (AnimLength != nullptr)
		*AnimLength = Parms.AnimLength;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.IsPlayingAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsPlaying                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BehaviorComponent_C::IsPlayingAnimation(bool* IsPlaying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "IsPlayingAnimation");

	Params::BP_BehaviorComponent_C_IsPlayingAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlaying != nullptr)
		*IsPlaying = Parms.IsPlaying;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.SetCurrentWorkspace
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Workspace_C*                  NewWorkspace                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::SetCurrentWorkspace(class ABP_Workspace_C* NewWorkspace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "SetCurrentWorkspace");

	Params::BP_BehaviorComponent_C_SetCurrentWorkspace Parms{};

	Parms.NewWorkspace = NewWorkspace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.GetCurrentWorkspace
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_Workspace_C**                 RetWorkspace                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::GetCurrentWorkspace(class ABP_Workspace_C** RetWorkspace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "GetCurrentWorkspace");

	Params::BP_BehaviorComponent_C_GetCurrentWorkspace Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetWorkspace != nullptr)
		*RetWorkspace = Parms.RetWorkspace;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.GetOwningCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ACharacter**                      RetCharacter                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::GetOwningCharacter(class ACharacter** RetCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "GetOwningCharacter");

	Params::BP_BehaviorComponent_C_GetOwningCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetCharacter != nullptr)
		*RetCharacter = Parms.RetCharacter;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.CheckIfAliveIfNPC
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           ActorRef                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsAlive_0                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BehaviorComponent_C::CheckIfAliveIfNPC(class AActor* ActorRef, bool* IsAlive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "CheckIfAliveIfNPC");

	Params::BP_BehaviorComponent_C_CheckIfAliveIfNPC Parms{};

	Parms.ActorRef = ActorRef;

	UObject::ProcessEvent(Func, &Parms);

	if (IsAlive_0 != nullptr)
		*IsAlive_0 = Parms.IsAlive_0;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.DoRangedAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BehaviorComponent_C::DoRangedAttack(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "DoRangedAttack");

	Params::BP_BehaviorComponent_C_DoRangedAttack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.GetNearestActorWithTag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor**                          NearestActor                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::GetNearestActorWithTag(class AActor** NearestActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "GetNearestActorWithTag");

	Params::BP_BehaviorComponent_C_GetNearestActorWithTag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NearestActor != nullptr)
		*NearestActor = Parms.NearestActor;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.GetCurrentBehaviorConfig
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FStruct_BasicBehavior*           Config                                                 (Parm, OutParm, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::GetCurrentBehaviorConfig(struct FStruct_BasicBehavior* Config)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "GetCurrentBehaviorConfig");

	Params::BP_BehaviorComponent_C_GetCurrentBehaviorConfig Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Config != nullptr)
		*Config = std::move(Parms.Config);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.PlayAudio
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::PlayAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "PlayAudio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.CheckForHealthTriggers
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Percentage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::CheckForHealthTriggers(float Percentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "CheckForHealthTriggers");

	Params::BP_BehaviorComponent_C_CheckForHealthTriggers Parms{};

	Parms.Percentage = Percentage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.ResetDelayTrigger
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::ResetDelayTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "ResetDelayTrigger");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.GetBBKeyTargetActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor**                          RetActor                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::GetBBKeyTargetActor(class AActor** RetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "GetBBKeyTargetActor");

	Params::BP_BehaviorComponent_C_GetBBKeyTargetActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetActor != nullptr)
		*RetActor = Parms.RetActor;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.GetEQSContextActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor**                          RetActor                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::GetEQSContextActor(class AActor** RetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "GetEQSContextActor");

	Params::BP_BehaviorComponent_C_GetEQSContextActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetActor != nullptr)
		*RetActor = Parms.RetActor;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnRep_IdleType
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::OnRep_IdleType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnRep_IdleType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnRep_MaxRandLocationDistance
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::OnRep_MaxRandLocationDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnRep_MaxRandLocationDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnRep_RandLocationDelay
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::OnRep_RandLocationDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnRep_RandLocationDelay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnRep_FleeDistance
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::OnRep_FleeDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnRep_FleeDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnRep_AttackMeleeDistance
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::OnRep_AttackMeleeDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnRep_AttackMeleeDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnRep_AttackRangedDistance
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::OnRep_AttackRangedDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnRep_AttackRangedDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnRep_FollowDistance
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::OnRep_FollowDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnRep_FollowDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnRep_AttackSpeed
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::OnRep_AttackSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnRep_AttackSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnRep_InvestigateDistance
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::OnRep_InvestigateDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnRep_InvestigateDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnRep_InvestigateInterval
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::OnRep_InvestigateInterval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnRep_InvestigateInterval");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnRep_SeekAcceptanceRadius
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::OnRep_SeekAcceptanceRadius()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnRep_SeekAcceptanceRadius");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.OnRep_SeekTarget
// (BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::OnRep_SeekTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "OnRep_SeekTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.GetRandomActorWithTag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor**                          RandomActor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::GetRandomActorWithTag(class AActor** RandomActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "GetRandomActorWithTag");

	Params::BP_BehaviorComponent_C_GetRandomActorWithTag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RandomActor != nullptr)
		*RandomActor = Parms.RandomActor;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.IsReloading
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BehaviorComponent_C::IsReloading(bool* ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "IsReloading");

	Params::BP_BehaviorComponent_C_IsReloading Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ret != nullptr)
		*ret = Parms.ret;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.SetReloadBullet
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BehaviorComponent_C::SetReloadBullet(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "SetReloadBullet");

	Params::BP_BehaviorComponent_C_SetReloadBullet Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.FindCoverPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ForceOne                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::FindCoverPoint(bool ForceOne, bool* Success, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "FindCoverPoint");

	Params::BP_BehaviorComponent_C_FindCoverPoint Parms{};

	Parms.ForceOne = ForceOne;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.GetNumAttacks
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::GetNumAttacks(int32* ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "GetNumAttacks");

	Params::BP_BehaviorComponent_C_GetNumAttacks Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ret != nullptr)
		*ret = Parms.ret;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.IsTargetAlive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BehaviorComponent_C::IsTargetAlive(bool* ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "IsTargetAlive");

	Params::BP_BehaviorComponent_C_IsTargetAlive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ret != nullptr)
		*ret = Parms.ret;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.SetStartPoint
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::SetStartPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "SetStartPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.MoveToStartPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDirectGotoTarget                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32*                                  Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::MoveToStartPoint(bool IsDirectGotoTarget, int32* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "MoveToStartPoint");

	Params::BP_BehaviorComponent_C_MoveToStartPoint Parms{};

	Parms.IsDirectGotoTarget = IsDirectGotoTarget;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.SetInitStartLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_StartSpline_C*&               StartSpline_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::SetInitStartLocation(class ABP_StartSpline_C*& StartSpline_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "SetInitStartLocation");

	Params::BP_BehaviorComponent_C_SetInitStartLocation Parms{};

	Parms.StartSpline_0 = StartSpline_0;

	UObject::ProcessEvent(Func, &Parms);

	StartSpline_0 = Parms.StartSpline_0;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.SetAttackTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::SetAttackTarget(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "SetAttackTarget");

	Params::BP_BehaviorComponent_C_SetAttackTarget Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.GetLastBehaviorType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// Enum_BehaviorType*                      CurrentBehaviorType                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::GetLastBehaviorType(Enum_BehaviorType* CurrentBehaviorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "GetLastBehaviorType");

	Params::BP_BehaviorComponent_C_GetLastBehaviorType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentBehaviorType != nullptr)
		*CurrentBehaviorType = Parms.CurrentBehaviorType;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.IsFirstSeenPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsSeen                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BehaviorComponent_C::IsFirstSeenPlayer(bool* IsSeen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "IsFirstSeenPlayer");

	Params::BP_BehaviorComponent_C_IsFirstSeenPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSeen != nullptr)
		*IsSeen = Parms.IsSeen;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.FaceToTarget
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BehaviorComponent_C::FaceToTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "FaceToTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.GetAnimationOrder
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   MaxIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  RandomOrder                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::GetAnimationOrder(int32 MaxIndex, int32* RandomOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "GetAnimationOrder");

	Params::BP_BehaviorComponent_C_GetAnimationOrder Parms{};

	Parms.MaxIndex = MaxIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RandomOrder != nullptr)
		*RandomOrder = Parms.RandomOrder;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.SetGoToTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   _pos                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::SetGoToTarget(const struct FVector& _pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "SetGoToTarget");

	Params::BP_BehaviorComponent_C_SetGoToTarget Parms{};

	Parms._pos = std::move(_pos);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.GetPatrolIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  _index                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::GetPatrolIndex(int32* _index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "GetPatrolIndex");

	Params::BP_BehaviorComponent_C_GetPatrolIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (_index != nullptr)
		*_index = Parms._index;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.SetAlertWaitTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   _waitTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           _actor                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::SetAlertWaitTime(float _waitTime, class AActor* _actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "SetAlertWaitTime");

	Params::BP_BehaviorComponent_C_SetAlertWaitTime Parms{};

	Parms._waitTime = _waitTime;
	Parms._actor = _actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.SetRandomGotoTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Pos                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::SetRandomGotoTarget(const struct FVector& Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "SetRandomGotoTarget");

	Params::BP_BehaviorComponent_C_SetRandomGotoTarget Parms{};

	Parms.Pos = std::move(Pos);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.FaceToTargetPos
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Pos                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BehaviorComponent_C::FaceToTargetPos(const struct FVector& Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "FaceToTargetPos");

	Params::BP_BehaviorComponent_C_FaceToTargetPos Parms{};

	Parms.Pos = std::move(Pos);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.FindTagAttackTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BehaviorComponent_C::FindTagAttackTarget(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "FindTagAttackTarget");

	Params::BP_BehaviorComponent_C_FindTagAttackTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_BehaviorComponent.BP_BehaviorComponent_C.GetAllPlayerCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class ACharacter*>*              Array                                                  (Parm, OutParm, ZeroConstructor)

void UBP_BehaviorComponent_C::GetAllPlayerCharacter(TArray<class ACharacter*>* Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BehaviorComponent_C", "GetAllPlayerCharacter");

	Params::BP_BehaviorComponent_C_GetAllPlayerCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Array != nullptr)
		*Array = std::move(Parms.Array);
}

}


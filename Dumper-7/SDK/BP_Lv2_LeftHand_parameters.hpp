#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lv2_LeftHand

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Lv2_LeftHand.BP_Lv2_LeftHand_C.ExecuteUbergraph_BP_Lv2_LeftHand
// 0x0160 (0x0160 - 0x0000)
struct BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_Leonard_HandLeft_C*             K2Node_DynamicCast_AsAnim_BP_Leonard_Hand_Left;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimBP_Leonard_HandLeft_C*             K2Node_DynamicCast_AsAnim_BP_Leonard_Hand_Left1;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimBP_Leonard_Hand_C*                 K2Node_DynamicCast_AsAnim_BP_Leonard_Hand;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimBP_Leonard_Hand_C*                 K2Node_DynamicCast_AsAnim_BP_Leonard_Hand1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsNormal;                             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x00D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand) == 0x000010, "Wrong alignment on BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand");
static_assert(sizeof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand) == 0x000160, "Wrong size on BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, EntryPoint) == 0x000000, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, K2Node_DynamicCast_AsAnim_BP_Leonard_Hand_Left) == 0x000010, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::K2Node_DynamicCast_AsAnim_BP_Leonard_Hand_Left' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, K2Node_DynamicCast_AsAnim_BP_Leonard_Hand_Left1) == 0x000020, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::K2Node_DynamicCast_AsAnim_BP_Leonard_Hand_Left1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, K2Node_DynamicCast_bSuccess1) == 0x000028, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, K2Node_DynamicCast_AsAnim_BP_Leonard_Hand) == 0x000030, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::K2Node_DynamicCast_AsAnim_BP_Leonard_Hand' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, K2Node_DynamicCast_bSuccess2) == 0x000038, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, K2Node_DynamicCast_AsAnim_BP_Leonard_Hand1) == 0x000040, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::K2Node_DynamicCast_AsAnim_BP_Leonard_Hand1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, K2Node_DynamicCast_bSuccess3) == 0x000048, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, Temp_bool_IsClosed_Variable1) == 0x000049, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, Temp_bool_Has_Been_Initd_Variable1) == 0x00004A, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, CallFunc_BreakTransform_Location) == 0x00004C, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, CallFunc_BreakTransform_Rotation) == 0x000058, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, CallFunc_BreakTransform_Scale) == 0x000064, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, CallFunc_BreakRotator_Roll) == 0x000070, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, CallFunc_BreakRotator_Pitch) == 0x000074, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, CallFunc_BreakRotator_Yaw) == 0x000078, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, CallFunc_Add_VectorVector_ReturnValue) == 0x00007C, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, CallFunc_Add_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, CallFunc_MakeRotator_ReturnValue) == 0x00008C, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, K2Node_Event_DeltaSeconds) == 0x000098, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, K2Node_Event_IsNormal) == 0x0000D0, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::K2Node_Event_IsNormal' has a wrong offset!");
static_assert(offsetof(BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0000D8, "Member 'BP_Lv2_LeftHand_C_ExecuteUbergraph_BP_Lv2_LeftHand::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");

// Function BP_Lv2_LeftHand.BP_Lv2_LeftHand_C.ReverseHand
// 0x0001 (0x0001 - 0x0000)
struct BP_Lv2_LeftHand_C_ReverseHand final
{
public:
	bool                                          IsNormal;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lv2_LeftHand_C_ReverseHand) == 0x000001, "Wrong alignment on BP_Lv2_LeftHand_C_ReverseHand");
static_assert(sizeof(BP_Lv2_LeftHand_C_ReverseHand) == 0x000001, "Wrong size on BP_Lv2_LeftHand_C_ReverseHand");
static_assert(offsetof(BP_Lv2_LeftHand_C_ReverseHand, IsNormal) == 0x000000, "Member 'BP_Lv2_LeftHand_C_ReverseHand::IsNormal' has a wrong offset!");

// Function BP_Lv2_LeftHand.BP_Lv2_LeftHand_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Lv2_LeftHand_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lv2_LeftHand_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Lv2_LeftHand_C_ReceiveTick");
static_assert(sizeof(BP_Lv2_LeftHand_C_ReceiveTick) == 0x000004, "Wrong size on BP_Lv2_LeftHand_C_ReceiveTick");
static_assert(offsetof(BP_Lv2_LeftHand_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Lv2_LeftHand_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

